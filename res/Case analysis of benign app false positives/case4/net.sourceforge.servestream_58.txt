package net.sourceforge.servestream;
public final class R$anim {
    public static final int media_controls_fade_in = 2130968576;
    public static final int media_controls_fade_out = 2130968577;

    public R$anim()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$array {
    public static final int alarm_set = 2131165186;
    public static final int list_update = 2131165184;
    public static final int list_update_values = 2131165185;

    public R$array()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$attr {

    public R$attr()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$color {
    public static final int appwidgetone_text = 2131230720;
    public static final int expanding_child_background = 2131230722;
    public static final int transparent = 2131230721;

    public R$color()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$dimen {
    public static final int expanded_height = 2131296257;
    public static final int normal_height = 2131296256;

    public R$dimen()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$drawable {
    public static final int add_alarm = 2130837504;
    public static final int appwidget_bg = 2130837505;
    public static final int appwidget_button_center = 2130837506;
    public static final int appwidget_button_left = 2130837507;
    public static final int appwidget_button_right = 2130837508;
    public static final int appwidget_divider = 2130837509;
    public static final int appwidget_inner_focus_c = 2130837510;
    public static final int appwidget_inner_focus_l = 2130837511;
    public static final int appwidget_inner_focus_r = 2130837512;
    public static final int appwidget_inner_press_c = 2130837513;
    public static final int appwidget_inner_press_l = 2130837514;
    public static final int appwidget_inner_press_r = 2130837515;
    public static final int audio = 2130837516;
    public static final int btn_strip_trans_left = 2130837517;
    public static final int btn_strip_trans_left_normal = 2130837518;
    public static final int btn_strip_trans_left_pressed = 2130837519;
    public static final int btn_strip_trans_left_selected = 2130837520;
    public static final int btn_strip_trans_middle = 2130837521;
    public static final int btn_strip_trans_middle_normal = 2130837522;
    public static final int btn_strip_trans_middle_pressed = 2130837523;
    public static final int btn_strip_trans_middle_selected = 2130837524;
    public static final int btn_strip_trans_right = 2130837525;
    public static final int btn_strip_trans_right_normal = 2130837526;
    public static final int btn_strip_trans_right_pressed = 2130837527;
    public static final int btn_strip_trans_right_selected = 2130837528;
    public static final int buttonbar_active = 2130837529;
    public static final int buttonbar_focused = 2130837530;
    public static final int buttonbar_inactive = 2130837531;
    public static final int buttonbar_pressed = 2130837532;
    public static final int clock_selector = 2130837533;
    public static final int dialog = 2130837534;
    public static final int dialog_divider_horizontal_light = 2130837535;
    public static final int divider_vertical_dark = 2130837536;
    public static final int folder = 2130837537;
    public static final int ic_appwidget_music_next = 2130837538;
    public static final int ic_appwidget_music_pause = 2130837539;
    public static final int ic_appwidget_music_play = 2130837540;
    public static final int ic_clock_add_alarm = 2130837541;
    public static final int ic_clock_add_alarm_selected = 2130837542;
    public static final int ic_clock_alarm_off = 2130837543;
    public static final int ic_clock_alarm_on = 2130837544;
    public static final int ic_clock_alarm_selected = 2130837545;
    public static final int ic_clock_strip_desk_clock = 2130837546;
    public static final int ic_dialog_time = 2130837547;
    public static final int ic_indicator_off = 2130837548;
    public static final int ic_indicator_on = 2130837549;
    public static final int ic_menu_add = 2130837550;
    public static final int ic_menu_alarms = 2130837551;
    public static final int ic_menu_desk_clock = 2130837552;
    public static final int ic_menu_now_playing = 2130837553;
    public static final int ic_menu_refresh = 2130837554;
    public static final int ic_menu_repeat = 2130837555;
    public static final int ic_menu_scan = 2130837556;
    public static final int ic_menu_shuffle = 2130837557;
    public static final int ic_menu_sleep_timer = 2130837558;
    public static final int ic_tab_home = 2130837559;
    public static final int ic_tab_home_normal = 2130837560;
    public static final int ic_tab_home_pressed = 2130837561;
    public static final int icon = 2130837562;
    public static final int indicator_clock_onoff = 2130837563;
    public static final int indicator_ic_mp_paused_list = 2130837564;
    public static final int indicator_ic_mp_playing_list = 2130837565;
    public static final int list_selector = 2130837566;
    public static final int list_selector_background = 2130837567;
    public static final int list_selector_background_pressed = 2130837568;
    public static final int list_selector_background_transition = 2130837569;
    public static final int music_bottom_playback_bg = 2130837570;
    public static final int next_button = 2130837571;
    public static final int next_button_focused = 2130837572;
    public static final int next_button_normal = 2130837573;
    public static final int next_button_pressed = 2130837574;
    public static final int none = 2130837575;
    public static final int notification_icon = 2130837576;
    public static final int pause = 2130837577;
    public static final int pause_button = 2130837578;
    public static final int pause_button_focused = 2130837579;
    public static final int pause_button_normal = 2130837580;
    public static final int pause_button_pressed = 2130837581;
    public static final int pickerbox_background = 2130837582;
    public static final int pickerbox_selected = 2130837583;
    public static final int pickerbox_unselected = 2130837584;
    public static final int play_button = 2130837585;
    public static final int play_button_focused = 2130837586;
    public static final int play_button_normal = 2130837587;
    public static final int play_button_pressed = 2130837588;
    public static final int playlist_tile = 2130837589;
    public static final int playlist_tile_discard = 2130837590;
    public static final int playlist_tile_drag = 2130837591;
    public static final int playlist_tile_longpress = 2130837592;
    public static final int playlist_tile_normal = 2130837593;
    public static final int playlist_tile_pressed = 2130837594;
    public static final int playlist_tile_selected = 2130837595;
    public static final int previous_button = 2130837596;
    public static final int previous_button_focused = 2130837597;
    public static final int previous_button_normal = 2130837598;
    public static final int previous_button_pressed = 2130837599;
    public static final int repeat_all_button = 2130837600;
    public static final int repeat_all_focused = 2130837601;
    public static final int repeat_all_normal = 2130837602;
    public static final int repeat_all_pressed = 2130837603;
    public static final int repeat_disabled = 2130837604;
    public static final int repeat_disabled_button = 2130837605;
    public static final int repeat_one_button = 2130837606;
    public static final int repeat_one_focused = 2130837607;
    public static final int repeat_one_normal = 2130837608;
    public static final int repeat_one_pressed = 2130837609;
    public static final int semi_transparent_background = 2130837610;
    public static final int shuffle_button = 2130837611;
    public static final int shuffle_disabled = 2130837612;
    public static final int shuffle_disabled_button = 2130837613;
    public static final int shuffle_focused = 2130837614;
    public static final int shuffle_normal = 2130837615;
    public static final int shuffle_pressed = 2130837616;
    public static final int stat_notify_alarm = 2130837617;
    public static final int stop_button = 2130837618;
    public static final int stop_button_focused = 2130837619;
    public static final int stop_button_normal = 2130837620;
    public static final int stop_button_pressed = 2130837621;
    public static final int transparent_background = 2130837622;
    public static final int transparent_button = 2130837623;
    public static final int video = 2130837624;
    public static final int volume = 2130837625;

    public R$drawable()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$id {
    public static final int add_alarm = 2131623942;
    public static final int alarm_delete = 2131623963;
    public static final int alarm_revert = 2131623962;
    public static final int alarm_save = 2131623961;
    public static final int alarms_list = 2131623943;
    public static final int albumname = 2131623953;
    public static final int alertTitle = 2131623936;
    public static final int am_pm = 2131623938;
    public static final int appwidget_one = 2131623979;
    public static final int artist = 2131623981;
    public static final int artistname = 2131623952;
    public static final int bar_onoff = 2131623975;
    public static final int base_layout = 2131623941;
    public static final int cancel = 2131623995;
    public static final int clock_onoff = 2131623974;
    public static final int control_next = 2131623983;
    public static final int control_play = 2131623982;
    public static final int daysOfWeek = 2131623978;
    public static final int delete_alarm = 2131623999;
    public static final int digitalClock = 2131623976;
    public static final int dismiss = 2131623940;
    public static final int divider = 2131623967;
    public static final int duration = 2131623987;
    public static final int duration_text = 2131623959;
    public static final int edit_alarm = 2131623998;
    public static final int empty = 2131623964;
    public static final int empty_text = 2131623965;
    public static final int enable_alarm = 2131623997;
    public static final int front_quickconnect = 2131623972;
    public static final int go_button = 2131623971;
    public static final int header_label = 2131623985;
    public static final int header_time = 2131623984;
    public static final int home_button = 2131623968;
    public static final int home_tab = 2131623966;
    public static final int icon = 2131623986;
    public static final int indicator = 2131623973;
    public static final int info = 2131623992;
    public static final int label = 2131623977;
    public static final int line1 = 2131623988;
    public static final int line2 = 2131623989;
    public static final int media_controls = 2131623945;
    public static final int media_info = 2131623946;
    public static final int menu_item_add_alarm = 2131623996;
    public static final int menu_item_alarms = 2131624009;
    public static final int menu_item_help = 2131624008;
    public static final int menu_item_now_playing = 2131624004;
    public static final int menu_item_refresh = 2131624000;
    public static final int menu_item_repeat = 2131624003;
    public static final int menu_item_scan = 2131624010;
    public static final int menu_item_settings = 2131624001;
    public static final int menu_item_shuffle = 2131624002;
    public static final int menu_item_sleep_timer = 2131624005;
    public static final int menu_item_sort_by_date = 2131624007;
    public static final int menu_item_sort_by_name = 2131624006;
    public static final int minutes = 2131623993;
    public static final int next_button = 2131623957;
    public static final int now_playing_text = 2131623949;
    public static final int play_indicator = 2131623990;
    public static final int play_pause_button = 2131623956;
    public static final int position_text = 2131623958;
    public static final int previous_button = 2131623954;
    public static final int repeat_button = 2131623948;
    public static final int seek_bar = 2131623960;
    public static final int set = 2131623994;
    public static final int shuffle_button = 2131623947;
    public static final int snooze = 2131623939;
    public static final int stop_button = 2131623955;
    public static final int surface_view = 2131623944;
    public static final int text = 2131623991;
    public static final int timeDisplay = 2131623937;
    public static final int title = 2131623980;
    public static final int topic_text = 2131623970;
    public static final int topics = 2131623969;
    public static final int track_number_text = 2131623950;
    public static final int trackname = 2131623951;

    public R$id()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$layout {
    public static final int acc_alarm_alert = 2130903040;
    public static final int acc_alarm_clock = 2130903041;
    public static final int acc_mediaplayer = 2130903042;
    public static final int acc_nowplaying = 2130903043;
    public static final int acc_nowplaying_expanding = 2130903044;
    public static final int acc_set_alarm = 2130903045;
    public static final int act_browser = 2130903046;
    public static final int act_help = 2130903047;
    public static final int act_help_topic = 2130903048;
    public static final int act_urllist = 2130903049;
    public static final int alarm_time = 2130903050;
    public static final int appwidget_one = 2130903051;
    public static final int context_menu_header = 2130903052;
    public static final int edit_track_list_item = 2130903053;
    public static final int item_browser = 2130903054;
    public static final int item_stream = 2130903055;
    public static final int minute_picker = 2130903056;

    public R$layout()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$menu {
    public static final int alarm_list_menu = 2131558400;
    public static final int context_menu = 2131558401;
    public static final int stream_browse_menu = 2131558402;
    public static final int stream_media_menu = 2131558403;
    public static final int url_list_menu = 2131558404;

    public R$menu()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$plurals {
    public static final int NNNtrackstoplaylist = 2131427328;

    public R$plurals()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$raw {
    public static final int fallbackring = 2131099648;
    public static final int in_call_alarm = 2131099649;

    public R$raw()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$string {
    public static final int add_alarm = 2131361909;
    public static final int add_to_playlist = 2131361821;
    public static final int alarm_alert_alert_silenced = 2131361923;
    public static final int alarm_alert_dismiss_text = 2131361922;
    public static final int alarm_alert_snooze_set = 2131361925;
    public static final int alarm_alert_snooze_text = 2131361924;
    public static final int alarm_klaxon_service_desc = 2131361943;
    public static final int alarm_list_title = 2131361908;
    public static final int alarm_notify_snooze_label = 2131361941;
    public static final int alarm_notify_snooze_text = 2131361942;
    public static final int alarm_notify_text = 2131361940;
    public static final int alarm_repeat = 2131361919;
    public static final int alarm_vibrate = 2131361918;
    public static final int alarm_volume_summary = 2131361938;
    public static final int alarm_volume_title = 2131361937;
    public static final int alert = 2131361920;
    public static final int app_desc = 2131361794;
    public static final int app_name = 2131361792;
    public static final int bind_days = 2131361800;
    public static final int bind_hours = 2131361799;
    public static final int bind_minutes = 2131361798;
    public static final int bind_never = 2131361797;
    public static final int cannot_play_media_message = 2131361802;
    public static final int cannot_play_media_title = 2131361801;
    public static final int day = 2131361926;
    public static final int day_concat = 2131361934;
    public static final int days = 2131361927;
    public static final int default_label = 2131361916;
    public static final int delete = 2131361823;
    public static final int delete_alarm = 2131361911;
    public static final int delete_alarm_confirm = 2131361914;
    public static final int delete_message = 2131361803;
    public static final int delete_pos = 2131361804;
    public static final int disable_alarm = 2131361913;
    public static final int done = 2131361935;
    public static final int durationformatlong = 2131361806;
    public static final int durationformatshort = 2131361805;
    public static final int edit = 2131361822;
    public static final int emptyplaylist = 2131361807;
    public static final int enable_alarm = 2131361912;
    public static final int every_day = 2131361932;
    public static final int find_barcode_scanner_message = 2131361808;
    public static final int find_neg = 2131361810;
    public static final int find_pos = 2131361809;
    public static final int help_intro = 2131361796;
    public static final int hour = 2131361928;
    public static final int hours = 2131361929;
    public static final int invalid_playlist_message = 2131361815;
    public static final int invalid_playlist_title = 2131361814;
    public static final int invalid_url_message = 2131361816;
    public static final int label = 2131361915;
    public static final int list_menu_help = 2131361828;
    public static final int list_menu_now_playing = 2131361829;
    public static final int list_menu_refresh = 2131361830;
    public static final int list_menu_repeat = 2131361831;
    public static final int list_menu_scan = 2131361832;
    public static final int list_menu_settings = 2131361833;
    public static final int list_menu_shuffle = 2131361834;
    public static final int list_menu_sleep_timer = 2131361835;
    public static final int list_menu_sort_by_date = 2131361837;
    public static final int list_menu_sort_by_name = 2131361836;
    public static final int list_stream_empty = 2131361827;
    public static final int list_update_daily = 2131361838;
    public static final int list_update_never = 2131361840;
    public static final int list_update_weekly = 2131361839;
    public static final int loading_message = 2131361841;
    public static final int media_service_desc = 2131361795;
    public static final int menu_edit_alarm = 2131361910;
    public static final int menu_sleep_timer = 2131361842;
    public static final int minute = 2131361930;
    public static final int minute_picker_cancel = 2131361843;
    public static final int minute_picker_set = 2131361844;
    public static final int minute_picker_title = 2131361845;
    public static final int minutes = 2131361931;
    public static final int msg_version = 2131361793;
    public static final int never = 2131361933;
    public static final int notification_artist_album = 2131361846;
    public static final int nowplaying_title = 2131361847;
    public static final int opening_url_message = 2131361848;
    public static final int playback_failed = 2131361849;
    public static final int pref_autosave_summary = 2131361855;
    public static final int pref_autosave_title = 2131361854;
    public static final int pref_general_settings_category = 2131361850;
    public static final int pref_headphonepause_summary = 2131361857;
    public static final int pref_headphonepause_title = 2131361856;
    public static final int pref_playback_category = 2131361851;
    public static final int pref_progressivedownload_summary = 2131361859;
    public static final int pref_progressivedownload_title = 2131361858;
    public static final int pref_retrievemetadata_summary = 2131361861;
    public static final int pref_retrievemetadata_title = 2131361860;
    public static final int pref_retrieveshoutcastmetadata_summary = 2131361863;
    public static final int pref_retrieveshoutcastmetadata_title = 2131361862;
    public static final int pref_sendscrobblerinfo_summary = 2131361865;
    public static final int pref_sendscrobblerinfo_title = 2131361864;
    public static final int pref_social_media_category = 2131361852;
    public static final int pref_ui_category = 2131361853;
    public static final int pref_update_summary = 2131361867;
    public static final int pref_update_title = 2131361866;
    public static final int pref_wakelock_summary = 2131361869;
    public static final int pref_wakelock_title = 2131361868;
    public static final int pref_wifilock_summary = 2131361871;
    public static final int pref_wifilock_title = 2131361870;
    public static final int rate_application = 2131361811;
    public static final int rate_neg = 2131361813;
    public static final int rate_pos = 2131361812;
    public static final int remove_from_playlist = 2131361907;
    public static final int repeat_all_notif = 2131361874;
    public static final int repeat_current_notif = 2131361873;
    public static final int repeat_off_notif = 2131361872;
    public static final int revert = 2131361936;
    public static final int save = 2131361824;
    public static final int save_message = 2131361818;
    public static final int save_pos = 2131361819;
    public static final int service_start_error_msg = 2131361876;
    public static final int service_start_error_title = 2131361875;
    public static final int set_alarm = 2131361917;
    public static final int share = 2131361825;
    public static final int share_signature = 2131361820;
    public static final int shuffle_off_notif = 2131361880;
    public static final int shuffle_on_notif = 2131361879;
    public static final int silent_alarm_summary = 2131361939;
    public static final int sleep_timer_off_notif = 2131361878;
    public static final int sleep_timer_on_notif = 2131361877;
    public static final int streampref_connection_category = 2131361882;
    public static final int streampref_hostname_title = 2131361886;
    public static final int streampref_nickname_title = 2131361881;
    public static final int streampref_password_title = 2131361885;
    public static final int streampref_path_title = 2131361888;
    public static final int streampref_port_title = 2131361887;
    public static final int streampref_protocol_title = 2131361883;
    public static final int streampref_query_title = 2131361889;
    public static final int streampref_reference_title = 2131361890;
    public static final int streampref_username_title = 2131361884;
    public static final int text_go_button = 2131361891;
    public static final int time = 2131361921;
    public static final int title_alarm_clock = 2131361905;
    public static final int title_help = 2131361892;
    public static final int title_now_playing = 2131361893;
    public static final int title_set_alarm = 2131361906;
    public static final int title_share = 2131361894;
    public static final int title_stream_browse = 2131361896;
    public static final int title_url_list = 2131361895;
    public static final int unknown_album_name = 2131361898;
    public static final int unknown_artist_name = 2131361897;
    public static final int unsupported_scanned_intent_message = 2131361899;
    public static final int upgrade = 2131361900;
    public static final int upgrade_neg = 2131361902;
    public static final int upgrade_pos = 2131361901;
    public static final int url_not_opened_message = 2131361817;
    public static final int view_url = 2131361826;
    public static final int widget_one_initial_text = 2131361903;
    public static final int widget_one_track_info_unavailable = 2131361904;

    public R$string()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$style {
    public static final int ButtonStripLeft = 2131492865;
    public static final int ButtonStripMiddle = 2131492866;
    public static final int ButtonStripRight = 2131492867;
    public static final int alarm_list_left_column = 2131492868;
    public static final int clock = 2131492864;

    public R$style()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R$xml {
    public static final int alarm_prefs = 2131034112;
    public static final int appwidget_one = 2131034113;
    public static final int preferences = 2131034114;
    public static final int stream_prefs = 2131034115;

    public R$xml()
    {
        return;
    }
}
package net.sourceforge.servestream;
public final class R {

    public R()
    {
        return;
    }
}
package net.sourceforge.servestream.activity;
 class AlarmClockActivity$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.AlarmClockActivity this$0;
    final synthetic int val$id;

    AlarmClockActivity$1(net.sourceforge.servestream.activity.AlarmClockActivity p1, int p2)
    {
        this.this$0 = p1;
        this.val$id = p2;
        return;
    }

    public void onClick(android.content.DialogInterface p3, int p4)
    {
        net.sourceforge.servestream.alarm.Alarms.deleteAlarm(this.this$0, this.val$id);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class AlarmClockActivity$2 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.AlarmClockActivity this$0;

    AlarmClockActivity$2(net.sourceforge.servestream.activity.AlarmClockActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.AlarmClockActivity.access$200(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class AlarmClockActivity$3 implements android.view.View$OnFocusChangeListener {
    final synthetic net.sourceforge.servestream.activity.AlarmClockActivity this$0;

    AlarmClockActivity$3(net.sourceforge.servestream.activity.AlarmClockActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onFocusChange(android.view.View p1, boolean p2)
    {
        p1.setSelected(p2);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class AlarmClockActivity$AlarmTimeAdapter$1 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.AlarmClockActivity$AlarmTimeAdapter this$1;
    final synthetic net.sourceforge.servestream.alarm.Alarm val$alarm;
    final synthetic android.widget.ImageView val$barOnOff;
    final synthetic android.widget.CheckBox val$clockOnOff;

    AlarmClockActivity$AlarmTimeAdapter$1(net.sourceforge.servestream.activity.AlarmClockActivity$AlarmTimeAdapter p1, android.widget.CheckBox p2, android.widget.ImageView p3, net.sourceforge.servestream.alarm.Alarm p4)
    {
        this.this$1 = p1;
        this.val$clockOnOff = p2;
        this.val$barOnOff = p3;
        this.val$alarm = p4;
        return;
    }

    public void onClick(android.view.View p5)
    {
        this.val$clockOnOff.toggle();
        net.sourceforge.servestream.activity.AlarmClockActivity.access$100(this.this$1.this$0, this.val$clockOnOff.isChecked(), this.val$barOnOff, this.val$alarm);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class AlarmClockActivity$AlarmTimeAdapter extends android.widget.CursorAdapter {
    final synthetic net.sourceforge.servestream.activity.AlarmClockActivity this$0;

    public AlarmClockActivity$AlarmTimeAdapter(net.sourceforge.servestream.activity.AlarmClockActivity p1, android.content.Context p2, android.database.Cursor p3)
    {
        this.this$0 = p1;
        super(p2, p3);
        return;
    }

    public void bindView(android.view.View p13, android.content.Context p14, android.database.Cursor p15)
    {
        int v9_0;
        net.sourceforge.servestream.alarm.Alarm v0_1 = new net.sourceforge.servestream.alarm.Alarm(p15);
        android.view.View v7 = p13.findViewById(2131623973);
        android.widget.ImageView v1_1 = ((android.widget.ImageView) v7.findViewById(2131623975));
        if (!v0_1.enabled) {
            v9_0 = 2130837548;
        } else {
            v9_0 = 2130837549;
        }
        v1_1.setImageResource(v9_0);
        android.widget.CheckBox v3_1 = ((android.widget.CheckBox) v7.findViewById(2131623974));
        v3_1.setChecked(v0_1.enabled);
        v7.setOnClickListener(new net.sourceforge.servestream.activity.AlarmClockActivity$AlarmTimeAdapter$1(this, v3_1, v1_1, v0_1));
        net.sourceforge.servestream.alarm.DigitalClock v6_1 = ((net.sourceforge.servestream.alarm.DigitalClock) p13.findViewById(2131623976));
        java.util.Calendar v2 = java.util.Calendar.getInstance();
        v2.set(11, v0_1.hour);
        v2.set(12, v0_1.minutes);
        v6_1.updateTime(v2);
        v6_1.setTypeface(android.graphics.Typeface.DEFAULT);
        android.widget.TextView v5_1 = ((android.widget.TextView) v6_1.findViewById(2131623978));
        String v4 = v0_1.daysOfWeek.toString(this.this$0, 0);
        if ((v4 == null) || (v4.length() == 0)) {
            v5_1.setVisibility(8);
        } else {
            v5_1.setText(v4);
            v5_1.setVisibility(0);
        }
        android.widget.TextView v8_1 = ((android.widget.TextView) p13.findViewById(2131623977));
        if ((v0_1.label == null) || (v0_1.label.length() == 0)) {
            v8_1.setVisibility(8);
        } else {
            v8_1.setText(v0_1.label);
            v8_1.setVisibility(0);
        }
        return;
    }

    public android.view.View newView(android.content.Context p6, android.database.Cursor p7, android.view.ViewGroup p8)
    {
        android.view.View v1 = net.sourceforge.servestream.activity.AlarmClockActivity.access$000(this.this$0).inflate(2130903050, p8, 0);
        ((net.sourceforge.servestream.alarm.DigitalClock) v1.findViewById(2131623976)).setLive(0);
        return v1;
    }
}
package net.sourceforge.servestream.activity;
public class AlarmClockActivity extends android.app.Activity implements android.widget.AdapterView$OnItemClickListener {
    public static final boolean DEBUG = False;
    public static final String PREFERENCES = "AlarmClock";
    private android.widget.ListView mAlarmsList;
    private android.database.Cursor mCursor;
    private android.view.LayoutInflater mFactory;

    public AlarmClockActivity()
    {
        return;
    }

    static synthetic android.view.LayoutInflater access$000(net.sourceforge.servestream.activity.AlarmClockActivity p1)
    {
        return p1.mFactory;
    }

    static synthetic void access$100(net.sourceforge.servestream.activity.AlarmClockActivity p0, boolean p1, android.widget.ImageView p2, net.sourceforge.servestream.alarm.Alarm p3)
    {
        p0.updateIndicatorAndAlarm(p1, p2, p3);
        return;
    }

    static synthetic void access$200(net.sourceforge.servestream.activity.AlarmClockActivity p0)
    {
        p0.addNewAlarm();
        return;
    }

    private void addNewAlarm()
    {
        this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.SetAlarmActivity));
        return;
    }

    private void updateIndicatorAndAlarm(boolean p4, android.widget.ImageView p5, net.sourceforge.servestream.alarm.Alarm p6)
    {
        int v0_0;
        if (!p4) {
            v0_0 = 2130837548;
        } else {
            v0_0 = 2130837549;
        }
        p5.setImageResource(v0_0);
        net.sourceforge.servestream.alarm.Alarms.enableAlarm(this, p6.id, p4);
        if (p4) {
            net.sourceforge.servestream.activity.SetAlarmActivity.popAlarmSetToast(this, p6.hour, p6.minutes, p6.daysOfWeek);
        }
        return;
    }

    private void updateLayout()
    {
        this.setContentView(2130903041);
        this.mAlarmsList = ((android.widget.ListView) this.findViewById(2131623943));
        this.mAlarmsList.setAdapter(new net.sourceforge.servestream.activity.AlarmClockActivity$AlarmTimeAdapter(this, this, this.mCursor));
        this.mAlarmsList.setVerticalScrollBarEnabled(1);
        this.mAlarmsList.setOnItemClickListener(this);
        this.mAlarmsList.setOnCreateContextMenuListener(this);
        android.view.View v1 = this.findViewById(2131623942);
        v1.setOnClickListener(new net.sourceforge.servestream.activity.AlarmClockActivity$2(this));
        v1.setOnFocusChangeListener(new net.sourceforge.servestream.activity.AlarmClockActivity$3(this));
        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem p10)
    {
        boolean v6 = 1;
        android.widget.AdapterView$AdapterContextMenuInfo v3_1 = ((android.widget.AdapterView$AdapterContextMenuInfo) p10.getMenuInfo());
        int v2 = ((int) v3_1.id);
        if (v2 != -1) {
            switch (p10.getItemId()) {
                case 2131623997:
                    int v5_11;
                    net.sourceforge.servestream.alarm.Alarm v0_1 = new net.sourceforge.servestream.alarm.Alarm(((android.database.Cursor) this.mAlarmsList.getAdapter().getItem(v3_1.position)));
                    if (v0_1.enabled) {
                        v5_11 = 0;
                    } else {
                        v5_11 = 1;
                    }
                    net.sourceforge.servestream.alarm.Alarms.enableAlarm(this, v0_1.id, v5_11);
                    if (!v0_1.enabled) {
                        net.sourceforge.servestream.activity.SetAlarmActivity.popAlarmSetToast(this, v0_1.hour, v0_1.minutes, v0_1.daysOfWeek);
                    }
                    break;
                case 2131623998:
                    android.content.Intent v4_1 = new android.content.Intent(this, net.sourceforge.servestream.activity.SetAlarmActivity);
                    v4_1.putExtra("alarm_id", v2);
                    this.startActivity(v4_1);
                    break;
                case 2131623999:
                    new android.app.AlertDialog$Builder(this).setTitle(this.getString(2131361911)).setMessage(this.getString(2131361914)).setPositiveButton(17039370, new net.sourceforge.servestream.activity.AlarmClockActivity$1(this, v2)).setNegativeButton(17039360, 0).show();
                    break;
                default:
                    v6 = super.onContextItemSelected(p10);
            }
        } else {
            v6 = super.onContextItemSelected(p10);
        }
        return v6;
    }

    protected void onCreate(android.os.Bundle p6)
    {
        super.onCreate(p6);
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.getResources().getText(2131361792);
        v1_1[1] = this.getResources().getText(2131361905);
        this.setTitle(String.format("%s: %s", v1_1));
        this.mFactory = android.view.LayoutInflater.from(this);
        this.mCursor = net.sourceforge.servestream.alarm.Alarms.getAlarmsCursor(this.getContentResolver());
        this.updateLayout();
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu p11, android.view.View p12, android.view.ContextMenu$ContextMenuInfo p13)
    {
        this.getMenuInflater().inflate(2131558401, p11);
        net.sourceforge.servestream.alarm.Alarm v0_1 = new net.sourceforge.servestream.alarm.Alarm(((android.database.Cursor) this.mAlarmsList.getAdapter().getItem(((android.widget.AdapterView$AdapterContextMenuInfo) p13).position)));
        java.util.Calendar v2 = java.util.Calendar.getInstance();
        v2.set(11, v0_1.hour);
        v2.set(12, v0_1.minutes);
        String v5 = net.sourceforge.servestream.alarm.Alarms.formatTime(this, v2);
        android.view.View v6 = this.mFactory.inflate(2130903052, 0);
        ((android.widget.TextView) v6.findViewById(2131623984)).setText(v5);
        ((android.widget.TextView) v6.findViewById(2131623985)).setText(v0_1.label);
        p11.setHeaderView(v6);
        if (v0_1.enabled) {
            p11.findItem(2131623997).setTitle(2131361913);
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131558400, p3);
        return super.onCreateOptionsMenu(p3);
    }

    protected void onDestroy()
    {
        super.onDestroy();
        net.sourceforge.servestream.alarm.ToastMaster.cancelToast();
        this.mCursor.close();
        return;
    }

    public void onItemClick(android.widget.AdapterView p4, android.view.View p5, int p6, long p7)
    {
        android.content.Intent v0_1 = new android.content.Intent(this, net.sourceforge.servestream.activity.SetAlarmActivity);
        v0_1.putExtra("alarm_id", ((int) p7));
        this.startActivity(v0_1);
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131623996:
                this.addNewAlarm();
                v0_1 = 1;
                break;
            default:
                v0_1 = super.onOptionsItemSelected(p2);
        }
        return v0_1;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$1 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;

    BrowserActivity$1(net.sourceforge.servestream.activity.BrowserActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p2)
    {
        net.sourceforge.servestream.activity.BrowserActivity.access$000(this.this$0, p2);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$2 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;

    BrowserActivity$2(net.sourceforge.servestream.activity.BrowserActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        net.sourceforge.servestream.utils.MusicUtils.addToCurrentPlaylist(this.this$0, ((long[]) ((long[]) p3.obj)));
        return;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$3 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;

    BrowserActivity$3(net.sourceforge.servestream.activity.BrowserActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p5)
    {
        this.this$0.startActivity(new android.content.Intent(this.this$0, net.sourceforge.servestream.activity.URLListActivity));
        return;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$4$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity$4 this$1;

    BrowserActivity$4$1(net.sourceforge.servestream.activity.BrowserActivity$4 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p3, int p4)
    {
        net.sourceforge.servestream.activity.BrowserActivity.access$100(this.this$1.this$0, this.this$1.val$stream);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$4 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;
    final synthetic String val$streamURL;

    BrowserActivity$4(net.sourceforge.servestream.activity.BrowserActivity p1, String p2, net.sourceforge.servestream.dbutils.Stream p3)
    {
        this.this$0 = p1;
        this.val$streamURL = p2;
        this.val$stream = p3;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p8)
    {
        android.app.AlertDialog v0_5 = new android.app.AlertDialog$Builder(this.this$0);
        int v1_4 = this.this$0;
        Object[] v3 = new Object[1];
        v3[0] = this.val$streamURL;
        v0_5.setMessage(v1_4.getString(2131361818, v3)).setPositiveButton(2131361819, new net.sourceforge.servestream.activity.BrowserActivity$4$1(this)).setNegativeButton(17039360, 0).create().show();
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$5$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity$5 this$1;

    BrowserActivity$5$1(net.sourceforge.servestream.activity.BrowserActivity$5 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p1, int p2)
    {
        return;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$5 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;
    final synthetic String val$streamURL;

    BrowserActivity$5(net.sourceforge.servestream.activity.BrowserActivity p1, String p2)
    {
        this.this$0 = p1;
        this.val$streamURL = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p4)
    {
        new android.app.AlertDialog$Builder(this.this$0).setMessage(this.val$streamURL).setPositiveButton(17039370, new net.sourceforge.servestream.activity.BrowserActivity$5$1(this)).create().show();
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$6 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    BrowserActivity$6(net.sourceforge.servestream.activity.BrowserActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p4)
    {
        net.sourceforge.servestream.utils.MusicUtils.addToCurrentPlaylistFromURL(this.this$0, this.this$0.mQueueHandler, this.val$stream);
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class BrowserActivity$7 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    BrowserActivity$7(net.sourceforge.servestream.activity.BrowserActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p10)
    {
        String v2 = this.val$stream.getUri().toString();
        String v0 = this.this$0.getString(2131361792);
        android.content.Intent v1_1 = new android.content.Intent("android.intent.action.SEND");
        v1_1.setType("text/plain");
        android.content.Intent v4_0 = this.this$0;
        Object[] v6_1 = new Object[2];
        v6_1[0] = v2;
        v6_1[1] = v0;
        v1_1.putExtra("android.intent.extra.TEXT", v4_0.getString(2131361820, v6_1));
        this.this$0.startActivity(android.content.Intent.createChooser(v1_1, this.this$0.getString(2131361894)));
        return 1;
    }
}
package net.sourceforge.servestream.activity;
public class BrowserActivity$DetermineIntentAsyncTask extends android.os.AsyncTask {
    final synthetic net.sourceforge.servestream.activity.BrowserActivity this$0;

    public BrowserActivity$DetermineIntentAsyncTask(net.sourceforge.servestream.activity.BrowserActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    private android.os.Message handleURL(net.sourceforge.servestream.dbutils.Stream p12)
    {
        String v0 = 0;
        android.os.Message v4 = 0;
        try {
            net.sourceforge.servestream.utils.URLUtils v6_1 = new net.sourceforge.servestream.utils.URLUtils(p12.getURL());
            try {
                android.util.Log.v(net.sourceforge.servestream.activity.BrowserActivity.access$200(), new StringBuilder().append("URI is: ").append(p12.getURL()).toString());
            } catch (Exception v2) {
                v2.printStackTrace();
                int v7_2 = 0;
                return v7_2;
            }
            if (v6_1.getResponseCode() == 200) {
                v0 = v6_1.getContentType();
            }
            if (v0 != null) {
                if (!v0.contains("text/html")) {
                    try {
                        long[] v3 = net.sourceforge.servestream.utils.MusicUtils.getFilesInPlaylist(this.this$0, p12.getScrubbedURL(), v0);
                    } catch (java.net.MalformedURLException v1) {
                        v1.printStackTrace();
                    }
                    v4 = this.this$0.mHandler.obtainMessage(2);
                    v4.arg1 = 1;
                    v4.obj = v3;
                } else {
                    v4 = this.this$0.mHandler.obtainMessage(3);
                    v4.obj = p12;
                }
            } else {
                v4 = this.this$0.mHandler.obtainMessage(2);
                v4.arg1 = -1;
            }
            v7_2 = v4;
            return v7_2;
        } catch (Exception v2) {
        }
    }

    protected varargs android.os.Message doInBackground(net.sourceforge.servestream.dbutils.Stream[] p2)
    {
        return this.handleURL(p2[0]);
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((net.sourceforge.servestream.dbutils.Stream[]) p2));
    }

    protected void onPostExecute(android.os.Message p1)
    {
        p1.sendToTarget();
        return;
    }

    protected bridge synthetic void onPostExecute(Object p1)
    {
        this.onPostExecute(((android.os.Message) p1));
        return;
    }
}
package net.sourceforge.servestream.activity;
public class BrowserActivity extends android.app.ListActivity implements android.content.ServiceConnection {
    private static final int DETERMINE_INTENT_TASK = 1;
    public static final int MESSAGE_HANDLE_INTENT = 2;
    public static final int MESSAGE_PARSE_WEBPAGE = 3;
    public static final int MESSAGE_SHOW_DIRECTORY_CONTENTS = 1;
    private static final int NO_INTENT = 255;
    private static final int STREAM_MEDIA_INTENT = 1;
    private static final String TAG;
    private java.util.ArrayList directoryEntries;
    private net.sourceforge.servestream.dbutils.Stream[] mDirectory;
    private net.sourceforge.servestream.filemanager.DirectoryScanner mDirectoryScanner;
    private android.widget.TextView mEmptyText;
    protected android.os.Handler mHandler;
    private android.widget.Button mHomeButton;
    private android.view.inputmethod.InputMethodManager mInputManager;
    private java.util.List mListFiles;
    protected android.os.Handler mQueueHandler;
    private int mStepsBack;
    private net.sourceforge.servestream.dbutils.StreamDatabase mStreamdb;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;

    static BrowserActivity()
    {
        net.sourceforge.servestream.activity.BrowserActivity.TAG = net.sourceforge.servestream.activity.BrowserActivity.getName();
        return;
    }

    public BrowserActivity()
    {
        this.directoryEntries = new java.util.ArrayList();
        this.mListFiles = new java.util.ArrayList();
        this.mDirectory = 0;
        this.mInputManager = 0;
        this.mStreamdb = 0;
        this.mHomeButton = 0;
        this.mHandler = new net.sourceforge.servestream.activity.BrowserActivity$1(this);
        this.mQueueHandler = new net.sourceforge.servestream.activity.BrowserActivity$2(this);
        return;
    }

    static synthetic void access$000(net.sourceforge.servestream.activity.BrowserActivity p0, android.os.Message p1)
    {
        p0.handleMessage(p1);
        return;
    }

    static synthetic void access$100(net.sourceforge.servestream.activity.BrowserActivity p0, net.sourceforge.servestream.dbutils.Stream p1)
    {
        p0.saveStream(p1);
        return;
    }

    static synthetic String access$200()
    {
        return net.sourceforge.servestream.activity.BrowserActivity.TAG;
    }

    private void addAllElements(java.util.List p4, java.util.List p5)
    {
        int v1 = p5.size();
        int v0 = 0;
        while (v0 < v1) {
            p4.add(p5.get(v0));
            v0++;
        }
        return;
    }

    private void browseTo(net.sourceforge.servestream.dbutils.Stream p4)
    {
        this.showDialog(1);
        net.sourceforge.servestream.activity.BrowserActivity$DetermineIntentAsyncTask v0_1 = new net.sourceforge.servestream.activity.BrowserActivity$DetermineIntentAsyncTask(this);
        net.sourceforge.servestream.dbutils.Stream[] v1_1 = new net.sourceforge.servestream.dbutils.Stream[1];
        v1_1[0] = p4;
        v0_1.execute(v1_1);
        return;
    }

    private void handleIntent(android.os.Message p3)
    {
        try {
            this.removeDialog(1);
        } catch (long[] v0) {
        }
        switch (p3.arg1) {
            case -1:
                this.showUrlNotOpenedToast();
            case 0:
            default:
                break;
            case 1:
                net.sourceforge.servestream.utils.MusicUtils.playAll(this, ((long[]) ((long[]) p3.obj)), 0);
                break;
        }
        return;
    }

    private void handleMessage(android.os.Message p4)
    {
        switch (p4.what) {
            case 1:
                this.showDirectoryContents(((net.sourceforge.servestream.filemanager.DirectoryContents) p4.obj));
                break;
            case 2:
                this.handleIntent(p4);
                break;
            case 3:
                this.mStepsBack = (this.mStepsBack + 1);
                this.mDirectory[this.mStepsBack] = ((net.sourceforge.servestream.dbutils.Stream) p4.obj);
                this.refreshList();
                break;
        }
        return;
    }

    private void refreshList()
    {
        this.showDialog(1);
        net.sourceforge.servestream.filemanager.DirectoryScanner v0 = this.mDirectoryScanner;
        if (v0 != null) {
            v0.cancel = 1;
        }
        this.directoryEntries.clear();
        this.mListFiles.clear();
        this.mEmptyText.setVisibility(8);
        this.setListAdapter(0);
        this.mDirectoryScanner = new net.sourceforge.servestream.filemanager.DirectoryScanner(this.mDirectory[this.mStepsBack], this, this.mHandler);
        this.mDirectoryScanner.start();
        return;
    }

    private void saveStream(net.sourceforge.servestream.dbutils.Stream p3)
    {
        if (this.mStreamdb.findStream(p3) == null) {
            this.mStreamdb.saveStream(p3);
        }
        return;
    }

    private void showDirectoryContents(net.sourceforge.servestream.filemanager.DirectoryContents p4)
    {
        this.mDirectoryScanner = 0;
        this.mListFiles = p4.getListFiles();
        this.addAllElements(this.directoryEntries, this.mListFiles);
        net.sourceforge.servestream.filemanager.IconifiedTextListAdapter v0_1 = new net.sourceforge.servestream.filemanager.IconifiedTextListAdapter(this);
        v0_1.setListItems(this.directoryEntries, this.getListView().hasTextFilter());
        this.setListAdapter(v0_1);
        this.getListView().requestFocus();
        this.mEmptyText.setVisibility(0);
        try {
            this.removeDialog(1);
        } catch (Exception v1) {
        }
        return;
    }

    private void showUrlNotOpenedToast()
    {
        android.widget.Toast.makeText(this, 2131361817, 0).show();
        return;
    }

    private void upOneLevel()
    {
        if (this.mStepsBack > 0) {
            this.mStepsBack = (this.mStepsBack - 1);
            this.refreshList();
        }
        return;
    }

    public void onCreate(android.os.Bundle p9)
    {
        super.onCreate(p9);
        this.setContentView(2130903046);
        net.sourceforge.servestream.activity.BrowserActivity$3 v3_6 = new Object[2];
        v3_6[0] = this.getResources().getText(2131361792);
        v3_6[1] = this.getResources().getText(2131361896);
        this.setTitle(String.format("%s: %s", v3_6));
        this.setVolumeControlStream(3);
        try {
            android.util.Log.v(net.sourceforge.servestream.activity.BrowserActivity.TAG, this.getIntent().getData().toString());
            this.mStepsBack = 0;
            android.widget.Button v2_6 = new net.sourceforge.servestream.dbutils.Stream[1000];
            this.mDirectory = v2_6;
            this.mDirectory[this.mStepsBack] = new net.sourceforge.servestream.dbutils.Stream(this.getIntent().getData().toString());
        } catch (Exception v0) {
            v0.printStackTrace();
        }
        this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        android.widget.ListView v1 = this.getListView();
        v1.setOnCreateContextMenuListener(this);
        v1.setEmptyView(this.findViewById(2131623964));
        v1.setFastScrollEnabled(1);
        v1.setTextFilterEnabled(1);
        this.mEmptyText = ((android.widget.TextView) this.findViewById(2131623965));
        this.mEmptyText.setVisibility(8);
        this.mInputManager = ((android.view.inputmethod.InputMethodManager) this.getSystemService("input_method"));
        this.mHomeButton = ((android.widget.Button) this.findViewById(2131623968));
        this.mHomeButton.setOnClickListener(new net.sourceforge.servestream.activity.BrowserActivity$3(this));
        this.refreshList();
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu p12, android.view.View p13, android.view.ContextMenu$ContextMenuInfo p14)
    {
        net.sourceforge.servestream.dbutils.Stream v7 = ((net.sourceforge.servestream.filemanager.IconifiedText) ((net.sourceforge.servestream.filemanager.IconifiedTextListAdapter) this.getListAdapter()).getItem(((android.widget.AdapterView$AdapterContextMenuInfo) p14).position)).getStream();
        try {
            String v8 = v7.getURL().toString();
            p12.setHeaderTitle(v7.getNickname());
            p12.add(2131361824).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.BrowserActivity$4(this, v8, v7));
            p12.add(2131361826).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.BrowserActivity$5(this, v8));
        } catch (Exception v2) {
            v2.printStackTrace();
        }
        p12.add(2131361821).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.BrowserActivity$6(this, v7));
        p12.add(2131361825).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.BrowserActivity$7(this, v7));
        return;
    }

    protected android.app.Dialog onCreateDialog(int p4)
    {
        android.app.ProgressDialog v0;
        switch (p4) {
            case 1:
                android.app.ProgressDialog v1_1 = new android.app.ProgressDialog(this);
                v1_1.setMessage(this.getString(2131361841));
                v1_1.setCancelable(1);
                v0 = v1_1;
                break;
            default:
                v0 = 0;
        }
        return v0;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131558402, p3);
        return 1;
    }

    public void onDestroy()
    {
        super.onDestroy();
        if (this.mDirectoryScanner != null) {
            this.mDirectoryScanner.cancel = 1;
        }
        this.mDirectoryScanner = 0;
        return;
    }

    public boolean onKeyDown(int p5, android.view.KeyEvent p6)
    {
        boolean v0 = 1;
        if (p5 != 4) {
            if (p5 != 84) {
                v0 = super.onKeyDown(p5, p6);
            } else {
                this.mInputManager.toggleSoftInput(2, 0);
            }
        } else {
            if (this.mStepsBack <= 0) {
            } else {
                this.upOneLevel();
            }
        }
        return v0;
    }

    protected void onListItemClick(android.widget.ListView p4, android.view.View p5, int p6, long p7)
    {
        this = super.onListItemClick(p4, p5, p6, p7);
        net.sourceforge.servestream.filemanager.IconifiedTextListAdapter v0_1 = ((net.sourceforge.servestream.filemanager.IconifiedTextListAdapter) this.getListAdapter());
        if (v0_1 != null) {
            this.browseTo(((net.sourceforge.servestream.filemanager.IconifiedText) v0_1.getItem(p6)).getStream());
        }
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p3)
    {
        switch (p3.getItemId()) {
            case 2131624000:
                this.refreshList();
                break;
            case 2131624001:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.SettingsActivity));
                break;
        }
        return 0;
    }

    public void onServiceConnected(android.content.ComponentName p1, android.os.IBinder p2)
    {
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p1)
    {
        return;
    }

    public void onStart()
    {
        super.onStart();
        this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this);
        if (this.mStreamdb == null) {
            this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        }
        try {
            net.sourceforge.servestream.dbutils.Stream v1 = this.mStreamdb.findStream(this.mDirectory[this.mStepsBack]);
        } catch (Exception v0) {
            v0.printStackTrace();
            return;
        }
        if (v1 == null) {
            return;
        } else {
            this.mStreamdb.touchHost(v1);
            return;
        }
    }

    public void onStop()
    {
        super.onStop();
        if (this.mStreamdb != null) {
            this.mStreamdb.close();
            this.mStreamdb = 0;
        }
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class HelpActivity$1 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.HelpActivity this$0;
    final synthetic String val$topic;

    HelpActivity$1(net.sourceforge.servestream.activity.HelpActivity p1, String p2)
    {
        this.this$0 = p1;
        this.val$topic = p2;
        return;
    }

    public void onClick(android.view.View p4)
    {
        android.content.Intent v0_1 = new android.content.Intent(this.this$0, net.sourceforge.servestream.activity.HelpTopicActivity);
        v0_1.putExtra("android.intent.extra.TITLE", this.val$topic);
        this.this$0.startActivity(v0_1);
        return;
    }
}
package net.sourceforge.servestream.activity;
public class HelpActivity extends android.app.Activity {
    public static final String HELPDIR = "help";
    public static final String SUFFIX = ".html";
    public static final String TAG;

    static HelpActivity()
    {
        net.sourceforge.servestream.activity.HelpActivity.TAG = net.sourceforge.servestream.activity.HelpActivity.getName();
        return;
    }

    public HelpActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p15)
    {
        super.onCreate(p15);
        this.setContentView(2130903047);
        int v10_4 = new Object[2];
        v10_4[0] = this.getResources().getText(2131361792);
        v10_4[1] = this.getResources().getText(2131361892);
        this.setTitle(String.format("%s: %s", v10_4));
        android.widget.LinearLayout v3_1 = ((android.widget.LinearLayout) this.findViewById(2131623969));
        try {
            String[] v1 = this.getAssets().list("help");
            int v6 = v1.length;
            int v5 = 0;
        } catch (java.io.IOException v4) {
            android.util.Log.e(net.sourceforge.servestream.activity.HelpActivity.TAG, "couldn\'t get list of help assets", v4);
            return;
        }
        while (v5 < v6) {
            String v7 = v1[v5];
            if (v7.endsWith(".html")) {
                android.widget.Button v2_1 = new android.widget.Button(this);
                String v8 = v7.substring(0, (v7.length() - ".html".length()));
                v2_1.setText(v8);
                v2_1.setOnClickListener(new net.sourceforge.servestream.activity.HelpActivity$1(this, v8));
                v3_1.addView(v2_1);
            }
            v5++;
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
public class HelpTopicActivity extends android.app.Activity {
    public static final String TAG;

    static HelpTopicActivity()
    {
        net.sourceforge.servestream.activity.HelpTopicActivity.TAG = net.sourceforge.servestream.activity.HelpActivity.getName();
        return;
    }

    public HelpTopicActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p8)
    {
        super.onCreate(p8);
        this.setContentView(2130903048);
        String v1 = this.getIntent().getStringExtra("android.intent.extra.TITLE");
        Object[] v3_0 = new Object[3];
        v3_0[0] = this.getResources().getText(2131361792);
        v3_0[1] = this.getResources().getText(2131361892);
        v3_0[2] = v1;
        this.setTitle(String.format("%s: %s - %s", v3_0));
        ((net.sourceforge.servestream.utils.HelpTopicView) this.findViewById(2131623970)).setTopic(v1);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$10 implements android.view.View$OnLongClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$10(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onLongClick(android.view.View p4)
    {
        if (!net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).isShown()) {
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).startAnimation(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1400(this.this$0));
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).setVisibility(0);
        } else {
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).startAnimation(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1200(this.this$0));
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).setVisibility(8);
        }
        return 0;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$11 implements android.content.ServiceConnection {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$11(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onServiceConnected(android.content.ComponentName p5, android.os.IBinder p6)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$202(this.this$0, net.sourceforge.servestream.service.IMediaPlaybackService$Stub.asInterface(p6));
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1500(this.this$0);
        try {
            if ((net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).getAudioId() < 0) && ((!net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).isPlaying()) && (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).getPath() == null))) {
                this.this$0.finish();
            } else {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1600(this.this$0).setVisibility(0);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1700(this.this$0).setVisibility(0);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1800(this.this$0);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1900(this.this$0);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2000(this.this$0);
            }
        } catch (String v0) {
        }
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p3)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$202(this.this$0, 0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$12$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity$12 this$1;

    MediaPlaybackActivity$12$1(net.sourceforge.servestream.activity.MediaPlaybackActivity$12 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p2, int p3)
    {
        this.this$1.this$0.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$12 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$12(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p6)
    {
        switch (p6.what) {
            case 1:
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2100(this.this$0, net.sourceforge.servestream.activity.MediaPlaybackActivity.access$500(this.this$0));
                break;
            case 2:
                new android.app.AlertDialog$Builder(this.this$0).setTitle(2131361875).setMessage(2131361876).setPositiveButton(17039370, new net.sourceforge.servestream.activity.MediaPlaybackActivity$12$1(this)).setCancelable(0).show();
                break;
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$13 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$13(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p6, android.content.Intent p7)
    {
        String v0 = p7.getAction();
        if (!v0.equals("net.sourceforge.servestream.metachanged")) {
            if (!v0.equals("net.sourceforge.servestream.playstatechanged")) {
                if (!v0.equals("net.sourceforge.servestream.startdialog")) {
                    if ((v0.equals("net.sourceforge.servestream.stopdialog")) && (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2400(this.this$0) == net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2500())) {
                        try {
                            this.this$0.removeDialog(1);
                        } catch (Exception v1_0) {
                            v1_0.printStackTrace();
                        }
                    }
                } else {
                    try {
                        if (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2400(this.this$0) == net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2500()) {
                            this.this$0.showDialog(1);
                        }
                    } catch (Exception v1_1) {
                        v1_1.printStackTrace();
                    }
                }
            } else {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2000(this.this$0);
            }
        } else {
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2200(this.this$0);
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2300(this.this$0);
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2000(this.this$0);
            net.sourceforge.servestream.activity.MediaPlaybackActivity.access$2100(this.this$0, 1);
            if (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).getVisibility() != 0) {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).startAnimation(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1400(this.this$0));
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).setVisibility(0);
            }
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$1 implements android.widget.SeekBar$OnSeekBarChangeListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$1(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onProgressChanged(android.widget.SeekBar p8, int p9, boolean p10)
    {
        if ((p10) && (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0) != null)) {
            long v0 = android.os.SystemClock.elapsedRealtime();
            if ((v0 - net.sourceforge.servestream.activity.MediaPlaybackActivity.access$000(this.this$0)) > 250) {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$002(this.this$0, v0);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$302(this.this$0, ((net.sourceforge.servestream.activity.MediaPlaybackActivity.access$400(this.this$0) * ((long) p9)) / 1000));
                try {
                    net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).seek(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$300(this.this$0));
                } catch (net.sourceforge.servestream.activity.MediaPlaybackActivity v2) {
                }
                if (!net.sourceforge.servestream.activity.MediaPlaybackActivity.access$100(this.this$0)) {
                    net.sourceforge.servestream.activity.MediaPlaybackActivity.access$500(this.this$0);
                    net.sourceforge.servestream.activity.MediaPlaybackActivity.access$302(this.this$0, -1);
                }
            }
        }
        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar p4)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$002(this.this$0, 0);
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$102(this.this$0, 1);
        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar p4)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$302(this.this$0, -1);
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$102(this.this$0, 0);
        return;
    }
}
package net.sourceforge.servestream.button;
public interface RepeatingImageButton$RepeatListener {

    public abstract void onRepeat();
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$2 implements net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$2(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onRepeat(android.view.View p2, long p3, int p5)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$600(this.this$0, p5, p3);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$3 implements net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$3(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onRepeat(android.view.View p2, long p3, int p5)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$700(this.this$0, p5, p3);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$4 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$4(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$800(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$5 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$5(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$900(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$6 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$6(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1000(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$7 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$7(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1100(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$8 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$8(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        if (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0) != null) {
            try {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).startAnimation(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1200(this.this$0));
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).setVisibility(8);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).prev();
            } catch (android.os.RemoteException v0) {
            }
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MediaPlaybackActivity$9 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MediaPlaybackActivity this$0;

    MediaPlaybackActivity$9(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        if (net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0) != null) {
            try {
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).startAnimation(net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1200(this.this$0));
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$1300(this.this$0).setVisibility(8);
                net.sourceforge.servestream.activity.MediaPlaybackActivity.access$200(this.this$0).next();
            } catch (android.os.RemoteException v0) {
            }
        }
        return;
    }
}
package net.sourceforge.servestream.utils;
public interface MusicUtils$Defs {
    public static final int ADD_TO_PLAYLIST = 1;
    public static final int CHILD_MENU_BASE = 14;
    public static final int DELETE_ITEM = 10;
    public static final int EFFECTS_PANEL = 13;
    public static final int GOTO_PLAYBACK = 7;
    public static final int GOTO_START = 6;
    public static final int NEW_PLAYLIST = 4;
    public static final int OPEN_URL = 0;
    public static final int PARTY_SHUFFLE = 8;
    public static final int PLAYLIST_SELECTED = 3;
    public static final int PLAY_SELECTION = 5;
    public static final int QUEUE = 12;
    public static final int SCAN_DONE = 11;
    public static final int SHUFFLE_ALL = 9;
    public static final int USE_AS_RINGTONE = 2;
}
package net.sourceforge.servestream.activity;
public class MediaPlaybackActivity extends android.app.Activity implements android.view.SurfaceHolder$Callback, net.sourceforge.servestream.utils.MusicUtils$Defs, android.content.SharedPreferences$OnSharedPreferenceChangeListener {
    private static int GONE = 0;
    private static final int PREPARING_MEDIA = 1;
    private static final int QUIT = 2;
    private static final int REFRESH = 1;
    private static final String TAG;
    private static int VISIBLE;
    private android.view.SurfaceHolder holder;
    private final int[][] keyboard;
    private int lastX;
    private int lastY;
    private android.widget.TextView mAlbumName;
    private android.widget.TextView mArtistName;
    private android.widget.TextView mCurrentTime;
    private boolean mDeviceHasDpad;
    private int mDisplayHeight;
    private int mDisplayWidth;
    boolean mDraggingLabel;
    private long mDuration;
    private net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener mFfwdListener;
    private boolean mFromTouch;
    private final android.os.Handler mHandler;
    int mInitialX;
    private long mLastSeekEventTime;
    int mLastX;
    private android.widget.RelativeLayout mMediaControls;
    private net.sourceforge.servestream.button.RepeatingImageButton mNextButton;
    private android.view.View$OnClickListener mNextListener;
    private int mParentActivityState;
    private android.widget.Button mPauseButton;
    private android.view.View$OnClickListener mPauseListener;
    private long mPosOverride;
    private android.content.SharedPreferences mPreferences;
    private net.sourceforge.servestream.button.RepeatingImageButton mPrevButton;
    private android.view.View$OnClickListener mPrevListener;
    private android.widget.ProgressBar mProgress;
    private android.widget.Button mRepeatButton;
    private android.view.View$OnClickListener mRepeatListener;
    private net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener mRewListener;
    private android.widget.SeekBar$OnSeekBarChangeListener mSeekListener;
    private boolean mSeeking;
    private net.sourceforge.servestream.service.IMediaPlaybackService mService;
    private android.widget.Button mShuffleButton;
    private android.view.View$OnClickListener mShuffleListener;
    private long mStartSeekPos;
    private android.content.BroadcastReceiver mStatusListener;
    private android.widget.Button mStopButton;
    private android.view.View$OnClickListener mStopListener;
    int mTextWidth;
    private android.widget.Toast mToast;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;
    private android.widget.TextView mTotalTime;
    private android.widget.TextView mTrackName;
    private android.widget.TextView mTrackNumber;
    int mViewWidth;
    private android.os.PowerManager$WakeLock mWakeLock;
    private android.view.animation.Animation media_controls_fade_in;
    private android.view.animation.Animation media_controls_fade_out;
    private android.content.ServiceConnection osc;
    private boolean paused;
    private android.view.SurfaceView preview;
    private int seekmethod;

    static MediaPlaybackActivity()
    {
        net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG = net.sourceforge.servestream.activity.MediaPlaybackActivity.getName();
        net.sourceforge.servestream.activity.MediaPlaybackActivity.VISIBLE = 1;
        net.sourceforge.servestream.activity.MediaPlaybackActivity.GONE = 2;
        return;
    }

    public MediaPlaybackActivity()
    {
        this.mParentActivityState = net.sourceforge.servestream.activity.MediaPlaybackActivity.VISIBLE;
        this.mSeeking = 0;
        this.mStartSeekPos = 0;
        this.mService = 0;
        this.preview = 0;
        this.mDisplayWidth = 0;
        this.mDisplayHeight = 0;
        this.mInitialX = -1;
        this.mLastX = -1;
        this.mTextWidth = 0;
        this.mViewWidth = 0;
        this.mDraggingLabel = 0;
        this.mSeekListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$1(this);
        this.mRewListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$2(this);
        this.mFfwdListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$3(this);
        this.mShuffleListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$4(this);
        this.mRepeatListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$5(this);
        this.mStopListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$6(this);
        this.mPauseListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$7(this);
        this.mPrevListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$8(this);
        this.mNextListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$9(this);
        net.sourceforge.servestream.activity.MediaPlaybackActivity$13 v0_19 = new int[][3];
        int v1_0 = new int[10];
        v1_0 = {45, 51, 33, 46, 48, 53, 49, 37, 43, 44};
        v0_19[0] = v1_0;
        int[] v2_1 = new int[10];
        v2_1 = {29, 47, 32, 34, 35, 36, 38, 39, 40, 67};
        v0_19[1] = v2_1;
        int[] v2_2 = new int[10];
        v2_2 = {54, 52, 31, 50, 30, 42, 41, 55, 56, 66};
        v0_19[2] = v2_2;
        this.keyboard = v0_19;
        this.osc = new net.sourceforge.servestream.activity.MediaPlaybackActivity$11(this);
        this.mPosOverride = -1;
        this.mFromTouch = 0;
        this.mHandler = new net.sourceforge.servestream.activity.MediaPlaybackActivity$12(this);
        this.mStatusListener = new net.sourceforge.servestream.activity.MediaPlaybackActivity$13(this);
        return;
    }

    static synthetic long access$000(net.sourceforge.servestream.activity.MediaPlaybackActivity p2)
    {
        return p2.mLastSeekEventTime;
    }

    static synthetic long access$002(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, long p1)
    {
        p0.mLastSeekEventTime = p1;
        return p1;
    }

    static synthetic boolean access$100(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mFromTouch;
    }

    static synthetic void access$1000(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.doStop();
        return;
    }

    static synthetic boolean access$102(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, boolean p1)
    {
        p0.mFromTouch = p1;
        return p1;
    }

    static synthetic void access$1100(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.doPauseResume();
        return;
    }

    static synthetic android.view.animation.Animation access$1200(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.media_controls_fade_out;
    }

    static synthetic android.widget.RelativeLayout access$1300(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mMediaControls;
    }

    static synthetic android.view.animation.Animation access$1400(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.media_controls_fade_in;
    }

    static synthetic void access$1500(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.startPlayback();
        return;
    }

    static synthetic android.widget.Button access$1600(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mRepeatButton;
    }

    static synthetic android.widget.Button access$1700(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mShuffleButton;
    }

    static synthetic void access$1800(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.setRepeatButtonImage();
        return;
    }

    static synthetic void access$1900(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.setShuffleButtonImage();
        return;
    }

    static synthetic net.sourceforge.servestream.service.IMediaPlaybackService access$200(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mService;
    }

    static synthetic void access$2000(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.setPauseButtonImage();
        return;
    }

    static synthetic net.sourceforge.servestream.service.IMediaPlaybackService access$202(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, net.sourceforge.servestream.service.IMediaPlaybackService p1)
    {
        p0.mService = p1;
        return p1;
    }

    static synthetic void access$2100(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, long p1)
    {
        p0.queueNextRefresh(p1);
        return;
    }

    static synthetic void access$2200(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.updateTrackInfo();
        return;
    }

    static synthetic void access$2300(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.setSeekControls();
        return;
    }

    static synthetic int access$2400(net.sourceforge.servestream.activity.MediaPlaybackActivity p1)
    {
        return p1.mParentActivityState;
    }

    static synthetic int access$2500()
    {
        return net.sourceforge.servestream.activity.MediaPlaybackActivity.VISIBLE;
    }

    static synthetic long access$300(net.sourceforge.servestream.activity.MediaPlaybackActivity p2)
    {
        return p2.mPosOverride;
    }

    static synthetic long access$302(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, long p1)
    {
        p0.mPosOverride = p1;
        return p1;
    }

    static synthetic long access$400(net.sourceforge.servestream.activity.MediaPlaybackActivity p2)
    {
        return p2.mDuration;
    }

    static synthetic long access$500(net.sourceforge.servestream.activity.MediaPlaybackActivity p2)
    {
        return p2.refreshNow();
    }

    static synthetic void access$600(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, int p1, long p2)
    {
        p0.scanBackward(p1, p2);
        return;
    }

    static synthetic void access$700(net.sourceforge.servestream.activity.MediaPlaybackActivity p0, int p1, long p2)
    {
        p0.scanForward(p1, p2);
        return;
    }

    static synthetic void access$800(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.toggleShuffle();
        return;
    }

    static synthetic void access$900(net.sourceforge.servestream.activity.MediaPlaybackActivity p0)
    {
        p0.cycleRepeat();
        return;
    }

    private void cycleRepeat()
    {
        if (this.mService != null) {
            int v0 = this.mService.getRepeatMode();
            if (v0 != 0) {
                if (v0 != 2) {
                    this.mService.setRepeatMode(0);
                    this.showToast(2131361872);
                } else {
                    this.mService.setRepeatMode(1);
                    if (this.mService.getShuffleMode() != 0) {
                        this.mService.setShuffleMode(0);
                        this.setShuffleButtonImage();
                    }
                    this.showToast(2131361873);
                }
            } else {
                this.mService.setRepeatMode(2);
                this.showToast(2131361874);
            }
            this.setRepeatButtonImage();
        }
        return;
    }

    private void doPauseResume()
    {
        try {
            if (this.mService != null) {
                if (!this.mService.isPlaying()) {
                    this.mService.play();
                } else {
                    this.mService.pause();
                }
                this.refreshNow();
                this.setPauseButtonImage();
            }
        } catch (net.sourceforge.servestream.service.IMediaPlaybackService v0) {
        }
        return;
    }

    private void doStop()
    {
        try {
            if (this.mService != null) {
                this.mService.stop();
                this.refreshNow();
                this.setPauseButtonImage();
            }
        } catch (net.sourceforge.servestream.service.IMediaPlaybackService v0) {
        }
        return;
    }

    private void getDisplayMeasurements()
    {
        android.view.Display v0 = this.getWindowManager().getDefaultDisplay();
        this.mDisplayWidth = v0.getWidth();
        this.mDisplayHeight = v0.getHeight();
        return;
    }

    private void makeSurface()
    {
        this.preview = ((android.view.SurfaceView) this.findViewById(2131623944));
        this.preview.setOnLongClickListener(new net.sourceforge.servestream.activity.MediaPlaybackActivity$10(this));
        this.holder = this.preview.getHolder();
        this.holder.addCallback(this);
        this.holder.setType(3);
        return;
    }

    private void queueNextRefresh(long p4)
    {
        if (!this.paused) {
            android.os.Message v0 = this.mHandler.obtainMessage(1);
            this.mHandler.removeMessages(1);
            this.mHandler.sendMessageDelayed(v0, p4);
        }
        return;
    }

    private long refreshNow()
    {
        long v2;
        if (this.mService != null) {
            if (!this.mService.isStreaming()) {
                if (this.mService.isCompleteFileAvailable()) {
                    this.mDuration = this.mService.getCompleteFileDuration();
                    this.mTotalTime.setText(net.sourceforge.servestream.utils.MusicUtils.makeTimeString(this, (this.mDuration / 1000)));
                    this.mPrevButton.setRepeatListener(this.mRewListener, 260);
                    this.mNextButton.setRepeatListener(this.mFfwdListener, 260);
                    this.mProgress.setEnabled(1);
                } else {
                    this.mProgress.setSecondaryProgress(((int) (this.mService.getPercentDownloaded() * 1000.0)));
                    this.mPrevButton.setRepeatListener(0, -1);
                    this.mNextButton.setRepeatListener(0, -1);
                    this.mProgress.setEnabled(0);
                }
            }
            long v0;
            if (this.mPosOverride >= 0) {
                v0 = this.mPosOverride;
            } else {
                v0 = this.mService.position();
            }
            v2 = (1000 - (v0 % 1000));
            if ((v0 < 0) || (this.mDuration <= 0)) {
                this.mCurrentTime.setText("--:--");
                this.mProgress.setProgress(1000);
            } else {
                this.mCurrentTime.setText(net.sourceforge.servestream.utils.MusicUtils.makeTimeString(this, (v0 / 1000)));
                if (!this.mService.isPlaying()) {
                    int v5_30;
                    if (this.mCurrentTime.getVisibility() != 4) {
                        v5_30 = 4;
                    } else {
                        v5_30 = 0;
                    }
                    this.mCurrentTime.setVisibility(v5_30);
                    v2 = 500;
                } else {
                    this.mCurrentTime.setVisibility(0);
                }
                this.mProgress.setProgress(((int) ((1000 * v0) / this.mDuration)));
            }
        } else {
            v2 = 500;
        }
        return v2;
    }

    private void scanBackward(int p13, long p14)
    {
        if (this.mService != null) {
            if (p13 != 0) {
                long v14_1;
                this.mSeeking = 1;
                if (p14 >= 5000) {
                    v14_1 = (50000 + ((p14 - 5000) * 40));
                } else {
                    v14_1 = (p14 * 10);
                }
                long v2 = (this.mStartSeekPos - v14_1);
                if (v2 < 0) {
                    this.mService.prev();
                    long v0 = this.mService.duration();
                    this.mStartSeekPos = (this.mStartSeekPos + v0);
                    v2 += v0;
                }
                if (((v14_1 - this.mLastSeekEventTime) > 250) || (p13 < 0)) {
                    this.mService.seek(v2);
                    this.mLastSeekEventTime = v14_1;
                }
                if (p13 < 0) {
                    this.mPosOverride = -1;
                } else {
                    this.mPosOverride = v2;
                }
                this.refreshNow();
            } else {
                this.mStartSeekPos = this.mService.position();
                this.mLastSeekEventTime = 0;
                this.mSeeking = 0;
            }
        }
        return;
    }

    private void scanForward(int p11, long p12)
    {
        if (this.mService != null) {
            if (p11 != 0) {
                long v12_1;
                this.mSeeking = 1;
                if (p12 >= 5000) {
                    v12_1 = (50000 + ((p12 - 5000) * 40));
                } else {
                    v12_1 = (p12 * 10);
                }
                long v2 = (this.mStartSeekPos + v12_1);
                long v0 = this.mService.duration();
                if (v2 >= v0) {
                    this.mService.next();
                    this.mStartSeekPos = (this.mStartSeekPos - v0);
                    v2 -= v0;
                }
                if (((v12_1 - this.mLastSeekEventTime) > 250) || (p11 < 0)) {
                    this.mService.seek(v2);
                    this.mLastSeekEventTime = v12_1;
                }
                if (p11 < 0) {
                    this.mPosOverride = -1;
                } else {
                    this.mPosOverride = v2;
                }
                this.refreshNow();
            } else {
                this.mStartSeekPos = this.mService.position();
                this.mLastSeekEventTime = 0;
                this.mSeeking = 0;
            }
        }
        return;
    }

    private boolean seekMethod1(int p10)
    {
        int v3_0 = 0;
        if (this.mService != null) {
            int v1 = 0;
            while (v1 < 10) {
                int v2 = 0;
                while (v2 < 3) {
                    if (this.keyboard[v2][v1] != p10) {
                        v2++;
                    } else {
                        int v0 = 0;
                        if ((v1 != this.lastX) || (v2 != this.lastY)) {
                            if ((v2 != 0) || ((this.lastY != 0) || (v1 <= this.lastX))) {
                                if ((v2 != 0) || ((this.lastY != 0) || (v1 >= this.lastX))) {
                                    if ((v2 != 2) || ((this.lastY != 2) || (v1 <= this.lastX))) {
                                        if ((v2 != 2) || ((this.lastY != 2) || (v1 >= this.lastX))) {
                                            if ((v2 >= this.lastY) || (v1 > 4)) {
                                                if ((v2 >= this.lastY) || (v1 < 5)) {
                                                    if ((v2 <= this.lastY) || (v1 > 4)) {
                                                        if ((v2 > this.lastY) && (v1 >= 5)) {
                                                            v0 = 1;
                                                        }
                                                    } else {
                                                        v0 = -1;
                                                    }
                                                } else {
                                                    v0 = -1;
                                                }
                                            } else {
                                                v0 = 1;
                                            }
                                        } else {
                                            v0 = 1;
                                        }
                                    } else {
                                        v0 = -1;
                                    }
                                } else {
                                    v0 = -1;
                                }
                            } else {
                                v0 = 1;
                            }
                        } else {
                            v0 = 0;
                        }
                        this.lastX = v1;
                        this.lastY = v2;
                        try {
                            this.mService.seek((this.mService.position() + ((long) (v0 * 5))));
                        } catch (int v3) {
                        }
                        this.refreshNow();
                        v3_0 = 1;
                    }
                }
                v1++;
            }
            this.lastX = -1;
            this.lastY = -1;
        }
        return v3_0;
    }

    private boolean seekMethod2(int p8)
    {
        int v2_0 = 0;
        if (this.mService != null) {
            int v0 = 0;
            while (v0 < 10) {
                if (this.keyboard[0][v0] != p8) {
                    v0++;
                } else {
                    try {
                        this.mService.seek(((this.mService.duration() * ((long) ((v0 * 100) / 10))) / 100));
                    } catch (int v2) {
                    }
                    this.refreshNow();
                    v2_0 = 1;
                    break;
                }
            }
        }
        return v2_0;
    }

    private void setFullscreenMode(int p4)
    {
        if (p4 != 2) {
            this.getWindow().clearFlags(1024);
            this.getWindow().setFlags(2048, 2048);
        } else {
            this.getWindow().clearFlags(2048);
            this.getWindow().setFlags(1024, 1024);
        }
        return;
    }

    private void setPauseButtonImage()
    {
        try {
            if ((this.mService == null) || (!this.mService.isPlaying())) {
                this.mPauseButton.setBackgroundResource(2130837585);
            } else {
                this.mPauseButton.setBackgroundResource(2130837578);
            }
        } catch (android.widget.Button v0) {
        }
        return;
    }

    private void setRepeatButtonImage()
    {
        if (this.mService != null) {
            switch (this.mService.getRepeatMode()) {
                case 1:
                    this.mRepeatButton.setBackgroundResource(2130837606);
                    break;
                case 2:
                    this.mRepeatButton.setBackgroundResource(2130837600);
                    break;
                default:
                    this.mRepeatButton.setBackgroundResource(2130837605);
            }
            while(true) {
android.widget.Button v0            }
        }
        return;
    }

    private void setSeekControls()
    {
        if (this.mService != null) {
            if (this.mService.duration() <= 0) {
                this.mProgress.setEnabled(0);
                this.mPrevButton.setRepeatListener(0, -1);
                this.mNextButton.setRepeatListener(0, -1);
            } else {
                this.mProgress.setEnabled(1);
                this.mPrevButton.setRepeatListener(this.mRewListener, 260);
                this.mNextButton.setRepeatListener(this.mFfwdListener, 260);
            }
        }
        return;
    }

    private void setShuffleButtonImage()
    {
        if (this.mService != null) {
            switch (this.mService.getShuffleMode()) {
                case 0:
                    this.mShuffleButton.setBackgroundResource(2130837613);
                    break;
                default:
                    this.mShuffleButton.setBackgroundResource(2130837611);
            }
            while(true) {
android.widget.Button v0            }
        }
        return;
    }

    private void showToast(int p3)
    {
        if (this.mToast == null) {
            this.mToast = android.widget.Toast.makeText(this, "", 0);
        }
        this.mToast.setText(p3);
        this.mToast.show();
        return;
    }

    private void startPlayback()
    {
        if (this.mService != null) {
            String v0 = this.getIntent().getAction();
            if ((v0 != null) && (v0.equals("net.sourceforge.servestream.preparevideo"))) {
                try {
                    this.mService.getMediaPlayer().setDisplay(this.holder);
                    this.holder.setFixedSize(this.mDisplayWidth, this.mDisplayHeight);
                    this.mService.setDataSource(0);
                } catch (android.os.RemoteException v1) {
                    v1.printStackTrace();
                    android.util.Log.d("MediaPlaybackActivity", new StringBuilder().append("couldn\'t start playback: ").append(v1).toString());
                }
                this.setIntent(new android.content.Intent());
            }
            this.updateTrackInfo();
            this.queueNextRefresh(this.refreshNow());
        }
        return;
    }

    private void toggleShuffle()
    {
        if (this.mService != null) {
            int v0 = this.mService.getShuffleMode();
            if (v0 != 0) {
                if (v0 != 1) {
                    android.util.Log.e(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, new StringBuilder().append("Invalid shuffle mode: ").append(v0).toString());
                } else {
                    this.mService.setShuffleMode(0);
                    this.showToast(2131361880);
                }
            } else {
                this.mService.setShuffleMode(1);
                if (this.mService.getRepeatMode() == 1) {
                    this.mService.setRepeatMode(2);
                    this.setRepeatButtonImage();
                }
                this.showToast(2131361879);
            }
            this.setShuffleButtonImage();
        }
        return;
    }

    private void updateTrackInfo()
    {
        if (this.mService != null) {
            try {
                if (this.mService.getPath() != null) {
                    this.mTrackNumber.setText(this.mService.getTrackNumber());
                    ((android.view.View) this.mArtistName.getParent()).setVisibility(0);
                    ((android.view.View) this.mAlbumName.getParent()).setVisibility(0);
                    String v2 = this.mService.getTrackName();
                    if ((v2 == null) || (v2.equals(""))) {
                        v2 = this.mService.getMediaUri();
                    }
                    this.mTrackName.setText(v2);
                    this.mArtistName.setText(this.mService.getArtistName());
                    this.mAlbumName.setText(this.mService.getAlbumName());
                    if (!this.mService.isStreaming()) {
                        if (!this.mService.isCompleteFileAvailable()) {
                            this.mDuration = 0;
                        } else {
                            this.mDuration = this.mService.getCompleteFileDuration();
                        }
                    } else {
                        this.mDuration = this.mService.duration();
                        this.mProgress.setSecondaryProgress(0);
                    }
                    this.mTotalTime.setText(net.sourceforge.servestream.utils.MusicUtils.makeTimeString(this, (this.mDuration / 1000)));
                } else {
                    this.finish();
                }
            } catch (android.os.RemoteException v0) {
                this.finish();
            }
        }
        return;
    }

    private boolean useDpadMusicControl()
    {
        if ((!this.mDeviceHasDpad) || ((!this.mPrevButton.isFocused()) && ((!this.mNextButton.isFocused()) && (!this.mPauseButton.isFocused())))) {
            boolean v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }

    public void onConfigurationChanged(android.content.res.Configuration p5)
    {
        super.onConfigurationChanged(p5);
        boolean v0 = this.mMediaControls.isShown();
        if (v0) {
            this.mMediaControls.setVisibility(8);
        }
        this.getDisplayMeasurements();
        this.setFullscreenMode(p5.orientation);
        if (this.holder != null) {
            this.holder.setFixedSize(this.mDisplayWidth, this.mDisplayHeight);
        }
        if (v0) {
            this.mMediaControls.setVisibility(0);
        }
        return;
    }

    public void onCreate(android.os.Bundle p9)
    {
        super.onCreate(p9);
        this.setVolumeControlStream(3);
        if (android.os.Build$VERSION.SDK_INT < 11) {
            this.requestWindowFeature(1);
        }
        android.widget.RelativeLayout v2_7;
        this.mPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
        this.mPreferences.registerOnSharedPreferenceChangeListener(this);
        this.mWakeLock = ((android.os.PowerManager) this.getSystemService("power")).newWakeLock(10, this.getClass().getName());
        this.mWakeLock.setReferenceCounted(0);
        this.getDisplayMeasurements();
        this.setFullscreenMode(this.getResources().getConfiguration().orientation);
        this.setContentView(2130903042);
        this.mCurrentTime = ((android.widget.TextView) this.findViewById(2131623958));
        this.mTotalTime = ((android.widget.TextView) this.findViewById(2131623959));
        this.mProgress = ((android.widget.ProgressBar) this.findViewById(16908301));
        this.mPrevButton = ((net.sourceforge.servestream.button.RepeatingImageButton) this.findViewById(2131623954));
        this.mPrevButton.setOnClickListener(this.mPrevListener);
        this.mPrevButton.setRepeatListener(this.mRewListener, 260);
        this.mStopButton = ((android.widget.Button) this.findViewById(2131623955));
        this.mStopButton.setOnClickListener(this.mStopListener);
        this.mPauseButton = ((android.widget.Button) this.findViewById(2131623956));
        this.mPauseButton.setOnClickListener(this.mPauseListener);
        this.mNextButton = ((net.sourceforge.servestream.button.RepeatingImageButton) this.findViewById(2131623957));
        this.mNextButton.setOnClickListener(this.mNextListener);
        this.mNextButton.setRepeatListener(this.mFfwdListener, 260);
        this.mShuffleButton = ((android.widget.Button) this.findViewById(2131623947));
        this.mShuffleButton.setOnClickListener(this.mShuffleListener);
        this.mRepeatButton = ((android.widget.Button) this.findViewById(2131623948));
        this.mRepeatButton.setOnClickListener(this.mRepeatListener);
        this.seekmethod = 1;
        if (this.getResources().getConfiguration().navigation != 2) {
            v2_7 = 0;
        } else {
            v2_7 = 1;
        }
        this.mDeviceHasDpad = v2_7;
        this.mTrackNumber = ((android.widget.TextView) this.findViewById(2131623950));
        this.mTrackName = ((android.widget.TextView) this.findViewById(2131623951));
        this.mArtistName = ((android.widget.TextView) this.findViewById(2131623952));
        this.mAlbumName = ((android.widget.TextView) this.findViewById(2131623953));
        this.mProgress = ((android.widget.ProgressBar) this.findViewById(2131623960));
        if ((this.mProgress instanceof android.widget.SeekBar)) {
            ((android.widget.SeekBar) this.mProgress).setOnSeekBarChangeListener(this.mSeekListener);
        }
        this.mProgress.setMax(1000);
        this.media_controls_fade_in = android.view.animation.AnimationUtils.loadAnimation(this, 2130968576);
        this.media_controls_fade_out = android.view.animation.AnimationUtils.loadAnimation(this, 2130968577);
        this.mMediaControls = ((android.widget.RelativeLayout) this.findViewById(2131623945));
        this.mMediaControls.setVisibility(8);
        return;
    }

    protected android.app.Dialog onCreateDialog(int p4)
    {
        android.app.ProgressDialog v0;
        switch (p4) {
            case 1:
                android.app.ProgressDialog v1_1 = new android.app.ProgressDialog(this);
                v1_1.setMessage("Opening file...");
                v1_1.setCancelable(1);
                v0 = v1_1;
                break;
            default:
                v0 = 0;
        }
        return v0;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131558403, p3);
        return 1;
    }

    public void onDestroy()
    {
        super.onDestroy();
        return;
    }

    public boolean onKeyDown(int p7, android.view.KeyEvent p8)
    {
        boolean v1 = 1;
        int v0 = p8.getRepeatCount();
        if (this.seekmethod != 0) {
            if (!this.seekMethod2(p7)) {
                switch (p7) {
                    case 21:
                        if (!this.useDpadMusicControl()) {
                        } else {
                            if (!this.mPrevButton.hasFocus()) {
                                this.mPrevButton.requestFocus();
                            }
                            this.scanBackward(v0, (p8.getEventTime() - p8.getDownTime()));
                        }
                        break;
                    case 22:
                        if (!this.useDpadMusicControl()) {
                        } else {
                            if (!this.mNextButton.hasFocus()) {
                                this.mNextButton.requestFocus();
                            }
                            this.scanForward(v0, (p8.getEventTime() - p8.getDownTime()));
                        }
                        break;
                    case 23:
                    case 62:
                        this.doPauseResume();
                        break;
                    case 47:
                        this.toggleShuffle();
                        break;
                    case 76:
                        this.seekmethod = (1 - this.seekmethod);
                        break;
                }
                v1 = super.onKeyDown(p7, p8);
            }
        } else {
            if (!this.seekMethod1(p7)) {
            }
        }
        return v1;
    }

    public boolean onKeyUp(int p7, android.view.KeyEvent p8)
    {
        android.os.RemoteException v0 = 1;
        switch (p7) {
            case 21:
                if (!this.useDpadMusicControl()) {
                    v0 = super.onKeyUp(p7, p8);
                } else {
                    if (this.mService != null) {
                        if ((this.mSeeking) || (this.mStartSeekPos < 0)) {
                            this.scanBackward(-1, (p8.getEventTime() - p8.getDownTime()));
                            this.mPauseButton.requestFocus();
                            this.mStartSeekPos = -1;
                        } else {
                            this.mPauseButton.requestFocus();
                            if (this.mStartSeekPos >= 1000) {
                                this.mService.seek(0);
                            } else {
                                this.mService.prev();
                            }
                        }
                    }
                    this.mSeeking = 0;
                    this.mPosOverride = -1;
                }
                break;
            case 22:
                if (!this.useDpadMusicControl()) {
                } else {
                    if (this.mService != null) {
                        if ((this.mSeeking) || (this.mStartSeekPos < 0)) {
                            this.scanForward(-1, (p8.getEventTime() - p8.getDownTime()));
                            this.mPauseButton.requestFocus();
                            this.mStartSeekPos = -1;
                        } else {
                            this.mPauseButton.requestFocus();
                            this.mService.next();
                        }
                    }
                    this.mSeeking = 0;
                    this.mPosOverride = -1;
                }
                break;
            default:
        }
        return v0;
    }

    public void onNewIntent(android.content.Intent p1)
    {
        this.setIntent(p1);
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p3)
    {
        switch (p3.getItemId()) {
            case 2131624001:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.SettingsActivity));
                break;
            case 2131624002:
                this.toggleShuffle();
                break;
            case 2131624003:
                this.cycleRepeat();
                break;
            case 2131624004:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.NowPlayingActivity));
                break;
            case 2131624005:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.MinuteSelector));
                break;
        }
        return 0;
    }

    public void onPause()
    {
        super.onPause();
        android.util.Log.v(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, "onPause called");
        this.mWakeLock.release();
        this.mParentActivityState = net.sourceforge.servestream.activity.MediaPlaybackActivity.GONE;
        this.removeDialog(1);
        return;
    }

    public void onResume()
    {
        super.onResume();
        android.util.Log.v(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, "onResume called");
        this.mParentActivityState = net.sourceforge.servestream.activity.MediaPlaybackActivity.VISIBLE;
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences p3, String p4)
    {
        if (p4.equals("wakelock")) {
            if (!p3.getBoolean("wakelock", 1)) {
                this.mWakeLock.release();
            } else {
                this.mWakeLock.acquire();
            }
        }
        return;
    }

    public void onStart()
    {
        super.onStart();
        if (this.mPreferences.getBoolean("wakelock", 1)) {
            this.mWakeLock.acquire();
        }
        this.paused = 0;
        android.content.IntentFilter v0_1 = new android.content.IntentFilter();
        v0_1.addAction("net.sourceforge.servestream.playstatechanged");
        v0_1.addAction("net.sourceforge.servestream.metachanged");
        v0_1.addAction("net.sourceforge.servestream.startdialog");
        v0_1.addAction("net.sourceforge.servestream.stopdialog");
        this.registerReceiver(this.mStatusListener, new android.content.IntentFilter(v0_1));
        this.updateTrackInfo();
        this.queueNextRefresh(this.refreshNow());
        if (this.preview == null) {
            this.makeSurface();
            android.util.Log.v(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, "Surface Made");
        }
        return;
    }

    public void onStop()
    {
        super.onStop();
        android.util.Log.v(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, "onStop called");
        this.paused = 1;
        this.mHandler.removeMessages(1);
        this.unregisterReceiver(this.mStatusListener);
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        this.mService = 0;
        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder p1, int p2, int p3, int p4)
    {
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder p3)
    {
        android.util.Log.d(net.sourceforge.servestream.activity.MediaPlaybackActivity.TAG, "surfaceCreated called");
        this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this.osc);
        if (this.mToken == null) {
            this.mHandler.sendEmptyMessage(2);
        }
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder p1)
    {
        return;
    }

    android.widget.TextView textViewForContainer(android.view.View p3)
    {
        int v1_1;
        android.view.View v0_1 = p3.findViewById(2131623952);
        if (v0_1 == null) {
            android.view.View v0_2 = p3.findViewById(2131623953);
            if (v0_2 == null) {
                android.view.View v0_0 = p3.findViewById(2131623951);
                if (v0_0 == null) {
                    v1_1 = 0;
                } else {
                    v1_1 = ((android.widget.TextView) v0_0);
                }
            } else {
                v1_1 = ((android.widget.TextView) v0_2);
            }
        } else {
            v1_1 = ((android.widget.TextView) v0_1);
        }
        return v1_1;
    }
}
package net.sourceforge.servestream.activity;
 class MinuteSelector$1 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MinuteSelector this$0;

    MinuteSelector$1(net.sourceforge.servestream.activity.MinuteSelector p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        net.sourceforge.servestream.activity.MinuteSelector.access$100(this.this$0, net.sourceforge.servestream.activity.MinuteSelector.access$000(this.this$0).getCurrentSelectedPos());
        this.this$0.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class MinuteSelector$2 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.MinuteSelector this$0;

    MinuteSelector$2(net.sourceforge.servestream.activity.MinuteSelector p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        this.this$0.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
public class MinuteSelector extends android.app.Activity implements android.content.ServiceConnection {
    private static int MAX_ARRAY_VALUE = 0;
    private static final String STATE_SELECTED_POS = "net.sourceforge.servestream.selectedpos";
    private net.sourceforge.servestream.button.VerticalTextSpinner mMinutes;
    private int mPos;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;

    static MinuteSelector()
    {
        net.sourceforge.servestream.activity.MinuteSelector.MAX_ARRAY_VALUE = 121;
        return;
    }

    public MinuteSelector()
    {
        this.mPos = -1;
        return;
    }

    static synthetic net.sourceforge.servestream.button.VerticalTextSpinner access$000(net.sourceforge.servestream.activity.MinuteSelector p1)
    {
        return p1.mMinutes;
    }

    static synthetic void access$100(net.sourceforge.servestream.activity.MinuteSelector p0, int p1)
    {
        p0.setSleepTimer(p1);
        return;
    }

    private String[] getMinuteArray()
    {
        String[] v1 = new String[net.sourceforge.servestream.activity.MinuteSelector.MAX_ARRAY_VALUE];
        int v0 = 0;
        while (v0 < net.sourceforge.servestream.activity.MinuteSelector.MAX_ARRAY_VALUE) {
            if (v0 != 0) {
                if (v0 != 1) {
                    if (((v0 % 60) != 0) || (v0 <= 60)) {
                        if ((v0 % 60) != 0) {
                            String v2_3 = this.getResources();
                            Object[] v4_0 = new Object[1];
                            v4_0[0] = String.valueOf(v0);
                            v1[v0] = v2_3.getString(2131361931, v4_0);
                        } else {
                            v1[v0] = this.getResources().getString(2131361928);
                        }
                    } else {
                        String v2_8 = this.getResources();
                        Object[] v4_1 = new Object[1];
                        v4_1[0] = String.valueOf((v0 / 60));
                        v1[v0] = v2_8.getString(2131361929, v4_1);
                    }
                } else {
                    v1[v0] = this.getResources().getString(2131361930);
                }
            } else {
                v1[v0] = this.getResources().getString(2131361843);
            }
            v0++;
        }
        return v1;
    }

    private void setSleepTimer(int p4)
    {
        try {
            net.sourceforge.servestream.utils.MusicUtils.sService.setSleepTimerMode(p4);
        } catch (String v1) {
            return;
        }
        if (p4 != 0) {
            this.showToast(new StringBuilder().append(this.getString(2131361877)).append(" ").append(this.mMinutes.getCurrentSelectedText(this.mMinutes.getCurrentSelectedPos())).toString());
            return;
        } else {
            this.showToast(this.getString(2131361878));
            return;
        }
    }

    private void showToast(String p4)
    {
        android.widget.Toast v0 = android.widget.Toast.makeText(this, "", 0);
        v0.setText(p4);
        v0.show();
        return;
    }

    public void onCreate(android.os.Bundle p5)
    {
        super.onCreate(p5);
        this.setVolumeControlStream(3);
        this.requestWindowFeature(1);
        this.setContentView(2130903056);
        this.getWindow().setLayout(-1, -2);
        this.mMinutes = ((net.sourceforge.servestream.button.VerticalTextSpinner) this.findViewById(2131623993));
        this.mMinutes.setItems(this.getMinuteArray());
        this.mMinutes.setWrapAround(0);
        this.mMinutes.setScrollInterval(200);
        ((android.widget.Button) this.findViewById(2131623994)).setOnClickListener(new net.sourceforge.servestream.activity.MinuteSelector$1(this));
        ((android.widget.Button) this.findViewById(2131623995)).setOnClickListener(new net.sourceforge.servestream.activity.MinuteSelector$2(this));
        if (p5 != null) {
            this.mPos = p5.getInt("net.sourceforge.servestream.selectedpos", 0);
            this.mMinutes.setSelectedPos(this.mPos);
        }
        this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this);
        return;
    }

    public void onSaveInstanceState(android.os.Bundle p3)
    {
        p3.putInt("net.sourceforge.servestream.selectedpos", this.mMinutes.getCurrentSelectedPos());
        return;
    }

    public void onServiceConnected(android.content.ComponentName p3, android.os.IBinder p4)
    {
        try {
            if (this.mPos == -1) {
                this.mMinutes.setSelectedPos(net.sourceforge.servestream.utils.MusicUtils.sService.getSleepTimerMode());
            }
        } catch (net.sourceforge.servestream.button.VerticalTextSpinner v0) {
        }
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p1)
    {
        this.finish();
        return;
    }

    public void onStop()
    {
        super.onStop();
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        return;
    }
}
package net.sourceforge.servestream.utils;
public interface TouchInterceptor$DropListener {

    public abstract void drop();
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$1 implements net.sourceforge.servestream.utils.TouchInterceptor$DropListener {
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity this$0;

    NowPlayingActivity$1(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void drop(int p4, int p5)
    {
        ((net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor) net.sourceforge.servestream.activity.NowPlayingActivity.access$000(this.this$0)).moveItem(p4, p5);
        ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter) this.this$0.getListAdapter()).notifyDataSetChanged();
        this.this$0.getListView().invalidateViews();
        net.sourceforge.servestream.activity.NowPlayingActivity.access$102(this.this$0, 1);
        return;
    }
}
package net.sourceforge.servestream.utils;
public interface TouchInterceptor$RemoveListener {

    public abstract void remove();
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$2 implements net.sourceforge.servestream.utils.TouchInterceptor$RemoveListener {
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity this$0;

    NowPlayingActivity$2(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void remove(int p2)
    {
        net.sourceforge.servestream.activity.NowPlayingActivity.access$200(this.this$0, p2);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$3 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity this$0;

    NowPlayingActivity$3(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p5, android.content.Intent p6)
    {
        if (!p6.getAction().equals("net.sourceforge.servestream.metachanged")) {
            if (!p6.getAction().equals("net.sourceforge.servestream.queuechanged")) {
                if (p6.getAction().equals("net.sourceforge.servestream.playstatechanged")) {
                    this.this$0.getListView().invalidateViews();
                }
            } else {
                if (!net.sourceforge.servestream.activity.NowPlayingActivity.access$100(this.this$0)) {
                    if (net.sourceforge.servestream.utils.MusicUtils.sService != null) {
                        if (net.sourceforge.servestream.activity.NowPlayingActivity.access$300(this.this$0) != null) {
                            net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor v0_1 = new net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor(this.this$0, net.sourceforge.servestream.utils.MusicUtils.sService, this.this$0.mCursorCols);
                            if (v0_1.getCount() != 0) {
                                net.sourceforge.servestream.activity.NowPlayingActivity.access$300(this.this$0).changeCursor(v0_1);
                            } else {
                                this.this$0.finish();
                            }
                        }
                    } else {
                        this.this$0.finish();
                    }
                } else {
                    net.sourceforge.servestream.activity.NowPlayingActivity.access$102(this.this$0, 0);
                }
            }
        } else {
            this.this$0.getListView().invalidateViews();
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$4 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity this$0;

    NowPlayingActivity$4(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p3)
    {
        net.sourceforge.servestream.activity.NowPlayingActivity.access$200(this.this$0, net.sourceforge.servestream.activity.NowPlayingActivity.access$400(this.this$0));
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$NowPlayingCursor extends android.database.AbstractCursor {
    private String[] mCols;
    private int mCurPos;
    private android.database.Cursor mCurrentPlaylistCursor;
    private long[] mCursorIdxs;
    private long[] mNowPlaying;
    private net.sourceforge.servestream.service.IMediaPlaybackService mService;
    private int mSize;
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity this$0;

    public NowPlayingActivity$NowPlayingCursor(net.sourceforge.servestream.activity.NowPlayingActivity p1, net.sourceforge.servestream.service.IMediaPlaybackService p2, String[] p3)
    {
        this.this$0 = p1;
        this.mCols = p3;
        this.mService = p2;
        this.makeNowPlayingCursor();
        return;
    }

    private void makeNowPlayingCursor()
    {
        this.mCurrentPlaylistCursor = 0;
        try {
            this.mNowPlaying = this.mService.getQueue();
        } catch (android.os.RemoteException v8) {
            int v0_32 = new long[0];
            this.mNowPlaying = v0_32;
        }
        this.mSize = this.mNowPlaying.length;
        if (this.mSize != 0) {
            StringBuilder v14_1 = new StringBuilder();
            v14_1.append("_id IN (");
            int v9_0 = 0;
            while (v9_0 < this.mSize) {
                v14_1.append(this.mNowPlaying[v9_0]);
                if (v9_0 < (this.mSize - 1)) {
                    v14_1.append(",");
                }
                v9_0++;
            }
            v14_1.append(")");
            this.mCurrentPlaylistCursor = net.sourceforge.servestream.utils.MusicUtils.query(this.this$0, net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, this.mCols, v14_1.toString(), 0, "_id");
            if (this.mCurrentPlaylistCursor != null) {
                int v11 = this.mCurrentPlaylistCursor.getCount();
                int v0_13 = new long[v11];
                this.mCursorIdxs = v0_13;
                this.mCurrentPlaylistCursor.moveToFirst();
                int vtmp10 = this.mCurrentPlaylistCursor.getColumnIndexOrThrow("_id");
                int v9_1 = 0;
                while (v9_1 < v11) {
                    this.mCursorIdxs[v9_1] = this.mCurrentPlaylistCursor.getLong(vtmp10);
                    this.mCurrentPlaylistCursor.moveToNext();
                    v9_1++;
                }
                this.mCurrentPlaylistCursor.moveToFirst();
                this.mCurPos = -1;
                int v10 = 0;
                try {
                    int v9_2 = (this.mNowPlaying.length - 1);
                } catch (android.os.RemoteException v8) {
                    int v0_34 = new long[0];
                    this.mNowPlaying = v0_34;
                }
                while (v9_2 >= 0) {
                    long v12 = this.mNowPlaying[v9_2];
                    if (java.util.Arrays.binarySearch(this.mCursorIdxs, v12) < 0) {
                        v10 += this.mService.removeTrack(v12);
                    }
                    v9_2--;
                }
                if (v10 > 0) {
                    this.mNowPlaying = this.mService.getQueue();
                    this.mSize = this.mNowPlaying.length;
                    if (this.mSize == 0) {
                        this.mCursorIdxs = 0;
                    }
                }
            } else {
                this.mSize = 0;
            }
        }
        return;
    }

    public void deactivate()
    {
        if (this.mCurrentPlaylistCursor != null) {
            this.mCurrentPlaylistCursor.deactivate();
        }
        return;
    }

    public String[] getColumnNames()
    {
        return this.mCols;
    }

    public int getCount()
    {
        return this.mSize;
    }

    public double getDouble(int p3)
    {
        return this.mCurrentPlaylistCursor.getDouble(p3);
    }

    public float getFloat(int p2)
    {
        return this.mCurrentPlaylistCursor.getFloat(p2);
    }

    public int getInt(int p3)
    {
        try {
            int v1_1 = this.mCurrentPlaylistCursor.getInt(p3);
        } catch (Exception v0) {
            this.onChange(1);
            v1_1 = 0;
        }
        return v1_1;
    }

    public long getLong(int p4)
    {
        try {
            long v1_1 = this.mCurrentPlaylistCursor.getLong(p4);
        } catch (Exception v0) {
            this.onChange(1);
            v1_1 = 0;
        }
        return v1_1;
    }

    public short getShort(int p2)
    {
        return this.mCurrentPlaylistCursor.getShort(p2);
    }

    public String getString(int p3)
    {
        try {
            String v1_1 = this.mCurrentPlaylistCursor.getString(p3);
        } catch (Exception v0) {
            this.onChange(1);
            v1_1 = "";
        }
        return v1_1;
    }

    public boolean isNull(int p2)
    {
        return this.mCurrentPlaylistCursor.isNull(p2);
    }

    public void moveItem(int p3, int p4)
    {
        try {
            this.mService.moveQueueItem(p3, p4);
            this.mNowPlaying = this.mService.getQueue();
            this.onMove(-1, this.mCurPos);
        } catch (android.os.RemoteException v0) {
        }
        return;
    }

    public boolean onMove(int p6, int p7)
    {
        int v3 = 1;
        if (p6 != p7) {
            if ((this.mNowPlaying != null) && ((this.mCursorIdxs != null) && (p7 < this.mNowPlaying.length))) {
                this.mCurrentPlaylistCursor.moveToPosition(java.util.Arrays.binarySearch(this.mCursorIdxs, this.mNowPlaying[p7]));
                this.mCurPos = p7;
            } else {
                v3 = 0;
            }
        }
        return v3;
    }

    public boolean removeItem(int p5)
    {
        try {
            int v1_3;
            if (this.mService.removeTracks(p5, p5) != 0) {
                int v0 = p5;
                this.mSize = (this.mSize - 1);
                while (v0 < this.mSize) {
                    this.mNowPlaying[v0] = this.mNowPlaying[(v0 + 1)];
                    v0++;
                }
                this.onMove(-1, this.mCurPos);
            } else {
                v1_3 = 0;
                return v1_3;
            }
        } catch (int v1) {
        }
        v1_3 = 1;
        return v1_3;
    }

    public boolean requery()
    {
        this.makeNowPlayingCursor();
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs {
    public String orderBy;
    public String[] projection;
    public String selection;
    public String[] selectionArgs;
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler this$1;
    public android.net.Uri uri;

    NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs(net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler p1)
    {
        this.this$1 = p1;
        return;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$TrackListAdapter$TrackQueryHandler extends android.content.AsyncQueryHandler {
    final synthetic net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter this$0;

    NowPlayingActivity$TrackListAdapter$TrackQueryHandler(net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter p1, android.content.ContentResolver p2)
    {
        this.this$0 = p1;
        super(p2);
        return;
    }

    public android.database.Cursor doQuery(android.net.Uri p11, String[] p12, String p13, String[] p14, String p15, boolean p16)
    {
        android.database.Cursor v0_1;
        if (!p16) {
            v0_1 = net.sourceforge.servestream.utils.MusicUtils.query(net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter.access$500(this.this$0), p11, p12, p13, p14, p15);
        } else {
            android.net.Uri v3 = p11.buildUpon().appendQueryParameter("limit", "100").build();
            net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs v2_1 = new net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs(this);
            v2_1.uri = p11;
            v2_1.projection = p12;
            v2_1.selection = p13;
            v2_1.selectionArgs = p14;
            v2_1.orderBy = p15;
            this.startQuery(0, v2_1, v3, p12, p13, p14, p15);
            v0_1 = 0;
        }
        return v0_1;
    }

    protected void onQueryComplete(int p10, Object p11, android.database.Cursor p12)
    {
        net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler v0_3;
        net.sourceforge.servestream.activity.NowPlayingActivity vtmp1 = net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter.access$500(this.this$0);
        if (p11 == null) {
            v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        vtmp1.init(p12, v0_3);
        if ((p10 == 0) && ((p11 != null) && ((p12 != null) && (p12.getCount() >= 100)))) {
            this.startQuery(1, 0, ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs) p11).uri, ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs) p11).projection, ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs) p11).selection, ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs) p11).selectionArgs, ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler$QueryArgs) p11).orderBy);
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$TrackListAdapter$ViewHolder {
    android.database.CharArrayBuffer buffer1;
    char[] buffer2;
    android.widget.TextView duration;
    android.widget.TextView line1;
    android.widget.TextView line2;
    android.widget.ImageView play_indicator;

    NowPlayingActivity$TrackListAdapter$ViewHolder()
    {
        return;
    }
}
package net.sourceforge.servestream.activity;
 class NowPlayingActivity$TrackListAdapter extends android.widget.SimpleCursorAdapter {
    private net.sourceforge.servestream.activity.NowPlayingActivity mActivity;
    int mArtistIdx;
    int mAudioIdIdx;
    private final StringBuilder mBuilder;
    private String mConstraint;
    private boolean mConstraintIsValid;
    int mDurationIdx;
    private net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler mQueryHandler;
    int mTitleIdx;
    int mUriIdx;

    NowPlayingActivity$TrackListAdapter(android.content.Context p8, net.sourceforge.servestream.activity.NowPlayingActivity p9, int p10, android.database.Cursor p11, String[] p12, int[] p13)
    {
        super(p8, p10, p11, p12, p13);
        super.mBuilder = new StringBuilder();
        super.mActivity = 0;
        super.mConstraint = 0;
        super.mConstraintIsValid = 0;
        super.mActivity = p9;
        super.getColumnIndices(p11);
        super.mQueryHandler = new net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler(super, p8.getContentResolver());
        return;
    }

    static synthetic net.sourceforge.servestream.activity.NowPlayingActivity access$500(net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter p1)
    {
        return p1.mActivity;
    }

    private void getColumnIndices(android.database.Cursor p3)
    {
        if (p3 != null) {
            this.mUriIdx = p3.getColumnIndexOrThrow("uri");
            this.mTitleIdx = p3.getColumnIndexOrThrow("title");
            this.mArtistIdx = p3.getColumnIndexOrThrow("artist");
            this.mDurationIdx = p3.getColumnIndexOrThrow("duration");
            try {
                this.mAudioIdIdx = p3.getColumnIndexOrThrow("audio_id");
            } catch (IllegalArgumentException v0) {
                this.mAudioIdIdx = p3.getColumnIndexOrThrow("_id");
            }
        }
        return;
    }

    public void bindView(android.view.View p16, android.content.Context p17, android.database.Cursor p18)
    {
        net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$ViewHolder v10_1 = ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$ViewHolder) p16.getTag());
        String v9 = p18.getString(this.mTitleIdx);
        if ((v9 != null) && (!v9.equals(""))) {
            p18.copyStringToBuffer(this.mTitleIdx, v10_1.buffer1);
            v10_1.line1.setText(v10_1.buffer1.data, 0, v10_1.buffer1.sizeCopied);
        } else {
            v10_1.line1.setText(2131361904);
        }
        int v8 = (p18.getInt(this.mDurationIdx) / 1000);
        if (v8 != 0) {
            v10_1.duration.setText(net.sourceforge.servestream.utils.MusicUtils.makeTimeString(p17, ((long) v8)));
        } else {
            v10_1.duration.setText("    ");
        }
        StringBuilder v2 = this.mBuilder;
        v2.delete(0, v2.length());
        String v1 = p18.getString(this.mArtistIdx);
        if ((v1 != null) && (!v1.equals(""))) {
            v2.append(v1);
        } else {
            v2.append(p18.getString(this.mUriIdx));
        }
        int v7 = v2.length();
        if (v10_1.buffer2.length < v7) {
            int v11_18 = new char[v7];
            v10_1.buffer2 = v11_18;
        }
        v2.getChars(0, v7, v10_1.buffer2, 0);
        v10_1.line2.setText(v10_1.buffer2, 0, v7);
        android.widget.ImageView v6 = v10_1.play_indicator;
        long v3 = -1;
        boolean v5 = 0;
        if (net.sourceforge.servestream.utils.MusicUtils.sService != null) {
            try {
                v3 = ((long) net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition());
                v5 = net.sourceforge.servestream.utils.MusicUtils.sService.isPlaying();
            } catch (int v11) {
            }
        }
        if (((long) p18.getPosition()) != v3) {
            v6.setVisibility(8);
        } else {
            if (!v5) {
                v6.setImageResource(2130837564);
            } else {
                v6.setImageResource(2130837565);
            }
            v6.setVisibility(0);
        }
        return;
    }

    public void changeCursor(android.database.Cursor p2)
    {
        if ((this.mActivity.isFinishing()) && (p2 != 0)) {
            p2.close();
            p2 = 0;
        }
        if (p2 != net.sourceforge.servestream.activity.NowPlayingActivity.access$000(this.mActivity)) {
            net.sourceforge.servestream.activity.NowPlayingActivity.access$002(this.mActivity, p2);
            super.changeCursor(p2);
            this.getColumnIndices(p2);
        }
        return;
    }

    public net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler getQueryHandler()
    {
        return this.mQueryHandler;
    }

    public android.view.View newView(android.content.Context p6, android.database.Cursor p7, android.view.ViewGroup p8)
    {
        android.view.View v1 = super.newView(p6, p7, p8);
        ((android.widget.ImageView) v1.findViewById(2131623986)).setVisibility(8);
        net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$ViewHolder v2_1 = new net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$ViewHolder();
        v2_1.line1 = ((android.widget.TextView) v1.findViewById(2131623988));
        v2_1.line2 = ((android.widget.TextView) v1.findViewById(2131623989));
        v2_1.duration = ((android.widget.TextView) v1.findViewById(2131623987));
        v2_1.play_indicator = ((android.widget.ImageView) v1.findViewById(2131623990));
        v2_1.buffer1 = new android.database.CharArrayBuffer(100);
        char[] v3_16 = new char[200];
        v2_1.buffer2 = v3_16;
        v1.setTag(v2_1);
        return v1;
    }

    public android.database.Cursor runQueryOnBackgroundThread(CharSequence p6)
    {
        android.database.Cursor v0;
        String v1 = p6.toString();
        if ((!this.mConstraintIsValid) || (((v1 != null) || (this.mConstraint != null)) && ((v1 == null) || (!v1.equals(this.mConstraint))))) {
            v0 = net.sourceforge.servestream.activity.NowPlayingActivity.access$600(this.mActivity, this.mQueryHandler, v1, 0);
            this.mConstraint = v1;
            this.mConstraintIsValid = 1;
        } else {
            v0 = this.getCursor();
        }
        return v0;
    }

    public void setActivity(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        this.mActivity = p1;
        return;
    }
}
package net.sourceforge.servestream.activity;
public class NowPlayingActivity extends android.app.ListActivity implements android.view.View$OnCreateContextMenuListener, net.sourceforge.servestream.utils.MusicUtils$Defs, android.content.ServiceConnection {
    private static final String TAG;
    private net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter mAdapter;
    private boolean mAdapterSent;
    private String mCurrentTrackName;
    String[] mCursorCols;
    private boolean mDeletedOneRow;
    private net.sourceforge.servestream.utils.TouchInterceptor$DropListener mDropListener;
    private android.content.BroadcastReceiver mNowPlayingListener;
    private net.sourceforge.servestream.utils.TouchInterceptor$RemoveListener mRemoveListener;
    private int mSelectedPosition;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;
    private android.database.Cursor mTrackCursor;
    private android.widget.ListView mTrackList;

    static NowPlayingActivity()
    {
        net.sourceforge.servestream.activity.NowPlayingActivity.TAG = net.sourceforge.servestream.activity.NowPlayingActivity.getName();
        return;
    }

    public NowPlayingActivity()
    {
        this.mDeletedOneRow = 0;
        this.mAdapterSent = 0;
        net.sourceforge.servestream.activity.NowPlayingActivity$3 v0_7 = new String[8];
        v0_7[0] = "_id";
        v0_7[1] = "uri";
        v0_7[2] = "title";
        v0_7[3] = "album";
        v0_7[4] = "artist";
        v0_7[5] = "duration";
        v0_7[6] = "track";
        v0_7[7] = "year";
        this.mCursorCols = v0_7;
        this.mDropListener = new net.sourceforge.servestream.activity.NowPlayingActivity$1(this);
        this.mRemoveListener = new net.sourceforge.servestream.activity.NowPlayingActivity$2(this);
        this.mNowPlayingListener = new net.sourceforge.servestream.activity.NowPlayingActivity$3(this);
        return;
    }

    static synthetic android.database.Cursor access$000(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        return p1.mTrackCursor;
    }

    static synthetic android.database.Cursor access$002(net.sourceforge.servestream.activity.NowPlayingActivity p0, android.database.Cursor p1)
    {
        p0.mTrackCursor = p1;
        return p1;
    }

    static synthetic boolean access$100(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        return p1.mDeletedOneRow;
    }

    static synthetic boolean access$102(net.sourceforge.servestream.activity.NowPlayingActivity p0, boolean p1)
    {
        p0.mDeletedOneRow = p1;
        return p1;
    }

    static synthetic void access$200(net.sourceforge.servestream.activity.NowPlayingActivity p0, int p1)
    {
        p0.removePlaylistItem(p1);
        return;
    }

    static synthetic net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter access$300(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        return p1.mAdapter;
    }

    static synthetic int access$400(net.sourceforge.servestream.activity.NowPlayingActivity p1)
    {
        return p1.mSelectedPosition;
    }

    static synthetic android.database.Cursor access$600(net.sourceforge.servestream.activity.NowPlayingActivity p1, net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler p2, String p3, boolean p4)
    {
        return p1.getTrackCursor(p2, p3, p4);
    }

    private android.database.Cursor getTrackCursor(net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter$TrackQueryHandler p4, String p5, boolean p6)
    {
        if (p4 != null) {
            net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor v0_0 = 0;
            if (net.sourceforge.servestream.utils.MusicUtils.sService != null) {
                v0_0 = new net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor(this, net.sourceforge.servestream.utils.MusicUtils.sService, this.mCursorCols);
                if (v0_0.getCount() == 0) {
                    this.finish();
                }
            }
            if ((v0_0 != null) && (p6)) {
                this.init(v0_0, 0);
            }
            return v0_0;
        } else {
            throw new IllegalArgumentException();
        }
    }

    private void moveItem(boolean p6)
    {
        int v1 = this.mTrackCursor.getCount();
        int v2 = this.mTrackList.getSelectedItemPosition();
        if (((!p6) || (v2 >= 1)) && ((p6) || (v2 < (v1 - 1)))) {
            android.widget.ListView v3_2;
            if (!p6) {
                v3_2 = (v2 + 1);
            } else {
                v3_2 = (v2 - 1);
            }
            ((net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor) this.mTrackCursor).moveItem(v2, v3_2);
            ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter) this.getListAdapter()).notifyDataSetChanged();
            this.getListView().invalidateViews();
            this.mDeletedOneRow = 1;
            if (!p6) {
                this.mTrackList.setSelection((v2 + 1));
            } else {
                this.mTrackList.setSelection((v2 - 1));
            }
        }
        return;
    }

    private void removeItem()
    {
        int v0 = this.mTrackCursor.getCount();
        int v1 = this.mTrackList.getSelectedItemPosition();
        if ((v0 != 0) && (v1 >= 0)) {
            try {
                if (v1 != net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition()) {
                    this.mDeletedOneRow = 1;
                }
            } catch (android.widget.ListView v3) {
            }
            android.view.View v2 = this.mTrackList.getSelectedView();
            v2.setVisibility(8);
            this.mTrackList.invalidateViews();
            ((net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor) this.mTrackCursor).removeItem(v1);
            v2.setVisibility(0);
            this.mTrackList.invalidateViews();
        }
        return;
    }

    private void removePlaylistItem(int p6)
    {
        android.view.View v1 = this.mTrackList.getChildAt((p6 - this.mTrackList.getFirstVisiblePosition()));
        if (v1 != null) {
            try {
                if ((net.sourceforge.servestream.utils.MusicUtils.sService != null) && (p6 != net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition())) {
                    this.mDeletedOneRow = 1;
                }
            } catch (android.os.RemoteException v0) {
                this.mDeletedOneRow = 1;
            }
            v1.setVisibility(8);
            this.mTrackList.invalidateViews();
            ((net.sourceforge.servestream.activity.NowPlayingActivity$NowPlayingCursor) this.mTrackCursor).removeItem(p6);
            v1.setVisibility(0);
            this.mTrackList.invalidateViews();
        } else {
            android.util.Log.d(net.sourceforge.servestream.activity.NowPlayingActivity.TAG, new StringBuilder().append("No view when removing playlist item ").append(p6).toString());
        }
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent p3)
    {
        boolean v0 = 1;
        if ((p3.getMetaState() == 0) || (p3.getAction() != 0)) {
            v0 = super.dispatchKeyEvent(p3);
        } else {
            switch (p3.getKeyCode()) {
                case 19:
                    this.moveItem(1);
                    break;
                case 20:
                    this.moveItem(0);
                    break;
                case 67:
                    this.removeItem();
                    break;
                default:
            }
        }
        return v0;
    }

    public void init(android.database.Cursor p6, boolean p7)
    {
        if (this.mAdapter != null) {
            this.mAdapter.changeCursor(p6);
            if (this.mTrackCursor != null) {
                android.content.IntentFilter v1_1 = new android.content.IntentFilter();
                v1_1.addAction("net.sourceforge.servestream.metachanged");
                v1_1.addAction("net.sourceforge.servestream.queuechanged");
                v1_1.addAction("net.sourceforge.servestream.playstatechanged");
                try {
                    this.setSelection(net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition());
                    this.registerReceiver(this.mNowPlayingListener, new android.content.IntentFilter(v1_1));
                    this.mNowPlayingListener.onReceive(this, new android.content.Intent("net.sourceforge.servestream.metachanged"));
                } catch (android.os.RemoteException v2) {
                }
            } else {
                this.closeContextMenu();
            }
        }
        return;
    }

    protected void onActivityResult(int p1, int p2, android.content.Intent p3)
    {
        return;
    }

    public void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        this.setContentView(2130903043);
        int v1_5 = new Object[2];
        v1_5[0] = this.getResources().getText(2131361792);
        v1_5[1] = this.getResources().getText(2131361893);
        this.setTitle(String.format("%s: %s", v1_5));
        this.setVolumeControlStream(3);
        this.mTrackList = this.getListView();
        this.mTrackList.setOnCreateContextMenuListener(this);
        this.mTrackList.setCacheColorHint(0);
        ((net.sourceforge.servestream.utils.TouchInterceptor) this.mTrackList).setDropListener(this.mDropListener);
        ((net.sourceforge.servestream.utils.TouchInterceptor) this.mTrackList).setRemoveListener(this.mRemoveListener);
        this.mTrackList.setDivider(0);
        this.mTrackList.setSelector(2130837567);
        this.mAdapter = ((net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter) this.getLastNonConfigurationInstance());
        if (this.mAdapter != null) {
            this.mAdapter.setActivity(this);
            this.setListAdapter(this.mAdapter);
        }
        this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this);
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu p6, android.view.View p7, android.view.ContextMenu$ContextMenuInfo p8)
    {
        this.mSelectedPosition = ((android.widget.AdapterView$AdapterContextMenuInfo) p8).position;
        this.mTrackCursor.moveToPosition(this.mSelectedPosition);
        this.mCurrentTrackName = this.mTrackCursor.getString(this.mTrackCursor.getColumnIndexOrThrow("title"));
        p6.setHeaderTitle(this.mCurrentTrackName);
        p6.add(2131361907).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.NowPlayingActivity$4(this));
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p2)
    {
        return 1;
    }

    public void onDestroy()
    {
        net.sourceforge.servestream.utils.TouchInterceptor v0_0 = this.getListView();
        if (v0_0 != null) {
            ((net.sourceforge.servestream.utils.TouchInterceptor) v0_0).setDropListener(0);
            ((net.sourceforge.servestream.utils.TouchInterceptor) v0_0).setRemoveListener(0);
        }
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        try {
            this.unregisterReceiver(this.mNowPlayingListener);
        } catch (net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter v1) {
        }
        if ((!this.mAdapterSent) && (this.mAdapter != null)) {
            this.mAdapter.changeCursor(0);
        }
        this.setListAdapter(0);
        this.mAdapter = 0;
        super.onDestroy();
        return;
    }

    protected void onListItemClick(android.widget.ListView p3, android.view.View p4, int p5, long p6)
    {
        if ((this.mTrackCursor.getCount() != 0) && (net.sourceforge.servestream.utils.MusicUtils.sService != null)) {
            if (p5 != net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition()) {
                net.sourceforge.servestream.utils.MusicUtils.sService.setQueuePosition(p5);
            } else {
                if (!net.sourceforge.servestream.utils.MusicUtils.sService.isPlaying()) {
                    net.sourceforge.servestream.utils.MusicUtils.sService.play();
                } else {
                    net.sourceforge.servestream.utils.MusicUtils.sService.pause();
                }
            }
        }
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu p2)
    {
        return super.onPrepareOptionsMenu(p2);
    }

    public void onResume()
    {
        super.onResume();
        if (this.mTrackCursor != null) {
            this.getListView().invalidateViews();
        }
        return;
    }

    public Object onRetainNonConfigurationInstance()
    {
        net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter v0 = this.mAdapter;
        this.mAdapterSent = 1;
        return v0;
    }

    public void onServiceConnected(android.content.ComponentName p9, android.os.IBinder p10)
    {
        if (this.mAdapter != null) {
            this.mTrackCursor = this.mAdapter.getCursor();
            if (this.mTrackCursor == null) {
                this.getTrackCursor(this.mAdapter.getQueryHandler(), 0, 1);
            } else {
                this.init(this.mTrackCursor, 0);
            }
        } else {
            String[] v5 = new String[0];
            int[] v6 = new int[0];
            this.mAdapter = new net.sourceforge.servestream.activity.NowPlayingActivity$TrackListAdapter(this.getApplication(), this, 2130903053, 0, v5, v6);
            this.setListAdapter(this.mAdapter);
            this.getTrackCursor(this.mAdapter.getQueryHandler(), 0, 1);
        }
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p1)
    {
        this.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$1 implements android.preference.Preference$OnPreferenceChangeListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;

    SetAlarmActivity$1(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        boolean v1_1;
        p3.setSummary(((String) p4));
        if ((((String) p4) == null) || (((String) p4).equals(net.sourceforge.servestream.activity.SetAlarmActivity.access$000(this.this$0).getText()))) {
            v1_1 = 1;
        } else {
            v1_1 = this.this$0.onPreferenceChange(p3, p4);
        }
        return v1_1;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$2 implements android.preference.Preference$OnPreferenceChangeListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;

    SetAlarmActivity$2(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p5, Object p6)
    {
        if (!net.sourceforge.servestream.activity.SetAlarmActivity.access$100(this.this$0).isChecked()) {
            net.sourceforge.servestream.activity.SetAlarmActivity.popAlarmSetToast(this.this$0, net.sourceforge.servestream.activity.SetAlarmActivity.access$200(this.this$0), net.sourceforge.servestream.activity.SetAlarmActivity.access$300(this.this$0), net.sourceforge.servestream.activity.SetAlarmActivity.access$400(this.this$0).getDaysOfWeek());
        }
        return this.this$0.onPreferenceChange(p5, p6);
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$3 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;

    SetAlarmActivity$3(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.SetAlarmActivity.access$500(this.this$0);
        this.this$0.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$4 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;
    final synthetic android.widget.Button val$revert;

    SetAlarmActivity$4(net.sourceforge.servestream.activity.SetAlarmActivity p1, android.widget.Button p2)
    {
        this.this$0 = p1;
        this.val$revert = p2;
        return;
    }

    public void onClick(android.view.View p4)
    {
        int v0 = net.sourceforge.servestream.activity.SetAlarmActivity.access$600(this.this$0);
        net.sourceforge.servestream.activity.SetAlarmActivity.access$800(this.this$0, net.sourceforge.servestream.activity.SetAlarmActivity.access$700(this.this$0));
        if (net.sourceforge.servestream.activity.SetAlarmActivity.access$700(this.this$0).id != -1) {
            net.sourceforge.servestream.activity.SetAlarmActivity.access$500(this.this$0);
        } else {
            net.sourceforge.servestream.alarm.Alarms.deleteAlarm(this.this$0, v0);
        }
        this.val$revert.setEnabled(0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$5 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;

    SetAlarmActivity$5(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.activity.SetAlarmActivity.access$900(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$6 implements java.lang.Runnable {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;
    final synthetic android.preference.Preference val$p;

    SetAlarmActivity$6(net.sourceforge.servestream.activity.SetAlarmActivity p1, android.preference.Preference p2)
    {
        this.this$0 = p1;
        this.val$p = p2;
        return;
    }

    public void run()
    {
        if (this.val$p != net.sourceforge.servestream.activity.SetAlarmActivity.access$100(this.this$0)) {
            net.sourceforge.servestream.activity.SetAlarmActivity.access$100(this.this$0).setChecked(1);
        }
        net.sourceforge.servestream.activity.SetAlarmActivity.access$1000(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class SetAlarmActivity$7 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.SetAlarmActivity this$0;

    SetAlarmActivity$7(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p3, int p4)
    {
        net.sourceforge.servestream.alarm.Alarms.deleteAlarm(this.this$0, net.sourceforge.servestream.activity.SetAlarmActivity.access$600(this.this$0));
        this.this$0.finish();
        return;
    }
}
package net.sourceforge.servestream.activity;
public class SetAlarmActivity extends android.preference.PreferenceActivity implements android.app.TimePickerDialog$OnTimeSetListener, android.preference.Preference$OnPreferenceChangeListener {
    private static final String TAG;
    private static final android.os.Handler sHandler;
    private net.sourceforge.servestream.alarm.AlarmPreference mAlarmPref;
    private android.preference.CheckBoxPreference mEnabledPref;
    private int mHour;
    private int mId;
    private android.preference.EditTextPreference mLabel;
    private int mMinutes;
    private net.sourceforge.servestream.alarm.Alarm mOriginalAlarm;
    private net.sourceforge.servestream.alarm.RepeatPreference mRepeatPref;
    private boolean mTimePickerCancelled;
    private android.preference.Preference mTimePref;
    private android.preference.CheckBoxPreference mVibratePref;

    static SetAlarmActivity()
    {
        net.sourceforge.servestream.activity.SetAlarmActivity.TAG = net.sourceforge.servestream.activity.SetAlarmActivity.getName();
        net.sourceforge.servestream.activity.SetAlarmActivity.sHandler = new android.os.Handler();
        return;
    }

    public SetAlarmActivity()
    {
        return;
    }

    static synthetic android.preference.EditTextPreference access$000(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mLabel;
    }

    static synthetic android.preference.CheckBoxPreference access$100(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mEnabledPref;
    }

    static synthetic long access$1000(net.sourceforge.servestream.activity.SetAlarmActivity p2)
    {
        return p2.saveAlarmAndEnableRevert();
    }

    static synthetic int access$200(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mHour;
    }

    static synthetic int access$300(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mMinutes;
    }

    static synthetic net.sourceforge.servestream.alarm.RepeatPreference access$400(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mRepeatPref;
    }

    static synthetic long access$500(net.sourceforge.servestream.activity.SetAlarmActivity p2)
    {
        return p2.saveAlarm();
    }

    static synthetic int access$600(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mId;
    }

    static synthetic net.sourceforge.servestream.alarm.Alarm access$700(net.sourceforge.servestream.activity.SetAlarmActivity p1)
    {
        return p1.mOriginalAlarm;
    }

    static synthetic void access$800(net.sourceforge.servestream.activity.SetAlarmActivity p0, net.sourceforge.servestream.alarm.Alarm p1)
    {
        p0.updatePrefs(p1);
        return;
    }

    static synthetic void access$900(net.sourceforge.servestream.activity.SetAlarmActivity p0)
    {
        p0.deleteAlarm();
        return;
    }

    private void deleteAlarm()
    {
        new android.app.AlertDialog$Builder(this).setTitle(this.getString(2131361911)).setMessage(this.getString(2131361914)).setPositiveButton(17039370, new net.sourceforge.servestream.activity.SetAlarmActivity$7(this)).setNegativeButton(17039360, 0).show();
        return;
    }

    static String formatToast(android.content.Context p23, long p24)
    {
        String v3;
        long v6 = (p24 - System.currentTimeMillis());
        long v13_1 = (v6 / 3600000);
        long v17 = ((v6 / 60000) % 60);
        long v4 = (v13_1 / 24);
        long v13_0 = (v13_1 % 24);
        if (v4 != 0) {
            if (v4 != 1) {
                Object[] v0_3 = new Object[1];
                Object[] v20_6 = v0_3;
                v20_6[0] = Long.toString(v4);
                v3 = p23.getString(2131361927, v20_6);
            } else {
                v3 = p23.getString(2131361926);
            }
        } else {
            v3 = "";
        }
        String v16;
        if (v17 != 0) {
            if (v17 != 1) {
                Object[] v0_7 = new Object[1];
                Object[] v20_8 = v0_7;
                v20_8[0] = Long.toString(v17);
                v16 = p23.getString(2131361931, v20_8);
            } else {
                v16 = p23.getString(2131361930);
            }
        } else {
            v16 = "";
        }
        String v12;
        if (v13_0 != 0) {
            if (v13_0 != 1) {
                Object[] v0_11 = new Object[1];
                Object[] v20_10 = v0_11;
                v20_10[0] = Long.toString(v13_0);
                v12 = p23.getString(2131361929, v20_10);
            } else {
                v12 = p23.getString(2131361928);
            }
        } else {
            v12 = "";
        }
        int v8;
        if (v4 <= 0) {
            v8 = 0;
        } else {
            v8 = 1;
        }
        int v9;
        if (v13_0 <= 0) {
            v9 = 0;
        } else {
            v9 = 1;
        }
        int v10;
        if (v17 <= 0) {
            v10 = 0;
        } else {
            v10 = 1;
        }
        Object[] v20_0;
        if (v8 == 0) {
            v20_0 = 0;
        } else {
            v20_0 = 1;
        }
        String v19_6;
        if (v9 == 0) {
            v19_6 = 0;
        } else {
            v19_6 = 2;
        }
        String v19_7;
        if (v10 == 0) {
            v19_7 = 0;
        } else {
            v19_7 = 4;
        }
        String v19_9 = p23.getResources().getStringArray(2131165186)[((v20_0 | v19_6) | v19_7)];
        Object[] v0_1 = new Object[3];
        Object[] v20_4 = v0_1;
        v20_4[0] = v3;
        v20_4[1] = v12;
        v20_4[2] = v16;
        return String.format(v19_9, v20_4);
    }

    public static void popAlarmSetToast(android.content.Context p2, int p3, int p4, net.sourceforge.servestream.alarm.Alarm$DaysOfWeek p5)
    {
        net.sourceforge.servestream.activity.SetAlarmActivity.popAlarmSetToast(p2, net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p3, p4, p5).getTimeInMillis());
        return;
    }

    static void popAlarmSetToast(android.content.Context p3, long p4)
    {
        android.widget.Toast v0 = android.widget.Toast.makeText(p3, net.sourceforge.servestream.activity.SetAlarmActivity.formatToast(p3, p4), 1);
        net.sourceforge.servestream.alarm.ToastMaster.setToast(v0);
        v0.show();
        return;
    }

    private long saveAlarm()
    {
        long v1;
        net.sourceforge.servestream.alarm.Alarm v0_1 = new net.sourceforge.servestream.alarm.Alarm();
        v0_1.id = this.mId;
        v0_1.enabled = this.mEnabledPref.isChecked();
        v0_1.hour = this.mHour;
        v0_1.minutes = this.mMinutes;
        v0_1.daysOfWeek = this.mRepeatPref.getDaysOfWeek();
        v0_1.vibrate = this.mVibratePref.isChecked();
        v0_1.label = this.mLabel.getText();
        v0_1.alert = this.mAlarmPref.getAlertId();
        if (v0_1.id != -1) {
            v1 = net.sourceforge.servestream.alarm.Alarms.setAlarm(this, v0_1);
        } else {
            v1 = net.sourceforge.servestream.alarm.Alarms.addAlarm(this, v0_1);
            this.mId = v0_1.id;
        }
        return v1;
    }

    private long saveAlarmAndEnableRevert()
    {
        ((android.widget.Button) this.findViewById(2131623962)).setEnabled(1);
        return this.saveAlarm();
    }

    private void showTimePicker()
    {
        new android.app.TimePickerDialog(this, this, this.mHour, this.mMinutes, android.text.format.DateFormat.is24HourFormat(this)).show();
        return;
    }

    private void updatePrefs(net.sourceforge.servestream.alarm.Alarm p3)
    {
        this.mId = p3.id;
        this.mEnabledPref.setChecked(p3.enabled);
        this.mLabel.setText(p3.label);
        this.mLabel.setSummary(p3.label);
        this.mHour = p3.hour;
        this.mMinutes = p3.minutes;
        this.mRepeatPref.setDaysOfWeek(p3.daysOfWeek);
        this.mVibratePref.setChecked(p3.vibrate);
        this.mAlarmPref.setAlertId(p3.alert);
        this.updateTime();
        return;
    }

    private void updateTime()
    {
        android.util.Log.v(net.sourceforge.servestream.activity.SetAlarmActivity.TAG, new StringBuilder().append("updateTime ").append(this.mId).toString());
        this.mTimePref.setSummary(net.sourceforge.servestream.alarm.Alarms.formatTime(this, this.mHour, this.mMinutes, this.mRepeatPref.getDaysOfWeek()));
        return;
    }

    public void onBackPressed()
    {
        if (!this.mTimePickerCancelled) {
            this.saveAlarm();
        }
        this.finish();
        return;
    }

    protected void onCreate(android.os.Bundle p12)
    {
        net.sourceforge.servestream.alarm.Alarm v0_0;
        super.onCreate(p12);
        this.setContentView(2130903045);
        int v5_7 = new Object[2];
        v5_7[0] = this.getResources().getText(2131361792);
        v5_7[1] = this.getResources().getText(2131361906);
        this.setTitle(String.format("%s: %s", v5_7));
        this.addPreferencesFromResource(2131034112);
        this.mLabel = ((android.preference.EditTextPreference) this.findPreference("label"));
        this.mLabel.setOnPreferenceChangeListener(new net.sourceforge.servestream.activity.SetAlarmActivity$1(this));
        this.mEnabledPref = ((android.preference.CheckBoxPreference) this.findPreference("enabled"));
        this.mEnabledPref.setOnPreferenceChangeListener(new net.sourceforge.servestream.activity.SetAlarmActivity$2(this));
        this.mTimePref = this.findPreference("time");
        this.mAlarmPref = ((net.sourceforge.servestream.alarm.AlarmPreference) this.findPreference("alarm"));
        this.mAlarmPref.setOnPreferenceChangeListener(this);
        this.mVibratePref = ((android.preference.CheckBoxPreference) this.findPreference("vibrate"));
        this.mVibratePref.setOnPreferenceChangeListener(this);
        this.mRepeatPref = ((net.sourceforge.servestream.alarm.RepeatPreference) this.findPreference("setRepeat"));
        this.mRepeatPref.setOnPreferenceChangeListener(this);
        this.mId = this.getIntent().getIntExtra("alarm_id", -1);
        android.util.Log.v(net.sourceforge.servestream.activity.SetAlarmActivity.TAG, new StringBuilder().append("In SetAlarm, alarm id = ").append(this.mId).toString());
        if (this.mId != -1) {
            v0_0 = net.sourceforge.servestream.alarm.Alarms.getAlarm(this.getContentResolver(), this.mId);
            if (v0_0 != null) {
                this.mOriginalAlarm = v0_0;
                this.updatePrefs(this.mOriginalAlarm);
                this.getListView().setItemsCanFocus(1);
                ((android.widget.Button) this.findViewById(2131623961)).setOnClickListener(new net.sourceforge.servestream.activity.SetAlarmActivity$3(this));
                android.widget.Button v3_1 = ((android.widget.Button) this.findViewById(2131623962));
                v3_1.setEnabled(0);
                v3_1.setOnClickListener(new net.sourceforge.servestream.activity.SetAlarmActivity$4(this, v3_1));
                android.widget.Button v1_3 = ((android.widget.Button) this.findViewById(2131623963));
                if (this.mId != -1) {
                    v1_3.setOnClickListener(new net.sourceforge.servestream.activity.SetAlarmActivity$5(this));
                } else {
                    v1_3.setEnabled(0);
                }
                if (this.mId == -1) {
                    this.mTimePickerCancelled = 1;
                    this.showTimePicker();
                }
            } else {
                this.finish();
            }
        } else {
            v0_0 = new net.sourceforge.servestream.alarm.Alarm();
        }
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        net.sourceforge.servestream.activity.SetAlarmActivity.sHandler.post(new net.sourceforge.servestream.activity.SetAlarmActivity$6(this, p3));
        return 1;
    }

    public boolean onPreferenceTreeClick(android.preference.PreferenceScreen p2, android.preference.Preference p3)
    {
        if (p3 == this.mTimePref) {
            this.showTimePicker();
        }
        return super.onPreferenceTreeClick(p2, p3);
    }

    public void onTimeSet(android.widget.TimePicker p3, int p4, int p5)
    {
        this.mTimePickerCancelled = 0;
        this.mHour = p4;
        this.mMinutes = p5;
        this.updateTime();
        this.mEnabledPref.setChecked(1);
        net.sourceforge.servestream.activity.SetAlarmActivity.popAlarmSetToast(this, this.saveAlarmAndEnableRevert());
        return;
    }
}
package net.sourceforge.servestream.activity;
public class SettingsActivity extends android.preference.PreferenceActivity {
    private static final String TAG;

    static SettingsActivity()
    {
        net.sourceforge.servestream.activity.SettingsActivity.TAG = net.sourceforge.servestream.activity.SettingsActivity.getName();
        return;
    }

    public SettingsActivity()
    {
        return;
    }

    protected void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        try {
            this.addPreferencesFromResource(2131034114);
        } catch (ClassCastException v0) {
            android.util.Log.e(net.sourceforge.servestream.activity.SettingsActivity.TAG, "Shared preferences are corrupt! Resetting to default values.");
            android.content.SharedPreferences$Editor v1 = android.preference.PreferenceManager.getDefaultSharedPreferences(this).edit();
            v1.clear();
            v1.commit();
            android.preference.PreferenceManager.setDefaultValues(this, 2131034114, 1);
            this.addPreferencesFromResource(2131034114);
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
public class StreamEditorActivity$CursorPreferenceHack$Editor implements android.content.SharedPreferences$Editor {
    final synthetic net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack this$1;
    private android.content.ContentValues update;

    public StreamEditorActivity$CursorPreferenceHack$Editor(net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack p2)
    {
        this.this$1 = p2;
        this.update = new android.content.ContentValues();
        return;
    }

    public void apply()
    {
        this.commit();
        return;
    }

    public android.content.SharedPreferences$Editor clear()
    {
        this.update = new android.content.ContentValues();
        return this;
    }

    public boolean commit()
    {
        android.database.sqlite.SQLiteDatabase v0 = this.this$1.this$0.m_streamdb.getWritableDatabase();
        net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack v3_9 = this.this$1.table;
        int v4_1 = this.update;
        String[] v6 = new String[1];
        v6[0] = String.valueOf(this.this$1.id);
        v0.update(v3_9, v4_1, "_id = ?", v6);
        v0.close();
        this.this$1.cacheValues();
        java.util.Iterator v1 = this.this$1.listeners.iterator();
        while (v1.hasNext()) {
            ((android.content.SharedPreferences$OnSharedPreferenceChangeListener) v1.next()).onSharedPreferenceChanged(this.this$1, 0);
        }
        return 1;
    }

    public android.content.SharedPreferences$Editor putBoolean(String p2, boolean p3)
    {
        return this.putString(p2, Boolean.toString(p3));
    }

    public android.content.SharedPreferences$Editor putFloat(String p2, float p3)
    {
        return this.putString(p2, Float.toString(p3));
    }

    public android.content.SharedPreferences$Editor putInt(String p2, int p3)
    {
        return this.putString(p2, Integer.toString(p3));
    }

    public android.content.SharedPreferences$Editor putLong(String p2, long p3)
    {
        return this.putString(p2, Long.toString(p3));
    }

    public android.content.SharedPreferences$Editor putString(String p2, String p3)
    {
        this.update.put(p2, p3);
        return this;
    }

    public android.content.SharedPreferences$Editor putStringSet(String p2, java.util.Set p3)
    {
        return 0;
    }

    public android.content.SharedPreferences$Editor remove(String p2)
    {
        this.update.remove(p2);
        return this;
    }
}
package net.sourceforge.servestream.activity;
public class StreamEditorActivity$CursorPreferenceHack implements android.content.SharedPreferences {
    protected final long id;
    protected java.util.List listeners;
    protected final String table;
    final synthetic net.sourceforge.servestream.activity.StreamEditorActivity this$0;
    protected java.util.Map values;

    public StreamEditorActivity$CursorPreferenceHack(net.sourceforge.servestream.activity.StreamEditorActivity p2, String p3, long p4)
    {
        this.this$0 = p2;
        this.values = new java.util.HashMap();
        this.listeners = new java.util.LinkedList();
        this.table = p3;
        this.id = p4;
        this.cacheValues();
        return;
    }

    protected final void cacheValues()
    {
        int v2 = 0;
        android.database.sqlite.SQLiteDatabase v0 = this.this$0.m_streamdb.getReadableDatabase();
        java.util.Map v1_5 = this.table;
        String[] v4_1 = new String[1];
        v4_1[0] = String.valueOf(this.id);
        android.database.Cursor v8 = v0.query(v1_5, v2, "_id = ?", v4_1, v2, v2, 0);
        if (v8.moveToFirst()) {
            int v9 = 0;
            while (v9 < v8.getColumnCount()) {
                this.values.put(v8.getColumnName(v9), v8.getString(v9));
                v9++;
            }
        }
        v8.close();
        v0.close();
        return;
    }

    public boolean contains(String p2)
    {
        return this.values.containsKey(p2);
    }

    public bridge synthetic android.content.SharedPreferences$Editor edit()
    {
        return this.edit();
    }

    public net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack$Editor edit()
    {
        return new net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack$Editor(this);
    }

    public java.util.Map getAll()
    {
        return this.values;
    }

    public boolean getBoolean(String p2, boolean p3)
    {
        return Boolean.valueOf(this.getString(p2, Boolean.toString(p3))).booleanValue();
    }

    public float getFloat(String p2, float p3)
    {
        return Float.valueOf(this.getString(p2, Float.toString(p3))).floatValue();
    }

    public int getInt(String p2, int p3)
    {
        return Integer.valueOf(this.getString(p2, Integer.toString(p3))).intValue();
    }

    public long getLong(String p3, long p4)
    {
        return Long.valueOf(this.getString(p3, Long.toString(p4))).longValue();
    }

    public String getString(String p2, String p3)
    {
        if (this.values.containsKey(p2)) {
            p3 = ((String) this.values.get(p2));
        }
        return p3;
    }

    public java.util.Set getStringSet(String p2, java.util.Set p3)
    {
        return 0;
    }

    public void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener p2)
    {
        this.listeners.add(p2);
        return;
    }

    public void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener p2)
    {
        this.listeners.remove(p2);
        return;
    }
}
package net.sourceforge.servestream.activity;
public class StreamEditorActivity extends android.preference.PreferenceActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener {
    protected static final String TAG;
    protected net.sourceforge.servestream.dbutils.StreamDatabase m_streamdb;
    private net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack pref;

    static StreamEditorActivity()
    {
        net.sourceforge.servestream.activity.StreamEditorActivity.TAG = net.sourceforge.servestream.activity.StreamEditorActivity.getName();
        return;
    }

    public StreamEditorActivity()
    {
        this.m_streamdb = 0;
        return;
    }

    private void updateSummaries()
    {
        java.util.Iterator v1 = this.pref.values.keySet().iterator();
        while (v1.hasNext()) {
            String v2_1 = ((String) v1.next());
            android.preference.Preference v4 = this.findPreference(v2_1);
            if ((v4 != null) && (!(v4 instanceof android.preference.CheckBoxPreference))) {
                CharSequence v5 = this.pref.getString(v2_1, "");
                if (v2_1.equals("password")) {
                    String v7_2 = new char[v5.length()];
                    v5 = new String(v7_2).replace("\u0000", "*");
                }
                if ((v4 instanceof android.preference.ListPreference)) {
                    android.preference.ListPreference v3_1 = ((android.preference.ListPreference) v4);
                    int v0 = v3_1.findIndexOfValue(((String) v5));
                    if (v0 >= 0) {
                        v5 = v3_1.getEntries()[v0];
                    }
                }
                v4.setSummary(v5);
            }
        }
        return;
    }

    public android.content.SharedPreferences getSharedPreferences(String p2, int p3)
    {
        return this.pref;
    }

    public void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        long v0 = this.getIntent().getLongExtra("android.intent.extra.TITLE", -1);
        this.m_streamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        this.pref = new net.sourceforge.servestream.activity.StreamEditorActivity$CursorPreferenceHack(this, "streams", v0);
        this.pref.registerOnSharedPreferenceChangeListener(this);
        this.addPreferencesFromResource(2131034115);
        this.updateSummaries();
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences p1, String p2)
    {
        this.updateSummaries();
        return;
    }

    public void onStart()
    {
        super.onStart();
        if (this.m_streamdb == null) {
            this.m_streamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        }
        return;
    }

    public void onStop()
    {
        super.onStop();
        if (this.m_streamdb != null) {
            this.m_streamdb.close();
            this.m_streamdb = 0;
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$10 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$10(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$11 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$11(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p4, int p5)
    {
        try {
            android.content.Intent v1_3 = new android.content.Intent("android.intent.action.VIEW");
            v1_3.setData(android.net.Uri.parse("market://details?id=net.sourceforge.servestream"));
            this.this$0.startActivity(v1_3);
        } catch (android.content.ActivityNotFoundException v0) {
            android.content.Intent v1_2 = new android.content.Intent("android.intent.action.VIEW");
            v1_2.setData(android.net.Uri.parse("http://sourceforge.net/projects/servestream/"));
            this.this$0.startActivity(v1_2);
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$12 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    URLListActivity$12(net.sourceforge.servestream.activity.URLListActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p5)
    {
        android.content.Intent v0_1 = new android.content.Intent(this.this$0, net.sourceforge.servestream.activity.StreamEditorActivity);
        v0_1.putExtra("android.intent.extra.TITLE", this.val$stream.getId());
        this.this$0.startActivity(v0_1);
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$13$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity$13 this$1;

    URLListActivity$13$1(net.sourceforge.servestream.activity.URLListActivity$13 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p9, int p10)
    {
        this.this$1.this$0.mStreamdb.deleteStream(this.this$1.val$stream);
        android.content.ContentResolver v0 = this.this$1.this$0.getContentResolver();
        String[] v2_0 = new String[1];
        v2_0[0] = String.valueOf(this.this$1.val$stream.getId());
        v0.update(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, 0, 0, v2_0);
        this.this$1.this$0.mHandler.sendEmptyMessage(1);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$13 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    URLListActivity$13(net.sourceforge.servestream.activity.URLListActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p8)
    {
        android.app.AlertDialog v0_5 = new android.app.AlertDialog$Builder(this.this$0);
        int v1_4 = this.this$0;
        Object[] v3 = new Object[1];
        v3[0] = this.val$stream.getNickname();
        v0_5.setMessage(v1_4.getString(2131361803, v3)).setPositiveButton(2131361804, new net.sourceforge.servestream.activity.URLListActivity$13$1(this)).setNegativeButton(17039360, 0).create().show();
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$14 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    URLListActivity$14(net.sourceforge.servestream.activity.URLListActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p4)
    {
        net.sourceforge.servestream.utils.MusicUtils.addToCurrentPlaylistFromURL(this.this$0, this.this$0.mQueueHandler, this.val$stream);
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$15 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;
    final synthetic net.sourceforge.servestream.dbutils.Stream val$stream;

    URLListActivity$15(net.sourceforge.servestream.activity.URLListActivity p1, net.sourceforge.servestream.dbutils.Stream p2)
    {
        this.this$0 = p1;
        this.val$stream = p2;
        return;
    }

    public boolean onMenuItemClick(android.view.MenuItem p10)
    {
        String v2 = this.val$stream.getUri().toString();
        String v0 = this.this$0.getString(2131361792);
        android.content.Intent v1_1 = new android.content.Intent("android.intent.action.SEND");
        v1_1.setType("text/plain");
        android.content.Intent v4_0 = this.this$0;
        Object[] v6_1 = new Object[2];
        v6_1[0] = v2;
        v6_1[1] = v0;
        v1_1.putExtra("android.intent.extra.TEXT", v4_0.getString(2131361820, v6_1));
        this.this$0.startActivity(android.content.Intent.createChooser(v1_1, this.this$0.getString(2131361894)));
        return 1;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$1 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$1(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p2)
    {
        net.sourceforge.servestream.activity.URLListActivity.access$000(this.this$0, p2);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$2 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$2(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        net.sourceforge.servestream.utils.MusicUtils.addToCurrentPlaylist(this.this$0, ((long[]) ((long[]) p3.obj)));
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$3 implements android.view.View$OnKeyListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$3(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onKey(android.view.View p4, int p5, android.view.KeyEvent p6)
    {
        boolean v0_0 = 0;
        if ((p6.getAction() != 1) && (p5 == 66)) {
            v0_0 = net.sourceforge.servestream.activity.URLListActivity.access$100(this.this$0, 1);
        }
        return v0_0;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$4 implements android.widget.AdapterView$OnItemClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$4(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public declared_synchronized void onItemClick(android.widget.AdapterView p6, android.view.View p7, int p8, long p9)
    {
        try {
            net.sourceforge.servestream.activity.URLListActivity.access$202(this.this$0, ((net.sourceforge.servestream.dbutils.Stream) p6.getAdapter().getItem(p8)));
        } catch (net.sourceforge.servestream.activity.URLListActivity v3_17) {
            throw v3_17;
        }
        if (!this.this$0.mMakingShortcut) {
            net.sourceforge.servestream.activity.URLListActivity.access$100(this.this$0, 0);
        } else {
            android.content.Intent v0_1 = new android.content.Intent("android.intent.action.VIEW");
            v0_1.setType(new StringBuilder().append("net.sourceforge.servestream/").append(net.sourceforge.servestream.activity.URLListActivity.access$200(this.this$0).getUri()).toString());
            v0_1.setFlags(67108864);
            android.content.Intent$ShortcutIconResource v1 = android.content.Intent$ShortcutIconResource.fromContext(this.this$0, 2130837562);
            android.content.Intent v2_1 = new android.content.Intent();
            v2_1.putExtra("android.intent.extra.shortcut.INTENT", v0_1);
            v2_1.putExtra("android.intent.extra.shortcut.NAME", net.sourceforge.servestream.activity.URLListActivity.access$200(this.this$0).getNickname());
            v2_1.putExtra("android.intent.extra.shortcut.ICON_RESOURCE", v1);
            this.this$0.setResult(-1, v2_1);
            this.this$0.finish();
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$5 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$5(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        net.sourceforge.servestream.activity.URLListActivity.access$100(this.this$0, 1);
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$6 implements android.content.DialogInterface$OnCancelListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$6(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onCancel(android.content.DialogInterface p3)
    {
        if (net.sourceforge.servestream.activity.URLListActivity.access$300(this.this$0) != null) {
            net.sourceforge.servestream.activity.URLListActivity.access$300(this.this$0).cancel(1);
            net.sourceforge.servestream.activity.URLListActivity.access$302(this.this$0, 0);
            try {
                this.this$0.removeDialog(1);
            } catch (Exception v0) {
            }
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$7 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$7(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$8 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$8(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p4, int p5)
    {
        try {
            android.content.Intent v1_3 = new android.content.Intent("android.intent.action.VIEW");
            v1_3.setData(android.net.Uri.parse("market://details?id=com.google.zxing.client.android"));
            this.this$0.startActivity(v1_3);
        } catch (android.content.ActivityNotFoundException v0) {
            android.content.Intent v1_2 = new android.content.Intent("android.intent.action.VIEW");
            v1_2.setData(android.net.Uri.parse("http://code.google.com/p/zxing/downloads/list"));
            this.this$0.startActivity(v1_2);
        }
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$9 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    URLListActivity$9(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p1, int p2)
    {
        p1.cancel();
        return;
    }
}
package net.sourceforge.servestream.activity;
public class URLListActivity$DetermineIntentAsyncTask extends android.os.AsyncTask {
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    public URLListActivity$DetermineIntentAsyncTask(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    private android.os.Message handleURL(net.sourceforge.servestream.dbutils.Stream p13)
    {
        String v0 = 0;
        int v5 = this.this$0.mHandler.obtainMessage(2);
        try {
            net.sourceforge.servestream.utils.URLUtils v7_0 = new net.sourceforge.servestream.utils.URLUtils(p13.getURL());
            try {
                android.util.Log.v(net.sourceforge.servestream.activity.URLListActivity.TAG, new StringBuilder().append("URI is: ").append(p13.getURL()).toString());
            } catch (Exception v2) {
                v2.printStackTrace();
                v5 = 0;
                return v5;
            }
            if (v7_0.getResponseCode() == 200) {
                v0 = v7_0.getContentType();
            }
            if (v0 != null) {
                if (!v0.contains("text/html")) {
                    try {
                        long[] v4 = net.sourceforge.servestream.utils.MusicUtils.getFilesInPlaylist(this.this$0, p13.getScrubbedURL(), v0);
                    } catch (java.net.MalformedURLException v1) {
                        v1.printStackTrace();
                    }
                    v5.arg1 = 1;
                    v5.obj = v4;
                    return v5;
                } else {
                    android.content.Intent v3_1 = new android.content.Intent(this.this$0, net.sourceforge.servestream.activity.BrowserActivity);
                    v3_1.setDataAndType(p13.getScrubbedUri(), v7_0.getContentType());
                    v5.arg1 = 2;
                    v5.obj = v3_1;
                    return v5;
                }
            } else {
                v5.arg1 = -1;
                return v5;
            }
        } catch (Exception v2) {
        }
    }

    protected varargs android.os.Message doInBackground(net.sourceforge.servestream.dbutils.Stream[] p2)
    {
        return this.handleURL(p2[0]);
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((net.sourceforge.servestream.dbutils.Stream[]) p2));
    }

    protected void onPostExecute(android.os.Message p1)
    {
        p1.sendToTarget();
        return;
    }

    protected bridge synthetic void onPostExecute(Object p1)
    {
        this.onPostExecute(((android.os.Message) p1));
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$StreamAdapter$ViewHolder {
    public android.widget.TextView caption;
    public android.widget.TextView nickname;
    final synthetic net.sourceforge.servestream.activity.URLListActivity$StreamAdapter this$1;

    URLListActivity$StreamAdapter$ViewHolder(net.sourceforge.servestream.activity.URLListActivity$StreamAdapter p1)
    {
        this.this$1 = p1;
        return;
    }
}
package net.sourceforge.servestream.activity;
 class URLListActivity$StreamAdapter extends android.widget.ArrayAdapter {
    private java.util.ArrayList streams;
    final synthetic net.sourceforge.servestream.activity.URLListActivity this$0;

    public URLListActivity$StreamAdapter(net.sourceforge.servestream.activity.URLListActivity p2, android.content.Context p3, java.util.ArrayList p4)
    {
        this.this$0 = p2;
        super(p3, 2130903055, p4);
        super.streams = p4;
        return;
    }

    public android.view.View getView(int p14, android.view.View p15, android.view.ViewGroup p16)
    {
        net.sourceforge.servestream.activity.URLListActivity$StreamAdapter$ViewHolder v2_1;
        if (p15 != null) {
            v2_1 = ((net.sourceforge.servestream.activity.URLListActivity$StreamAdapter$ViewHolder) p15.getTag());
        } else {
            p15 = this.this$0.mInflater.inflate(2130903055, 0, 0);
            v2_1 = new net.sourceforge.servestream.activity.URLListActivity$StreamAdapter$ViewHolder(this);
            v2_1.nickname = ((android.widget.TextView) p15.findViewById(16908308));
            v2_1.caption = ((android.widget.TextView) p15.findViewById(16908309));
            p15.setTag(v2_1);
        }
        net.sourceforge.servestream.dbutils.Stream v8_1 = ((net.sourceforge.servestream.dbutils.Stream) this.streams.get(p14));
        v2_1.nickname.setText(v8_1.getNickname());
        android.content.Context v0 = p15.getContext();
        v2_1.nickname.setTextAppearance(v0, 16842816);
        v2_1.caption.setTextAppearance(v0, 16842818);
        long v6 = (System.currentTimeMillis() / 1000);
        String v4 = v0.getString(2131361797);
        if (v8_1.getLastConnect() > 0) {
            int v5 = ((int) ((v6 - v8_1.getLastConnect()) / 60));
            if (v5 < 60) {
                Object[] v10_5 = new Object[1];
                v10_5[0] = Integer.valueOf(v5);
                v4 = v0.getString(2131361798, v10_5);
            } else {
                int v3 = (v5 / 60);
                if (v3 < 24) {
                    Object[] v10_7 = new Object[1];
                    v10_7[0] = Integer.valueOf(v3);
                    v4 = v0.getString(2131361799, v10_7);
                } else {
                    Object[] v10_9 = new Object[1];
                    v10_9[0] = Integer.valueOf((v3 / 24));
                    v4 = v0.getString(2131361800, v10_9);
                }
            }
        }
        v2_1.caption.setText(v4);
        return p15;
    }
}
package net.sourceforge.servestream.activity;
public class URLListActivity extends android.app.ListActivity implements android.content.ServiceConnection {
    private static final int BROWSE_MEDIA_INTENT = 2;
    private static final int DETERMINE_INTENT_TASK = 1;
    public static final int MESSAGE_HANDLE_INTENT = 2;
    private static final int MESSAGE_UPDATE_LIST = 1;
    private static final int MISSING_BARCODE_SCANNER = 2;
    private static final int NO_INTENT = 255;
    private static final int RATE_APPLICATION = 4;
    private static final String STATE_DETERMINE_INTENT_IN_PROGRESS = "net.sourceforge.servestream.inprogress";
    private static final String STATE_DETERMINE_INTENT_STREAM = "net.sourceforge.servestream.stream";
    private static final String STATE_MAKING_SHORTCUT = "net.sourceforge.servestream.makingshortcut";
    private static final int STREAM_MEDIA_INTENT = 1;
    public static final String TAG = "";
    private static final int UNSUPPORTED_SCANNED_INTENT = 3;
    private boolean mActivityVisible;
    private net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask mDetermineIntentTask;
    private android.widget.Button mGoButton;
    protected android.os.Handler mHandler;
    protected android.view.LayoutInflater mInflater;
    protected boolean mMakingShortcut;
    private android.content.SharedPreferences mPreferences;
    protected android.os.Handler mQueueHandler;
    private android.widget.TextView mQuickconnect;
    private net.sourceforge.servestream.dbutils.Stream mRequestedStream;
    private boolean mSortedByName;
    protected net.sourceforge.servestream.dbutils.StreamDatabase mStreamdb;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;

    static URLListActivity()
    {
        net.sourceforge.servestream.activity.URLListActivity.TAG = net.sourceforge.servestream.activity.URLListActivity.getName();
        return;
    }

    public URLListActivity()
    {
        this.mQuickconnect = 0;
        this.mGoButton = 0;
        this.mRequestedStream = 0;
        this.mStreamdb = 0;
        this.mInflater = 0;
        this.mSortedByName = 0;
        this.mPreferences = 0;
        this.mMakingShortcut = 0;
        this.mActivityVisible = 1;
        this.mDetermineIntentTask = 0;
        this.mHandler = new net.sourceforge.servestream.activity.URLListActivity$1(this);
        this.mQueueHandler = new net.sourceforge.servestream.activity.URLListActivity$2(this);
        return;
    }

    static synthetic void access$000(net.sourceforge.servestream.activity.URLListActivity p0, android.os.Message p1)
    {
        p0.handleMessage(p1);
        return;
    }

    static synthetic boolean access$100(net.sourceforge.servestream.activity.URLListActivity p1, boolean p2)
    {
        return p1.handleUrl(p2);
    }

    static synthetic net.sourceforge.servestream.dbutils.Stream access$200(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        return p1.mRequestedStream;
    }

    static synthetic net.sourceforge.servestream.dbutils.Stream access$202(net.sourceforge.servestream.activity.URLListActivity p0, net.sourceforge.servestream.dbutils.Stream p1)
    {
        p0.mRequestedStream = p1;
        return p1;
    }

    static synthetic net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask access$300(net.sourceforge.servestream.activity.URLListActivity p1)
    {
        return p1.mDetermineIntentTask;
    }

    static synthetic net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask access$302(net.sourceforge.servestream.activity.URLListActivity p0, net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask p1)
    {
        p0.mDetermineIntentTask = p1;
        return p1;
    }

    private void determineIntent()
    {
        this.showDialog(1);
        this.mDetermineIntentTask = new net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask(this);
        net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask v0_2 = this.mDetermineIntentTask;
        net.sourceforge.servestream.dbutils.Stream[] v1_1 = new net.sourceforge.servestream.dbutils.Stream[1];
        v1_1[0] = this.mRequestedStream;
        v0_2.execute(v1_1);
        return;
    }

    private void handleIntent(android.os.Message p4)
    {
        try {
            this.removeDialog(1);
        } catch (net.sourceforge.servestream.dbutils.StreamDatabase v0) {
        }
        switch (p4.arg1) {
            case -1:
                this.showUrlNotOpenedToast();
            case 0:
            default:
                break;
            case 1:
                net.sourceforge.servestream.utils.MusicUtils.playAll(this, ((long[]) ((long[]) p4.obj)), 0);
                if (!this.mPreferences.getBoolean("autosave", 1)) {
                } else {
                    this.saveStream();
                    this.mStreamdb.touchHost(this.mRequestedStream);
                }
                break;
            case 2:
                this.startActivity(((android.content.Intent) p4.obj));
                if (!this.mPreferences.getBoolean("autosave", 1)) {
                } else {
                    this.saveStream();
                }
                break;
        }
        return;
    }

    private void handleIntentData()
    {
        String v3_0 = 0;
        android.content.Intent v2 = this.getIntent();
        String v0 = v2.getType();
        if ((v0 == null) || (!v0.contains("net.sourceforge.servestream/"))) {
            if (v2.getData() != null) {
                v3_0 = v2.getData().toString();
            }
            if ((v2.getExtras() != null) && (v2.getExtras().getCharSequence("android.intent.extra.TEXT") != null)) {
                v3_0 = v2.getExtras().getCharSequence("android.intent.extra.TEXT").toString();
            }
            if (v3_0 != null) {
                try {
                    this.mQuickconnect.setText(java.net.URLDecoder.decode(v3_0, "UTF-8"));
                    this.handleUrl(1);
                } catch (java.io.UnsupportedEncodingException v1) {
                    v1.printStackTrace();
                }
            }
            this.setIntent(new android.content.Intent());
        } else {
            try {
                this.mRequestedStream = new net.sourceforge.servestream.dbutils.Stream(v2.getType().toString().replace("net.sourceforge.servestream/", ""));
                this.determineIntent();
            } catch (android.content.Intent v4) {
            }
            this.setIntent(new android.content.Intent());
        }
        return;
    }

    private void handleMessage(android.os.Message p2)
    {
        switch (p2.what) {
            case 1:
                this.updateList();
                break;
            case 2:
                this.handleIntent(p2);
                break;
        }
        return;
    }

    private boolean handleUrl(boolean p2)
    {
        int v0_1;
        this.hideKeyboard();
        if ((!p2) || (this.isValidStream())) {
            this.determineIntent();
            v0_1 = 1;
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    private void hideKeyboard()
    {
        ((android.view.inputmethod.InputMethodManager) this.getSystemService("input_method")).hideSoftInputFromWindow(this.mQuickconnect.getWindowToken(), 0);
        return;
    }

    private boolean isValidStream()
    {
        try {
            this.mRequestedStream = new net.sourceforge.servestream.dbutils.Stream(this.mQuickconnect.getText().toString());
            int v2_2 = 1;
        } catch (Exception v0) {
            this.mQuickconnect.setError(this.getString(2131361816));
            v2_2 = 0;
        }
        return v2_2;
    }

    private void restoreDetermineIntentTask(android.os.Bundle p3)
    {
        if (p3.getBoolean("net.sourceforge.servestream.inprogress")) {
            try {
                this.mRequestedStream = new net.sourceforge.servestream.dbutils.Stream(p3.getString("net.sourceforge.servestream.stream"));
                this.determineIntent();
            } catch (java.net.MalformedURLException v1) {
            }
        }
        return;
    }

    private void saveDetermineIntentTask(android.os.Bundle p6)
    {
        p6.putBoolean("net.sourceforge.servestream.makingshortcut", this.mMakingShortcut);
        net.sourceforge.servestream.activity.URLListActivity$DetermineIntentAsyncTask v0 = this.mDetermineIntentTask;
        if ((v0 != null) && (v0.getStatus() != android.os.AsyncTask$Status.FINISHED)) {
            String v1 = this.mRequestedStream.getUri().toString();
            v0.cancel(1);
            try {
                this.removeDialog(1);
            } catch (int v2) {
            }
            if (v1 != null) {
                p6.putBoolean("net.sourceforge.servestream.inprogress", 1);
                p6.putString("net.sourceforge.servestream.stream", v1);
            }
            this.mDetermineIntentTask = 0;
        }
        return;
    }

    private void saveStream()
    {
        if ((this.mStreamdb != null) && (this.mStreamdb.findStream(this.mRequestedStream) == null)) {
            this.mStreamdb.saveStream(this.mRequestedStream);
        }
        return;
    }

    private void showUrlNotOpenedToast()
    {
        if (this.mActivityVisible) {
            android.widget.Toast.makeText(this, 2131361817, 0).show();
        }
        return;
    }

    private void updateList()
    {
        if (this.mPreferences.getBoolean("sortbyname", 0) != this.mSortedByName) {
            android.content.SharedPreferences$Editor v1 = this.mPreferences.edit();
            v1.putBoolean("sortbyname", this.mSortedByName);
            v1.commit();
        }
        new java.util.ArrayList();
        if (this.mStreamdb == null) {
            this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        }
        this.setListAdapter(new net.sourceforge.servestream.activity.URLListActivity$StreamAdapter(this, this, this.mStreamdb.getStreams(this.mSortedByName)));
        return;
    }

    public void onActivityResult(int p9, int p10, android.content.Intent p11)
    {
        if (p9 == 0) {
            if (p10 != -1) {
                // Both branches of the condition point to the same code.
                // if (p10 != 0) {
                // }
            } else {
                String v0 = p11.getStringExtra("SCAN_RESULT");
                String v2 = p11.getStringExtra("SCAN_RESULT_FORMAT");
                android.util.Log.v(net.sourceforge.servestream.activity.URLListActivity.TAG, v0.toString());
                android.util.Log.v(net.sourceforge.servestream.activity.URLListActivity.TAG, v2.toString());
                try {
                    this.mQuickconnect.setText(java.net.URLDecoder.decode(new net.sourceforge.servestream.dbutils.Stream(v0).getURL().toString(), "UTF-8"));
                } catch (java.io.UnsupportedEncodingException v1) {
                    this.showDialog(3);
                } catch (java.io.UnsupportedEncodingException v1) {
                    this.showDialog(3);
                }
            }
        }
        return;
    }

    public void onCreate(android.os.Bundle p11)
    {
        int v4_0 = 8;
        super.onCreate(p11);
        this.setContentView(2130903049);
        String v6_7 = new Object[2];
        v6_7[0] = this.getResources().getText(2131361792);
        v6_7[1] = this.getResources().getText(2131361895);
        this.setTitle(String.format("%s: %s", v6_7));
        this.setVolumeControlStream(3);
        this.mPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
        this.mMakingShortcut = "android.intent.action.CREATE_SHORTCUT".equals(this.getIntent().getAction());
        if (p11 != null) {
            this.mMakingShortcut = p11.getBoolean("net.sourceforge.servestream.makingshortcut");
        }
        int v3_21;
        this.mQuickconnect = ((android.widget.TextView) this.findViewById(2131623972));
        if (!this.mMakingShortcut) {
            v3_21 = 0;
        } else {
            v3_21 = 8;
        }
        this.mQuickconnect.setVisibility(v3_21);
        this.mQuickconnect.setOnKeyListener(new net.sourceforge.servestream.activity.URLListActivity$3(this));
        new net.sourceforge.servestream.utils.UpdateHelper(this);
        if ((this.getIntent().getType() == null) && ((this.getIntent().getData() == null) && (this.getIntent().getExtras() == null))) {
            int v2_0 = this.mPreferences.getInt("rateapplicationflag", 0);
            if (v2_0 != -1) {
                int v2_1 = (v2_0 + 1);
                android.content.SharedPreferences$Editor v0 = this.mPreferences.edit();
                v0.putInt("rateapplicationflag", v2_1);
                v0.commit();
                if (v2_1 == 5) {
                    this.showDialog(4);
                }
            }
        }
        this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        this.mSortedByName = this.mPreferences.getBoolean("sortbyname", 0);
        android.widget.ListView v1 = this.getListView();
        v1.setOnItemClickListener(new net.sourceforge.servestream.activity.URLListActivity$4(this));
        this.registerForContextMenu(v1);
        this.mGoButton = ((android.widget.Button) this.findViewById(2131623971));
        if (!this.mMakingShortcut) {
            v4_0 = 0;
        }
        this.mGoButton.setVisibility(v4_0);
        this.mGoButton.setOnClickListener(new net.sourceforge.servestream.activity.URLListActivity$5(this));
        this.mInflater = android.view.LayoutInflater.from(this);
        this.handleIntentData();
        return;
    }

    public void onCreateContextMenu(android.view.ContextMenu p9, android.view.View p10, android.view.ContextMenu$ContextMenuInfo p11)
    {
        if (!this.mMakingShortcut) {
            net.sourceforge.servestream.dbutils.Stream v5_1 = ((net.sourceforge.servestream.dbutils.Stream) this.getListView().getItemAtPosition(((android.widget.AdapterView$AdapterContextMenuInfo) p11).position));
            p9.setHeaderTitle(v5_1.getNickname());
            p9.add(2131361822).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.URLListActivity$12(this, v5_1));
            p9.add(2131361823).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.URLListActivity$13(this, v5_1));
            p9.add(2131361821).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.URLListActivity$14(this, v5_1));
            p9.add(2131361825).setOnMenuItemClickListener(new net.sourceforge.servestream.activity.URLListActivity$15(this, v5_1));
        }
        return;
    }

    protected android.app.Dialog onCreateDialog(int p9)
    {
        android.app.AlertDialog v0;
        switch (p9) {
            case 1:
                android.app.ProgressDialog v4_1 = new android.app.ProgressDialog(this);
                v4_1.setMessage(this.getString(2131361848));
                v4_1.setOnCancelListener(new net.sourceforge.servestream.activity.URLListActivity$6(this));
                v0 = v4_1;
                break;
            case 2:
                android.app.AlertDialog$Builder v1_5 = new android.app.AlertDialog$Builder(this);
                v1_5.setMessage(2131361808).setCancelable(1).setPositiveButton(2131361809, new net.sourceforge.servestream.activity.URLListActivity$8(this)).setNegativeButton(2131361810, new net.sourceforge.servestream.activity.URLListActivity$7(this));
                v0 = v1_5.create();
                break;
            case 3:
                android.app.AlertDialog$Builder v1_3 = new android.app.AlertDialog$Builder(this);
                v1_3.setMessage(2131361899).setCancelable(1).setPositiveButton(17039370, new net.sourceforge.servestream.activity.URLListActivity$9(this));
                v0 = v1_3.create();
                break;
            case 4:
                android.content.SharedPreferences$Editor v3 = this.mPreferences.edit();
                v3.putInt("rateapplicationflag", -1);
                v3.commit();
                android.app.AlertDialog$Builder v1_1 = new android.app.AlertDialog$Builder(this);
                v1_1.setMessage(2131361811).setCancelable(1).setPositiveButton(2131361812, new net.sourceforge.servestream.activity.URLListActivity$11(this)).setNegativeButton(2131361813, new net.sourceforge.servestream.activity.URLListActivity$10(this));
                v0 = v1_1.create();
                break;
            default:
                v0 = 0;
        }
        return v0;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p4)
    {
        if (!this.mMakingShortcut) {
            this.getMenuInflater().inflate(2131558404, p4);
        }
        return 1;
    }

    public void onNewIntent(android.content.Intent p1)
    {
        super.onNewIntent(p1);
        this.setIntent(p1);
        this.handleIntentData();
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p6)
    {
        android.content.Intent v2_0 = 1;
        switch (p6.getItemId()) {
            case 2131624001:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.SettingsActivity));
            case 2131624002:
            case 2131624003:
            case 2131624004:
            case 2131624005:
            default:
                v2_0 = 0;
                break;
            case 2131624006:
                this.mSortedByName = 1;
                this.updateList();
                break;
            case 2131624007:
                this.mSortedByName = 0;
                this.updateList();
                break;
            case 2131624008:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.HelpActivity));
                break;
            case 2131624009:
                this.startActivity(new android.content.Intent(this, net.sourceforge.servestream.activity.AlarmClockActivity));
                break;
            case 2131624010:
                try {
                    android.content.Intent v1_1 = new android.content.Intent("com.google.zxing.client.android.SCAN");
                    v1_1.setPackage("com.google.zxing.client.android");
                    v1_1.putExtra("SCAN_MODE", "QR_CODE_MODE");
                    this.startActivityForResult(v1_1, 0);
                } catch (android.content.ActivityNotFoundException v0) {
                    this.showDialog(2);
                }
                break;
        }
        return v2_0;
    }

    public void onPause()
    {
        super.onResume();
        this.mActivityVisible = 0;
        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu p5)
    {
        android.view.MenuItem v0_0 = 0;
        super.onPrepareOptionsMenu(p5);
        if (!this.mMakingShortcut) {
            boolean v2_2 = p5.getItem(0);
            if (!this.mSortedByName) {
                v0_0 = 1;
            }
            v2_2.setVisible(v0_0);
            p5.getItem(1).setVisible(this.mSortedByName);
        }
        return 1;
    }

    protected void onRestoreInstanceState(android.os.Bundle p1)
    {
        super.onRestoreInstanceState(p1);
        this.restoreDetermineIntentTask(p1);
        return;
    }

    public void onResume()
    {
        super.onResume();
        this.mActivityVisible = 1;
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle p1)
    {
        super.onSaveInstanceState(p1);
        this.saveDetermineIntentTask(p1);
        return;
    }

    public void onServiceConnected(android.content.ComponentName p1, android.os.IBinder p2)
    {
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p1)
    {
        this.finish();
        return;
    }

    public void onStart()
    {
        super.onStart();
        this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this);
        this.updateList();
        if (this.mStreamdb == null) {
            this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        }
        return;
    }

    public void onStop()
    {
        super.onStop();
        if (this.mStreamdb != null) {
            this.mStreamdb.close();
            this.mStreamdb = 0;
        }
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        return;
    }
}
package net.sourceforge.servestream.alarm;
final class Alarm$1 implements android.os.Parcelable$Creator {

    Alarm$1()
    {
        return;
    }

    public bridge synthetic Object createFromParcel(android.os.Parcel p2)
    {
        return this.createFromParcel(p2);
    }

    public net.sourceforge.servestream.alarm.Alarm createFromParcel(android.os.Parcel p2)
    {
        return new net.sourceforge.servestream.alarm.Alarm(p2);
    }

    public bridge synthetic Object[] newArray(int p2)
    {
        return this.newArray(p2);
    }

    public net.sourceforge.servestream.alarm.Alarm[] newArray(int p2)
    {
        net.sourceforge.servestream.alarm.Alarm[] v0 = new net.sourceforge.servestream.alarm.Alarm[p2];
        return v0;
    }
}
package net.sourceforge.servestream.alarm;
public class Alarm$Columns implements android.provider.BaseColumns {
    public static final int ALARM_ALERT_INDEX = 8;
    public static final int ALARM_DAYS_OF_WEEK_INDEX = 3;
    public static final int ALARM_ENABLED_INDEX = 5;
    public static final int ALARM_HOUR_INDEX = 1;
    public static final int ALARM_ID_INDEX = 0;
    public static final int ALARM_MESSAGE_INDEX = 7;
    public static final int ALARM_MINUTES_INDEX = 2;
    static final String[] ALARM_QUERY_COLUMNS = None;
    public static final String ALARM_TIME = "alarmtime";
    public static final int ALARM_TIME_INDEX = 4;
    public static final int ALARM_VIBRATE_INDEX = 6;
    public static final String ALERT = "alert";
    public static final android.net.Uri CONTENT_URI = None;
    public static final String DAYS_OF_WEEK = "daysofweek";
    public static final String DEFAULT_SORT_ORDER = "hour, minutes ASC";
    public static final String ENABLED = "enabled";
    public static final String HOUR = "hour";
    public static final String MESSAGE = "message";
    public static final String MINUTES = "minutes";
    public static final String VIBRATE = "vibrate";
    public static final String WHERE_ENABLED = "enabled=1";

    static Alarm$Columns()
    {
        net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI = android.net.Uri.parse("content://net.sourceforge.servestream/alarm");
        String[] v0_3 = new String[9];
        v0_3[0] = "_id";
        v0_3[1] = "hour";
        v0_3[2] = "minutes";
        v0_3[3] = "daysofweek";
        v0_3[4] = "alarmtime";
        v0_3[5] = "enabled";
        v0_3[6] = "vibrate";
        v0_3[7] = "message";
        v0_3[8] = "alert";
        net.sourceforge.servestream.alarm.Alarm$Columns.ALARM_QUERY_COLUMNS = v0_3;
        return;
    }

    public Alarm$Columns()
    {
        return;
    }
}
package net.sourceforge.servestream.alarm;
public final class Alarm$DaysOfWeek {
    private static int[] DAY_MAP;
    private int mDays;

    static Alarm$DaysOfWeek()
    {
        int[] v0_1 = new int[7];
        v0_1 = {2, 3, 4, 5, 6, 7, 1};
        net.sourceforge.servestream.alarm.Alarm$DaysOfWeek.DAY_MAP = v0_1;
        return;
    }

    Alarm$DaysOfWeek(int p1)
    {
        this.mDays = p1;
        return;
    }

    private boolean isSet(int p4)
    {
        int v0 = 1;
        if ((this.mDays & (1 << p4)) <= 0) {
            v0 = 0;
        }
        return v0;
    }

    public boolean[] getBooleanArray()
    {
        boolean[] v1 = new boolean[7];
        int v0 = 0;
        while (v0 < 7) {
            v1[v0] = this.isSet(v0);
            v0++;
        }
        return v1;
    }

    public int getCoded()
    {
        return this.mDays;
    }

    public int getNextAlarm(java.util.Calendar p6)
    {
        int v1;
        if (this.mDays != 0) {
            boolean v3_3 = p6.get(7);
            v1 = 0;
            while ((v1 < 7) && (!this.isSet(((((v3_3 + 5) % 7) + v1) % 7)))) {
                v1++;
            }
        } else {
            v1 = -1;
        }
        return v1;
    }

    public boolean isRepeatSet()
    {
        int v0_1;
        if (this.mDays == 0) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public void set(int p3, boolean p4)
    {
        if (!p4) {
            this.mDays = (this.mDays & ((1 << p3) ^ -1));
        } else {
            this.mDays = (this.mDays | (1 << p3));
        }
        return;
    }

    public void set(net.sourceforge.servestream.alarm.Alarm$DaysOfWeek p2)
    {
        this.mDays = p2.mDays;
        return;
    }

    public String toString(android.content.Context p10, boolean p11)
    {
        CharSequence v6_1;
        StringBuilder v5_1 = new StringBuilder();
        if (this.mDays != 0) {
            if (this.mDays != 127) {
                int v0 = 0;
                int v2 = this.mDays;
                while (v2 > 0) {
                    if ((v2 & 1) == 1) {
                        v0++;
                    }
                    v2 >>= 1;
                }
                String[] v1;
                java.text.DateFormatSymbols v3_1 = new java.text.DateFormatSymbols();
                if (v0 <= 1) {
                    v1 = v3_1.getWeekdays();
                } else {
                    v1 = v3_1.getShortWeekdays();
                }
                int v4 = 0;
                while (v4 < 7) {
                    if ((this.mDays & (1 << v4)) != 0) {
                        v5_1.append(v1[net.sourceforge.servestream.alarm.Alarm$DaysOfWeek.DAY_MAP[v4]]);
                        v0--;
                        if (v0 > 0) {
                            v5_1.append(p10.getText(2131361934));
                        }
                    }
                    v4++;
                }
                v6_1 = v5_1.toString();
            } else {
                v6_1 = p10.getText(2131361932).toString();
            }
        } else {
            if (!p11) {
                v6_1 = "";
            } else {
                v6_1 = p10.getText(2131361933).toString();
            }
        }
        return v6_1;
    }
}
package net.sourceforge.servestream.alarm;
public final class Alarm implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator CREATOR;
    private static final String TAG;
    public int alert;
    public net.sourceforge.servestream.alarm.Alarm$DaysOfWeek daysOfWeek;
    public boolean enabled;
    public int hour;
    public int id;
    public String label;
    public int minutes;
    public boolean silent;
    public long time;
    public boolean vibrate;

    static Alarm()
    {
        net.sourceforge.servestream.alarm.Alarm.TAG = net.sourceforge.servestream.alarm.Alarm.getName();
        net.sourceforge.servestream.alarm.Alarm.CREATOR = new net.sourceforge.servestream.alarm.Alarm$1();
        return;
    }

    public Alarm()
    {
        this.id = -1;
        java.util.Calendar v0 = java.util.Calendar.getInstance();
        v0.setTimeInMillis(System.currentTimeMillis());
        this.hour = v0.get(11);
        this.minutes = v0.get(12);
        this.vibrate = 1;
        this.daysOfWeek = new net.sourceforge.servestream.alarm.Alarm$DaysOfWeek(0);
        this.alert = 0;
        return;
    }

    public Alarm(android.database.Cursor p6)
    {
        String v0_0;
        String v2_0 = 0;
        this.id = p6.getInt(0);
        if (p6.getInt(5) != 1) {
            v0_0 = 0;
        } else {
            v0_0 = 1;
        }
        this.enabled = v0_0;
        this.hour = p6.getInt(1);
        this.minutes = p6.getInt(2);
        this.daysOfWeek = new net.sourceforge.servestream.alarm.Alarm$DaysOfWeek(p6.getInt(3));
        this.time = p6.getLong(4);
        if (p6.getInt(6) == 1) {
            v2_0 = 1;
        }
        this.vibrate = v2_0;
        this.label = p6.getString(7);
        this.alert = p6.getInt(8);
        if (this.alert == 0) {
            android.util.Log.v(net.sourceforge.servestream.alarm.Alarm.TAG, "Alarm is marked as silent");
            this.silent = 1;
        }
        return;
    }

    public Alarm(android.os.Parcel p6)
    {
        int v0_0;
        int v1 = 1;
        this.id = p6.readInt();
        if (p6.readInt() != 1) {
            v0_0 = 0;
        } else {
            v0_0 = 1;
        }
        int v0_6;
        this.enabled = v0_0;
        this.hour = p6.readInt();
        this.minutes = p6.readInt();
        this.daysOfWeek = new net.sourceforge.servestream.alarm.Alarm$DaysOfWeek(p6.readInt());
        this.time = p6.readLong();
        if (p6.readInt() != 1) {
            v0_6 = 0;
        } else {
            v0_6 = 1;
        }
        this.vibrate = v0_6;
        this.label = p6.readString();
        this.alert = p6.readInt();
        if (p6.readInt() != 1) {
            v1 = 0;
        }
        this.silent = v1;
        return;
    }

    public int describeContents()
    {
        return 0;
    }

    public String getLabelOrDefault(android.content.Context p2)
    {
        if ((this.label != null) && (this.label.length() != 0)) {
            String v0_3 = this.label;
        } else {
            v0_3 = p2.getString(2131361916);
        }
        return v0_3;
    }

    public void writeToParcel(android.os.Parcel p6, int p7)
    {
        boolean v0_10;
        int v1 = 1;
        p6.writeInt(this.id);
        if (!this.enabled) {
            v0_10 = 0;
        } else {
            v0_10 = 1;
        }
        boolean v0_5;
        p6.writeInt(v0_10);
        p6.writeInt(this.hour);
        p6.writeInt(this.minutes);
        p6.writeInt(this.daysOfWeek.getCoded());
        p6.writeLong(this.time);
        if (!this.vibrate) {
            v0_5 = 0;
        } else {
            v0_5 = 1;
        }
        p6.writeInt(v0_5);
        p6.writeString(this.label);
        p6.writeInt(this.alert);
        if (!this.silent) {
            v1 = 0;
        }
        p6.writeInt(v1);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlert$1 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.alarm.AlarmAlert this$0;

    AlarmAlert$1(net.sourceforge.servestream.alarm.AlarmAlert p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        net.sourceforge.servestream.alarm.AlarmAlert.access$000(this.this$0, ((android.app.KeyguardManager) p3.obj));
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlert$2 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.alarm.AlarmAlert this$0;

    AlarmAlert$2(net.sourceforge.servestream.alarm.AlarmAlert p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        net.sourceforge.servestream.alarm.AlarmAlert.access$000(this.this$0, ((android.app.KeyguardManager) p3.getSystemService("keyguard")));
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmAlertFullScreen extends android.app.Activity {
    private static final String DEFAULT_SNOOZE = "10";
    private static final String DEFAULT_VOLUME_BEHAVIOR = "2";
    private static final int FLAG_ALLOW_LOCK_WHILE_SCREEN_ON = 1;
    protected static final String SCREEN_OFF = "screen_off";
    private static final String TAG;
    protected net.sourceforge.servestream.alarm.Alarm mAlarm;
    private android.content.BroadcastReceiver mReceiver;
    private int mVolumeBehavior;

    static AlarmAlertFullScreen()
    {
        net.sourceforge.servestream.alarm.AlarmAlertFullScreen.TAG = net.sourceforge.servestream.alarm.AlarmAlertFullScreen.getName();
        return;
    }

    public AlarmAlertFullScreen()
    {
        this.mReceiver = new net.sourceforge.servestream.alarm.AlarmAlertFullScreen$1(this);
        return;
    }

    static synthetic void access$000(net.sourceforge.servestream.alarm.AlarmAlertFullScreen p0)
    {
        p0.snooze();
        return;
    }

    static synthetic void access$100(net.sourceforge.servestream.alarm.AlarmAlertFullScreen p0, boolean p1)
    {
        p0.dismiss(p1);
        return;
    }

    private void dismiss(boolean p4)
    {
        android.content.Intent v1_2;
        if (!p4) {
            v1_2 = "Alarm dismissed by user";
        } else {
            v1_2 = "Alarm killed";
        }
        android.util.Log.i(net.sourceforge.servestream.alarm.AlarmAlertFullScreen.TAG, v1_2);
        if (!p4) {
            this.getNotificationManager().cancel(this.mAlarm.id);
            this.stopService(new android.content.Intent("net.sourceforge.servestream.ALARM_ALERT"));
        }
        this.finish();
        return;
    }

    private android.app.NotificationManager getNotificationManager()
    {
        return ((android.app.NotificationManager) this.getSystemService("notification"));
    }

    private void setTitle()
    {
        ((android.widget.TextView) this.findViewById(2131623936)).setText(this.mAlarm.getLabelOrDefault(this));
        return;
    }

    private void snooze()
    {
        if (this.findViewById(2131623939).isEnabled()) {
            int v8 = Integer.parseInt(android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString("", "10"));
            long v9 = (System.currentTimeMillis() + ((long) (60000 * v8)));
            net.sourceforge.servestream.alarm.Alarms.saveSnoozeAlert(this, this.mAlarm.id, v9);
            java.util.Calendar v1 = java.util.Calendar.getInstance();
            v1.setTimeInMillis(v9);
            String v12_1 = new Object[1];
            v12_1[0] = this.mAlarm.getLabelOrDefault(this);
            String v4_1 = this.getString(2131361941, v12_1);
            android.content.Intent v2_1 = new android.content.Intent(this, net.sourceforge.servestream.alarm.AlarmReceiver);
            v2_1.setAction("net.sourceforge.servestream.CANCEL_SNOOZE");
            v2_1.putExtra("alarm_id", this.mAlarm.id);
            android.app.PendingIntent v0 = android.app.PendingIntent.getBroadcast(this, this.mAlarm.id, v2_1, 0);
            android.app.NotificationManager v6 = this.getNotificationManager();
            android.app.Notification v5_1 = new android.app.Notification(2130837617, v4_1, 0);
            String v12_7 = new Object[1];
            v12_7[0] = net.sourceforge.servestream.alarm.Alarms.formatTime(this, v1);
            v5_1.setLatestEventInfo(this, v4_1, this.getString(2131361942, v12_7), v0);
            v5_1.flags = (v5_1.flags | 18);
            v6.notify(this.mAlarm.id, v5_1);
            String v12_9 = new Object[1];
            v12_9[0] = Integer.valueOf(v8);
            String v3 = this.getString(2131361925, v12_9);
            android.util.Log.v(net.sourceforge.servestream.alarm.AlarmAlertFullScreen.TAG, v3);
            android.widget.Toast.makeText(this, v3, 1).show();
            this.stopService(new android.content.Intent("net.sourceforge.servestream.ALARM_ALERT"));
            this.finish();
        } else {
            this.dismiss(0);
        }
        return;
    }

    private void updateLayout()
    {
        this.setContentView(android.view.LayoutInflater.from(this).inflate(2130903040, 0));
        android.widget.Button v1_0 = ((android.widget.Button) this.findViewById(2131623939));
        v1_0.requestFocus();
        v1_0.setOnClickListener(new net.sourceforge.servestream.alarm.AlarmAlertFullScreen$2(this));
        this.findViewById(2131623940).setOnClickListener(new net.sourceforge.servestream.alarm.AlarmAlertFullScreen$3(this));
        this.setTitle();
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent p5)
    {
        int v0;
        boolean v1 = 1;
        if (p5.getAction() != 1) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        switch (p5.getKeyCode()) {
            case 24:
            case 25:
            case 27:
            case 80:
                if (v0 == 0) {
                } else {
                    switch (this.mVolumeBehavior) {
                        case 1:
                            this.snooze();
                            break;
                        case 2:
                            this.dismiss(0);
                            break;
                        default:
                    }
                }
                break;
            default:
                v1 = super.dispatchKeyEvent(p5);
        }
        return v1;
    }

    public void onBackPressed()
    {
        return;
    }

    protected void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        this.mAlarm = ((net.sourceforge.servestream.alarm.Alarm) this.getIntent().getParcelableExtra("intent.extra.alarm"));
        this.mVolumeBehavior = Integer.parseInt(android.preference.PreferenceManager.getDefaultSharedPreferences(this).getString("", "2"));
        this.requestWindowFeature(1);
        android.view.Window v2 = this.getWindow();
        v2.addFlags(4718592);
        if (!this.getIntent().getBooleanExtra("screen_off", 0)) {
            v2.addFlags(2097281);
        }
        this.updateLayout();
        android.content.IntentFilter v0_1 = new android.content.IntentFilter("net.sourceforge.servestream.ALARM_KILLED");
        v0_1.addAction("net.sourceforge.servestream.ALARM_SNOOZE");
        v0_1.addAction("net.sourceforge.servestream.ALARM_DISMISS");
        this.registerReceiver(this.mReceiver, v0_1);
        return;
    }

    public void onDestroy()
    {
        super.onDestroy();
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmAlertFullScreen.TAG, "AlarmAlert.onDestroy()");
        this.unregisterReceiver(this.mReceiver);
        return;
    }

    protected void onNewIntent(android.content.Intent p3)
    {
        super.onNewIntent(p3);
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmAlertFullScreen.TAG, "AlarmAlert.OnNewIntent()");
        this.mAlarm = ((net.sourceforge.servestream.alarm.Alarm) p3.getParcelableExtra("intent.extra.alarm"));
        this.setTitle();
        return;
    }

    protected void onResume()
    {
        super.onResume();
        if (net.sourceforge.servestream.alarm.Alarms.getAlarm(this.getContentResolver(), this.mAlarm.id) == null) {
            ((android.widget.Button) this.findViewById(2131623939)).setEnabled(0);
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmAlert extends net.sourceforge.servestream.alarm.AlarmAlertFullScreen {
    private static final String TAG;
    private final int MAX_KEYGUARD_CHECKS;
    private final android.os.Handler mHandler;
    private int mKeyguardRetryCount;
    private final android.content.BroadcastReceiver mScreenOffReceiver;

    static AlarmAlert()
    {
        net.sourceforge.servestream.alarm.AlarmAlert.TAG = net.sourceforge.servestream.alarm.AlarmAlert.getName();
        return;
    }

    public AlarmAlert()
    {
        this.MAX_KEYGUARD_CHECKS = 5;
        this.mHandler = new net.sourceforge.servestream.alarm.AlarmAlert$1(this);
        this.mScreenOffReceiver = new net.sourceforge.servestream.alarm.AlarmAlert$2(this);
        return;
    }

    static synthetic void access$000(net.sourceforge.servestream.alarm.AlarmAlert p0, android.app.KeyguardManager p1)
    {
        p0.handleScreenOff(p1);
        return;
    }

    private boolean checkRetryCount()
    {
        int v0_1;
        int v0_0 = this.mKeyguardRetryCount;
        this.mKeyguardRetryCount = (v0_0 + 1);
        if (v0_0 < 5) {
            v0_1 = 1;
        } else {
            android.util.Log.v(net.sourceforge.servestream.alarm.AlarmAlert.TAG, "Tried to read keyguard status too many times, bailing...");
            v0_1 = 0;
        }
        return v0_1;
    }

    private void handleScreenOff(android.app.KeyguardManager p6)
    {
        if ((p6.inKeyguardRestrictedInputMode()) || (!this.checkRetryCount())) {
            android.content.Intent v0_1 = new android.content.Intent(this, net.sourceforge.servestream.alarm.AlarmAlertFullScreen);
            v0_1.putExtra("intent.extra.alarm", this.mAlarm);
            v0_1.putExtra("screen_off", 1);
            this.startActivity(v0_1);
            this.finish();
        } else {
            if (this.checkRetryCount()) {
                this.mHandler.sendMessageDelayed(this.mHandler.obtainMessage(0, p6), 500);
            }
        }
        return;
    }

    public void onBackPressed()
    {
        this.finish();
        return;
    }

    protected void onCreate(android.os.Bundle p4)
    {
        super.onCreate(p4);
        this.registerReceiver(this.mScreenOffReceiver, new android.content.IntentFilter("android.intent.action.SCREEN_OFF"));
        return;
    }

    public void onDestroy()
    {
        super.onDestroy();
        this.unregisterReceiver(this.mScreenOffReceiver);
        this.mHandler.removeMessages(0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlertFullScreen$1 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.alarm.AlarmAlertFullScreen this$0;

    AlarmAlertFullScreen$1(net.sourceforge.servestream.alarm.AlarmAlertFullScreen p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p5, android.content.Intent p6)
    {
        String v0 = p6.getAction();
        if (!v0.equals("net.sourceforge.servestream.ALARM_SNOOZE")) {
            if (!v0.equals("net.sourceforge.servestream.ALARM_DISMISS")) {
                net.sourceforge.servestream.alarm.Alarm v1_1 = ((net.sourceforge.servestream.alarm.Alarm) p6.getParcelableExtra("intent.extra.alarm"));
                if ((v1_1 != null) && (this.this$0.mAlarm.id == v1_1.id)) {
                    net.sourceforge.servestream.alarm.AlarmAlertFullScreen.access$100(this.this$0, 1);
                }
            } else {
                net.sourceforge.servestream.alarm.AlarmAlertFullScreen.access$100(this.this$0, 0);
            }
        } else {
            net.sourceforge.servestream.alarm.AlarmAlertFullScreen.access$000(this.this$0);
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlertFullScreen$2 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmAlertFullScreen this$0;

    AlarmAlertFullScreen$2(net.sourceforge.servestream.alarm.AlarmAlertFullScreen p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p2)
    {
        net.sourceforge.servestream.alarm.AlarmAlertFullScreen.access$000(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlertFullScreen$3 implements android.view.View$OnClickListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmAlertFullScreen this$0;

    AlarmAlertFullScreen$3(net.sourceforge.servestream.alarm.AlarmAlertFullScreen p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        net.sourceforge.servestream.alarm.AlarmAlertFullScreen.access$100(this.this$0, 0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmAlertWakeLock {
    private static android.os.PowerManager$WakeLock sCpuWakeLock;

    AlarmAlertWakeLock()
    {
        return;
    }

    static void acquireCpuWakeLock(android.content.Context p3)
    {
        if (net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock == null) {
            net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock = ((android.os.PowerManager) p3.getSystemService("power")).newWakeLock(805306369, "ServeStream.AlarmClockActivity");
            net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock.acquire();
        }
        return;
    }

    static void releaseCpuLock()
    {
        if (net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock != null) {
            net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock.release();
            net.sourceforge.servestream.alarm.AlarmAlertWakeLock.sCpuWakeLock = 0;
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmKlaxon$1 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.alarm.AlarmKlaxon this$0;

    AlarmKlaxon$1(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        switch (p3.what) {
            case 1000:
                android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.access$000(), "*********** Alarm killer triggered ***********");
                net.sourceforge.servestream.alarm.AlarmKlaxon.access$100(this.this$0, ((net.sourceforge.servestream.alarm.Alarm) p3.obj));
                this.this$0.stopSelf();
                break;
            case 2000:
                net.sourceforge.servestream.alarm.AlarmKlaxon.access$200(this.this$0);
                break;
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmKlaxon$2 extends android.telephony.PhoneStateListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmKlaxon this$0;

    AlarmKlaxon$2(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onCallStateChanged(int p3, String p4)
    {
        if ((p3 != 0) && (p3 != net.sourceforge.servestream.alarm.AlarmKlaxon.access$300(this.this$0))) {
            net.sourceforge.servestream.alarm.AlarmKlaxon.access$100(this.this$0, net.sourceforge.servestream.alarm.AlarmKlaxon.access$400(this.this$0));
            this.this$0.stopSelf();
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmKlaxon$3 implements android.media.MediaPlayer$OnErrorListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmKlaxon this$0;

    AlarmKlaxon$3(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onError(android.media.MediaPlayer p3, int p4, int p5)
    {
        android.util.Log.e(net.sourceforge.servestream.alarm.AlarmKlaxon.access$000(), "Error occurred while playing audio.");
        p3.stop();
        p3.release();
        net.sourceforge.servestream.alarm.AlarmKlaxon.access$502(this.this$0, 0);
        return 1;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmKlaxon$4 implements android.media.MediaPlayer$OnPreparedListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmKlaxon this$0;

    AlarmKlaxon$4(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onPrepared(android.media.MediaPlayer p2)
    {
        net.sourceforge.servestream.alarm.AlarmKlaxon.access$500(this.this$0).start();
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmKlaxon$AlarmAsyncTask extends android.os.AsyncTask {
    final synthetic net.sourceforge.servestream.alarm.AlarmKlaxon this$0;

    public AlarmKlaxon$AlarmAsyncTask(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        this.this$0 = p1;
        return;
    }

    private boolean handleURL(net.sourceforge.servestream.dbutils.Stream p12)
    {
        net.sourceforge.servestream.alarm.AlarmKlaxon v7_0 = 0;
        String v0 = 0;
        int v4 = 0;
        try {
            net.sourceforge.servestream.utils.URLUtils v6_1 = new net.sourceforge.servestream.utils.URLUtils(p12.getURL());
            try {
                android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.access$000(), new StringBuilder().append("URI is: ").append(p12.getURL()).toString());
                v7_0 = v6_1.getResponseCode();
            } catch (Exception v2) {
                v2.printStackTrace();
                return v7_0;
            }
            if (v7_0 == 200) {
                v0 = v6_1.getContentType();
            }
            if ((v0 != null) && (!v0.contains("text/html"))) {
                try {
                    long[] v3 = net.sourceforge.servestream.utils.MusicUtils.getFilesInPlaylist(this.this$0, p12.getURL(), v0);
                } catch (java.net.MalformedURLException v1) {
                    v1.printStackTrace();
                }
                if ((v3 != null) && (v3.length > 0)) {
                    net.sourceforge.servestream.utils.MusicUtils.playAll(this.this$0, v3, 0, 0);
                    v4 = 1;
                }
            }
            v7_0 = v4;
            return v7_0;
        } catch (Exception v2) {
        }
    }

    protected varargs Boolean doInBackground(String[] p5)
    {
        try {
            net.sourceforge.servestream.dbutils.Stream v1 = new net.sourceforge.servestream.dbutils.Stream(p5[0]);
        } catch (java.net.MalformedURLException v0) {
            v0.printStackTrace();
        }
        return Boolean.valueOf(this.handleURL(v1));
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((String[]) p2));
    }

    protected void onPostExecute(Boolean p3)
    {
        if (!p3.booleanValue()) {
            net.sourceforge.servestream.alarm.AlarmKlaxon.access$600(this.this$0).sendEmptyMessage(2000);
        }
        return;
    }

    protected bridge synthetic void onPostExecute(Object p1)
    {
        this.onPostExecute(((Boolean) p1));
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmKlaxon extends android.app.Service implements android.content.ServiceConnection {
    private static final int ALARM_TIMEOUT_SECONDS = 1200;
    private static final int FALLBACK = 2000;
    private static final float IN_CALL_VOLUME = 62;
    private static final int KILLER = 1000;
    private static final String TAG;
    private static final long[] sVibratePattern;
    private net.sourceforge.servestream.alarm.Alarm mAlarm;
    private net.sourceforge.servestream.alarm.Alarm mCurrentAlarm;
    private android.os.Handler mHandler;
    private int mInitialCallState;
    private android.media.MediaPlayer mMediaPlayer;
    private android.telephony.PhoneStateListener mPhoneStateListener;
    private boolean mPlaying;
    private long mStartTime;
    private android.telephony.TelephonyManager mTelephonyManager;
    private net.sourceforge.servestream.utils.MusicUtils$ServiceToken mToken;
    private android.os.Vibrator mVibrator;

    static AlarmKlaxon()
    {
        net.sourceforge.servestream.alarm.AlarmKlaxon.TAG = net.sourceforge.servestream.alarm.AlarmKlaxon.getName();
        long[] v0_3 = new long[2];
        v0_3 = {2.47e-321, 2.47e-321};
        net.sourceforge.servestream.alarm.AlarmKlaxon.sVibratePattern = v0_3;
        return;
    }

    public AlarmKlaxon()
    {
        this.mPlaying = 0;
        this.mHandler = new net.sourceforge.servestream.alarm.AlarmKlaxon$1(this);
        this.mPhoneStateListener = new net.sourceforge.servestream.alarm.AlarmKlaxon$2(this);
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.alarm.AlarmKlaxon.TAG;
    }

    static synthetic void access$100(net.sourceforge.servestream.alarm.AlarmKlaxon p0, net.sourceforge.servestream.alarm.Alarm p1)
    {
        p0.sendKillBroadcast(p1);
        return;
    }

    static synthetic void access$200(net.sourceforge.servestream.alarm.AlarmKlaxon p0)
    {
        p0.useFallbackSound();
        return;
    }

    static synthetic int access$300(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        return p1.mInitialCallState;
    }

    static synthetic net.sourceforge.servestream.alarm.Alarm access$400(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        return p1.mCurrentAlarm;
    }

    static synthetic android.media.MediaPlayer access$500(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        return p1.mMediaPlayer;
    }

    static synthetic android.media.MediaPlayer access$502(net.sourceforge.servestream.alarm.AlarmKlaxon p0, android.media.MediaPlayer p1)
    {
        p0.mMediaPlayer = p1;
        return p1;
    }

    static synthetic android.os.Handler access$600(net.sourceforge.servestream.alarm.AlarmKlaxon p1)
    {
        return p1.mHandler;
    }

    private void disableKiller()
    {
        this.mHandler.removeMessages(1000);
        return;
    }

    private void enableKiller(net.sourceforge.servestream.alarm.Alarm p5)
    {
        this.mHandler.sendMessageDelayed(this.mHandler.obtainMessage(1000, p5), 1200000);
        return;
    }

    private void play(net.sourceforge.servestream.alarm.Alarm p11)
    {
        this.stop();
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, new StringBuilder().append("AlarmKlaxon.play() ").append(p11.id).append(" alert ").append(p11.alert).toString());
        if (!p11.silent) {
            net.sourceforge.servestream.dbutils.StreamDatabase v3_1 = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
            net.sourceforge.servestream.dbutils.Stream v2 = v3_1.findStream(p11.alert);
            v3_1.close();
            android.net.Uri v0 = 0;
            if (v2 != null) {
                v0 = v2.getUri();
            }
            if (v0 == null) {
                v0 = android.media.RingtoneManager.getDefaultUri(4);
                android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, new StringBuilder().append("Using default alarm: ").append(v0.toString()).toString());
            }
            this.mMediaPlayer = new android.media.MediaPlayer();
            this.mMediaPlayer.setOnErrorListener(new net.sourceforge.servestream.alarm.AlarmKlaxon$3(this));
            this.mMediaPlayer.setOnPreparedListener(new net.sourceforge.servestream.alarm.AlarmKlaxon$4(this));
            try {
                if (this.mTelephonyManager.getCallState() == 0) {
                    net.sourceforge.servestream.alarm.AlarmKlaxon$AlarmAsyncTask v4_13 = new net.sourceforge.servestream.alarm.AlarmKlaxon$AlarmAsyncTask(this);
                    String[] v5_16 = new String[1];
                    v5_16[0] = v0.toString();
                    v4_13.execute(v5_16);
                } else {
                    android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, "Using the in-call alarm");
                    this.mMediaPlayer.setVolume(1040187392, 1040187392);
                    this.setDataSourceFromResource(this.getResources(), this.mMediaPlayer, 2131099649);
                    this.startAlarm(this.mMediaPlayer);
                }
            } catch (Exception v1) {
                this.useFallbackSound();
            }
        }
        if (!p11.vibrate) {
            this.mVibrator.cancel();
        } else {
            this.mVibrator.vibrate(net.sourceforge.servestream.alarm.AlarmKlaxon.sVibratePattern, 0);
        }
        this.enableKiller(p11);
        this.mPlaying = 1;
        this.mStartTime = System.currentTimeMillis();
        return;
    }

    private void sendKillBroadcast(net.sourceforge.servestream.alarm.Alarm p9)
    {
        int v3 = ((int) Math.round((((double) (System.currentTimeMillis() - this.mStartTime)) / 60000.0)));
        android.content.Intent v0_1 = new android.content.Intent("net.sourceforge.servestream.ALARM_KILLED");
        v0_1.putExtra("intent.extra.alarm", p9);
        v0_1.putExtra("net.sourceforge.servestream.ALARM_KILLED_TIMEOUT", v3);
        this.sendBroadcast(v0_1);
        return;
    }

    private void setDataSourceFromResource(android.content.res.Resources p8, android.media.MediaPlayer p9, int p10)
    {
        android.content.res.AssetFileDescriptor v6 = p8.openRawResourceFd(p10);
        if (v6 != null) {
            p9.setDataSource(v6.getFileDescriptor(), v6.getStartOffset(), v6.getLength());
            v6.close();
        }
        return;
    }

    private void startAlarm(android.media.MediaPlayer p4)
    {
        if (((android.media.AudioManager) this.getSystemService("audio")).getStreamVolume(4) != 0) {
            p4.setAudioStreamType(4);
            p4.setLooping(1);
            p4.prepareAsync();
        }
        return;
    }

    private void useFallbackSound()
    {
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, "Using the fallback ringtone");
        try {
            this.mMediaPlayer.reset();
            this.setDataSourceFromResource(this.getResources(), this.mMediaPlayer, 2131099648);
            this.startAlarm(this.mMediaPlayer);
        } catch (Exception v0) {
            android.util.Log.e(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, "Failed to play fallback ringtone", v0);
        }
        return;
    }

    public android.os.IBinder onBind(android.content.Intent p2)
    {
        return 0;
    }

    public void onCreate()
    {
        this.mVibrator = ((android.os.Vibrator) this.getSystemService("vibrator"));
        this.mTelephonyManager = ((android.telephony.TelephonyManager) this.getSystemService("phone"));
        this.mTelephonyManager.listen(this.mPhoneStateListener, 32);
        net.sourceforge.servestream.alarm.AlarmAlertWakeLock.acquireCpuWakeLock(this);
        return;
    }

    public void onDestroy()
    {
        this.stop();
        this.mTelephonyManager.listen(this.mPhoneStateListener, 0);
        net.sourceforge.servestream.alarm.AlarmAlertWakeLock.releaseCpuLock();
        net.sourceforge.servestream.utils.MusicUtils.unbindFromService(this.mToken);
        return;
    }

    public void onServiceConnected(android.content.ComponentName p2, android.os.IBinder p3)
    {
        this.play(this.mAlarm);
        this.mCurrentAlarm = this.mAlarm;
        this.mInitialCallState = this.mTelephonyManager.getCallState();
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p1)
    {
        return;
    }

    public int onStartCommand(android.content.Intent p5, int p6, int p7)
    {
        int v1_0 = 2;
        if (p5 != null) {
            net.sourceforge.servestream.alarm.Alarm v0_1 = ((net.sourceforge.servestream.alarm.Alarm) p5.getParcelableExtra("intent.extra.alarm"));
            if (v0_1 != null) {
                if (this.mCurrentAlarm != null) {
                    this.sendKillBroadcast(this.mCurrentAlarm);
                }
                this.mAlarm = v0_1;
                this.mToken = net.sourceforge.servestream.utils.MusicUtils.bindToService(this, this);
                v1_0 = 1;
            } else {
                android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, "AlarmKlaxon failed to parse the alarm from the intent");
                this.stopSelf();
            }
        } else {
            this.stopSelf();
        }
        return v1_0;
    }

    public void stop()
    {
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmKlaxon.TAG, "AlarmKlaxon.stop()");
        if (this.mPlaying) {
            this.mPlaying = 0;
            this.sendBroadcast(new android.content.Intent("net.sourceforge.servestream.ALARM_DONE"));
            if (this.mMediaPlayer != null) {
                this.mMediaPlayer.stop();
                this.mMediaPlayer.release();
                this.mMediaPlayer = 0;
            }
            try {
                if (net.sourceforge.servestream.utils.MusicUtils.sService.isPlaying()) {
                    net.sourceforge.servestream.utils.MusicUtils.sService.pause();
                }
            } catch (Exception v1) {
                v1.printStackTrace();
            }
            this.mVibrator.cancel();
        }
        this.disableKiller();
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class AlarmPreference$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.alarm.AlarmPreference this$0;

    AlarmPreference$1(net.sourceforge.servestream.alarm.AlarmPreference p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p2, int p3)
    {
        net.sourceforge.servestream.alarm.AlarmPreference.access$002(this.this$0, p3);
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmPreference extends android.preference.ListPreference {
    private int mId;
    private int[] mIds;
    private int mNewId;
    protected net.sourceforge.servestream.dbutils.StreamDatabase mStreamdb;

    public AlarmPreference(android.content.Context p10, android.util.AttributeSet p11)
    {
        super(p10, p11);
        super.mId = 0;
        super.mNewId = -1;
        super.mStreamdb = 0;
        super.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(super.getContext());
        java.util.ArrayList v3 = super.mStreamdb.getStreams();
        super.mStreamdb.close();
        String[] v0 = new String[(v3.size() + 1)];
        String[] v1 = new String[(v3.size() + 1)];
        int v4_9 = new int[(v3.size() + 1)];
        super.mIds = v4_9;
        v0[0] = super.getContext().getString(2131361939);
        v1[0] = String.valueOf("0");
        super.mIds[0] = 0;
        int v2 = 0;
        while (v2 < v3.size()) {
            v0[(v2 + 1)] = ((net.sourceforge.servestream.dbutils.Stream) v3.get(v2)).getNickname();
            v1[(v2 + 1)] = String.valueOf((v2 + 1));
            super.mIds[(v2 + 1)] = ((int) ((net.sourceforge.servestream.dbutils.Stream) v3.get(v2)).getId());
            v2++;
        }
        super.setEntries(v0);
        super.setEntryValues(v1);
        return;
    }

    static synthetic int access$002(net.sourceforge.servestream.alarm.AlarmPreference p0, int p1)
    {
        p0.mNewId = p1;
        return p1;
    }

    public int getAlertId()
    {
        return this.mIds[this.mId];
    }

    protected void onDialogClosed(boolean p3)
    {
        CharSequence[] v0 = this.getEntries();
        if (p3) {
            this.mId = this.mNewId;
            this.setSummary(v0[this.mId]);
            this.callChangeListener(Integer.valueOf(this.mId));
        }
        return;
    }

    protected void onPrepareDialogBuilder(android.app.AlertDialog$Builder p4)
    {
        p4.setSingleChoiceItems(this.getEntries(), this.mId, new net.sourceforge.servestream.alarm.AlarmPreference$1(this));
        return;
    }

    public void setAlertId(int p4)
    {
        CharSequence[] v0 = this.getEntries();
        int v1 = 0;
        while (v1 < this.mIds.length) {
            if (this.mIds[v1] == p4) {
                this.mId = v1;
                this.mNewId = v1;
                this.setSummary(v0[this.mId]);
            }
            v1++;
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper {
    public static final String DATABASE_NAME = "alarms.db";
    private static final int DATABASE_VERSION = 5;

    public AlarmProvider$DatabaseHelper(android.content.Context p4)
    {
        super(p4, "alarms.db", 0, 5);
        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase p4)
    {
        p4.execSQL("CREATE TABLE alarms (_id INTEGER PRIMARY KEY,hour INTEGER, minutes INTEGER, daysofweek INTEGER, alarmtime INTEGER, enabled INTEGER, vibrate INTEGER, message TEXT, alert INTEGER);");
        p4.execSQL(new StringBuilder().append("INSERT INTO alarms (hour, minutes, daysofweek, alarmtime, enabled, vibrate, message, alert) VALUES ").append("(8, 30, 31, 0, 0, 1, \'\', 0);").toString());
        p4.execSQL(new StringBuilder().append("INSERT INTO alarms (hour, minutes, daysofweek, alarmtime, enabled, vibrate, message, alert) VALUES ").append("(9, 00, 96, 0, 0, 1, \'\', 0);").toString());
        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase p4, int p5, int p6)
    {
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmProvider.access$000(), new StringBuilder().append("Upgrading alarms database from version ").append(p5).append(" to ").append(p6).append(", which will destroy all old data").toString());
        p4.execSQL("DROP TABLE IF EXISTS alarms");
        this.onCreate(p4);
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmProvider extends android.content.ContentProvider {
    private static final int ALARMS = 1;
    private static final int ALARMS_ID = 2;
    private static final String TAG;
    private static final android.content.UriMatcher sURLMatcher;
    private android.database.sqlite.SQLiteOpenHelper mOpenHelper;

    static AlarmProvider()
    {
        net.sourceforge.servestream.alarm.AlarmProvider.TAG = net.sourceforge.servestream.alarm.AlarmProvider.getName();
        net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher = new android.content.UriMatcher(-1);
        net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.addURI("net.sourceforge.servestream", "alarm", 1);
        net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.addURI("net.sourceforge.servestream", "alarm/#", 2);
        return;
    }

    public AlarmProvider()
    {
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.alarm.AlarmProvider.TAG;
    }

    public int delete(android.net.Uri p7, String p8, String[] p9)
    {
        int v0;
        android.database.sqlite.SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
        switch (net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.match(p7)) {
            case 1:
                v0 = v1.delete("alarms", p8, p9);
                break;
            case 2:
                String v8_1;
                String v2_1 = ((String) p7.getPathSegments().get(1));
                Long.parseLong(v2_1);
                if (!android.text.TextUtils.isEmpty(p8)) {
                    v8_1 = new StringBuilder().append("_id=").append(v2_1).append(" AND (").append(p8).append(")").toString();
                } else {
                    v8_1 = new StringBuilder().append("_id=").append(v2_1).toString();
                }
                v0 = v1.delete("alarms", v8_1, p9);
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Cannot delete from URL: ").append(p7).toString());
        }
        this.getContext().getContentResolver().notifyChange(p7, 0);
        return v0;
    }

    public String getType(android.net.Uri p4)
    {
        String v1_1;
        switch (net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.match(p4)) {
            case 1:
                v1_1 = "vnd.android.cursor.dir/alarms";
                break;
            case 2:
                v1_1 = "vnd.android.cursor.item/alarms";
                break;
            default:
                throw new IllegalArgumentException("Unknown URL");
        }
        return v1_1;
    }

    public android.net.Uri insert(android.net.Uri p9, android.content.ContentValues p10)
    {
        if (net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.match(p9) == 1) {
            long v2 = this.mOpenHelper.getWritableDatabase().insert("alarms", "message", new android.content.ContentValues(p10));
            if (v2 >= 0) {
                android.util.Log.v(net.sourceforge.servestream.alarm.AlarmProvider.TAG, new StringBuilder().append("Added alarm rowId = ").append(v2).toString());
                android.net.Uri v1 = android.content.ContentUris.withAppendedId(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, v2);
                this.getContext().getContentResolver().notifyChange(v1, 0);
                return v1;
            } else {
                throw new android.database.SQLException(new StringBuilder().append("Failed to insert row into ").append(p9).toString());
            }
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Cannot insert into URL: ").append(p9).toString());
        }
    }

    public boolean onCreate()
    {
        this.mOpenHelper = new net.sourceforge.servestream.alarm.AlarmProvider$DatabaseHelper(this.getContext());
        return 1;
    }

    public android.database.Cursor query(android.net.Uri p11, String[] p12, String p13, String[] p14, String p15)
    {
        android.database.sqlite.SQLiteQueryBuilder v0_1 = new android.database.sqlite.SQLiteQueryBuilder();
        switch (net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.match(p11)) {
            case 1:
                v0_1.setTables("alarms");
                break;
            case 2:
                v0_1.setTables("alarms");
                v0_1.appendWhere("_id=");
                v0_1.appendWhere(((CharSequence) p11.getPathSegments().get(1)));
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unknown URL ").append(p11).toString());
        }
        android.database.Cursor v9 = v0_1.query(this.mOpenHelper.getReadableDatabase(), p12, p13, p14, 0, 0, p15);
        if (v9 != null) {
            v9.setNotificationUri(this.getContext().getContentResolver(), p11);
        } else {
            android.util.Log.v(net.sourceforge.servestream.alarm.AlarmProvider.TAG, "Alarms.query: failed");
        }
        return v9;
    }

    public int update(android.net.Uri p11, android.content.ContentValues p12, String p13, String[] p14)
    {
        int v0;
        long v3 = 0;
        int v2 = net.sourceforge.servestream.alarm.AlarmProvider.sURLMatcher.match(p11);
        android.database.sqlite.SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
        switch (v2) {
            case 1:
                android.content.ContentValues v12_2 = new android.content.ContentValues();
                v12_2.put("alert", Integer.valueOf(0));
                v0 = v1.update("alarms", v12_2, "alert = ?", p14);
                break;
            case 2:
                v3 = Long.parseLong(((String) p11.getPathSegments().get(1)));
                v0 = v1.update("alarms", p12, new StringBuilder().append("_id=").append(v3).toString(), 0);
                break;
            default:
                throw new UnsupportedOperationException(new StringBuilder().append("Cannot update URL: ").append(p11).toString());
        }
        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmProvider.TAG, new StringBuilder().append("*** notifyChange() rowId: ").append(v3).append(" url ").append(p11).toString());
        this.getContext().getContentResolver().notifyChange(p11, 0);
        return v0;
    }
}
package net.sourceforge.servestream.alarm;
public class AlarmReceiver extends android.content.BroadcastReceiver {
    private static final int STALE_WINDOW = 1800000;
    private static final String TAG;

    static AlarmReceiver()
    {
        net.sourceforge.servestream.alarm.AlarmReceiver.TAG = net.sourceforge.servestream.alarm.AlarmReceiver.getName();
        return;
    }

    public AlarmReceiver()
    {
        return;
    }

    private android.app.NotificationManager getNotificationManager(android.content.Context p2)
    {
        return ((android.app.NotificationManager) p2.getSystemService("notification"));
    }

    private void updateNotification(android.content.Context p10, net.sourceforge.servestream.alarm.Alarm p11, int p12)
    {
        android.app.NotificationManager v3 = this.getNotificationManager(p10);
        if (p11 != null) {
            android.content.Intent v4_1 = new android.content.Intent(p10, net.sourceforge.servestream.activity.SetAlarmActivity);
            v4_1.putExtra("alarm_id", p11.id);
            android.app.PendingIntent v0 = android.app.PendingIntent.getActivity(p10, p11.id, v4_1, 0);
            String v1 = p11.getLabelOrDefault(p10);
            android.app.Notification v2_1 = new android.app.Notification(2130837617, v1, p11.time);
            Object[] v6_2 = new Object[1];
            v6_2[0] = Integer.valueOf(p12);
            v2_1.setLatestEventInfo(p10, v1, p10.getString(2131361923, v6_2), v0);
            v2_1.flags = (v2_1.flags | 16);
            v3.cancel(p11.id);
            v3.notify(p11.id, v2_1);
        } else {
            android.util.Log.v(net.sourceforge.servestream.alarm.AlarmReceiver.TAG, "Cannot update notification for killer callback");
        }
        return;
    }

    public void onReceive(android.content.Context p24, android.content.Intent p25)
    {
        if (!"net.sourceforge.servestream.ALARM_KILLED".equals(p25.getAction())) {
            if (!"net.sourceforge.servestream.CANCEL_SNOOZE".equals(p25.getAction())) {
                if ("net.sourceforge.servestream.ALARM_ALERT".equals(p25.getAction())) {
                    net.sourceforge.servestream.alarm.Alarm v4_0 = 0;
                    byte[] v8 = p25.getByteArrayExtra("intent.extra.alarm_raw");
                    if (v8 != null) {
                        android.os.Parcel v9 = android.os.Parcel.obtain();
                        v9.unmarshall(v8, 0, v8.length);
                        v9.setDataPosition(0);
                        v4_0 = ((net.sourceforge.servestream.alarm.Alarm) net.sourceforge.servestream.alarm.Alarm.CREATOR.createFromParcel(v9));
                    }
                    if (v4_0 != null) {
                        net.sourceforge.servestream.alarm.Alarms.disableSnoozeAlert(p24, v4_0.id);
                        if (v4_0.daysOfWeek.isRepeatSet()) {
                            net.sourceforge.servestream.alarm.Alarms.setNextAlert(p24);
                        } else {
                            net.sourceforge.servestream.alarm.Alarms.enableAlarm(p24, v4_0.id, 0);
                        }
                        long v15 = System.currentTimeMillis();
                        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmReceiver.TAG, new StringBuilder().append("Recevied alarm set for ").append(v4_0.time).toString());
                        if (v15 <= (v4_0.time + 1800000)) {
                            net.sourceforge.servestream.alarm.AlarmAlertWakeLock.acquireCpuWakeLock(p24);
                            p24.sendBroadcast(new android.content.Intent("android.intent.action.CLOSE_SYSTEM_DIALOGS"));
                            Class v6 = net.sourceforge.servestream.alarm.AlarmAlert;
                            if (((android.app.KeyguardManager) p24.getSystemService("keyguard")).inKeyguardRestrictedInputMode()) {
                                v6 = net.sourceforge.servestream.alarm.AlarmAlertFullScreen;
                            }
                            android.content.Intent v18_0 = new android.content.Intent("net.sourceforge.servestream.ALARM_ALERT");
                            v18_0.putExtra("intent.extra.alarm", v4_0);
                            p24.startService(v18_0);
                            android.content.Intent v14_1 = new android.content.Intent(p24, net.sourceforge.servestream.alarm.AlarmAlert);
                            v14_1.putExtra("intent.extra.alarm", v4_0);
                            android.app.PendingIntent v17 = android.app.PendingIntent.getActivity(p24, v4_0.id, v14_1, 0);
                            String v11 = v4_0.getLabelOrDefault(p24);
                            android.app.Notification v12_1 = new android.app.Notification(2130837617, v11, v4_0.time);
                            v12_1.setLatestEventInfo(p24, v11, p24.getString(2131361940), v17);
                            v12_1.flags = (v12_1.flags | 3);
                            v12_1.defaults = (v12_1.defaults | 4);
                            android.content.Intent v5_1 = new android.content.Intent(p24, v6);
                            v5_1.putExtra("intent.extra.alarm", v4_0);
                            v5_1.setFlags(268697600);
                            v12_1.contentIntent = android.app.PendingIntent.getActivity(p24, v4_0.id, v5_1, 0);
                            this.getNotificationManager(p24).notify(v4_0.id, v12_1);
                        } else {
                            android.util.Log.v(net.sourceforge.servestream.alarm.AlarmReceiver.TAG, "Ignoring stale alarm");
                        }
                    } else {
                        android.util.Log.v(net.sourceforge.servestream.alarm.AlarmReceiver.TAG, "Failed to parse the alarm from the intent");
                        net.sourceforge.servestream.alarm.Alarms.setNextAlert(p24);
                    }
                }
            } else {
                net.sourceforge.servestream.alarm.Alarms.saveSnoozeAlert(p24, -1, -1);
            }
        } else {
            this.updateNotification(p24, ((net.sourceforge.servestream.alarm.Alarm) p25.getParcelableExtra("intent.extra.alarm")), p25.getIntExtra("net.sourceforge.servestream.ALARM_KILLED_TIMEOUT", -1));
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class Alarms {
    public static final String ALARM_ALERT_ACTION = "net.sourceforge.servestream.ALARM_ALERT";
    public static final int ALARM_ALERT_SILENT = 0;
    public static final String ALARM_DISMISS_ACTION = "net.sourceforge.servestream.ALARM_DISMISS";
    public static final String ALARM_DONE_ACTION = "net.sourceforge.servestream.ALARM_DONE";
    public static final String ALARM_ID = "alarm_id";
    public static final String ALARM_INTENT_EXTRA = "intent.extra.alarm";
    public static final String ALARM_KILLED = "net.sourceforge.servestream.ALARM_KILLED";
    public static final String ALARM_KILLED_TIMEOUT = "net.sourceforge.servestream.ALARM_KILLED_TIMEOUT";
    public static final String ALARM_RAW_DATA = "intent.extra.alarm_raw";
    public static final String ALARM_SNOOZE_ACTION = "net.sourceforge.servestream.ALARM_SNOOZE";
    public static final String CANCEL_SNOOZE = "net.sourceforge.servestream.CANCEL_SNOOZE";
    private static final String DM12 = "E h:mm aa";
    private static final String DM24 = "E k:mm";
    private static final String M12 = "h:mm aa";
    static final String M24 = "kk:mm";
    static final String PREF_SNOOZE_ID = "snooze_id";
    static final String PREF_SNOOZE_TIME = "snooze_time";
    private static final String TAG;

    static Alarms()
    {
        net.sourceforge.servestream.alarm.Alarms.TAG = net.sourceforge.servestream.alarm.Alarms.getName();
        return;
    }

    public Alarms()
    {
        return;
    }

    public static long addAlarm(android.content.Context p6, net.sourceforge.servestream.alarm.Alarm p7)
    {
        p7.id = ((int) android.content.ContentUris.parseId(p6.getContentResolver().insert(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, net.sourceforge.servestream.alarm.Alarms.createContentValues(p7))));
        long v0 = net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p7);
        if (p7.enabled) {
            net.sourceforge.servestream.alarm.Alarms.clearSnoozeIfNeeded(p6, v0);
        }
        net.sourceforge.servestream.alarm.Alarms.setNextAlert(p6);
        return v0;
    }

    private static long calculateAlarm(net.sourceforge.servestream.alarm.Alarm p3)
    {
        return net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p3.hour, p3.minutes, p3.daysOfWeek).getTimeInMillis();
    }

    public static java.util.Calendar calculateAlarm(int p9, int p10, net.sourceforge.servestream.alarm.Alarm$DaysOfWeek p11)
    {
        java.util.Calendar v1 = java.util.Calendar.getInstance();
        v1.setTimeInMillis(System.currentTimeMillis());
        int v2 = v1.get(11);
        int v3 = v1.get(12);
        if ((p9 < v2) || ((p9 == v2) && (p10 <= v3))) {
            v1.add(6, 1);
        }
        v1.set(11, p9);
        v1.set(12, p10);
        v1.set(13, 0);
        v1.set(14, 0);
        int v0 = p11.getNextAlarm(v1);
        if (v0 > 0) {
            v1.add(7, v0);
        }
        return v1;
    }

    public static net.sourceforge.servestream.alarm.Alarm calculateNextAlert(android.content.Context p11)
    {
        net.sourceforge.servestream.alarm.Alarm v1 = 0;
        long v3 = nan;
        long v5 = System.currentTimeMillis();
        android.database.Cursor v2 = net.sourceforge.servestream.alarm.Alarms.getFilteredAlarmsCursor(p11.getContentResolver());
        if (v2 != null) {
            if (v2.moveToFirst()) {
                do {
                    net.sourceforge.servestream.alarm.Alarm v0_1 = new net.sourceforge.servestream.alarm.Alarm(v2);
                    if (v0_1.time != 0) {
                        if (v0_1.time >= v5) {
                            if (v0_1.time < v3) {
                                v3 = v0_1.time;
                                v1 = v0_1;
                            }
                        } else {
                            android.util.Log.v(net.sourceforge.servestream.alarm.Alarms.TAG, new StringBuilder().append("Disabling expired alarm set for ").append(v0_1.time).toString());
                            net.sourceforge.servestream.alarm.Alarms.enableAlarmInternal(p11, v0_1, 0);
                        }
                    } else {
                        v0_1.time = net.sourceforge.servestream.alarm.Alarms.calculateAlarm(v0_1);
                    }
                } while(v2.moveToNext());
            }
            v2.close();
        }
        return v1;
    }

    private static void clearSnoozeIfNeeded(android.content.Context p6, long p7)
    {
        android.content.SharedPreferences v0 = p6.getSharedPreferences("AlarmClock", 0);
        if (p7 < v0.getLong("snooze_time", 0)) {
            net.sourceforge.servestream.alarm.Alarms.clearSnoozePreference(p6, v0);
        }
        return;
    }

    private static void clearSnoozePreference(android.content.Context p5, android.content.SharedPreferences p6)
    {
        int v0 = p6.getInt("snooze_id", -1);
        if (v0 != -1) {
            ((android.app.NotificationManager) p5.getSystemService("notification")).cancel(v0);
        }
        android.content.SharedPreferences$Editor v1 = p6.edit();
        v1.remove("snooze_id");
        v1.remove("snooze_time");
        v1.commit();
        return;
    }

    private static android.content.ContentValues createContentValues(net.sourceforge.servestream.alarm.Alarm p5)
    {
        int v2_0 = 0;
        android.content.ContentValues v0_1 = new android.content.ContentValues(8);
        if (!p5.daysOfWeek.isRepeatSet()) {
            net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p5);
        }
        String v1_1;
        if (!p5.enabled) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        v0_1.put("enabled", Integer.valueOf(v1_1));
        v0_1.put("hour", Integer.valueOf(p5.hour));
        v0_1.put("minutes", Integer.valueOf(p5.minutes));
        v0_1.put("alarmtime", Long.valueOf(p5.time));
        v0_1.put("daysofweek", Integer.valueOf(p5.daysOfWeek.getCoded()));
        v0_1.put("vibrate", Boolean.valueOf(p5.vibrate));
        v0_1.put("message", p5.label);
        android.util.Log.v(net.sourceforge.servestream.alarm.Alarms.TAG, "Writing alarm Id");
        if (p5.alert != 0) {
            v2_0 = p5.alert;
        }
        v0_1.put("alert", Integer.valueOf(v2_0));
        return v0_1;
    }

    public static void deleteAlarm(android.content.Context p5, int p6)
    {
        if (p6 != -1) {
            android.content.ContentResolver v0 = p5.getContentResolver();
            net.sourceforge.servestream.alarm.Alarms.disableSnoozeAlert(p5, p6);
            v0.delete(android.content.ContentUris.withAppendedId(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, ((long) p6)), "", 0);
            net.sourceforge.servestream.alarm.Alarms.setNextAlert(p5);
        }
        return;
    }

    static void disableAlert(android.content.Context p5)
    {
        ((android.app.AlarmManager) p5.getSystemService("alarm")).cancel(android.app.PendingIntent.getBroadcast(p5, 0, new android.content.Intent("net.sourceforge.servestream.ALARM_ALERT"), 268435456));
        net.sourceforge.servestream.alarm.Alarms.setStatusBarIcon(p5, 0);
        return;
    }

    public static void disableExpiredAlarms(android.content.Context p8)
    {
        android.database.Cursor v1 = net.sourceforge.servestream.alarm.Alarms.getFilteredAlarmsCursor(p8.getContentResolver());
        long v2 = System.currentTimeMillis();
        if (v1.moveToFirst()) {
            do {
                net.sourceforge.servestream.alarm.Alarm v0_0 = new net.sourceforge.servestream.alarm.Alarm(v1);
                if ((v0_0.time != 0) && (v0_0.time < v2)) {
                    android.util.Log.v(net.sourceforge.servestream.alarm.Alarms.TAG, new StringBuilder().append("Disabling expired alarm set for ").append(v0_0.time).toString());
                    net.sourceforge.servestream.alarm.Alarms.enableAlarmInternal(p8, v0_0, 0);
                }
            } while(v1.moveToNext());
        }
        v1.close();
        return;
    }

    static void disableSnoozeAlert(android.content.Context p5, int p6)
    {
        android.content.SharedPreferences v0 = p5.getSharedPreferences("AlarmClock", 0);
        int v1 = v0.getInt("snooze_id", -1);
        if ((v1 != -1) && (v1 == p6)) {
            net.sourceforge.servestream.alarm.Alarms.clearSnoozePreference(p5, v0);
        }
        return;
    }

    public static void enableAlarm(android.content.Context p0, int p1, boolean p2)
    {
        net.sourceforge.servestream.alarm.Alarms.enableAlarmInternal(p0, p1, p2);
        net.sourceforge.servestream.alarm.Alarms.setNextAlert(p0);
        return;
    }

    private static void enableAlarmInternal(android.content.Context p1, int p2, boolean p3)
    {
        net.sourceforge.servestream.alarm.Alarms.enableAlarmInternal(p1, net.sourceforge.servestream.alarm.Alarms.getAlarm(p1.getContentResolver(), p2), p3);
        return;
    }

    private static void enableAlarmInternal(android.content.Context p8, net.sourceforge.servestream.alarm.Alarm p9, boolean p10)
    {
        if (p9 != null) {
            android.net.Uri v4_0;
            android.content.ContentResolver v0 = p8.getContentResolver();
            android.content.ContentValues v3_1 = new android.content.ContentValues(2);
            if (!p10) {
                v4_0 = 0;
            } else {
                v4_0 = 1;
            }
            v3_1.put("enabled", Integer.valueOf(v4_0));
            if (!p10) {
                net.sourceforge.servestream.alarm.Alarms.disableSnoozeAlert(p8, p9.id);
            } else {
                long v1 = 0;
                if (!p9.daysOfWeek.isRepeatSet()) {
                    v1 = net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p9);
                }
                v3_1.put("alarmtime", Long.valueOf(v1));
            }
            v0.update(android.content.ContentUris.withAppendedId(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, ((long) p9.id)), v3_1, 0, 0);
        }
        return;
    }

    private static void enableAlert(android.content.Context p9, net.sourceforge.servestream.alarm.Alarm p10, long p11)
    {
        android.app.AlarmManager v0_1 = ((android.app.AlarmManager) p9.getSystemService("alarm"));
        android.util.Log.v(net.sourceforge.servestream.alarm.Alarms.TAG, new StringBuilder().append("** setAlert id ").append(p10.id).append(" atTime ").append(p11).toString());
        android.content.Intent v2_1 = new android.content.Intent("net.sourceforge.servestream.ALARM_ALERT");
        android.os.Parcel v3 = android.os.Parcel.obtain();
        p10.writeToParcel(v3, 0);
        v3.setDataPosition(0);
        v2_1.putExtra("intent.extra.alarm_raw", v3.marshall());
        v0_1.set(0, p11, android.app.PendingIntent.getBroadcast(p9, 0, v2_1, 268435456));
        net.sourceforge.servestream.alarm.Alarms.setStatusBarIcon(p9, 1);
        java.util.Calendar v1 = java.util.Calendar.getInstance();
        v1.setTimeInMillis(p11);
        net.sourceforge.servestream.alarm.Alarms.formatDayAndTime(p9, v1);
        return;
    }

    private static boolean enableSnoozeAlert(android.content.Context p9)
    {
        int v5 = 0;
        android.content.SharedPreferences v2 = p9.getSharedPreferences("AlarmClock", 0);
        int v1 = v2.getInt("snooze_id", -1);
        if (v1 != -1) {
            long v3 = v2.getLong("snooze_time", -1);
            net.sourceforge.servestream.alarm.Alarm v0 = net.sourceforge.servestream.alarm.Alarms.getAlarm(p9.getContentResolver(), v1);
            if (v0 != null) {
                v0.time = v3;
                net.sourceforge.servestream.alarm.Alarms.enableAlert(p9, v0, v3);
                v5 = 1;
            }
        }
        return v5;
    }

    private static String formatDayAndTime(android.content.Context p2, java.util.Calendar p3)
    {
        String v0;
        if (!net.sourceforge.servestream.alarm.Alarms.get24HourMode(p2)) {
            v0 = "E h:mm aa";
        } else {
            v0 = "E k:mm";
        }
        String v1_2;
        if (p3 != null) {
            v1_2 = ((String) android.text.format.DateFormat.format(v0, p3));
        } else {
            v1_2 = "";
        }
        return v1_2;
    }

    public static String formatTime(android.content.Context p2, int p3, int p4, net.sourceforge.servestream.alarm.Alarm$DaysOfWeek p5)
    {
        return net.sourceforge.servestream.alarm.Alarms.formatTime(p2, net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p3, p4, p5));
    }

    public static String formatTime(android.content.Context p2, java.util.Calendar p3)
    {
        String v0;
        if (!net.sourceforge.servestream.alarm.Alarms.get24HourMode(p2)) {
            v0 = "h:mm aa";
        } else {
            v0 = "kk:mm";
        }
        String v1_2;
        if (p3 != null) {
            v1_2 = ((String) android.text.format.DateFormat.format(v0, p3));
        } else {
            v1_2 = "";
        }
        return v1_2;
    }

    static boolean get24HourMode(android.content.Context p1)
    {
        return android.text.format.DateFormat.is24HourFormat(p1);
    }

    public static net.sourceforge.servestream.alarm.Alarm getAlarm(android.content.ContentResolver p8, int p9)
    {
        android.database.Cursor v7 = p8.query(android.content.ContentUris.withAppendedId(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, ((long) p9)), net.sourceforge.servestream.alarm.Alarm$Columns.ALARM_QUERY_COLUMNS, 0, 0, 0);
        net.sourceforge.servestream.alarm.Alarm v6_0 = 0;
        if (v7 != null) {
            if (v7.moveToFirst()) {
                v6_0 = new net.sourceforge.servestream.alarm.Alarm(v7);
            }
            v7.close();
        }
        return v6_0;
    }

    public static android.database.Cursor getAlarmsCursor(android.content.ContentResolver p6)
    {
        return p6.query(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, net.sourceforge.servestream.alarm.Alarm$Columns.ALARM_QUERY_COLUMNS, 0, 0, "hour, minutes ASC");
    }

    private static android.database.Cursor getFilteredAlarmsCursor(android.content.ContentResolver p6)
    {
        return p6.query(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, net.sourceforge.servestream.alarm.Alarm$Columns.ALARM_QUERY_COLUMNS, "enabled=1", 0, 0);
    }

    static void saveSnoozeAlert(android.content.Context p4, int p5, long p6)
    {
        android.content.SharedPreferences v1 = p4.getSharedPreferences("AlarmClock", 0);
        if (p5 != -1) {
            android.content.SharedPreferences$Editor v0 = v1.edit();
            v0.putInt("snooze_id", p5);
            v0.putLong("snooze_time", p6);
            v0.commit();
        } else {
            net.sourceforge.servestream.alarm.Alarms.clearSnoozePreference(p4, v1);
        }
        net.sourceforge.servestream.alarm.Alarms.setNextAlert(p4);
        return;
    }

    public static long setAlarm(android.content.Context p8, net.sourceforge.servestream.alarm.Alarm p9)
    {
        p8.getContentResolver().update(android.content.ContentUris.withAppendedId(net.sourceforge.servestream.alarm.Alarm$Columns.CONTENT_URI, ((long) p9.id)), net.sourceforge.servestream.alarm.Alarms.createContentValues(p9), 0, 0);
        long v1 = net.sourceforge.servestream.alarm.Alarms.calculateAlarm(p9);
        if (p9.enabled) {
            net.sourceforge.servestream.alarm.Alarms.disableSnoozeAlert(p8, p9.id);
            net.sourceforge.servestream.alarm.Alarms.clearSnoozeIfNeeded(p8, v1);
        }
        net.sourceforge.servestream.alarm.Alarms.setNextAlert(p8);
        return v1;
    }

    public static void setNextAlert(android.content.Context p3)
    {
        if (!net.sourceforge.servestream.alarm.Alarms.enableSnoozeAlert(p3)) {
            net.sourceforge.servestream.alarm.Alarm v0 = net.sourceforge.servestream.alarm.Alarms.calculateNextAlert(p3);
            if (v0 == null) {
                net.sourceforge.servestream.alarm.Alarms.disableAlert(p3);
            } else {
                net.sourceforge.servestream.alarm.Alarms.enableAlert(p3, v0, v0.time);
            }
        }
        return;
    }

    private static void setStatusBarIcon(android.content.Context p2, boolean p3)
    {
        android.content.Intent v0_1 = new android.content.Intent("android.intent.action.ALARM_CHANGED");
        v0_1.putExtra("alarmSet", p3);
        p2.sendBroadcast(v0_1);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class DigitalClock$1$1 implements java.lang.Runnable {
    final synthetic net.sourceforge.servestream.alarm.DigitalClock$1 this$1;

    DigitalClock$1$1(net.sourceforge.servestream.alarm.DigitalClock$1 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void run()
    {
        net.sourceforge.servestream.alarm.DigitalClock.access$200(this.this$1.this$0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class DigitalClock$1 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.alarm.DigitalClock this$0;

    DigitalClock$1(net.sourceforge.servestream.alarm.DigitalClock p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        if ((net.sourceforge.servestream.alarm.DigitalClock.access$000(this.this$0)) && (p4.getAction().equals("android.intent.action.TIMEZONE_CHANGED"))) {
            net.sourceforge.servestream.alarm.DigitalClock.access$102(this.this$0, java.util.Calendar.getInstance());
        }
        net.sourceforge.servestream.alarm.DigitalClock.access$300(this.this$0).post(new net.sourceforge.servestream.alarm.DigitalClock$1$1(this));
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class DigitalClock$AmPm {
    private android.widget.TextView mAmPm;
    private String mAmString;
    private String mPmString;

    DigitalClock$AmPm(android.view.View p3)
    {
        this.mAmPm = ((android.widget.TextView) p3.findViewById(2131623938));
        String[] v0 = new java.text.DateFormatSymbols().getAmPmStrings();
        this.mAmString = v0[0];
        this.mPmString = v0[1];
        return;
    }

    void setIsMorning(boolean p3)
    {
        String v0;
        if (!p3) {
            v0 = this.mPmString;
        } else {
            v0 = this.mAmString;
        }
        this.mAmPm.setText(v0);
        return;
    }

    void setShowAmPm(boolean p3)
    {
        int v0;
        if (!p3) {
            v0 = 8;
        } else {
            v0 = 0;
        }
        this.mAmPm.setVisibility(v0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class DigitalClock$FormatChangeObserver extends android.database.ContentObserver {
    final synthetic net.sourceforge.servestream.alarm.DigitalClock this$0;

    public DigitalClock$FormatChangeObserver(net.sourceforge.servestream.alarm.DigitalClock p2)
    {
        this.this$0 = p2;
        super(new android.os.Handler());
        return;
    }

    public void onChange(boolean p2)
    {
        net.sourceforge.servestream.alarm.DigitalClock.access$400(this.this$0);
        net.sourceforge.servestream.alarm.DigitalClock.access$200(this.this$0);
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class DigitalClock extends android.widget.LinearLayout {
    private static final String M12 = "h:mm";
    private static android.graphics.Typeface sTypeface;
    private net.sourceforge.servestream.alarm.DigitalClock$AmPm mAmPm;
    private boolean mAttached;
    private java.util.Calendar mCalendar;
    private String mFormat;
    private android.database.ContentObserver mFormatChangeObserver;
    private final android.os.Handler mHandler;
    private final android.content.BroadcastReceiver mIntentReceiver;
    private boolean mLive;
    private android.widget.TextView mTimeDisplay;

    public DigitalClock(android.content.Context p2)
    {
        this(p2, 0);
        return;
    }

    public DigitalClock(android.content.Context p2, android.util.AttributeSet p3)
    {
        super(p2, p3);
        super.mLive = 1;
        super.mHandler = new android.os.Handler();
        super.mIntentReceiver = new net.sourceforge.servestream.alarm.DigitalClock$1(super);
        return;
    }

    static synthetic boolean access$000(net.sourceforge.servestream.alarm.DigitalClock p1)
    {
        return p1.mLive;
    }

    static synthetic java.util.Calendar access$102(net.sourceforge.servestream.alarm.DigitalClock p0, java.util.Calendar p1)
    {
        p0.mCalendar = p1;
        return p1;
    }

    static synthetic void access$200(net.sourceforge.servestream.alarm.DigitalClock p0)
    {
        p0.updateTime();
        return;
    }

    static synthetic android.os.Handler access$300(net.sourceforge.servestream.alarm.DigitalClock p1)
    {
        return p1.mHandler;
    }

    static synthetic void access$400(net.sourceforge.servestream.alarm.DigitalClock p0)
    {
        p0.setDateFormat();
        return;
    }

    private void setDateFormat()
    {
        int v0_3;
        if (!net.sourceforge.servestream.alarm.Alarms.get24HourMode(this.getContext())) {
            v0_3 = "h:mm";
        } else {
            v0_3 = "kk:mm";
        }
        int v0_1;
        this.mFormat = v0_3;
        if (this.mFormat != "h:mm") {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        this.mAmPm.setShowAmPm(v0_1);
        return;
    }

    private void updateTime()
    {
        if (this.mLive) {
            this.mCalendar.setTimeInMillis(System.currentTimeMillis());
        }
        int v1_4;
        this.mTimeDisplay.setText(android.text.format.DateFormat.format(this.mFormat, this.mCalendar));
        if (this.mCalendar.get(9) != 0) {
            v1_4 = 0;
        } else {
            v1_4 = 1;
        }
        this.mAmPm.setIsMorning(v1_4);
        return;
    }

    protected void onAttachedToWindow()
    {
        super.onAttachedToWindow();
        if (!this.mAttached) {
            this.mAttached = 1;
            if (this.mLive) {
                android.content.IntentFilter v0_1 = new android.content.IntentFilter();
                v0_1.addAction("android.intent.action.TIME_TICK");
                v0_1.addAction("android.intent.action.TIME_SET");
                v0_1.addAction("android.intent.action.TIMEZONE_CHANGED");
                this.getContext().registerReceiver(this.mIntentReceiver, v0_1);
            }
            this.mFormatChangeObserver = new net.sourceforge.servestream.alarm.DigitalClock$FormatChangeObserver(this);
            this.getContext().getContentResolver().registerContentObserver(android.provider.Settings$System.CONTENT_URI, 1, this.mFormatChangeObserver);
            this.updateTime();
        }
        return;
    }

    protected void onDetachedFromWindow()
    {
        super.onDetachedFromWindow();
        if (this.mAttached) {
            this.mAttached = 0;
            if (this.mLive) {
                this.getContext().unregisterReceiver(this.mIntentReceiver);
            }
            this.getContext().getContentResolver().unregisterContentObserver(this.mFormatChangeObserver);
        }
        return;
    }

    protected void onFinishInflate()
    {
        super.onFinishInflate();
        if (net.sourceforge.servestream.alarm.DigitalClock.sTypeface == null) {
            net.sourceforge.servestream.alarm.DigitalClock.sTypeface = android.graphics.Typeface.createFromAsset(this.getContext().getAssets(), "fonts/Clockopia.ttf");
        }
        this.mTimeDisplay = ((android.widget.TextView) this.findViewById(2131623937));
        this.mTimeDisplay.setTypeface(net.sourceforge.servestream.alarm.DigitalClock.sTypeface);
        this.mAmPm = new net.sourceforge.servestream.alarm.DigitalClock$AmPm(this);
        this.mCalendar = java.util.Calendar.getInstance();
        this.setDateFormat();
        return;
    }

    public void setLive(boolean p1)
    {
        this.mLive = p1;
        return;
    }

    public void setTypeface(android.graphics.Typeface p2)
    {
        this.mTimeDisplay.setTypeface(p2);
        return;
    }

    public void updateTime(java.util.Calendar p1)
    {
        this.mCalendar = p1;
        this.updateTime();
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class DontPressWithParentLayout extends android.widget.LinearLayout {

    public DontPressWithParentLayout(android.content.Context p1, android.util.AttributeSet p2)
    {
        super(p1, p2);
        return;
    }

    public void setPressed(boolean p2)
    {
        if ((!p2) || (!((android.view.View) this.getParent()).isPressed())) {
            super.setPressed(p2);
        }
        return;
    }
}
package net.sourceforge.servestream.alarm;
 class RepeatPreference$1 implements android.content.DialogInterface$OnMultiChoiceClickListener {
    final synthetic net.sourceforge.servestream.alarm.RepeatPreference this$0;

    RepeatPreference$1(net.sourceforge.servestream.alarm.RepeatPreference p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onClick(android.content.DialogInterface p2, int p3, boolean p4)
    {
        net.sourceforge.servestream.alarm.RepeatPreference.access$000(this.this$0).set(p3, p4);
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class RepeatPreference extends android.preference.ListPreference {
    private net.sourceforge.servestream.alarm.Alarm$DaysOfWeek mDaysOfWeek;
    private net.sourceforge.servestream.alarm.Alarm$DaysOfWeek mNewDaysOfWeek;

    public RepeatPreference(android.content.Context p9, android.util.AttributeSet p10)
    {
        super(p9, p10);
        super.mDaysOfWeek = new net.sourceforge.servestream.alarm.Alarm$DaysOfWeek(0);
        super.mNewDaysOfWeek = new net.sourceforge.servestream.alarm.Alarm$DaysOfWeek(0);
        String[] v1 = new java.text.DateFormatSymbols().getWeekdays();
        String[] v0 = new String[7];
        v0[0] = v1[2];
        v0[1] = v1[3];
        v0[2] = v1[4];
        v0[3] = v1[5];
        v0[4] = v1[6];
        v0[5] = v1[7];
        v0[6] = v1[1];
        super.setEntries(v0);
        super.setEntryValues(v0);
        return;
    }

    static synthetic net.sourceforge.servestream.alarm.Alarm$DaysOfWeek access$000(net.sourceforge.servestream.alarm.RepeatPreference p1)
    {
        return p1.mNewDaysOfWeek;
    }

    public net.sourceforge.servestream.alarm.Alarm$DaysOfWeek getDaysOfWeek()
    {
        return this.mDaysOfWeek;
    }

    protected void onDialogClosed(boolean p4)
    {
        if (p4) {
            this.mDaysOfWeek.set(this.mNewDaysOfWeek);
            this.setSummary(this.mDaysOfWeek.toString(this.getContext(), 1));
            this.callChangeListener(this.mDaysOfWeek);
        }
        return;
    }

    protected void onPrepareDialogBuilder(android.app.AlertDialog$Builder p4)
    {
        p4.setMultiChoiceItems(this.getEntries(), this.mDaysOfWeek.getBooleanArray(), new net.sourceforge.servestream.alarm.RepeatPreference$1(this));
        return;
    }

    public void setDaysOfWeek(net.sourceforge.servestream.alarm.Alarm$DaysOfWeek p3)
    {
        this.mDaysOfWeek.set(p3);
        this.mNewDaysOfWeek.set(p3);
        this.setSummary(p3.toString(this.getContext(), 1));
        return;
    }
}
package net.sourceforge.servestream.alarm;
public class ToastMaster {
    private static android.widget.Toast sToast;

    static ToastMaster()
    {
        net.sourceforge.servestream.alarm.ToastMaster.sToast = 0;
        return;
    }

    private ToastMaster()
    {
        return;
    }

    public static void cancelToast()
    {
        if (net.sourceforge.servestream.alarm.ToastMaster.sToast != null) {
            net.sourceforge.servestream.alarm.ToastMaster.sToast.cancel();
        }
        net.sourceforge.servestream.alarm.ToastMaster.sToast = 0;
        return;
    }

    public static void setToast(android.widget.Toast p1)
    {
        if (net.sourceforge.servestream.alarm.ToastMaster.sToast != null) {
            net.sourceforge.servestream.alarm.ToastMaster.sToast.cancel();
        }
        net.sourceforge.servestream.alarm.ToastMaster.sToast = p1;
        return;
    }
}
package net.sourceforge.servestream.button;
 class RepeatingImageButton$1 implements java.lang.Runnable {
    final synthetic net.sourceforge.servestream.button.RepeatingImageButton this$0;

    RepeatingImageButton$1(net.sourceforge.servestream.button.RepeatingImageButton p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        net.sourceforge.servestream.button.RepeatingImageButton.access$000(this.this$0, 0);
        if (this.this$0.isPressed()) {
            this.this$0.postDelayed(this, net.sourceforge.servestream.button.RepeatingImageButton.access$100(this.this$0));
        }
        return;
    }
}
package net.sourceforge.servestream.button;
public class RepeatingImageButton extends android.widget.ImageButton {
    private long mInterval;
    private net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener mListener;
    private int mRepeatCount;
    private Runnable mRepeater;
    private long mStartTime;

    public RepeatingImageButton(android.content.Context p2)
    {
        this(p2, 0);
        return;
    }

    public RepeatingImageButton(android.content.Context p2, android.util.AttributeSet p3)
    {
        this(p2, p3, 16842866);
        return;
    }

    public RepeatingImageButton(android.content.Context p4, android.util.AttributeSet p5, int p6)
    {
        super(p4, p5, p6);
        super.mInterval = 500;
        super.mRepeater = new net.sourceforge.servestream.button.RepeatingImageButton$1(super);
        super.setFocusable(1);
        super.setLongClickable(1);
        return;
    }

    static synthetic void access$000(net.sourceforge.servestream.button.RepeatingImageButton p0, boolean p1)
    {
        p0.doRepeat(p1);
        return;
    }

    static synthetic long access$100(net.sourceforge.servestream.button.RepeatingImageButton p2)
    {
        return p2.mInterval;
    }

    private void doRepeat(boolean p8)
    {
        long v0 = android.os.SystemClock.elapsedRealtime();
        if (this.mListener != null) {
            int v2_0;
            net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener v3 = this.mListener;
            long v4_1 = (v0 - this.mStartTime);
            if (!p8) {
                v2_0 = this.mRepeatCount;
                this.mRepeatCount = (v2_0 + 1);
            } else {
                v2_0 = -1;
            }
            v3.onRepeat(this, v4_1, v2_0);
        }
        return;
    }

    public boolean onKeyDown(int p2, android.view.KeyEvent p3)
    {
        int v0;
        switch (p2) {
            case 23:
            case 66:
                super.onKeyDown(p2, p3);
                v0 = 1;
                break;
            default:
                v0 = super.onKeyDown(p2, p3);
        }
        return v0;
    }

    public boolean onKeyUp(int p5, android.view.KeyEvent p6)
    {
        switch (p5) {
            case 23:
            case 66:
                this.removeCallbacks(this.mRepeater);
                if (this.mStartTime == 0) {
                } else {
                    this.doRepeat(1);
                    this.mStartTime = 0;
                }
                break;
        }
        return super.onKeyUp(p5, p6);
    }

    public boolean onTouchEvent(android.view.MotionEvent p6)
    {
        if (p6.getAction() == 1) {
            this.removeCallbacks(this.mRepeater);
            if (this.mStartTime != 0) {
                this.doRepeat(1);
                this.mStartTime = 0;
            }
        }
        return super.onTouchEvent(p6);
    }

    public boolean performLongClick()
    {
        this.mStartTime = android.os.SystemClock.elapsedRealtime();
        this.mRepeatCount = 0;
        this.post(this.mRepeater);
        return 1;
    }

    public void setRepeatListener(net.sourceforge.servestream.button.RepeatingImageButton$RepeatListener p1, long p2)
    {
        this.mListener = p1;
        this.mInterval = p2;
        return;
    }
}
package net.sourceforge.servestream.button;
public interface VerticalTextSpinner$OnChangedListener {

    public abstract void onChanged();
}
package net.sourceforge.servestream.button;
public class VerticalTextSpinner extends android.view.View {
    private static final long DEFAULT_SCROLL_INTERVAL_MS = 400;
    private static final int MIN_ANIMATIONS = 4;
    private static int SCROLL_DISTANCE = 0;
    private static final int SCROLL_MODE_DOWN = 2;
    private static final int SCROLL_MODE_NONE = 0;
    private static final int SCROLL_MODE_UP = 1;
    private static final int SELECTOR_ARROW_HEIGHT = 15;
    private static int TEXT1_Y;
    private static int TEXT2_Y;
    private static int TEXT3_Y;
    private static int TEXT4_Y;
    private static int TEXT5_Y;
    private static int TEXT_MARGIN_RIGHT;
    private static int TEXT_SIZE;
    private static int TEXT_SPACING;
    private boolean isDraggingSelector;
    private final android.graphics.drawable.Drawable mBackgroundFocused;
    private int mCurrentSelectedPos;
    private long mDelayBetweenAnimations;
    private int mDistanceOfEachAnimation;
    private int mDownY;
    private boolean mIsAnimationRunning;
    private net.sourceforge.servestream.button.VerticalTextSpinner$OnChangedListener mListener;
    private int mNumberOfAnimations;
    private long mScrollInterval;
    private int mScrollMode;
    private android.graphics.drawable.Drawable mSelector;
    private final int mSelectorDefaultY;
    private final android.graphics.drawable.Drawable mSelectorFocused;
    private final int mSelectorHeight;
    private final int mSelectorMaxY;
    private final int mSelectorMinY;
    private final android.graphics.drawable.Drawable mSelectorNormal;
    private int mSelectorY;
    private boolean mStopAnimation;
    private String mText1;
    private String mText2;
    private String mText3;
    private String mText4;
    private String mText5;
    private String[] mTextList;
    private final android.text.TextPaint mTextPaintDark;
    private final android.text.TextPaint mTextPaintLight;
    private int mTotalAnimatedDistance;
    private boolean mWrapAround;

    public VerticalTextSpinner(android.content.Context p2)
    {
        this(p2, 0);
        return;
    }

    public VerticalTextSpinner(android.content.Context p2, android.util.AttributeSet p3)
    {
        this(p2, p3, 0);
        return;
    }

    public VerticalTextSpinner(android.content.Context p7, android.util.AttributeSet p8, int p9)
    {
        super(p7, p8, p9);
        super.mWrapAround = 1;
        float v0 = super.getResources().getDisplayMetrics().density;
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING = ((int) (1099956224 * v0));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_MARGIN_RIGHT = ((int) (1103626240 * v0));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE = ((int) (1101004800 * v0));
        net.sourceforge.servestream.button.VerticalTextSpinner.SCROLL_DISTANCE = (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE + net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING);
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT1_Y = ((net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE * 0) + (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING * -1));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT2_Y = ((net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE * 1) + (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING * 0));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT3_Y = ((net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE * 2) + (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING * 1));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT4_Y = ((net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE * 3) + (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING * 2));
        net.sourceforge.servestream.button.VerticalTextSpinner.TEXT5_Y = ((net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE * 4) + (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SPACING * 3));
        super.mBackgroundFocused = p7.getResources().getDrawable(2130837582);
        super.mSelectorFocused = p7.getResources().getDrawable(2130837583);
        super.mSelectorNormal = p7.getResources().getDrawable(2130837584);
        super.mSelectorHeight = super.mSelectorFocused.getIntrinsicHeight();
        super.mSelectorDefaultY = ((super.mBackgroundFocused.getIntrinsicHeight() - super.mSelectorHeight) / 2);
        super.mSelectorMinY = 0;
        super.mSelectorMaxY = (super.mBackgroundFocused.getIntrinsicHeight() - super.mSelectorHeight);
        super.mSelector = super.mSelectorNormal;
        super.mSelectorY = super.mSelectorDefaultY;
        super.mTextPaintDark = new android.text.TextPaint(1);
        super.mTextPaintDark.setTextSize(((float) net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE));
        super.mTextPaintDark.setColor(p7.getResources().getColor(17170435));
        super.mTextPaintLight = new android.text.TextPaint(1);
        super.mTextPaintLight.setTextSize(((float) net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_SIZE));
        super.mTextPaintLight.setColor(p7.getResources().getColor(17170437));
        super.mScrollMode = 0;
        super.mScrollInterval = 400;
        super.calculateAnimationValues();
        return;
    }

    private void calculateAnimationValues()
    {
        this.mNumberOfAnimations = (((int) this.mScrollInterval) / net.sourceforge.servestream.button.VerticalTextSpinner.SCROLL_DISTANCE);
        if (this.mNumberOfAnimations >= 4) {
            this.mDistanceOfEachAnimation = (net.sourceforge.servestream.button.VerticalTextSpinner.SCROLL_DISTANCE / this.mNumberOfAnimations);
            this.mDelayBetweenAnimations = (this.mScrollInterval / ((long) this.mNumberOfAnimations));
        } else {
            this.mNumberOfAnimations = 4;
            this.mDistanceOfEachAnimation = (net.sourceforge.servestream.button.VerticalTextSpinner.SCROLL_DISTANCE / this.mNumberOfAnimations);
            this.mDelayBetweenAnimations = 0;
        }
        return;
    }

    private void calculateTextPositions()
    {
        this.mText1 = this.getTextToDraw(-2);
        this.mText2 = this.getTextToDraw(-1);
        this.mText3 = this.getTextToDraw(0);
        this.mText4 = this.getTextToDraw(1);
        this.mText5 = this.getTextToDraw(2);
        return;
    }

    private boolean canScrollDown()
    {
        if ((this.mCurrentSelectedPos <= 0) && (!this.mWrapAround)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    private boolean canScrollUp()
    {
        if ((this.mCurrentSelectedPos >= (this.mTextList.length - 1)) && (!this.mWrapAround)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    private void drawText(android.graphics.Canvas p5, String p6, int p7, android.text.TextPaint p8)
    {
        p5.drawText(p6, ((float) ((this.getMeasuredWidth() - ((int) p8.measureText(p6))) - net.sourceforge.servestream.button.VerticalTextSpinner.TEXT_MARGIN_RIGHT)), ((float) p7), p8);
        return;
    }

    private int getNewIndex(int p4)
    {
        int v1_0 = -1;
        int v0 = (this.mCurrentSelectedPos + p4);
        if (v0 >= 0) {
            if (v0 < this.mTextList.length) {
                v1_0 = v0;
            } else {
                if (this.mWrapAround) {
                    v0 -= this.mTextList.length;
                }
            }
        } else {
            if (this.mWrapAround) {
                v0 += this.mTextList.length;
            }
        }
        return v1_0;
    }

    private String getTextToDraw(int p3)
    {
        String v1_1;
        int v0 = this.getNewIndex(p3);
        if (v0 >= 0) {
            v1_1 = this.mTextList[v0];
        } else {
            v1_1 = "";
        }
        return v1_1;
    }

    private void scroll()
    {
        if (!this.mIsAnimationRunning) {
            this.mTotalAnimatedDistance = 0;
            this.mIsAnimationRunning = 1;
            this.invalidate();
        }
        return;
    }

    public int getCurrentSelectedPos()
    {
        return this.mCurrentSelectedPos;
    }

    public String getCurrentSelectedText(int p2)
    {
        return this.mTextList[p2];
    }

    protected void onDraw(android.graphics.Canvas p32)
    {
        int v15 = this.mSelectorY;
        int v14 = this.getWidth();
        int v12 = (this.mSelectorY + this.mSelectorHeight);
        this.mSelector.setBounds(0, v15, v14, v12);
        this.mSelector.draw(p32);
        if (this.mTextList != null) {
            android.text.TextPaint v21 = this.mTextPaintDark;
            if (!this.hasFocus()) {
                this.drawText(p32, this.mText3, net.sourceforge.servestream.button.VerticalTextSpinner.TEXT3_Y, v21);
            } else {
                int v26 = 0;
                int v25 = v14;
                int v23 = (v15 + 15);
                String v16 = this.mText1;
                String v17 = this.mText2;
                String v18 = this.mText3;
                String v19 = this.mText4;
                String v20 = this.mText5;
                android.text.TextPaint v22 = this.mTextPaintLight;
                p32.save();
                p32.clipRect(0, 0, v25, v23);
                this.drawText(p32, v16, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT1_Y + this.mTotalAnimatedDistance), v22);
                this.drawText(p32, v17, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT2_Y + this.mTotalAnimatedDistance), v22);
                this.drawText(p32, v18, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT3_Y + this.mTotalAnimatedDistance), v22);
                p32.restore();
                p32.save();
                p32.clipRect(0, (v15 + 15), v14, (v12 - 15));
                this.drawText(p32, v17, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT2_Y + this.mTotalAnimatedDistance), v21);
                this.drawText(p32, v18, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT3_Y + this.mTotalAnimatedDistance), v21);
                this.drawText(p32, v19, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT4_Y + this.mTotalAnimatedDistance), v21);
                p32.restore();
                int v8 = (v12 - 15);
                int v7 = v14;
                int v5 = this.getMeasuredHeight();
                p32.save();
                p32.clipRect(0, v8, v7, v5);
                this.drawText(p32, v18, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT3_Y + this.mTotalAnimatedDistance), v22);
                this.drawText(p32, v19, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT4_Y + this.mTotalAnimatedDistance), v22);
                this.drawText(p32, v20, (net.sourceforge.servestream.button.VerticalTextSpinner.TEXT5_Y + this.mTotalAnimatedDistance), v22);
                p32.restore();
            }
            if (this.mIsAnimationRunning) {
                if ((Math.abs(this.mTotalAnimatedDistance) + this.mDistanceOfEachAnimation) <= net.sourceforge.servestream.button.VerticalTextSpinner.SCROLL_DISTANCE) {
                    if (this.mScrollMode != 1) {
                        if (this.mScrollMode == 2) {
                            this.mTotalAnimatedDistance = (this.mTotalAnimatedDistance + this.mDistanceOfEachAnimation);
                        }
                    } else {
                        this.mTotalAnimatedDistance = (this.mTotalAnimatedDistance - this.mDistanceOfEachAnimation);
                    }
                } else {
                    this.mTotalAnimatedDistance = 0;
                    if (this.mScrollMode != 1) {
                        if (this.mScrollMode == 2) {
                            int v10_0 = this.mCurrentSelectedPos;
                            int v9_0 = this.getNewIndex(-1);
                            if (v9_0 >= 0) {
                                this.mCurrentSelectedPos = v9_0;
                                if (this.mListener != null) {
                                    this.mListener.onChanged(this, v10_0, this.mCurrentSelectedPos, this.mTextList);
                                }
                            }
                            if ((v9_0 < 0) || ((v9_0 == 0) && (!this.mWrapAround))) {
                                this.mStopAnimation = 1;
                            }
                            this = this.calculateTextPositions();
                        }
                    } else {
                        int v10_1 = this.mCurrentSelectedPos;
                        int v9_1 = this.getNewIndex(1);
                        if (v9_1 >= 0) {
                            this.mCurrentSelectedPos = v9_1;
                            if (this.mListener != null) {
                                this.mListener.onChanged(this, v10_1, this.mCurrentSelectedPos, this.mTextList);
                            }
                        }
                        if ((v9_1 < 0) || ((v9_1 >= (this.mTextList.length - 1)) && (!this.mWrapAround))) {
                            this.mStopAnimation = 1;
                        }
                        this = this.calculateTextPositions();
                    }
                    if (this.mStopAnimation) {
                        int v11 = this.mScrollMode;
                        this.mIsAnimationRunning = 0;
                        this.mStopAnimation = 0;
                        this.mScrollMode = 0;
                        if ("".equals(this.mTextList[this.mCurrentSelectedPos])) {
                            this.mScrollMode = v11;
                            this = this.scroll();
                            this.mStopAnimation = 1;
                        }
                    }
                }
                if (this.mDelayBetweenAnimations <= 0) {
                    this.invalidate();
                } else {
                    this.postInvalidateDelayed(this.mDelayBetweenAnimations);
                }
            }
        }
        return;
    }

    protected void onFocusChanged(boolean p2, int p3, android.graphics.Rect p4)
    {
        if (!p2) {
            this.setBackgroundDrawable(0);
            this.mSelector = this.mSelectorNormal;
            this.mSelectorY = this.mSelectorDefaultY;
        } else {
            this.setBackgroundDrawable(this.mBackgroundFocused);
            this.mSelector = this.mSelectorFocused;
        }
        return;
    }

    public boolean onKeyDown(int p3, android.view.KeyEvent p4)
    {
        boolean v0 = 1;
        if ((p3 != 19) || (!this.canScrollDown())) {
            if ((p3 != 20) || (!this.canScrollUp())) {
                v0 = super.onKeyDown(p3, p4);
            } else {
                this.mScrollMode = 1;
                this.scroll();
                this.mStopAnimation = 1;
            }
        } else {
            this.mScrollMode = 2;
            this.scroll();
            this.mStopAnimation = 1;
        }
        return v0;
    }

    public boolean onTouchEvent(android.view.MotionEvent p9)
    {
        int v3_0 = 0;
        int v2 = ((int) p9.getY());
        switch (p9.getAction()) {
            case 0:
                this.requestFocus();
                this.mDownY = v2;
                if ((v2 >= this.mSelectorY) && (v2 <= (this.mSelectorY + this.mSelector.getIntrinsicHeight()))) {
                    v3_0 = 1;
                }
                this.isDraggingSelector = v3_0;
                break;
            case 1:
            default:
                this.mSelectorY = this.mSelectorDefaultY;
                this.mStopAnimation = 1;
                this.invalidate();
                break;
            case 2:
                if (!this.isDraggingSelector) {
                } else {
                    int v1 = (this.mSelectorDefaultY + (v2 - this.mDownY));
                    if ((v1 > this.mSelectorMinY) || (!this.canScrollDown())) {
                        if ((v1 < this.mSelectorMaxY) || (!this.canScrollUp())) {
                            this.mSelectorY = v1;
                            this.mStopAnimation = 1;
                        } else {
                            this.mSelectorY = this.mSelectorMaxY;
                            this.mStopAnimation = 0;
                            if (this.mScrollMode == 1) {
                            } else {
                                this.mScrollMode = 1;
                                this.scroll();
                            }
                        }
                    } else {
                        this.mSelectorY = this.mSelectorMinY;
                        this.mStopAnimation = 0;
                        if (this.mScrollMode == 2) {
                        } else {
                            this.mScrollMode = 2;
                            this.scroll();
                        }
                    }
                }
                break;
        }
        return 1;
    }

    public void setItems(String[] p1)
    {
        this.mTextList = p1;
        this.calculateTextPositions();
        return;
    }

    public void setOnChangeListener(net.sourceforge.servestream.button.VerticalTextSpinner$OnChangedListener p1)
    {
        this.mListener = p1;
        return;
    }

    public void setScrollInterval(long p1)
    {
        this.mScrollInterval = p1;
        this.calculateAnimationValues();
        return;
    }

    public void setSelectedPos(int p1)
    {
        this.mCurrentSelectedPos = p1;
        this.calculateTextPositions();
        this.postInvalidate();
        return;
    }

    public void setWrapAround(boolean p1)
    {
        this.mWrapAround = p1;
        return;
    }
}
package net.sourceforge.servestream.dbutils;
public class Stream {
    private static String DEFAULT_HTTPS_PORT;
    private static String DEFAULT_HTTP_PORT;
    private String color;
    private String contentType;
    private long fontsize;
    private String hostname;
    private long id;
    private long lastconnect;
    private String nickname;
    private String password;
    private String path;
    private String port;
    private String protocol;
    private String query;
    private String reference;
    private String username;

    static Stream()
    {
        net.sourceforge.servestream.dbutils.Stream.DEFAULT_HTTP_PORT = "80";
        net.sourceforge.servestream.dbutils.Stream.DEFAULT_HTTPS_PORT = "443";
        return;
    }

    public Stream()
    {
        this.id = -1;
        this.nickname = 0;
        this.protocol = 0;
        this.username = 0;
        this.password = 0;
        this.hostname = 0;
        this.port = 0;
        this.path = 0;
        this.query = 0;
        this.reference = 0;
        this.lastconnect = -1;
        this.contentType = 0;
        this.color = 0;
        return;
    }

    public Stream(String p11)
    {
        this.id = -1;
        this.nickname = 0;
        this.protocol = 0;
        this.username = 0;
        this.password = 0;
        this.hostname = 0;
        this.port = 0;
        this.path = 0;
        this.query = 0;
        this.reference = 0;
        this.lastconnect = -1;
        this.contentType = 0;
        this.color = 0;
        if (p11 != null) {
            java.net.URL v2_1 = new java.net.URL(p11);
            this.nickname = this.scrubURL(v2_1);
            this.protocol = v2_1.getProtocol();
            if ((this.protocol == null) || ((this.protocol.equalsIgnoreCase("http")) || (this.protocol.equalsIgnoreCase("https")))) {
                if (v2_1.getUserInfo() == null) {
                    this.username = "";
                    this.password = "";
                } else {
                    String[] v0 = v2_1.getUserInfo().split("\\:");
                    if (v0.length != 2) {
                        this.username = "";
                        this.password = "";
                    } else {
                        this.username = v0[0];
                        this.password = v0[1];
                    }
                }
                this.hostname = v2_1.getHost();
                if (v2_1.getPort() != -1) {
                    this.port = String.valueOf(v2_1.getPort());
                } else {
                    if (!this.protocol.equalsIgnoreCase("http")) {
                        if (this.protocol.equalsIgnoreCase("https")) {
                            this.port = net.sourceforge.servestream.dbutils.Stream.DEFAULT_HTTPS_PORT;
                        }
                    } else {
                        this.port = net.sourceforge.servestream.dbutils.Stream.DEFAULT_HTTP_PORT;
                    }
                }
                this.path = v2_1.getPath();
                if (v2_1.getQuery() == null) {
                    this.query = "";
                } else {
                    this.query = v2_1.getQuery();
                }
                if (v2_1.getRef() == null) {
                    this.reference = "";
                } else {
                    this.reference = v2_1.getRef();
                }
                String[] v1 = this.hostname.split("\\:");
                if (v1.length == 2) {
                    this.hostname = v1[0];
                    this.port = v1[1];
                }
                return;
            } else {
                throw new java.net.MalformedURLException();
            }
        } else {
            throw new java.net.MalformedURLException();
        }
    }

    private java.net.URL getURL(boolean p4)
    {
        StringBuilder v0_1 = new StringBuilder();
        v0_1.append(this.protocol).append("://");
        if ((!p4) && (!this.username.equals(""))) {
            v0_1.append(this.username).append(":").append(this.password).append("@");
        }
        v0_1.append(this.hostname).append(58).append(this.port).append(this.path);
        if (!this.query.equals("")) {
            v0_1.append(63).append(this.query);
        }
        if (!this.reference.equals("")) {
            v0_1.append(35).append(this.reference);
        }
        return new java.net.URL(v0_1.toString());
    }

    private android.net.Uri getUri(boolean p4)
    {
        StringBuilder v0_1 = new StringBuilder();
        v0_1.append(this.protocol).append("://");
        if ((!p4) && (!this.username.equals(""))) {
            v0_1.append(this.username).append(":").append(this.password).append("@");
        }
        v0_1.append(this.hostname).append(58).append(this.port).append(this.path);
        if (!this.query.equals("")) {
            v0_1.append(63).append(this.query);
        }
        if (!this.reference.equals("")) {
            v0_1.append(35).append(this.reference);
        }
        return android.net.Uri.parse(v0_1.toString());
    }

    private String scrubURL(java.net.URL p4)
    {
        String v1_4;
        if (p4.getUserInfo() == null) {
            v1_4 = p4.toString();
        } else {
            v1_4 = p4.toString().replace(new StringBuilder().append(p4.getUserInfo()).append("@").toString(), "");
        }
        return v1_4;
    }

    public boolean equals(Object p8)
    {
        int v1 = 1;
        int v2 = 0;
        if ((p8 != null) && ((p8 instanceof net.sourceforge.servestream.dbutils.Stream))) {
            if ((this.id == -1) || (((net.sourceforge.servestream.dbutils.Stream) p8).getId() == -1)) {
                if (this.nickname != null) {
                    if (!this.nickname.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getNickname())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getNickname() != null) {
                        return v2;
                    }
                }
                if (this.protocol != null) {
                    if (!this.protocol.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getProtocol())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getProtocol() != null) {
                        return v2;
                    }
                }
                if (this.username != null) {
                    if (!this.username.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getUsername())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getUsername() != null) {
                        return v2;
                    }
                }
                if (this.password != null) {
                    if (!this.password.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getPassword())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getPassword() != null) {
                        return v2;
                    }
                }
                if (this.hostname != null) {
                    if (!this.hostname.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getHostname())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getHostname() != null) {
                        return v2;
                    }
                }
                if (this.port != null) {
                    if (!this.port.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getPort())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getPort() != null) {
                        return v2;
                    }
                }
                if (this.path != null) {
                    if (!this.path.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getPath())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getPath() != null) {
                        return v2;
                    }
                }
                if (this.query != null) {
                    if (!this.query.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getQuery())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getQuery() != null) {
                        return v2;
                    }
                }
                if (this.reference != null) {
                    if (!this.reference.equals(((net.sourceforge.servestream.dbutils.Stream) p8).getReference())) {
                        return v2;
                    }
                } else {
                    if (((net.sourceforge.servestream.dbutils.Stream) p8).getReference() != null) {
                        return v2;
                    }
                }
                v2 = 1;
            } else {
                if (((net.sourceforge.servestream.dbutils.Stream) p8).getId() != this.id) {
                    v1 = 0;
                }
                v2 = v1;
            }
        }
        return v2;
    }

    public String getColor()
    {
        return this.color;
    }

    public String getContentType()
    {
        return this.contentType;
    }

    public long getFontSize()
    {
        return this.fontsize;
    }

    public String getHostname()
    {
        return this.hostname;
    }

    public long getId()
    {
        return this.id;
    }

    public long getLastConnect()
    {
        return this.lastconnect;
    }

    public String getNickname()
    {
        return this.nickname;
    }

    public String getPassword()
    {
        return this.password;
    }

    public String getPath()
    {
        return this.path;
    }

    public String getPort()
    {
        return this.port;
    }

    public String getProtocol()
    {
        return this.protocol;
    }

    public String getQuery()
    {
        return this.query;
    }

    public String getReference()
    {
        return this.reference;
    }

    public java.net.URL getScrubbedURL()
    {
        return this.getURL(1);
    }

    public android.net.Uri getScrubbedUri()
    {
        return this.getUri(1);
    }

    public java.net.URL getURL()
    {
        return this.getURL(0);
    }

    public android.net.Uri getUri()
    {
        return this.getUri(0);
    }

    public String getUsername()
    {
        return this.username;
    }

    public int hashCode()
    {
        int v1_25;
        int v2_0 = 0;
        if (this.id == -1) {
            int v1_0;
            if (this.nickname != null) {
                v1_0 = this.nickname.hashCode();
            } else {
                v1_0 = 0;
            }
            int v1_3;
            String v3_0 = ((v1_0 + 217) * 31);
            if (this.protocol != null) {
                v1_3 = this.protocol.hashCode();
            } else {
                v1_3 = 0;
            }
            int v1_6;
            String v3_2 = ((v3_0 + v1_3) * 31);
            if (this.username != null) {
                v1_6 = this.username.hashCode();
            } else {
                v1_6 = 0;
            }
            int v1_9;
            String v3_3 = ((v3_2 + v1_6) * 31);
            if (this.password != null) {
                v1_9 = this.password.hashCode();
            } else {
                v1_9 = 0;
            }
            int v1_13;
            String v3_4 = ((v3_3 + v1_9) * 31);
            if (this.hostname != null) {
                v1_13 = this.hostname.hashCode();
            } else {
                v1_13 = 0;
            }
            int v1_16;
            String v3_5 = ((v3_4 + v1_13) * 31);
            if (this.port != null) {
                v1_16 = this.port.hashCode();
            } else {
                v1_16 = 0;
            }
            int v1_19;
            String v3_6 = ((v3_5 + v1_16) * 31);
            if (this.path != null) {
                v1_19 = this.path.hashCode();
            } else {
                v1_19 = 0;
            }
            int v1_23;
            String v3_7 = ((v3_6 + v1_19) * 31);
            if (this.query != null) {
                v1_23 = this.query.hashCode();
            } else {
                v1_23 = 0;
            }
            int v1_24 = ((v3_7 + v1_23) * 31);
            if (this.reference != null) {
                v2_0 = this.reference.hashCode();
            }
            v1_25 = (v1_24 + v2_0);
        } else {
            v1_25 = ((int) this.id);
        }
        return v1_25;
    }

    public void setColor(String p1)
    {
        this.color = p1;
        return;
    }

    public void setContentType(String p1)
    {
        this.contentType = p1;
        return;
    }

    public void setFontSize(long p1)
    {
        this.fontsize = p1;
        return;
    }

    public void setHostname(String p1)
    {
        this.hostname = p1;
        return;
    }

    public void setID(long p1)
    {
        this.id = p1;
        return;
    }

    public void setLastConnect(long p1)
    {
        this.lastconnect = p1;
        return;
    }

    public void setNickname(String p1)
    {
        this.nickname = p1;
        return;
    }

    public void setPassword(String p1)
    {
        this.password = p1;
        return;
    }

    public void setPath(String p1)
    {
        this.path = p1;
        return;
    }

    public void setPort(String p1)
    {
        this.port = p1;
        return;
    }

    public void setProtocol(String p1)
    {
        this.protocol = p1;
        return;
    }

    public void setQuery(String p1)
    {
        this.query = p1;
        return;
    }

    public void setReference(String p1)
    {
        this.reference = p1;
        return;
    }

    public void setUsername(String p1)
    {
        this.username = p1;
        return;
    }
}
package net.sourceforge.servestream.dbutils;
public class StreamDatabase extends android.database.sqlite.SQLiteOpenHelper {
    public static final String DATABASE_NAME = "servestream.db";
    private static final int DATABASE_VERSION = 4;
    public static final String FIELD_STREAM_COLOR = "color";
    public static final String FIELD_STREAM_FONTSIZE = "fontsize";
    public static final String FIELD_STREAM_HOSTNAME = "hostname";
    public static final String FIELD_STREAM_ID = "_id";
    public static final String FIELD_STREAM_LASTCONNECT = "lastconnect";
    public static final String FIELD_STREAM_NICKNAME = "nickname";
    public static final String FIELD_STREAM_PASSWORD = "password";
    public static final String FIELD_STREAM_PATH = "path";
    public static final String FIELD_STREAM_PORT = "port";
    public static final String FIELD_STREAM_PROTOCOL = "protocol";
    public static final String FIELD_STREAM_QUERY = "query";
    public static final String FIELD_STREAM_REFERENCE = "reference";
    public static final String FIELD_STREAM_USERNAME = "username";
    private static final String STREAM_TABLE_CREATE = "CREATE TABLE streams (_id INTEGER PRIMARY KEY, nickname TEXT, protocol TEXT, username TEXT, password TEXT, hostname TEXT, port TEXT, path TEXT, query TEXT, reference TEXT, lastconnect INTEGER, color TEXT, fontsize INTEGER);";
    public static final String TABLE_STREAMS = "streams";
    public static final String TAG;
    public static final Object[] dbLock;

    static StreamDatabase()
    {
        net.sourceforge.servestream.dbutils.StreamDatabase.TAG = net.sourceforge.servestream.dbutils.StreamDatabase.getName();
        Object[] v0_3 = new Object[0];
        net.sourceforge.servestream.dbutils.StreamDatabase.dbLock = v0_3;
        return;
    }

    public StreamDatabase(android.content.Context p4)
    {
        super(p4, "servestream.db", 0, 4);
        super.getWritableDatabase().close();
        return;
    }

    private java.util.ArrayList createStreamList(android.database.Cursor p20)
    {
        java.util.ArrayList v16_1 = new java.util.ArrayList();
        int v5 = p20.getColumnIndexOrThrow("_id");
        int v7 = p20.getColumnIndexOrThrow("nickname");
        int v11 = p20.getColumnIndexOrThrow("protocol");
        int v14 = p20.getColumnIndexOrThrow("username");
        int v8 = p20.getColumnIndexOrThrow("password");
        int v4 = p20.getColumnIndexOrThrow("hostname");
        int v10 = p20.getColumnIndexOrThrow("port");
        int v9 = p20.getColumnIndexOrThrow("path");
        int v12 = p20.getColumnIndexOrThrow("query");
        int v13 = p20.getColumnIndexOrThrow("reference");
        int v6 = p20.getColumnIndexOrThrow("lastconnect");
        int v2 = p20.getColumnIndexOrThrow("color");
        int v3 = p20.getColumnIndexOrThrow("fontsize");
        while (p20.moveToNext()) {
            net.sourceforge.servestream.dbutils.Stream v15_1 = new net.sourceforge.servestream.dbutils.Stream();
            v15_1.setID(p20.getLong(v5));
            v15_1.setNickname(p20.getString(v7));
            v15_1.setProtocol(p20.getString(v11));
            v15_1.setUsername(p20.getString(v14));
            v15_1.setPassword(p20.getString(v8));
            v15_1.setHostname(p20.getString(v4));
            v15_1.setPort(p20.getString(v10));
            v15_1.setPath(p20.getString(v9));
            v15_1.setQuery(p20.getString(v12));
            v15_1.setReference(p20.getString(v13));
            v15_1.setLastConnect(p20.getLong(v6));
            v15_1.setColor(p20.getString(v2));
            v15_1.setFontSize(p20.getLong(v3));
            v16_1.add(v15_1);
        }
        return v16_1;
    }

    private java.util.ArrayList createStreams(android.database.Cursor p20)
    {
        java.util.ArrayList v16_1 = new java.util.ArrayList();
        int v5 = p20.getColumnIndexOrThrow("_id");
        int v7 = p20.getColumnIndexOrThrow("nickname");
        int v11 = p20.getColumnIndexOrThrow("protocol");
        int v14 = p20.getColumnIndexOrThrow("username");
        int v8 = p20.getColumnIndexOrThrow("password");
        int v4 = p20.getColumnIndexOrThrow("hostname");
        int v10 = p20.getColumnIndexOrThrow("port");
        int v9 = p20.getColumnIndexOrThrow("path");
        int v12 = p20.getColumnIndexOrThrow("query");
        int v13 = p20.getColumnIndexOrThrow("reference");
        int v6 = p20.getColumnIndexOrThrow("lastconnect");
        int v2 = p20.getColumnIndexOrThrow("color");
        int v3 = p20.getColumnIndexOrThrow("fontsize");
        while (p20.moveToNext()) {
            net.sourceforge.servestream.dbutils.Stream v15_1 = new net.sourceforge.servestream.dbutils.Stream();
            v15_1.setID(p20.getLong(v5));
            v15_1.setNickname(p20.getString(v7));
            v15_1.setProtocol(p20.getString(v11));
            v15_1.setUsername(p20.getString(v14));
            v15_1.setPassword(p20.getString(v8));
            v15_1.setHostname(p20.getString(v4));
            v15_1.setPort(p20.getString(v10));
            v15_1.setPath(p20.getString(v9));
            v15_1.setQuery(p20.getString(v12));
            v15_1.setReference(p20.getString(v13));
            v15_1.setLastConnect(p20.getLong(v6));
            v15_1.setColor(p20.getString(v2));
            v15_1.setFontSize(p20.getLong(v3));
            v16_1.add(v15_1);
        }
        return v16_1;
    }

    private net.sourceforge.servestream.dbutils.Stream getFirstStream(android.database.Cursor p4)
    {
        net.sourceforge.servestream.dbutils.Stream v0_0 = 0;
        java.util.ArrayList v1 = this.createStreams(p4);
        if (v1.size() > 0) {
            v0_0 = ((net.sourceforge.servestream.dbutils.Stream) v1.get(0));
        }
        p4.close();
        return v0_0;
    }

    public void deleteStream(net.sourceforge.servestream.dbutils.Stream p9)
    {
        if (p9.getId() >= 0) {
            try {
                android.database.sqlite.SQLiteDatabase v0 = this.getWritableDatabase();
                String[] v4_1 = new String[1];
                v4_1[0] = String.valueOf(p9.getId());
                v0.delete("streams", "_id = ?", v4_1);
            } catch (Throwable v1_1) {
                throw v1_1;
            }
        }
        return;
    }

    public net.sourceforge.servestream.dbutils.Stream findStream(int p12)
    {
        try {
            android.database.sqlite.SQLiteDatabase v0 = this.getReadableDatabase();
            String[] v4_1 = new String[1];
            v4_1[0] = String.valueOf(p12);
            return this.getFirstStream(v0.query("streams", 0, "_id = ?", v4_1, 0, 0, 0));
        } catch (Throwable v1_0) {
            throw v1_0;
        }
    }

    public net.sourceforge.servestream.dbutils.Stream findStream(net.sourceforge.servestream.dbutils.Stream p20)
    {
        StringBuilder v16_1 = new StringBuilder();
        int v17_1 = new java.util.ArrayList();
        java.util.Iterator v11 = this.getSelectionArgs(p20).entrySet().iterator();
        int v12 = 0;
        while (v11.hasNext()) {
            java.util.Map$Entry v10_1 = ((java.util.Map$Entry) v11.next());
            int v13 = (v12 + 1);
            if (v12 > 0) {
                v16_1.append(" AND ");
            }
            v16_1.append(((String) v10_1.getKey())).append(" = ?");
            v17_1.add(v10_1.getValue());
            v12 = v13;
        }
        String[] v5 = new String[v17_1.size()];
        v17_1.toArray(v5);
        Object[] v18 = net.sourceforge.servestream.dbutils.StreamDatabase.dbLock;
        try {
            return this.getFirstStream(this.getReadableDatabase().query("streams", 0, v16_1.toString(), v5, 0, 0, 0));
        } catch (Throwable v2_3) {
            throw v2_3;
        }
    }

    public java.util.HashMap getSelectionArgs(net.sourceforge.servestream.dbutils.Stream p4)
    {
        java.util.HashMap v0_1 = new java.util.HashMap();
        v0_1.put("protocol", p4.getProtocol());
        v0_1.put("username", p4.getUsername());
        v0_1.put("password", p4.getPassword());
        v0_1.put("hostname", p4.getHostname());
        v0_1.put("port", p4.getPort());
        v0_1.put("path", p4.getPath());
        v0_1.put("query", p4.getQuery());
        v0_1.put("reference", p4.getReference());
        return v0_1;
    }

    public java.util.ArrayList getStreams()
    {
        return this.getStreams(0);
    }

    public java.util.ArrayList getStreams(boolean p14)
    {
        String v9;
        if (!p14) {
            v9 = "_id";
        } else {
            v9 = "nickname";
        }
        new java.util.ArrayList();
        android.database.Cursor v8 = this.getWritableDatabase().query("streams", 0, 0, 0, 0, 0, new StringBuilder().append(v9).append(" ASC").toString());
        java.util.ArrayList v10_0 = this.createStreamList(v8);
        v8.close();
        return v10_0;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase p3)
    {
        p3.execSQL("CREATE TABLE streams (_id INTEGER PRIMARY KEY, nickname TEXT, protocol TEXT, username TEXT, password TEXT, hostname TEXT, port TEXT, path TEXT, query TEXT, reference TEXT, lastconnect INTEGER, color TEXT, fontsize INTEGER);");
        android.util.Log.v(net.sourceforge.servestream.dbutils.StreamDatabase.TAG, "new table created");
        return;
    }

    public void onRobustUpgrade(android.database.sqlite.SQLiteDatabase p2, int p3, int p4)
    {
        if (p3 <= 2) {
            p2.execSQL("DROP TABLE IF EXISTS streams");
            this.onCreate(p2);
        }
        switch (p3) {
            case 3:
                p2.execSQL("ALTER TABLE streams ADD COLUMN reference TEXT DEFAULT \'\'");
                break;
        }
        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase p2, int p3, int p4)
    {
        try {
            this.onRobustUpgrade(p2, p3, p4);
        } catch (android.database.sqlite.SQLiteException v0) {
        }
        return;
    }

    public net.sourceforge.servestream.dbutils.Stream saveStream(net.sourceforge.servestream.dbutils.Stream p13)
    {
        android.content.ContentValues v0 = 0;
        try {
            android.database.sqlite.SQLiteDatabase v2_1 = this.getWritableDatabase();
            android.content.ContentValues v1_1 = new android.content.ContentValues();
            try {
                v1_1.put("nickname", p13.getNickname());
                v1_1.put("protocol", p13.getProtocol());
                v1_1.put("username", p13.getUsername());
                v1_1.put("password", p13.getPassword());
                v1_1.put("hostname", p13.getHostname());
                v1_1.put("port", p13.getPort());
                v1_1.put("path", p13.getPath());
                v1_1.put("query", p13.getQuery());
                v1_1.put("reference", p13.getReference());
                v1_1.put("lastconnect", Long.valueOf(p13.getLastConnect()));
                v1_1.put("color", p13.getColor());
                v1_1.put("fontsize", Long.valueOf(p13.getFontSize()));
                p13.setID(v2_1.insert("streams", 0, v1_1));
                android.database.sqlite.SQLiteDatabase v2 = 0;
                try {
                    android.content.ContentValues v0_1 = new android.content.ContentValues();
                } catch (String v5_11) {
                    throw v5_11;
                } catch (String v5_11) {
                }
                if ((p13.getUsername() != null) && (p13.getUsername().equals(""))) {
                    v0_1.put("username", "");
                }
                if ((p13.getPassword() != null) && (p13.getPassword().equals(""))) {
                    v0_1.put("password", "");
                }
                if ((p13.getQuery() != null) && (p13.getQuery().equals(""))) {
                    v0_1.put("query", "");
                }
                if ((p13.getReference() != null) && (p13.getReference().equals(""))) {
                    v0_1.put("reference", "");
                }
                if (v0_1.size() > 0) {
                    android.util.Log.v(net.sourceforge.servestream.dbutils.StreamDatabase.TAG, "Replacing null values");
                    android.database.sqlite.SQLiteDatabase v2_0 = this.getWritableDatabase();
                    String[] v8_1 = new String[1];
                    v8_1[0] = String.valueOf(p13.getId());
                    v2_0.update("streams", v0_1, "_id = ?", v8_1);
                }
                android.util.Log.v("TAG", "Stream wrote to database");
                return p13;
            } catch (String v5_24) {
                throw v5_24;
            }
        } catch (String v5_24) {
        }
    }

    public void touchHost(net.sourceforge.servestream.dbutils.Stream p12)
    {
        long v1 = (System.currentTimeMillis() / 1000);
        android.content.ContentValues v3_1 = new android.content.ContentValues();
        v3_1.put("lastconnect", Long.valueOf(v1));
        try {
            android.database.sqlite.SQLiteDatabase v0 = this.getWritableDatabase();
            String[] v7_1 = new String[1];
            v7_1[0] = String.valueOf(p12.getId());
            v0.update("streams", v3_1, "_id = ?", v7_1);
            return;
        } catch (Throwable v4_2) {
            throw v4_2;
        }
    }
}
package net.sourceforge.servestream.filemanager;
public class DirectoryContents {
    private java.util.List mListFiles;

    public DirectoryContents()
    {
        return;
    }

    public java.util.List getListFiles()
    {
        return this.mListFiles;
    }

    public void setListFiles(java.util.List p1)
    {
        this.mListFiles = p1;
        return;
    }
}
package net.sourceforge.servestream.filemanager;
public class DirectoryScanner extends java.lang.Thread {
    private static final String TAG;
    public boolean cancel;
    private android.content.Context context;
    private net.sourceforge.servestream.dbutils.Stream currentDirectory;
    private android.os.Handler handler;

    static DirectoryScanner()
    {
        net.sourceforge.servestream.filemanager.DirectoryScanner.TAG = net.sourceforge.servestream.filemanager.DirectoryScanner.getName();
        return;
    }

    public DirectoryScanner(net.sourceforge.servestream.dbutils.Stream p2, android.content.Context p3, android.os.Handler p4)
    {
        super("Directory Scanner");
        super.currentDirectory = p2;
        super.context = p3;
        super.handler = p4;
        return;
    }

    private void clearData()
    {
        this.context = 0;
        this.handler = 0;
        return;
    }

    private boolean isDirectory(net.sourceforge.servestream.dbutils.Stream p3)
    {
        boolean v0_2;
        if (p3.getContentType() != null) {
            v0_2 = p3.getContentType().contains("text/");
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    private android.graphics.drawable.Drawable resizeDrawable(android.graphics.drawable.Drawable p12, int p13, int p14)
    {
        int v3 = p12.getIntrinsicWidth();
        int v4 = p12.getIntrinsicHeight();
        if (((v3 > 0) && ((v4 > 0) && (p13 < v3))) || (p14 < v4)) {
            float v9 = Math.min((((float) p13) / ((float) v3)), (((float) p14) / ((float) v4)));
            android.graphics.Matrix v5_1 = new android.graphics.Matrix();
            v5_1.postScale(v9, v9);
            android.graphics.Bitmap v7 = android.graphics.Bitmap.createBitmap(((android.graphics.drawable.BitmapDrawable) p12).getBitmap(), 0, 0, v3, v4, v5_1, 1);
            new android.graphics.Canvas(v7).drawBitmap(v7, 0, 0, 0);
            p12 = new android.graphics.drawable.BitmapDrawable(v7);
        }
        return p12;
    }

    android.graphics.drawable.Drawable getDrawableForMimetype(android.net.Uri p8, String p9)
    {
        android.graphics.drawable.Drawable v5_0 = 0;
        if (p9 != null) {
            android.content.pm.PackageManager v3 = this.context.getPackageManager();
            android.content.Intent v1_1 = new android.content.Intent("android.intent.action.VIEW");
            v1_1.setDataAndType(p8, p9);
            java.util.List v2 = v3.queryIntentActivities(v1_1, 65536);
            if ((v2 != null) && (v2.size() > 0)) {
                v5_0 = ((android.content.pm.ResolveInfo) v2.get((v2.size() - 1))).loadIcon(v3);
            }
        }
        return v5_0;
    }

    public void run()
    {
        android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, new StringBuilder().append("Scanning directory ").append(this.currentDirectory).toString());
        try {
            net.sourceforge.servestream.utils.WebpageParser v17 = new net.sourceforge.servestream.utils.WebpageParser;
            v17(this.currentDirectory.getURL());
            v17.parse();
            java.util.List v8 = v17.getParsedLinks();
        } catch (java.net.MalformedURLException v6) {
            v6.printStackTrace();
        }
        if (!this.cancel) {
            int v16;
            if (v8 != null) {
                v16 = v8.size();
            } else {
                android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, "Returned null - inaccessible directory?");
                v16 = 0;
            }
            android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, new StringBuilder().append("Counting files... (total count=").append(v16).append(")").toString());
            java.util.ArrayList v13_1 = new java.util.ArrayList(v16);
            android.graphics.drawable.Drawable v9 = this.context.getResources().getDrawable(2130837537);
            android.graphics.drawable.Drawable v10 = this.context.getResources().getDrawable(2130837516);
            if (v8 != null) {
                java.util.Iterator v12 = v8.iterator();
                while (v12.hasNext()) {
                    net.sourceforge.servestream.dbutils.Stream v4_1 = ((net.sourceforge.servestream.dbutils.Stream) v12.next());
                    if (!this.cancel) {
                        if (!this.isDirectory(v4_1)) {
                            android.graphics.drawable.Drawable v5_1;
                            android.graphics.drawable.Drawable v5_0 = this.getDrawableForMimetype(v4_1.getUri(), net.sourceforge.servestream.utils.URLUtils.getContentType(v4_1.getNickname()));
                            if (v5_0 != null) {
                                v5_1 = this.resizeDrawable(v5_0, v10.getIntrinsicWidth(), v10.getIntrinsicHeight());
                            } else {
                                v5_1 = v10;
                            }
                            net.sourceforge.servestream.filemanager.IconifiedText v19_4 = new net.sourceforge.servestream.filemanager.IconifiedText;
                            v19_4(v4_1.getNickname(), v4_1.getUri().toString(), v4_1, v5_1);
                            v13_1.add(v19_4);
                        } else {
                            net.sourceforge.servestream.filemanager.IconifiedText v19_5 = new net.sourceforge.servestream.filemanager.IconifiedText;
                            v19_5(v4_1.getNickname(), v4_1.getUri().toString(), v4_1, v9);
                            v13_1.add(v19_5);
                        }
                    } else {
                        android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, "Scan aborted while checking files");
                        this.clearData();
                        return;
                    }
                }
            }
            android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, "Sorting results...");
            if (!this.cancel) {
                android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, "Sending data back to main thread");
                net.sourceforge.servestream.filemanager.DirectoryContents v3_1 = new net.sourceforge.servestream.filemanager.DirectoryContents();
                v3_1.setListFiles(v13_1);
                android.os.Message v15 = this.handler.obtainMessage(1);
                v15.obj = v3_1;
                v15.sendToTarget();
            }
            this.clearData();
        } else {
            android.util.Log.v(net.sourceforge.servestream.filemanager.DirectoryScanner.TAG, "Scan aborted");
            this.clearData();
        }
        return;
    }
}
package net.sourceforge.servestream.filemanager;
public class IconifiedText {
    private android.graphics.drawable.Drawable mIcon;
    private String mInfo;
    private boolean mSelectable;
    private boolean mSelected;
    private net.sourceforge.servestream.dbutils.Stream mStream;
    private String mText;

    public IconifiedText(String p2, String p3, net.sourceforge.servestream.dbutils.Stream p4, android.graphics.drawable.Drawable p5)
    {
        this.mText = "";
        this.mInfo = "";
        this.mStream = 0;
        this.mSelectable = 1;
        this.mText = p2;
        this.mInfo = p3;
        this.mStream = p4;
        this.mIcon = p5;
        return;
    }

    public android.graphics.drawable.Drawable getIcon()
    {
        return this.mIcon;
    }

    public String getInfo()
    {
        return this.mInfo;
    }

    public net.sourceforge.servestream.dbutils.Stream getStream()
    {
        return this.mStream;
    }

    public String getText()
    {
        return this.mText;
    }

    public boolean isSelectable()
    {
        return this.mSelectable;
    }

    public boolean isSelected()
    {
        return this.mSelected;
    }

    public void setIcon(android.graphics.drawable.Drawable p1)
    {
        this.mIcon = p1;
        return;
    }

    public void setInfo(String p1)
    {
        this.mInfo = p1;
        return;
    }

    public void setSelectable(boolean p1)
    {
        this.mSelectable = p1;
        return;
    }

    public void setSelected(boolean p1)
    {
        this.mSelected = p1;
        return;
    }

    public void setStream(net.sourceforge.servestream.dbutils.Stream p1)
    {
        this.mStream = p1;
        return;
    }

    public void setText(String p1)
    {
        this.mText = p1;
        return;
    }
}
package net.sourceforge.servestream.filemanager;
 class IconifiedTextListAdapter$IconifiedFilter extends android.widget.Filter {
    final synthetic net.sourceforge.servestream.filemanager.IconifiedTextListAdapter this$0;

    IconifiedTextListAdapter$IconifiedFilter(net.sourceforge.servestream.filemanager.IconifiedTextListAdapter p1)
    {
        this.this$0 = p1;
        return;
    }

    protected android.widget.Filter$FilterResults performFiltering(CharSequence p10)
    {
        boolean v7_4;
        if (p10 == null) {
            v7_4 = 0;
        } else {
            v7_4 = p10.toString();
        }
        net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$002(v7_4);
        android.widget.Filter$FilterResults v4_1 = new android.widget.Filter$FilterResults();
        if (net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$100(this.this$0) != null) {
            int v0 = net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$100(this.this$0).size();
            if ((p10 != null) && (p10.length() != 0)) {
                java.util.ArrayList v1_1 = new java.util.ArrayList(v0);
                int v3 = 0;
                String v2 = p10.toString().toLowerCase();
                int v6 = 0;
                while (v6 < v0) {
                    net.sourceforge.servestream.filemanager.IconifiedText v5_1 = ((net.sourceforge.servestream.filemanager.IconifiedText) net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$100(this.this$0).get(v6));
                    if (v5_1.getText().toLowerCase().contains(v2)) {
                        v1_1.add(v5_1);
                        v3++;
                    }
                    v6++;
                }
                v4_1.count = v3;
                v4_1.values = v1_1;
            } else {
                v4_1.count = v0;
                v4_1.values = net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$100(this.this$0);
            }
        } else {
            v4_1.count = 0;
            v4_1.values = 0;
        }
        return v4_1;
    }

    protected void publishResults(CharSequence p3, android.widget.Filter$FilterResults p4)
    {
        net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.access$202(this.this$0, ((java.util.List) p4.values));
        this.this$0.notifyDataSetChanged();
        return;
    }

    java.util.List synchronousFilter(CharSequence p3)
    {
        return ((java.util.List) ((java.util.List) this.performFiltering(p3).values));
    }
}
package net.sourceforge.servestream.filemanager;
public class IconifiedTextListAdapter extends android.widget.BaseAdapter implements android.widget.Filterable {
    private static String lastFilter;
    private android.content.Context mContext;
    private net.sourceforge.servestream.filemanager.IconifiedTextListAdapter$IconifiedFilter mFilter;
    private java.util.List mItems;
    private java.util.List mOriginalItems;

    public IconifiedTextListAdapter(android.content.Context p2)
    {
        this.mFilter = new net.sourceforge.servestream.filemanager.IconifiedTextListAdapter$IconifiedFilter(this);
        this.mItems = new java.util.ArrayList();
        this.mOriginalItems = new java.util.ArrayList();
        this.mContext = p2;
        return;
    }

    static synthetic String access$002(String p0)
    {
        net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.lastFilter = p0;
        return p0;
    }

    static synthetic java.util.List access$100(net.sourceforge.servestream.filemanager.IconifiedTextListAdapter p1)
    {
        return p1.mOriginalItems;
    }

    static synthetic java.util.List access$202(net.sourceforge.servestream.filemanager.IconifiedTextListAdapter p0, java.util.List p1)
    {
        p0.mItems = p1;
        return p1;
    }

    public void addItem(net.sourceforge.servestream.filemanager.IconifiedText p2)
    {
        this.mItems.add(p2);
        return;
    }

    public boolean areAllItemsSelectable()
    {
        return 0;
    }

    public int getCount()
    {
        return this.mItems.size();
    }

    public android.widget.Filter getFilter()
    {
        return this.mFilter;
    }

    public Object getItem(int p2)
    {
        return this.mItems.get(p2);
    }

    public long getItemId(int p3)
    {
        return ((long) p3);
    }

    public android.view.View getView(int p4, android.view.View p5, android.view.ViewGroup p6)
    {
        net.sourceforge.servestream.filemanager.IconifiedTextView v0_1;
        if (p5 != null) {
            v0_1 = ((net.sourceforge.servestream.filemanager.IconifiedTextView) p5);
        } else {
            v0_1 = new net.sourceforge.servestream.filemanager.IconifiedTextView(this.mContext, ((net.sourceforge.servestream.filemanager.IconifiedText) this.mItems.get(p4)));
        }
        v0_1.setText(((net.sourceforge.servestream.filemanager.IconifiedText) this.mItems.get(p4)).getText());
        v0_1.setInfo(((net.sourceforge.servestream.filemanager.IconifiedText) this.mItems.get(p4)).getInfo());
        v0_1.setIcon(((net.sourceforge.servestream.filemanager.IconifiedText) this.mItems.get(p4)).getIcon());
        return v0_1;
    }

    public void setListItems(java.util.List p3, boolean p4)
    {
        this.mOriginalItems = p3;
        if (!p4) {
            this.mItems = p3;
        } else {
            this.mItems = this.mFilter.synchronousFilter(net.sourceforge.servestream.filemanager.IconifiedTextListAdapter.lastFilter);
        }
        return;
    }
}
package net.sourceforge.servestream.filemanager;
public class IconifiedTextView extends android.widget.LinearLayout {
    private android.widget.ImageView mIcon;
    private android.widget.TextView mInfo;
    private android.widget.TextView mText;

    public IconifiedTextView(android.content.Context p4, net.sourceforge.servestream.filemanager.IconifiedText p5)
    {
        super(p4);
        ((android.view.LayoutInflater) p4.getSystemService("layout_inflater")).inflate(2130903054, super, 1);
        super.mIcon = ((android.widget.ImageView) super.findViewById(2131623986));
        super.mText = ((android.widget.TextView) super.findViewById(2131623991));
        super.mInfo = ((android.widget.TextView) super.findViewById(2131623992));
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable p2)
    {
        this.mIcon.setImageDrawable(p2);
        return;
    }

    public void setInfo(String p2)
    {
        this.mInfo.setText(p2);
        return;
    }

    public void setText(String p2)
    {
        this.mText.setText(p2);
        return;
    }
}
package net.sourceforge.servestream.metadata;
 class SHOUTcastMetadata$PollingAsyncTask extends android.os.AsyncTask {
    final synthetic net.sourceforge.servestream.metadata.SHOUTcastMetadata this$0;

    public SHOUTcastMetadata$PollingAsyncTask(net.sourceforge.servestream.metadata.SHOUTcastMetadata p1)
    {
        this.this$0 = p1;
        return;
    }

    protected varargs Boolean doInBackground(Void[] p7)
    {
        int v2 = 0;
        android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Starting polling thread");
        try {
            while ((v2 < 2) && (!this.isCancelled())) {
                net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$200(this.this$0, net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$100(this.this$0));
                v2++;
                if (!net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$300(this.this$0)) {
                    android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Metadata not found");
                } else {
                    v2 = 0;
                    net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$400(this.this$0);
                    android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Metadata found");
                    net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$500(this.this$0).updateMetadata();
                }
                android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Sleeping...");
                Thread.sleep(10000);
            }
        } catch (long v3_12) {
            android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Stopping polling thread");
            throw v3_12;
        } catch (InterruptedException v0) {
            v0.printStackTrace();
            android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Stopping polling thread");
            return Boolean.valueOf(1);
        }
        android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.access$000(), "Stopping polling thread");
        return Boolean.valueOf(1);
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((Void[]) p2));
    }
}
package net.sourceforge.servestream.metadata;
public class SHOUTcastMetadata extends android.content.BroadcastReceiver {
    private static final String ARTIST = "artist";
    private static final int POLLING_FREQUENCY = 10000;
    private static final String STREAM_TITLE = "StreamTitle";
    private static final String STREAM_TITLE_REPLAY = "StreamTitleReplay";
    private static final String TAG = "";
    private static final String TITLE = "title";
    private boolean mContainsMetadata;
    private long mId;
    private Object[] mLock;
    private final net.sourceforge.servestream.service.MediaPlaybackService mMediaPlaybackService;
    private java.util.Map mMetadata;
    private net.sourceforge.servestream.metadata.SHOUTcastMetadata$PollingAsyncTask mPollingAsyncTask;
    private boolean mRetrieveSHOUTcastMetadata;
    private java.net.URL mUrl;

    static SHOUTcastMetadata()
    {
        net.sourceforge.servestream.metadata.SHOUTcastMetadata.TAG = net.sourceforge.servestream.metadata.SHOUTcastMetadata.getName();
        return;
    }

    public SHOUTcastMetadata(net.sourceforge.servestream.service.MediaPlaybackService p6, boolean p7)
    {
        this.mMetadata = 0;
        this.mId = -1;
        this.mUrl = 0;
        this.mContainsMetadata = 0;
        this.mPollingAsyncTask = 0;
        String v1_6 = new Object[0];
        this.mLock = v1_6;
        this.mMediaPlaybackService = p6;
        this.mRetrieveSHOUTcastMetadata = p7;
        this.mMetadata = new java.util.HashMap();
        android.content.IntentFilter v0_1 = new android.content.IntentFilter();
        v0_1.addAction("net.sourceforge.servestream.playbackstarted");
        v0_1.addAction("net.sourceforge.servestream.playstatechanged");
        v0_1.addAction("net.sourceforge.servestream.playbackcomplete");
        p6.registerReceiver(this, v0_1);
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.metadata.SHOUTcastMetadata.TAG;
    }

    static synthetic java.net.URL access$100(net.sourceforge.servestream.metadata.SHOUTcastMetadata p1)
    {
        return p1.mUrl;
    }

    static synthetic void access$200(net.sourceforge.servestream.metadata.SHOUTcastMetadata p0, java.net.URL p1)
    {
        p0.retrieveMetadata(p1);
        return;
    }

    static synthetic boolean access$300(net.sourceforge.servestream.metadata.SHOUTcastMetadata p1)
    {
        return p1.mContainsMetadata;
    }

    static synthetic int access$400(net.sourceforge.servestream.metadata.SHOUTcastMetadata p1)
    {
        return p1.updateMetadata();
    }

    static synthetic net.sourceforge.servestream.service.MediaPlaybackService access$500(net.sourceforge.servestream.metadata.SHOUTcastMetadata p1)
    {
        return p1.mMediaPlaybackService;
    }

    private void add(String p3, String p4)
    {
        if (p4 != null) {
            this.mMetadata.put(p3, p4);
        } else {
            this.mMetadata.put(p3, "Unknown");
        }
        return;
    }

    private void cancel()
    {
        if (this.mPollingAsyncTask != null) {
            this.mPollingAsyncTask.cancel(0);
            this.mPollingAsyncTask = 0;
        }
        return;
    }

    private void changeUrl(long p4)
    {
        String v1 = this.getUri(this.mMediaPlaybackService, p4);
        if (v1 != null) {
            try {
                this.mUrl = new java.net.URL(v1);
                this.mId = p4;
            } catch (java.net.MalformedURLException v0) {
                v0.printStackTrace();
            }
        }
        return;
    }

    private String get(String p3)
    {
        String v0_1 = ((String) this.mMetadata.get(p3));
        if (v0_1 == null) {
            v0_1 = "Unknown";
        }
        return v0_1;
    }

    private String getUri(android.content.Context p11, long p12)
    {
        String v7 = 0;
        String[] v2 = new String[1];
        v2[0] = "uri";
        String v0_3 = p11.getContentResolver();
        String[] v4_1 = new String[1];
        v4_1[0] = String.valueOf(p12);
        android.database.Cursor v6 = v0_3.query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2, "_id= ? ", v4_1, 0);
        if (v6.moveToFirst()) {
            v7 = v6.getString(v6.getColumnIndex("uri"));
        }
        v6.close();
        return v7;
    }

    private void parseMetadata(String p11)
    {
        java.util.HashMap v3_1 = new java.util.HashMap();
        String[] v2 = p11.split(";");
        java.util.regex.Pattern v4 = java.util.regex.Pattern.compile("^([a-zA-Z]+)=\\\'([^\\\']*)\\\'$");
        int v0 = 0;
        while (v0 < v2.length) {
            java.util.regex.Matcher v1 = v4.matcher(v2[v0]);
            if (v1.find()) {
                v3_1.put(v1.group(1), v1.group(2));
            }
            v0++;
        }
        String v5_1 = ((String) v3_1.get("StreamTitle"));
        if ((v5_1 != null) && (!v5_1.trim().equals(""))) {
            if (v5_1.indexOf("-") == -1) {
                this.add("artist", v5_1.trim());
                this.add("title", "");
            } else {
                this.add("artist", v5_1.substring(0, v5_1.indexOf("-")).trim());
                this.add("title", v5_1.substring((v5_1.indexOf("-") + 1)).trim());
            }
            this.mContainsMetadata = 1;
        } else {
            v5_1 = ((String) v3_1.get("StreamTitleReplay"));
            if ((v5_1 != null) && (!v5_1.trim().equals(""))) {
            }
        }
        return;
    }

    private void retrieveMetadata(java.net.URL p20)
    {
        int v13 = 0;
        java.io.InputStream v16 = 0;
        int v3 = 0;
        this.mContainsMetadata = 0;
        if (p20 != null) {
            try {
                java.net.HttpURLConnection v5 = net.sourceforge.servestream.utils.URLUtils.getConnection(this.mUrl);
                v5.setRequestProperty("Icy-MetaData", "1");
                v5.setRequestProperty("Connection", "close");
                v5.setRequestProperty("Accept", 0);
                v5.setConnectTimeout(6000);
                v5.setReadTimeout(6000);
                v5.connect();
                java.util.Map v8 = v5.getHeaderFields();
                v16 = v5.getInputStream();
            } catch (char v17_10) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v16);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v5);
                throw v17_10;
            } catch (Exception v7) {
                v7.printStackTrace();
                net.sourceforge.servestream.utils.Utils.closeInputStream(v16);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v5);
            }
            if (!v8.containsKey("icy-metaint")) {
                StringBuffer v15_1 = new StringBuffer();
                do {
                    char v4 = ((char) v16.read());
                    if (v4 == -1) {
                        break;
                    }
                    v3++;
                    v15_1.append(v4);
                } while(((v15_1.length() <= 5) || (!v15_1.substring((v15_1.length() - 4), v15_1.length()).equals("\r\n\r\n"))) && (v3 <= 200));
                java.util.regex.Matcher v10 = java.util.regex.Pattern.compile("\\r\\n(icy-metaint):\\s*(.*)\\r\\n").matcher(v15_1.toString());
                if (v10.find()) {
                    v13 = Integer.parseInt(v10.group(2));
                }
            } else {
                v13 = Integer.parseInt(((String) ((java.util.List) v8.get("icy-metaint")).get(0)));
            }
            if (v13 != 0) {
                int v6 = 0;
                int v12 = 4080;
                StringBuilder v11_1 = new StringBuilder();
                do {
                    int v2 = v16.read();
                    if (v2 == -1) {
                        break;
                    }
                    v6++;
                    if (v6 == (v13 + 1)) {
                        v12 = (v2 * 16);
                    }
                    if ((v6 <= (v13 + 1)) || (v6 >= (v13 + v12))) {
                        int v9 = 0;
                    } else {
                        v9 = 1;
                    }
                    if ((v9 != 0) && (v2 != 0)) {
                        v11_1.append(((char) v2));
                    }
                } while(v6 <= (v13 + v12));
                this.parseMetadata(v11_1.toString());
                net.sourceforge.servestream.utils.Utils.closeInputStream(v16);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v5);
            } else {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v16);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v5);
            }
        }
        return;
    }

    private void start()
    {
        if (this.mPollingAsyncTask != null) {
            this.cancel();
        }
        this.mPollingAsyncTask = new net.sourceforge.servestream.metadata.SHOUTcastMetadata$PollingAsyncTask(this);
        Void[] v1_1 = new Void[0];
        this.mPollingAsyncTask.execute(v1_1);
        return;
    }

    private int updateMetadata()
    {
        android.content.ContentValues v2_1 = new android.content.ContentValues();
        v2_1.put("artist", this.get("artist"));
        v2_1.put("title", this.get("title"));
        android.content.ContentResolver v3_1 = this.mMediaPlaybackService.getContentResolver();
        String[] v5_1 = new String[1];
        v5_1[0] = String.valueOf(this.mId);
        return v3_1.update(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2_1, "_id= ? ", v5_1);
    }

    public void cleanup()
    {
        this.cancel();
        this.mMediaPlaybackService.unregisterReceiver(this);
        return;
    }

    public void onReceive(android.content.Context p8, android.content.Intent p9)
    {
        String v0 = p9.getAction();
        if ((this.mRetrieveSHOUTcastMetadata) && ((v0.equals("net.sourceforge.servestream.playbackstarted")) || ((v0.equals("net.sourceforge.servestream.playstatechanged")) || (v0.equals("net.sourceforge.servestream.playbackcomplete"))))) {
            long v1 = p9.getLongExtra("id", -1);
            if (!v0.equals("net.sourceforge.servestream.playbackstarted")) {
                if (!v0.equals("net.sourceforge.servestream.playstatechanged")) {
                    if (v0.equals("net.sourceforge.servestream.playbackcomplete")) {
                        this.cancel();
                    }
                } else {
                    boolean vtmp12 = p9.getBooleanExtra("playing", 0);
                    if (v1 == this.mId) {
                        if (!vtmp12) {
                            this.cancel();
                        } else {
                            if (this.mContainsMetadata) {
                                this.start();
                            } else {
                                android.util.Log.v(net.sourceforge.servestream.metadata.SHOUTcastMetadata.TAG, "Not starting thread because URL doesn\'t have metadata");
                            }
                        }
                    }
                }
            } else {
                this.changeUrl(v1);
                this.start();
            }
        } else {
            android.util.Log.w(net.sourceforge.servestream.metadata.SHOUTcastMetadata.TAG, new StringBuilder().append("onReceived() called: ").append(p9).toString());
        }
        return;
    }

    public void setShouldRetrieveMetadata(boolean p5)
    {
        try {
            this.mRetrieveSHOUTcastMetadata = p5;
        } catch (net.sourceforge.servestream.service.MediaPlaybackService v2_0) {
            throw v2_0;
        }
        if (!this.mRetrieveSHOUTcastMetadata) {
            this.cancel();
        } else {
            this.changeUrl(this.mMediaPlaybackService.getAudioId());
            this.start();
        }
        return;
    }
}
package net.sourceforge.servestream.player;
 class MultiPlayer$1 implements android.media.MediaPlayer$OnPreparedListener {
    final synthetic net.sourceforge.servestream.player.MultiPlayer this$0;

    MultiPlayer$1(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onPrepared(android.media.MediaPlayer p3)
    {
        android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.access$000(), "media player is prepared");
        net.sourceforge.servestream.player.MultiPlayer.access$102(this.this$0, 1);
        net.sourceforge.servestream.player.MultiPlayer.access$200(this.this$0).sendEmptyMessage(6);
        return;
    }
}
package net.sourceforge.servestream.player;
 class MultiPlayer$2 implements android.media.MediaPlayer$OnCompletionListener {
    final synthetic net.sourceforge.servestream.player.MultiPlayer this$0;

    MultiPlayer$2(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onCompletion(android.media.MediaPlayer p3)
    {
        android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.access$000(), "onCompletionListener called");
        if (net.sourceforge.servestream.player.MultiPlayer.access$100(this.this$0)) {
            net.sourceforge.servestream.player.MultiPlayer.access$200(this.this$0).sendEmptyMessage(1);
        }
        return;
    }
}
package net.sourceforge.servestream.player;
 class MultiPlayer$3 implements android.media.MediaPlayer$OnErrorListener {
    final synthetic net.sourceforge.servestream.player.MultiPlayer this$0;

    MultiPlayer$3(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onError(android.media.MediaPlayer p5, int p6, int p7)
    {
        int v0_0 = 0;
        android.util.Log.d(net.sourceforge.servestream.player.MultiPlayer.access$000(), new StringBuilder().append("Error: ").append(p6).append(",").append(p7).toString());
        switch (p6) {
            case 100:
                net.sourceforge.servestream.player.MultiPlayer.access$102(this.this$0, 0);
                net.sourceforge.servestream.player.MultiPlayer.access$300(this.this$0).release();
                net.sourceforge.servestream.player.MultiPlayer.access$302(this.this$0, new android.media.MediaPlayer());
                net.sourceforge.servestream.player.MultiPlayer.access$200(this.this$0).sendMessageDelayed(net.sourceforge.servestream.player.MultiPlayer.access$200(this.this$0).obtainMessage(2), 2000);
                v0_0 = 1;
                break;
            default:
                net.sourceforge.servestream.player.MultiPlayer.access$102(this.this$0, 0);
                net.sourceforge.servestream.player.MultiPlayer.access$200(this.this$0).sendEmptyMessage(7);
        }
        return v0_0;
    }
}
package net.sourceforge.servestream.player;
final class MultiPlayer$4 implements android.os.Parcelable$Creator {

    MultiPlayer$4()
    {
        return;
    }

    public bridge synthetic Object createFromParcel(android.os.Parcel p2)
    {
        return this.createFromParcel(p2);
    }

    public net.sourceforge.servestream.player.MultiPlayer createFromParcel(android.os.Parcel p3)
    {
        android.util.Log.v("ParcelableTest", "Creating from parcel");
        return new net.sourceforge.servestream.player.MultiPlayer();
    }

    public bridge synthetic Object[] newArray(int p2)
    {
        return this.newArray(p2);
    }

    public net.sourceforge.servestream.player.MultiPlayer[] newArray(int p2)
    {
        net.sourceforge.servestream.player.MultiPlayer[] v0 = new net.sourceforge.servestream.player.MultiPlayer[p2];
        return v0;
    }
}
package net.sourceforge.servestream.player;
public class MultiPlayer implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator CREATOR;
    private static final String TAG;
    android.media.MediaPlayer$OnCompletionListener completionListener;
    android.media.MediaPlayer$OnErrorListener errorListener;
    private android.os.Handler mHandler;
    private boolean mIsInitialized;
    private android.media.MediaPlayer mMediaPlayer;
    android.media.MediaPlayer$OnPreparedListener onPreparedListener;

    static MultiPlayer()
    {
        net.sourceforge.servestream.player.MultiPlayer.TAG = net.sourceforge.servestream.player.MultiPlayer.getName();
        net.sourceforge.servestream.player.MultiPlayer.CREATOR = new net.sourceforge.servestream.player.MultiPlayer$4();
        return;
    }

    public MultiPlayer()
    {
        this.mMediaPlayer = new android.media.MediaPlayer();
        this.mIsInitialized = 0;
        this.onPreparedListener = new net.sourceforge.servestream.player.MultiPlayer$1(this);
        this.completionListener = new net.sourceforge.servestream.player.MultiPlayer$2(this);
        this.errorListener = new net.sourceforge.servestream.player.MultiPlayer$3(this);
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.player.MultiPlayer.TAG;
    }

    static synthetic boolean access$100(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        return p1.mIsInitialized;
    }

    static synthetic boolean access$102(net.sourceforge.servestream.player.MultiPlayer p0, boolean p1)
    {
        p0.mIsInitialized = p1;
        return p1;
    }

    static synthetic android.os.Handler access$200(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        return p1.mHandler;
    }

    static synthetic android.media.MediaPlayer access$300(net.sourceforge.servestream.player.MultiPlayer p1)
    {
        return p1.mMediaPlayer;
    }

    static synthetic android.media.MediaPlayer access$302(net.sourceforge.servestream.player.MultiPlayer p0, android.media.MediaPlayer p1)
    {
        p0.mMediaPlayer = p1;
        return p1;
    }

    public int describeContents()
    {
        return 0;
    }

    public long duration()
    {
        return ((long) this.mMediaPlayer.getDuration());
    }

    public boolean isInitialized()
    {
        return this.mIsInitialized;
    }

    public void pause()
    {
        this.mMediaPlayer.pause();
        return;
    }

    public long position()
    {
        return ((long) this.mMediaPlayer.getCurrentPosition());
    }

    public void release()
    {
        this.stop();
        this.mMediaPlayer.release();
        return;
    }

    public long seek(long p3)
    {
        this.mMediaPlayer.seekTo(((int) p3));
        return p3;
    }

    public void setDataSource(String p8, boolean p9)
    {
        try {
            this.mMediaPlayer.reset();
            this.mMediaPlayer.setOnPreparedListener(this.onPreparedListener);
            this.mMediaPlayer.setOnCompletionListener(this.completionListener);
            this.mMediaPlayer.setOnErrorListener(this.errorListener);
        } catch (IllegalArgumentException v0) {
            android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.TAG, "Error initializing");
            this.mIsInitialized = 0;
            this.mHandler.sendMessageDelayed(this.mHandler.obtainMessage(7), 2000);
            return;
        } catch (IllegalArgumentException v0) {
            android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.TAG, "Error initializing");
            this.mIsInitialized = 0;
            this.mHandler.sendMessageDelayed(this.mHandler.obtainMessage(7), 2000);
            return;
        }
        if (!p9) {
            try {
                this.mMediaPlayer.setDataSource(net.sourceforge.servestream.utils.URLUtils.encodeUrl(p8));
                this.mMediaPlayer.prepareAsync();
            } catch (IllegalStateException v1) {
            }
        } else {
            this.mMediaPlayer.setDataSource(p8);
            this.mMediaPlayer.prepare();
        }
        android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.TAG, "Preparing media plyer");
        return;
    }

    public void setDisplay(android.view.SurfaceHolder p2)
    {
        this.mMediaPlayer.setDisplay(p2);
        return;
    }

    public void setHandler(android.os.Handler p1)
    {
        this.mHandler = p1;
        return;
    }

    public void setVolume(float p2)
    {
        this.mMediaPlayer.setVolume(p2, p2);
        return;
    }

    public void start()
    {
        android.util.Log.v(net.sourceforge.servestream.player.MultiPlayer.TAG, "MultiPlayer.start called");
        this.mMediaPlayer.start();
        return;
    }

    public void stop()
    {
        this.mMediaPlayer.reset();
        this.mIsInitialized = 0;
        return;
    }

    public void writeToParcel(android.os.Parcel p1, int p2)
    {
        return;
    }
}
package net.sourceforge.servestream.provider;
public final class Media$MediaColumns implements android.provider.BaseColumns {
    public static final String ALBUM = "album";
    public static final String ARTIST = "artist";
    public static final String CONTENT_ITEM_TYPE = "vnd.android.cursor.item/com.sourceforge.servestream.uri";
    public static final String CONTENT_TYPE = "vnd.android.cursor.dir/com.sourceforge.servestream.uri";
    public static final android.net.Uri CONTENT_URI = None;
    public static final String DEFAULT_SORT_ORDER = "_id DESC";
    public static final String DURATION = "duration";
    public static final String TITLE = "title";
    public static final String TRACK = "track";
    public static final String URI = "uri";
    public static final String YEAR = "year";

    static Media$MediaColumns()
    {
        net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI = android.net.Uri.parse("content://net.sourceforge.servestream.provider.Media/uris");
        return;
    }

    private Media$MediaColumns()
    {
        return;
    }
}
package net.sourceforge.servestream.provider;
public final class Media {
    public static final String AUTHORITY = "net.sourceforge.servestream.provider.Media";
    public static final int UNKNOWN_INTEGER = 255;
    public static final String UNKNOWN_STRING = "";

    private Media()
    {
        return;
    }
}
package net.sourceforge.servestream.provider;
 class MediaProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper {

    MediaProvider$DatabaseHelper(android.content.Context p4)
    {
        super(p4, "media.db", 0, 1);
        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase p2)
    {
        p2.execSQL("CREATE TABLE media_files (_id INTEGER PRIMARY KEY,uri TEXT,title TEXT,album TEXT,artist TEXT,duration INTEGER,track TEXT,year INTEGER);");
        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase p4, int p5, int p6)
    {
        android.util.Log.w(net.sourceforge.servestream.provider.MediaProvider.access$000(), new StringBuilder().append("Upgrading database from version ").append(p5).append(" to ").append(p6).append(", which will destroy all old data").toString());
        p4.execSQL("DROP TABLE IF EXISTS media_files");
        this.onCreate(p4);
        return;
    }
}
package net.sourceforge.servestream.provider;
public class MediaProvider extends android.content.ContentProvider {
    private static final String DATABASE_NAME = "media.db";
    private static final int DATABASE_VERSION = 1;
    private static final int MEDIA = 1;
    private static final int MEDIA_ID = 2;
    private static final String MEDIA_TABLE_NAME = "media_files";
    private static final String TAG;
    private static java.util.HashMap sMediaProjectionMap;
    private static final android.content.UriMatcher sUriMatcher;
    private net.sourceforge.servestream.provider.MediaProvider$DatabaseHelper mOpenHelper;

    static MediaProvider()
    {
        net.sourceforge.servestream.provider.MediaProvider.TAG = net.sourceforge.servestream.player.MultiPlayer.getName();
        net.sourceforge.servestream.provider.MediaProvider.sUriMatcher = new android.content.UriMatcher(-1);
        net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.addURI("net.sourceforge.servestream.provider.Media", "uris", 1);
        net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.addURI("net.sourceforge.servestream.provider.Media", "uris/#", 2);
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap = new java.util.HashMap();
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("_id", "_id");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("uri", "uri");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("title", "title");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("album", "album");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("artist", "artist");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("duration", "duration");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("track", "track");
        net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap.put("year", "year");
        return;
    }

    public MediaProvider()
    {
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.provider.MediaProvider.TAG;
    }

    public int bulkInsert(android.net.Uri p11, android.content.ContentValues[] p12)
    {
        if (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p11) == 1) {
            int v5 = 0;
            android.database.sqlite.SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
            v1.beginTransaction();
            try {
                android.database.sqlite.SQLiteStatement v3 = v1.compileStatement("insert into media_files (uri,title,album,artist,duration,track,year) values (?,?,?,?,?,?,?)");
                int v4 = p12.length;
                int v2 = 0;
            } catch (int v7_4) {
                v1.endTransaction();
                throw v7_4;
            }
            while (v2 < v4) {
                android.content.ContentValues v6 = p12[v2];
                if (!v6.containsKey("uri")) {
                    v6.put("uri", "");
                }
                if (!v6.containsKey("title")) {
                    v6.put("title", "");
                }
                if (!v6.containsKey("album")) {
                    v6.put("album", "");
                }
                if (!v6.containsKey("artist")) {
                    v6.put("artist", "");
                }
                if (!v6.containsKey("duration")) {
                    v6.put("duration", Integer.valueOf(-1));
                }
                if (!v6.containsKey("track")) {
                    v6.put("track", "");
                }
                if (!v6.containsKey("year")) {
                    v6.put("year", Integer.valueOf(-1));
                }
                v3.bindString(1, v6.getAsString("uri"));
                v3.bindString(2, v6.getAsString("title"));
                v3.bindString(3, v6.getAsString("album"));
                v3.bindString(4, v6.getAsString("artist"));
                v3.bindLong(5, ((long) v6.getAsInteger("duration").intValue()));
                v3.bindString(6, v6.getAsString("track"));
                v3.bindLong(7, ((long) v6.getAsInteger("year").intValue()));
                v3.execute();
                v5++;
                v2++;
            }
            v1.setTransactionSuccessful();
            v1.endTransaction();
            return v5;
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p11).toString());
        }
    }

    public int delete(android.net.Uri p8, String p9, String[] p10)
    {
        int v0;
        android.database.sqlite.SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
        switch (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p8)) {
            case 1:
                v0 = v1.delete("media_files", p9, p10);
                break;
            case 2:
                String v3_5;
                StringBuilder v5_1 = new StringBuilder().append("_id=").append(((String) p8.getPathSegments().get(1)));
                if (android.text.TextUtils.isEmpty(p9)) {
                    v3_5 = "";
                } else {
                    v3_5 = new StringBuilder().append(" AND (").append(p9).append(41).toString();
                }
                v0 = v1.delete("media_files", v5_1.append(v3_5).toString(), p10);
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p8).toString());
        }
        this.getContext().getContentResolver().notifyChange(p8, 0);
        return v0;
    }

    public String getType(android.net.Uri p4)
    {
        String v0_3;
        switch (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p4)) {
            case 1:
                v0_3 = "vnd.android.cursor.dir/com.sourceforge.servestream.uri";
                break;
            case 2:
                v0_3 = "vnd.android.cursor.item/com.sourceforge.servestream.uri";
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p4).toString());
        }
        return v0_3;
    }

    public android.net.Uri insert(android.net.Uri p9, android.content.ContentValues p10)
    {
        if (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p9) == 1) {
            android.content.ContentValues v4_0;
            if (p10 == null) {
                v4_0 = new android.content.ContentValues();
            } else {
                v4_0 = new android.content.ContentValues(p10);
            }
            if (!v4_0.containsKey("uri")) {
                v4_0.put("uri", "");
            }
            if (!v4_0.containsKey("title")) {
                v4_0.put("title", "");
            }
            if (!v4_0.containsKey("album")) {
                v4_0.put("album", "");
            }
            if (!v4_0.containsKey("artist")) {
                v4_0.put("artist", "");
            }
            if (!v4_0.containsKey("duration")) {
                v4_0.put("duration", Integer.valueOf(-1));
            }
            if (!v4_0.containsKey("track")) {
                v4_0.put("track", "");
            }
            if (!v4_0.containsKey("year")) {
                v4_0.put("year", Integer.valueOf(-1));
            }
            long v2 = this.mOpenHelper.getWritableDatabase().insert("media_files", "uri", v4_0);
            if (v2 <= 0) {
                throw new android.database.SQLException(new StringBuilder().append("Failed to insert row into ").append(p9).toString());
            } else {
                android.net.Uri v0 = android.content.ContentUris.withAppendedId(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2);
                this.getContext().getContentResolver().notifyChange(v0, 0);
                return v0;
            }
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p9).toString());
        }
    }

    public boolean onCreate()
    {
        this.mOpenHelper = new net.sourceforge.servestream.provider.MediaProvider$DatabaseHelper(this.getContext());
        return 1;
    }

    public android.database.Cursor query(android.net.Uri p10, String[] p11, String p12, String[] p13, String p14)
    {
        android.database.sqlite.SQLiteQueryBuilder v0_1 = new android.database.sqlite.SQLiteQueryBuilder();
        v0_1.setTables("media_files");
        switch (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p10)) {
            case 1:
                v0_1.setProjectionMap(net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap);
                break;
            case 2:
                v0_1.setProjectionMap(net.sourceforge.servestream.provider.MediaProvider.sMediaProjectionMap);
                v0_1.appendWhere(new StringBuilder().append("_id=").append(((String) p10.getPathSegments().get(1))).toString());
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p10).toString());
        }
        String v7;
        if (!android.text.TextUtils.isEmpty(p14)) {
            v7 = p14;
        } else {
            v7 = "_id DESC";
        }
        android.database.Cursor v8 = v0_1.query(this.mOpenHelper.getReadableDatabase(), p11, p12, p13, 0, 0, v7);
        v8.setNotificationUri(this.getContext().getContentResolver(), p10);
        return v8;
    }

    public int update(android.net.Uri p8, android.content.ContentValues p9, String p10, String[] p11)
    {
        int v0;
        android.database.sqlite.SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
        switch (net.sourceforge.servestream.provider.MediaProvider.sUriMatcher.match(p8)) {
            case 1:
                v0 = v1.update("media_files", p9, p10, p11);
                break;
            case 2:
                String v3_5;
                StringBuilder v5_1 = new StringBuilder().append("_id=").append(((String) p8.getPathSegments().get(1)));
                if (android.text.TextUtils.isEmpty(p10)) {
                    v3_5 = "";
                } else {
                    v3_5 = new StringBuilder().append(" AND (").append(p10).append(41).toString();
                }
                v0 = v1.update("media_files", p9, v5_1.append(v3_5).toString(), p11);
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unknown URI ").append(p8).toString());
        }
        this.getContext().getContentResolver().notifyChange(p8, 0);
        return v0;
    }
}
package net.sourceforge.servestream.service;
public class BackupAgent extends android.app.backup.BackupAgentHelper {
    public static final String TAG;

    static BackupAgent()
    {
        net.sourceforge.servestream.service.BackupAgent.TAG = net.sourceforge.servestream.service.BackupAgent.getName();
        return;
    }

    public BackupAgent()
    {
        return;
    }

    public void onBackup(android.os.ParcelFileDescriptor p3, android.app.backup.BackupDataOutput p4, android.os.ParcelFileDescriptor p5)
    {
        android.util.Log.v(net.sourceforge.servestream.service.BackupAgent.TAG, "onBackup called");
        try {
            super.onBackup(p3, p4, p5);
            return;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }

    public void onCreate()
    {
        android.util.Log.v(net.sourceforge.servestream.service.BackupAgent.TAG, "onCreate called");
        String v3_6 = new String[1];
        v3_6[0] = new StringBuilder().append(this.getPackageName()).append("_preferences").toString();
        this.addHelper("prefs", new android.app.backup.SharedPreferencesBackupHelper(this, v3_6));
        String v3_2 = new String[1];
        v3_2[0] = "../databases/servestream.db";
        this.addHelper("servestream.db", new android.app.backup.FileBackupHelper(this, v3_2));
        String v3_4 = new String[1];
        v3_4[0] = "../databases/alarms.db";
        this.addHelper("alarms.db", new android.app.backup.FileBackupHelper(this, v3_4));
        return;
    }

    public void onRestore(android.app.backup.BackupDataInput p3, int p4, android.os.ParcelFileDescriptor p5)
    {
        android.util.Log.v(net.sourceforge.servestream.service.BackupAgent.TAG, "onRestore called");
        try {
            super.onRestore(p3, p4, p5);
            return;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }
}
package net.sourceforge.servestream.service;
synthetic class BackupWrapper$1 {
}
package net.sourceforge.servestream.service;
 class BackupWrapper$FroyoAndBeyond$Holder {
    private static final net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond sInstance;

    static BackupWrapper$FroyoAndBeyond$Holder()
    {
        net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond$Holder.sInstance = new net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond(0);
        return;
    }

    private BackupWrapper$FroyoAndBeyond$Holder()
    {
        return;
    }

    static synthetic net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond access$100()
    {
        return net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond$Holder.sInstance;
    }
}
package net.sourceforge.servestream.service;
public abstract class BackupWrapper {

    public BackupWrapper()
    {
        return;
    }

    public static net.sourceforge.servestream.service.BackupWrapper getInstance()
    {
        net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond v0_1;
        if (!net.sourceforge.servestream.utils.PreferenceConstants.PRE_FROYO) {
            v0_1 = net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond$Holder.access$100();
        } else {
            v0_1 = net.sourceforge.servestream.service.BackupWrapper$PreFroyo$Holder.access$000();
        }
        return v0_1;
    }

    public abstract void onDataChanged();
}
package net.sourceforge.servestream.service;
 class BackupWrapper$FroyoAndBeyond extends net.sourceforge.servestream.service.BackupWrapper {
    private static android.app.backup.BackupManager mBackupManager;

    private BackupWrapper$FroyoAndBeyond()
    {
        return;
    }

    synthetic BackupWrapper$FroyoAndBeyond(net.sourceforge.servestream.service.BackupWrapper$1 p1)
    {
        return;
    }

    private void checkBackupManager(android.content.Context p2)
    {
        if (net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond.mBackupManager == null) {
            net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond.mBackupManager = new android.app.backup.BackupManager(p2);
        }
        return;
    }

    public void onDataChanged(android.content.Context p2)
    {
        this.checkBackupManager(p2);
        if (net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond.mBackupManager != null) {
            net.sourceforge.servestream.service.BackupWrapper$FroyoAndBeyond.mBackupManager.dataChanged();
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class BackupWrapper$PreFroyo$Holder {
    private static final net.sourceforge.servestream.service.BackupWrapper$PreFroyo sInstance;

    static BackupWrapper$PreFroyo$Holder()
    {
        net.sourceforge.servestream.service.BackupWrapper$PreFroyo$Holder.sInstance = new net.sourceforge.servestream.service.BackupWrapper$PreFroyo(0);
        return;
    }

    private BackupWrapper$PreFroyo$Holder()
    {
        return;
    }

    static synthetic net.sourceforge.servestream.service.BackupWrapper$PreFroyo access$000()
    {
        return net.sourceforge.servestream.service.BackupWrapper$PreFroyo$Holder.sInstance;
    }
}
package net.sourceforge.servestream.service;
 class BackupWrapper$PreFroyo extends net.sourceforge.servestream.service.BackupWrapper {

    private BackupWrapper$PreFroyo()
    {
        return;
    }

    synthetic BackupWrapper$PreFroyo(net.sourceforge.servestream.service.BackupWrapper$1 p1)
    {
        return;
    }

    public void onDataChanged(android.content.Context p1)
    {
        return;
    }
}
package net.sourceforge.servestream.service;
public class ConnectivityReceiver extends android.content.BroadcastReceiver {
    private static final String TAG;
    private boolean mIsConnected;
    private Object[] mLock;
    private boolean mLockingWifi;
    private final net.sourceforge.servestream.service.MediaPlaybackService mMediaPlaybackService;
    private int mNetworkRef;
    private final android.net.wifi.WifiManager$WifiLock mWifiLock;

    static ConnectivityReceiver()
    {
        net.sourceforge.servestream.service.ConnectivityReceiver.TAG = net.sourceforge.servestream.service.ConnectivityReceiver.getName();
        return;
    }

    public ConnectivityReceiver(net.sourceforge.servestream.service.MediaPlaybackService p8, boolean p9)
    {
        int v4_0 = 0;
        this.mIsConnected = 0;
        this.mNetworkRef = 0;
        android.net.NetworkInfo$State v5_4 = new Object[0];
        this.mLock = v5_4;
        this.mMediaPlaybackService = p8;
        android.net.ConnectivityManager v0_0 = ((android.net.ConnectivityManager) p8.getSystemService("connectivity"));
        this.mWifiLock = ((android.net.wifi.WifiManager) p8.getSystemService("wifi")).createWifiLock(net.sourceforge.servestream.service.ConnectivityReceiver.TAG);
        android.net.NetworkInfo v2 = v0_0.getActiveNetworkInfo();
        if (v2 != null) {
            if (v2.getState() == android.net.NetworkInfo$State.CONNECTED) {
                v4_0 = 1;
            }
            this.mIsConnected = v4_0;
        }
        this.mLockingWifi = p9;
        android.content.IntentFilter v1_1 = new android.content.IntentFilter();
        v1_1.addAction("android.net.conn.CONNECTIVITY_CHANGE");
        p8.registerReceiver(this, v1_1);
        return;
    }

    private void acquireWifiLockIfNecessaryLocked()
    {
        if ((this.mLockingWifi) && ((this.mNetworkRef > 0) && (!this.mWifiLock.isHeld()))) {
            this.mWifiLock.acquire();
        }
        return;
    }

    private void releaseWifiLockIfNecessaryLocked()
    {
        if ((this.mNetworkRef == 0) && (this.mWifiLock.isHeld())) {
            this.mWifiLock.release();
        }
        return;
    }

    public void cleanup()
    {
        if (this.mWifiLock.isHeld()) {
            this.mWifiLock.release();
        }
        this.mMediaPlaybackService.unregisterReceiver(this);
        return;
    }

    public void decRef()
    {
        try {
            this.mNetworkRef = (this.mNetworkRef - 1);
            this.releaseWifiLockIfNecessaryLocked();
            return;
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public void incRef()
    {
        try {
            this.mNetworkRef = (this.mNetworkRef + 1);
            this.acquireWifiLockIfNecessaryLocked();
            return;
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public boolean isConnected()
    {
        return this.mIsConnected;
    }

    public void onReceive(android.content.Context p9, android.content.Intent p10)
    {
        net.sourceforge.servestream.service.MediaPlaybackService v4_0 = 0;
        if (p10.getAction().equals("android.net.conn.CONNECTIVITY_CHANGE")) {
            boolean v3 = p10.getBooleanExtra("noConnectivity", 0);
            boolean v2 = p10.getBooleanExtra("isFailover", 0);
            android.util.Log.d(net.sourceforge.servestream.service.ConnectivityReceiver.TAG, new StringBuilder().append("onReceived() called; noConnectivity? ").append(v3).append("; isFailover? ").append(v2).toString());
            if ((!v3) || ((v2) || (!this.mIsConnected))) {
                if (!this.mIsConnected) {
                    if (((android.net.NetworkInfo) p10.getExtras().get("networkInfo")).getState() == android.net.NetworkInfo$State.CONNECTED) {
                        v4_0 = 1;
                    }
                    this.mIsConnected = v4_0;
                    if (v4_0 != null) {
                        this.mMediaPlaybackService.onConnectivityRestored();
                    }
                }
            } else {
                this.mIsConnected = 0;
                this.mMediaPlaybackService.onConnectivityLost();
            }
        } else {
            android.util.Log.w(net.sourceforge.servestream.service.ConnectivityReceiver.TAG, new StringBuilder().append("onReceived() called: ").append(p10).toString());
        }
        return;
    }

    public void setWantWifiLock(boolean p3)
    {
        try {
            this.mLockingWifi = p3;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
        if (!this.mLockingWifi) {
            this.releaseWifiLockIfNecessaryLocked();
        } else {
            this.acquireWifiLockIfNecessaryLocked();
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class DownloadManager$DownloadTask extends android.os.AsyncTask {
    private java.io.File mCompleteFile;
    private java.io.File mPartialFile;
    final synthetic net.sourceforge.servestream.service.DownloadManager this$0;

    public DownloadManager$DownloadTask(net.sourceforge.servestream.service.DownloadManager p2, java.io.File p3, java.io.File p4)
    {
        this.this$0 = p2;
        this.mPartialFile = 0;
        this.mCompleteFile = 0;
        this.mPartialFile = p3;
        this.mCompleteFile = p4;
        return;
    }

    private java.net.HttpURLConnection determineRange(java.net.URL p6, long p7)
    {
        int v0 = net.sourceforge.servestream.utils.URLUtils.getConnection(p6);
        if (v0 != 0) {
            v0.setConnectTimeout(6000);
            v0.setReadTimeout(6000);
            v0.setRequestProperty("Range", new StringBuilder().append("bytes=").append(p7).append("-").toString());
            try {
                v0.setRequestMethod("GET");
                v0.connect();
            } catch (java.io.IOException v1) {
                v1.printStackTrace();
            }
        } else {
            v0 = 0;
        }
        return v0;
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((java.net.URL[]) p2));
    }

    protected varargs Void doInBackground(java.net.URL[] p13)
    {
        java.io.BufferedInputStream v5 = 0;
        java.io.FileOutputStream v7 = 0;
        int v0 = 0;
        byte[] v1 = new byte[16384];
        android.util.Log.v(net.sourceforge.servestream.service.DownloadManager.access$000(), "starting download task");
        while ((!this.mCompleteFile.exists()) && (!this.isCancelled())) {
            try {
                java.net.HttpURLConnection v2 = this.determineRange(p13[0], this.mPartialFile.length());
            } catch (int v9_11) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v5);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v2);
                net.sourceforge.servestream.utils.Utils.closeOutputStream(v7);
                throw v9_11;
            } catch (java.io.IOException v3) {
                v3.printStackTrace();
                net.sourceforge.servestream.utils.Utils.closeInputStream(v5);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v2);
                net.sourceforge.servestream.utils.Utils.closeOutputStream(v7);
            }
            if (v2.getResponseCode() != 206) {
                net.sourceforge.servestream.service.DownloadManager.access$102(this.this$0, ((long) v2.getContentLength()));
            } else {
                v0 = 1;
            }
            java.io.BufferedInputStream v6_1 = new java.io.BufferedInputStream(v2.getInputStream());
            try {
                java.io.FileOutputStream v8_1 = new java.io.FileOutputStream(this.mPartialFile, v0);
                try {
                    while(true) {
                        int v4 = v6_1.read(v1);
                        v8_1.write(v1, 0, v4);
                    }
                    v8_1.flush();
                    v8_1.close();
                    net.sourceforge.servestream.utils.Utils.copyFile(this.mPartialFile, this.mCompleteFile);
                    android.util.Log.v(net.sourceforge.servestream.service.DownloadManager.access$000(), "download task is complete");
                    net.sourceforge.servestream.utils.Utils.closeInputStream(v6_1);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v2);
                    net.sourceforge.servestream.utils.Utils.closeOutputStream(v8_1);
                    v7 = v8_1;
                    v5 = v6_1;
                } catch (int v9_11) {
                    v7 = v8_1;
                    v5 = v6_1;
                } catch (java.io.IOException v3) {
                    v7 = v8_1;
                    v5 = v6_1;
                }
                if ((v4 != -1) && (!this.isCancelled())) {
                }
            } catch (int v9_11) {
                v5 = v6_1;
            } catch (java.io.IOException v3) {
                v5 = v6_1;
            }
        }
        return 0;
    }
}
package net.sourceforge.servestream.service;
 class DownloadManager$PollingAsyncTask extends android.os.AsyncTask {
    int INITIAL_BUFFER;
    final synthetic net.sourceforge.servestream.service.DownloadManager this$0;

    public DownloadManager$PollingAsyncTask(net.sourceforge.servestream.service.DownloadManager p2)
    {
        this.this$0 = p2;
        this.INITIAL_BUFFER = 81920;
        return;
    }

    private boolean bufferingComplete()
    {
        int v0_1;
        if (this.this$0.getPartialFile().length() < ((long) this.INITIAL_BUFFER)) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((Void[]) p2));
    }

    protected varargs Void doInBackground(Void[] p5)
    {
        android.util.Log.v(net.sourceforge.servestream.service.DownloadManager.access$000(), "polling task started");
        while ((!this.bufferingComplete()) && (!this.isCancelled())) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException v0) {
                v0.printStackTrace();
            }
        }
        android.util.Log.v(net.sourceforge.servestream.service.DownloadManager.access$000(), "setDataSource called");
        net.sourceforge.servestream.service.DownloadManager.access$200(this.this$0).getMediaPlayer().setDataSource(this.this$0.getPartialFile().getPath(), 1);
        return 0;
    }
}
package net.sourceforge.servestream.service;
public class DownloadManager {
    private static final String TAG;
    private java.io.File mCompleteFile;
    private net.sourceforge.servestream.service.DownloadManager$DownloadTask mDownloadTask;
    private long mLength;
    private net.sourceforge.servestream.service.MediaPlaybackService mMediaPlaybackService;
    private java.io.File mPartialFile;
    private net.sourceforge.servestream.service.DownloadManager$PollingAsyncTask mPollingAsyncTask;
    private long mTotalSizeInBytes;

    static DownloadManager()
    {
        net.sourceforge.servestream.service.DownloadManager.TAG = net.sourceforge.servestream.service.DownloadManager.getName();
        return;
    }

    public DownloadManager(net.sourceforge.servestream.service.MediaPlaybackService p4)
    {
        this.mMediaPlaybackService = 0;
        this.mTotalSizeInBytes = -1;
        this.mLength = -1;
        this.mPartialFile = 0;
        this.mCompleteFile = 0;
        this.mDownloadTask = 0;
        this.mPollingAsyncTask = 0;
        this.mMediaPlaybackService = p4;
        return;
    }

    static synthetic String access$000()
    {
        return net.sourceforge.servestream.service.DownloadManager.TAG;
    }

    static synthetic long access$102(net.sourceforge.servestream.service.DownloadManager p0, long p1)
    {
        p0.mTotalSizeInBytes = p1;
        return p1;
    }

    static synthetic net.sourceforge.servestream.service.MediaPlaybackService access$200(net.sourceforge.servestream.service.DownloadManager p1)
    {
        return p1.mMediaPlaybackService;
    }

    private String getUri(android.content.Context p11, long p12)
    {
        String v7 = 0;
        String[] v2 = new String[1];
        v2[0] = "uri";
        String v0_3 = p11.getContentResolver();
        String[] v4_1 = new String[1];
        v4_1[0] = String.valueOf(p12);
        android.database.Cursor v6 = v0_3.query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2, "_id= ? ", v4_1, 0);
        if (v6.moveToFirst()) {
            v7 = v6.getString(v6.getColumnIndex("uri"));
        }
        v6.close();
        return v7;
    }

    public void cancelDownload()
    {
        if (this.mDownloadTask != null) {
            this.mDownloadTask.cancel(0);
            this.mDownloadTask = 0;
        }
        return;
    }

    public void cancelPollingTask()
    {
        if (this.mPollingAsyncTask != null) {
            this.mPollingAsyncTask.cancel(0);
            this.mPollingAsyncTask = 0;
        }
        return;
    }

    public void delete()
    {
        this.cancelDownload();
        this.cancelPollingTask();
        net.sourceforge.servestream.utils.Utils.deleteFile(this.mPartialFile);
        net.sourceforge.servestream.utils.Utils.deleteFile(this.mCompleteFile);
        return;
    }

    public void download(long p10)
    {
        java.net.URL v2 = 0;
        String v1 = this.getUri(this.mMediaPlaybackService, p10);
        if (v1 == null) {
            this.mTotalSizeInBytes = -1;
            this.mLength = -1;
            this.mPartialFile = new java.io.File(net.sourceforge.servestream.utils.Utils.getDownloadDirectory(), new StringBuilder().append("mediafile").append(p10).append(".partial.dat").toString());
            this.mCompleteFile = new java.io.File(net.sourceforge.servestream.utils.Utils.getDownloadDirectory(), new StringBuilder().append("mediafile").append(p10).append(".complete.dat").toString());
            net.sourceforge.servestream.utils.Utils.deleteFile(this.mPartialFile);
            net.sourceforge.servestream.utils.Utils.deleteFile(this.mCompleteFile);
            android.util.Log.v(net.sourceforge.servestream.service.DownloadManager.TAG, new StringBuilder().append("=============> ").append(this.mPartialFile.toString()).toString());
            this.mDownloadTask = new net.sourceforge.servestream.service.DownloadManager$DownloadTask(this, this.mPartialFile, this.mCompleteFile);
            net.sourceforge.servestream.service.DownloadManager$PollingAsyncTask v4_10 = this.mDownloadTask;
            Void[] v5_10 = new java.net.URL[1];
            v5_10[0] = v2;
            v4_10.execute(v5_10);
            this.mPollingAsyncTask = new net.sourceforge.servestream.service.DownloadManager$PollingAsyncTask(this);
            Void[] v5_11 = new Void[0];
            this.mPollingAsyncTask.execute(v5_11);
        } else {
            try {
                v2 = new java.net.URL(v1);
            } catch (java.net.MalformedURLException v0) {
                v0.printStackTrace();
            }
        }
        return;
    }

    public java.io.File getCompleteFile()
    {
        if ((this.mCompleteFile == null) || (!this.mCompleteFile.exists())) {
            java.io.File v0_3 = 0;
        } else {
            v0_3 = this.mCompleteFile;
        }
        return v0_3;
    }

    public long getCompleteFileDuration()
    {
        android.media.MediaPlayer v2_1 = new android.media.MediaPlayer();
        try {
            v2_1.setDataSource(this.getCompleteFile().toString());
            v2_1.prepare();
            long v0 = ((long) v2_1.getDuration());
        } catch (Exception v3) {
        }
        return v0;
    }

    public long getLength()
    {
        long v0 = -1;
        if (this.isCompleteFileAvailable()) {
            if (this.mLength == -1) {
                this.mLength = this.getCompleteFileDuration();
            }
            v0 = this.mLength;
        }
        return v0;
    }

    public java.io.File getPartialFile()
    {
        return this.mPartialFile;
    }

    public declared_synchronized double getPercentDownloaded()
    {
        try {
            if ((this.mCompleteFile == null) || (!this.mCompleteFile.exists())) {
                double v0_1 = (((double) this.mPartialFile.length()) / ((double) this.mTotalSizeInBytes));
            } else {
                v0_1 = 1.0;
            }
        } catch (double v0_2) {
            throw v0_2;
        }
        return v0_1;
    }

    public declared_synchronized boolean isCompleteFileAvailable()
    {
        try {
            if ((this.mCompleteFile == null) || (!this.mCompleteFile.exists())) {
                int v0_4 = 0;
            } else {
                v0_4 = 1;
            }
        } catch (int v0_1) {
            throw v0_1;
        }
        return v0_4;
    }

    public declared_synchronized boolean isDownloadCancelled()
    {
        try {
            if ((this.mDownloadTask == null) || (!this.mDownloadTask.isCancelled())) {
                int v0_4 = 0;
            } else {
                v0_4 = 1;
            }
        } catch (int v0_1) {
            throw v0_1;
        }
        return v0_4;
    }
}
package net.sourceforge.servestream.service;
public interface IMediaPlaybackService implements android.os.IInterface {

    public abstract long duration();

    public abstract void enqueue();

    public abstract String getAlbumName();

    public abstract String getArtistName();

    public abstract long getAudioId();

    public abstract long getCompleteFileDuration();

    public abstract net.sourceforge.servestream.player.MultiPlayer getMediaPlayer();

    public abstract String getMediaUri();

    public abstract String getPath();

    public abstract double getPercentDownloaded();

    public abstract long[] getQueue();

    public abstract int getQueuePosition();

    public abstract int getRepeatMode();

    public abstract int getShuffleMode();

    public abstract int getSleepTimerMode();

    public abstract String getTrackName();

    public abstract String getTrackNumber();

    public abstract boolean isCompleteFileAvailable();

    public abstract boolean isPlaying();

    public abstract boolean isStreaming();

    public abstract void moveQueueItem();

    public abstract void next();

    public abstract void open();

    public abstract void openFile();

    public abstract void pause();

    public abstract void play();

    public abstract long position();

    public abstract void prev();

    public abstract int removeTrack();

    public abstract int removeTracks();

    public abstract long seek();

    public abstract void setDataSource();

    public abstract void setQueuePosition();

    public abstract void setRepeatMode();

    public abstract void setShuffleMode();

    public abstract void setSleepTimerMode();

    public abstract void stop();
}
package net.sourceforge.servestream.service;
 class IMediaPlaybackService$Stub$Proxy implements net.sourceforge.servestream.service.IMediaPlaybackService {
    private android.os.IBinder mRemote;

    IMediaPlaybackService$Stub$Proxy(android.os.IBinder p1)
    {
        this.mRemote = p1;
        return;
    }

    public android.os.IBinder asBinder()
    {
        return this.mRemote;
    }

    public long duration()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(11, v0, v1, 0);
            v1.readException();
            long v2 = v1.readLong();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public void enqueue(long[] p6, int p7)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeLongArray(p6);
            v0.writeInt(p7);
            this.mRemote.transact(18, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public String getAlbumName()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(16, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public String getArtistName()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(17, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public long getAudioId()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(24, v0, v1, 0);
            v1.readException();
            long v2 = v1.readLong();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public long getCompleteFileDuration()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(36, v0, v1, 0);
            v1.readException();
            long v2 = v1.readLong();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public String getInterfaceDescriptor()
    {
        return "net.sourceforge.servestream.service.IMediaPlaybackService";
    }

    public net.sourceforge.servestream.player.MultiPlayer getMediaPlayer()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            int v2_0;
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(33, v0, v1, 0);
            v1.readException();
        } catch (android.os.Parcelable$Creator v3_2) {
            v1.recycle();
            v0.recycle();
            throw v3_2;
        }
        if (v1.readInt() == 0) {
            v2_0 = 0;
        } else {
            v2_0 = ((net.sourceforge.servestream.player.MultiPlayer) net.sourceforge.servestream.player.MultiPlayer.CREATOR.createFromParcel(v1));
        }
        v1.recycle();
        v0.recycle();
        return v2_0;
    }

    public String getMediaUri()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(14, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public String getPath()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(23, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public double getPercentDownloaded()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(37, v0, v1, 0);
            v1.readException();
            double v2 = v1.readDouble();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public long[] getQueue()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(19, v0, v1, 0);
            v1.readException();
            long[] v2 = v1.createLongArray();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public int getQueuePosition()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(4, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public int getRepeatMode()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(30, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public int getShuffleMode()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(26, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public int getSleepTimerMode()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(32, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public String getTrackName()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(15, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public String getTrackNumber()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(22, v0, v1, 0);
            v1.readException();
            String v2 = v1.readString();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public boolean isCompleteFileAvailable()
    {
        int v2 = 0;
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(35, v0, v1, 0);
            v1.readException();
        } catch (Throwable v3_1) {
            v1.recycle();
            v0.recycle();
            throw v3_1;
        }
        if (v1.readInt() != 0) {
            v2 = 1;
        }
        v1.recycle();
        v0.recycle();
        return v2;
    }

    public boolean isPlaying()
    {
        int v2 = 0;
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(5, v0, v1, 0);
            v1.readException();
        } catch (Throwable v3_1) {
            v1.recycle();
            v0.recycle();
            throw v3_1;
        }
        if (v1.readInt() != 0) {
            v2 = 1;
        }
        v1.recycle();
        v0.recycle();
        return v2;
    }

    public boolean isStreaming()
    {
        int v2 = 0;
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(34, v0, v1, 0);
            v1.readException();
        } catch (Throwable v3_1) {
            v1.recycle();
            v0.recycle();
            throw v3_1;
        }
        if (v1.readInt() != 0) {
            v2 = 1;
        }
        v1.recycle();
        v0.recycle();
        return v2;
    }

    public void moveQueueItem(int p6, int p7)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p6);
            v0.writeInt(p7);
            this.mRemote.transact(20, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void next()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(10, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void open(long[] p6, int p7)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeLongArray(p6);
            v0.writeInt(p7);
            this.mRemote.transact(2, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void openFile(String p6)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeString(p6);
            this.mRemote.transact(1, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void pause()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(7, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void play()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(8, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public long position()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(12, v0, v1, 0);
            v1.readException();
            long v2 = v1.readLong();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public void prev()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(9, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public int removeTrack(long p7)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeLong(p7);
            this.mRemote.transact(28, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public int removeTracks(int p7, int p8)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p7);
            v0.writeInt(p8);
            this.mRemote.transact(27, v0, v1, 0);
            v1.readException();
            int v2 = v1.readInt();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v3_0) {
            v1.recycle();
            v0.recycle();
            throw v3_0;
        }
    }

    public long seek(long p8)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeLong(p8);
            this.mRemote.transact(13, v0, v1, 0);
            v1.readException();
            long v2 = v1.readLong();
            v1.recycle();
            v0.recycle();
            return v2;
        } catch (Throwable v4_0) {
            v1.recycle();
            v0.recycle();
            throw v4_0;
        }
    }

    public void setDataSource(boolean p6)
    {
        android.os.IBinder v2_0 = 0;
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
        } catch (android.os.IBinder v2_2) {
            v1.recycle();
            v0.recycle();
            throw v2_2;
        }
        if (p6) {
            v2_0 = 1;
        }
        v0.writeInt(v2_0);
        this.mRemote.transact(3, v0, v1, 0);
        v1.readException();
        v1.recycle();
        v0.recycle();
        return;
    }

    public void setQueuePosition(int p6)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p6);
            this.mRemote.transact(21, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void setRepeatMode(int p6)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p6);
            this.mRemote.transact(29, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void setShuffleMode(int p6)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p6);
            this.mRemote.transact(25, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void setSleepTimerMode(int p6)
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            v0.writeInt(p6);
            this.mRemote.transact(31, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }

    public void stop()
    {
        android.os.Parcel v0 = android.os.Parcel.obtain();
        android.os.Parcel v1 = android.os.Parcel.obtain();
        try {
            v0.writeInterfaceToken("net.sourceforge.servestream.service.IMediaPlaybackService");
            this.mRemote.transact(6, v0, v1, 0);
            v1.readException();
            v1.recycle();
            v0.recycle();
            return;
        } catch (Throwable v2_0) {
            v1.recycle();
            v0.recycle();
            throw v2_0;
        }
    }
}
package net.sourceforge.servestream.service;
public abstract class IMediaPlaybackService$Stub extends android.os.Binder implements net.sourceforge.servestream.service.IMediaPlaybackService {
    private static final String DESCRIPTOR = "net.sourceforge.servestream.service.IMediaPlaybackService";
    static final int TRANSACTION_duration = 11;
    static final int TRANSACTION_enqueue = 18;
    static final int TRANSACTION_getAlbumName = 16;
    static final int TRANSACTION_getArtistName = 17;
    static final int TRANSACTION_getAudioId = 24;
    static final int TRANSACTION_getCompleteFileDuration = 36;
    static final int TRANSACTION_getMediaPlayer = 33;
    static final int TRANSACTION_getMediaUri = 14;
    static final int TRANSACTION_getPath = 23;
    static final int TRANSACTION_getPercentDownloaded = 37;
    static final int TRANSACTION_getQueue = 19;
    static final int TRANSACTION_getQueuePosition = 4;
    static final int TRANSACTION_getRepeatMode = 30;
    static final int TRANSACTION_getShuffleMode = 26;
    static final int TRANSACTION_getSleepTimerMode = 32;
    static final int TRANSACTION_getTrackName = 15;
    static final int TRANSACTION_getTrackNumber = 22;
    static final int TRANSACTION_isCompleteFileAvailable = 35;
    static final int TRANSACTION_isPlaying = 5;
    static final int TRANSACTION_isStreaming = 34;
    static final int TRANSACTION_moveQueueItem = 20;
    static final int TRANSACTION_next = 10;
    static final int TRANSACTION_open = 2;
    static final int TRANSACTION_openFile = 1;
    static final int TRANSACTION_pause = 7;
    static final int TRANSACTION_play = 8;
    static final int TRANSACTION_position = 12;
    static final int TRANSACTION_prev = 9;
    static final int TRANSACTION_removeTrack = 28;
    static final int TRANSACTION_removeTracks = 27;
    static final int TRANSACTION_seek = 13;
    static final int TRANSACTION_setDataSource = 3;
    static final int TRANSACTION_setQueuePosition = 21;
    static final int TRANSACTION_setRepeatMode = 29;
    static final int TRANSACTION_setShuffleMode = 25;
    static final int TRANSACTION_setSleepTimerMode = 31;
    static final int TRANSACTION_stop = 6;

    public IMediaPlaybackService$Stub()
    {
        this.attachInterface(this, "net.sourceforge.servestream.service.IMediaPlaybackService");
        return;
    }

    public static net.sourceforge.servestream.service.IMediaPlaybackService asInterface(android.os.IBinder p2)
    {
        net.sourceforge.servestream.service.IMediaPlaybackService v0_0;
        if (p2 != null) {
            net.sourceforge.servestream.service.IMediaPlaybackService v0_1 = p2.queryLocalInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
            if ((v0_1 == null) || (!(v0_1 instanceof net.sourceforge.servestream.service.IMediaPlaybackService))) {
                v0_0 = new net.sourceforge.servestream.service.IMediaPlaybackService$Stub$Proxy(p2);
            } else {
                v0_0 = ((net.sourceforge.servestream.service.IMediaPlaybackService) v0_1);
            }
        } else {
            v0_0 = 0;
        }
        return v0_0;
    }

    public android.os.IBinder asBinder()
    {
        return this;
    }

    public boolean onTransact(int p8, android.os.Parcel p9, android.os.Parcel p10, int p11)
    {
        boolean v0_0 = 0;
        boolean v5 = 1;
        switch (p8) {
            case 1:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.openFile(p9.readString());
                p10.writeNoException();
                break;
            case 2:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.open(p9.createLongArray(), p9.readInt());
                p10.writeNoException();
                break;
            case 3:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                if (p9.readInt() != 0) {
                    v0_0 = 1;
                }
                this.setDataSource(v0_0);
                p10.writeNoException();
                break;
            case 4:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_13 = this.getQueuePosition();
                p10.writeNoException();
                p10.writeInt(v3_13);
                break;
            case 5:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_12 = this.isPlaying();
                p10.writeNoException();
                if (v3_12 != 0) {
                    v0_0 = 1;
                }
                p10.writeInt(v0_0);
                break;
            case 6:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.stop();
                p10.writeNoException();
                break;
            case 7:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.pause();
                p10.writeNoException();
                break;
            case 8:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.play();
                p10.writeNoException();
                break;
            case 9:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.prev();
                p10.writeNoException();
                break;
            case 10:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.next();
                p10.writeNoException();
                break;
            case 11:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_10 = this.duration();
                p10.writeNoException();
                p10.writeLong(v3_10);
                break;
            case 12:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_9 = this.position();
                p10.writeNoException();
                p10.writeLong(v3_9);
                break;
            case 13:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_8 = this.seek(p9.readLong());
                p10.writeNoException();
                p10.writeLong(v3_8);
                break;
            case 14:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_7 = this.getMediaUri();
                p10.writeNoException();
                p10.writeString(v3_7);
                break;
            case 15:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_6 = this.getTrackName();
                p10.writeNoException();
                p10.writeString(v3_6);
                break;
            case 16:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_5 = this.getAlbumName();
                p10.writeNoException();
                p10.writeString(v3_5);
                break;
            case 17:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_4 = this.getArtistName();
                p10.writeNoException();
                p10.writeString(v3_4);
                break;
            case 18:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.enqueue(p9.createLongArray(), p9.readInt());
                p10.writeNoException();
                break;
            case 19:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_2 = this.getQueue();
                p10.writeNoException();
                p10.writeLongArray(v3_2);
                break;
            case 20:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.moveQueueItem(p9.readInt(), p9.readInt());
                p10.writeNoException();
                break;
            case 21:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.setQueuePosition(p9.readInt());
                p10.writeNoException();
                break;
            case 22:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_1 = this.getTrackNumber();
                p10.writeNoException();
                p10.writeString(v3_1);
                break;
            case 23:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_0 = this.getPath();
                p10.writeNoException();
                p10.writeString(v3_0);
                break;
            case 24:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_22 = this.getAudioId();
                p10.writeNoException();
                p10.writeLong(v3_22);
                break;
            case 25:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.setShuffleMode(p9.readInt());
                p10.writeNoException();
                break;
            case 26:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_21 = this.getShuffleMode();
                p10.writeNoException();
                p10.writeInt(v3_21);
                break;
            case 27:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_20 = this.removeTracks(p9.readInt(), p9.readInt());
                p10.writeNoException();
                p10.writeInt(v3_20);
                break;
            case 28:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_18 = this.removeTrack(p9.readLong());
                p10.writeNoException();
                p10.writeInt(v3_18);
                break;
            case 29:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.setRepeatMode(p9.readInt());
                p10.writeNoException();
                break;
            case 30:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_17 = this.getRepeatMode();
                p10.writeNoException();
                p10.writeInt(v3_17);
                break;
            case 31:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                this.setSleepTimerMode(p9.readInt());
                p10.writeNoException();
                break;
            case 32:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_16 = this.getSleepTimerMode();
                p10.writeNoException();
                p10.writeInt(v3_16);
                break;
            case 33:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_15 = this.getMediaPlayer();
                p10.writeNoException();
                if (v3_15 == 0) {
                    p10.writeInt(0);
                } else {
                    p10.writeInt(1);
                    v3_15.writeToParcel(p10, 1);
                }
                break;
            case 34:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_14 = this.isStreaming();
                p10.writeNoException();
                if (v3_14 != 0) {
                    v0_0 = 1;
                }
                p10.writeInt(v0_0);
                break;
            case 35:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_11 = this.isCompleteFileAvailable();
                p10.writeNoException();
                if (v3_11 != 0) {
                    v0_0 = 1;
                }
                p10.writeInt(v0_0);
                break;
            case 36:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_3 = this.getCompleteFileDuration();
                p10.writeNoException();
                p10.writeLong(v3_3);
                break;
            case 37:
                p9.enforceInterface("net.sourceforge.servestream.service.IMediaPlaybackService");
                double v3_19 = this.getPercentDownloaded();
                p10.writeNoException();
                p10.writeDouble(v3_19);
                break;
            case 1598968902:
                p10.writeString("net.sourceforge.servestream.service.IMediaPlaybackService");
                break;
            default:
                v5 = super.onTransact(p8, p9, p10, p11);
        }
        return v5;
    }
}
package net.sourceforge.servestream.service;
public class MediaButtonIntentReceiver extends android.content.BroadcastReceiver {
    private static boolean mDown;
    private static long mLastClickTime;

    static MediaButtonIntentReceiver()
    {
        net.sourceforge.servestream.service.MediaButtonIntentReceiver.mLastClickTime = 0;
        net.sourceforge.servestream.service.MediaButtonIntentReceiver.mDown = 0;
        return;
    }

    public MediaButtonIntentReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p13, android.content.Intent p14)
    {
        String v6 = p14.getAction();
        if (!"android.media.AUDIO_BECOMING_NOISY".equals(v6)) {
            if ("android.intent.action.MEDIA_BUTTON".equals(v6)) {
                android.view.KeyEvent v2_1 = ((android.view.KeyEvent) p14.getParcelableExtra("android.intent.extra.KEY_EVENT"));
                if (v2_1 != null) {
                    int v7 = v2_1.getKeyCode();
                    int v0 = v2_1.getAction();
                    long v3 = v2_1.getEventTime();
                    String v1 = 0;
                    switch (v7) {
                        case 79:
                        case 85:
                            v1 = "togglepause";
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                        default:
                            break;
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                            break;
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                            break;
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                            break;
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                            break;
                        case 86:
                            v1 = "stop";
                            break;
                        case 87:
                            v1 = "next";
                            break;
                        case 88:
                            v1 = "previous";
                            break;
                    }
                    if (v1 != null) {
                        if (v0 != 0) {
                            net.sourceforge.servestream.service.MediaButtonIntentReceiver.mDown = 0;
                        } else {
                            if (!net.sourceforge.servestream.service.MediaButtonIntentReceiver.mDown) {
                                android.content.Intent v5_1 = new android.content.Intent(p13, net.sourceforge.servestream.service.MediaPlaybackService);
                                v5_1.setAction("net.sourceforge.servestream.mediaservicecommand");
                                if ((v7 != 79) || ((v3 - net.sourceforge.servestream.service.MediaButtonIntentReceiver.mLastClickTime) >= 300)) {
                                    v5_1.putExtra("command", v1);
                                    p13.startService(v5_1);
                                    net.sourceforge.servestream.service.MediaButtonIntentReceiver.mLastClickTime = v3;
                                } else {
                                    v5_1.putExtra("command", "next");
                                    p13.startService(v5_1);
                                    net.sourceforge.servestream.service.MediaButtonIntentReceiver.mLastClickTime = 0;
                                }
                                net.sourceforge.servestream.service.MediaButtonIntentReceiver.mDown = 1;
                            }
                        }
                        if (this.isOrderedBroadcast()) {
                            this.abortBroadcast();
                        }
                    }
                }
            }
        } else {
            android.content.Intent v5_3 = new android.content.Intent(p13, net.sourceforge.servestream.service.MediaPlaybackService);
            v5_3.setAction("net.sourceforge.servestream.mediaservicecommand");
            v5_3.putExtra("command", "pause");
            p13.startService(v5_3);
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$1 extends android.os.Handler {
    float mCurrentVolume;
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$1(net.sourceforge.servestream.service.MediaPlaybackService p2)
    {
        this.this$0 = p2;
        this.mCurrentVolume = 1065353216;
        return;
    }

    public void handleMessage(android.os.Message p6)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), new StringBuilder().append("mMediaplayerHandler.handleMessage ").append(p6.what).toString());
        switch (p6.what) {
            case 1:
                net.sourceforge.servestream.service.MediaPlaybackService.access$400(this.this$0, "net.sourceforge.servestream.playbackcomplete");
                if (net.sourceforge.servestream.service.MediaPlaybackService.access$500(this.this$0) != 1) {
                    this.this$0.next(0);
                } else {
                    this.this$0.seek(0);
                    this.this$0.play();
                }
                break;
            case 2:
                android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "server died!");
                if (!net.sourceforge.servestream.service.MediaPlaybackService.access$200(this.this$0)) {
                    net.sourceforge.servestream.service.MediaPlaybackService.access$300(this.this$0);
                } else {
                    this.this$0.next(1);
                }
                break;
            case 3:
                switch (p6.arg1) {
                    case -2:
                        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "AudioFocus: received AUDIOFOCUS_LOSS_TRANSIENT");
                        if (this.this$0.isPlaying()) {
                            net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 1);
                            net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                        }
                        this.this$0.pause();
                        break;
                    case -1:
                        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "AudioFocus: received AUDIOFOCUS_LOSS");
                        if (this.this$0.isPlaying()) {
                            net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 0);
                            net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                        }
                        this.this$0.pause();
                        break;
                    case 0:
                    default:
                        android.util.Log.e(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "Unknown audio focus change code");
                        break;
                    case 1:
                        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "AudioFocus: received AUDIOFOCUS_GAIN");
                        if ((this.this$0.isPlaying()) || (!net.sourceforge.servestream.service.MediaPlaybackService.access$700(this.this$0))) {
                        } else {
                            net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 0);
                            net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                            this.mCurrentVolume = 0;
                            net.sourceforge.servestream.service.MediaPlaybackService.access$900(this.this$0).setVolume(this.mCurrentVolume);
                            this.this$0.play();
                        }
                        break;
                }
                break;
            case 4:
            case 5:
            default:
                break;
            case 4:
            case 5:
                break;
            case 6:
                this.this$0.removeStickyBroadcast(new android.content.Intent("net.sourceforge.servestream.startdialog"));
                this.this$0.sendBroadcast(new android.content.Intent("net.sourceforge.servestream.stopdialog"));
                this.this$0.play();
                net.sourceforge.servestream.service.MediaPlaybackService.access$400(this.this$0, "net.sourceforge.servestream.metachanged");
                net.sourceforge.servestream.service.MediaPlaybackService.access$400(this.this$0, "net.sourceforge.servestream.playbackstarted");
                break;
            case 7:
                net.sourceforge.servestream.service.MediaPlaybackService.access$600(this.this$0);
                break;
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$2 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$2(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p8, android.content.Intent p9)
    {
        String v0 = p9.getAction();
        String v2 = p9.getStringExtra("command");
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), new StringBuilder().append("mIntentReceiver.onReceive ").append(v0).append(" / ").append(v2).toString());
        if ((!"next".equals(v2)) && (!"net.sourceforge.servestream.mediaservicecommand.next".equals(v0))) {
            if (!"previous".equals(v2)) {
                if ((!"togglepause".equals(v2)) && (!"net.sourceforge.servestream.mediaservicecommand.togglepause".equals(v0))) {
                    if ((!"pause".equals(v2)) && (!"net.sourceforge.servestream.mediaservicecommand.pause".equals(v0))) {
                        if (!"stop".equals(v2)) {
                            if ("appwidgetupdate".equals(v2)) {
                                net.sourceforge.servestream.service.MediaPlaybackService.access$1000(this.this$0).performUpdate(this.this$0, p9.getIntArrayExtra("appWidgetIds"), "");
                            }
                        } else {
                            this.this$0.pause();
                            net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 0);
                            net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                            this.this$0.seek(0);
                        }
                    } else {
                        this.this$0.pause();
                        net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 0);
                        net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                    }
                } else {
                    if (!this.this$0.isPlaying()) {
                        this.this$0.play();
                    } else {
                        this.this$0.pause();
                        net.sourceforge.servestream.service.MediaPlaybackService.access$702(this.this$0, 0);
                        net.sourceforge.servestream.service.MediaPlaybackService.access$802(this.this$0, 0);
                    }
                }
            } else {
                this.this$0.prev();
            }
        } else {
            this.this$0.next(1);
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$3 extends android.content.BroadcastReceiver {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$3(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p7, android.content.Intent p8)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), new StringBuilder().append("mDockReceiver.onReceive ").append(p8.getAction()).append(" / ").append(p8.getStringExtra("command")).toString());
        if ((p8.getExtras().containsKey("android.intent.extra.DOCK_STATE")) && (p8.getExtras().getInt("android.intent.extra.DOCK_STATE", 1) == 0)) {
            this.this$0.pause();
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$4 implements android.media.AudioManager$OnAudioFocusChangeListener {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$4(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onAudioFocusChange(int p4)
    {
        net.sourceforge.servestream.service.MediaPlaybackService.access$1100(this.this$0).obtainMessage(3, p4, 0).sendToTarget();
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$5 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$5(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        if ((!this.this$0.isPlaying()) && ((!net.sourceforge.servestream.service.MediaPlaybackService.access$700(this.this$0)) && ((!net.sourceforge.servestream.service.MediaPlaybackService.access$1200(this.this$0)) && (!net.sourceforge.servestream.service.MediaPlaybackService.access$1100(this.this$0).hasMessages(1))))) {
            this.this$0.stopSelf(net.sourceforge.servestream.service.MediaPlaybackService.access$1300(this.this$0));
        }
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$6 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$6(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), "mSleepTimerHandler called");
        this.this$0.stop();
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$7 extends android.telephony.PhoneStateListener {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$7(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onCallStateChanged(int p5, String p6)
    {
        try {
            switch (p5) {
                case 0:
                    if (!net.sourceforge.servestream.service.MediaPlaybackService.access$1500(this.this$0)) {
                        return;
                    } else {
                        this.this$0.play();
                        net.sourceforge.servestream.service.MediaPlaybackService.access$1502(this.this$0, 0);
                        return;
                    }
                case 1:
                    if (!this.this$0.isPlaying()) {
                        return;
                    } else {
                        this.this$0.pause();
                        net.sourceforge.servestream.service.MediaPlaybackService.access$1502(this.this$0, 1);
                        return;
                    }
                case 2:
                    if (!this.this$0.isPlaying()) {
                        return;
                    } else {
                        this.this$0.pause();
                        net.sourceforge.servestream.service.MediaPlaybackService.access$1502(this.this$0, 1);
                        return;
                    }
                default:
                    android.util.Log.d(net.sourceforge.servestream.service.MediaPlaybackService.access$100(), new StringBuilder().append("Invalid phone state: ").append(p5).toString());
                    return;
            }
        } catch (Exception v0) {
        }
        v0.printStackTrace();
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$8 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.service.MediaPlaybackService this$0;

    MediaPlaybackService$8(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        this.this$0.next(0);
        net.sourceforge.servestream.service.MediaPlaybackService.access$400(this.this$0, "net.sourceforge.servestream.metachanged");
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$ServiceStub extends net.sourceforge.servestream.service.IMediaPlaybackService$Stub {
    ref.WeakReference mService;

    MediaPlaybackService$ServiceStub(net.sourceforge.servestream.service.MediaPlaybackService p2)
    {
        this.mService = new ref.WeakReference(p2);
        return;
    }

    public long duration()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).duration();
    }

    public void enqueue(long[] p2, int p3)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).enqueue(p2, p3);
        return;
    }

    public String getAlbumName()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getAlbumName();
    }

    public String getArtistName()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getArtistName();
    }

    public long getAudioId()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getAudioId();
    }

    public long getCompleteFileDuration()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getCompleteFileDuration();
    }

    public net.sourceforge.servestream.player.MultiPlayer getMediaPlayer()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getMediaPlayer();
    }

    public String getMediaUri()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getMediaUri();
    }

    public String getPath()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getPath();
    }

    public double getPercentDownloaded()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getPercentDownloaded();
    }

    public long[] getQueue()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getQueue();
    }

    public int getQueuePosition()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getQueuePosition();
    }

    public int getRepeatMode()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getRepeatMode();
    }

    public int getShuffleMode()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getShuffleMode();
    }

    public int getSleepTimerMode()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getSleepTimerMode();
    }

    public String getTrackName()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getTrackName();
    }

    public String getTrackNumber()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).getTrackNumber();
    }

    public boolean isCompleteFileAvailable()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).isCompleteFileAvailable();
    }

    public boolean isPlaying()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).isPlaying();
    }

    public boolean isStreaming()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).isStreaming();
    }

    public void moveQueueItem(int p2, int p3)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).moveQueueItem(p2, p3);
        return;
    }

    public void next()
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).next(1);
        return;
    }

    public void open(long[] p2, int p3)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).open(p2, p3);
        return;
    }

    public void openFile(String p2)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).open(p2);
        return;
    }

    public void pause()
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).pause();
        return;
    }

    public void play()
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).play();
        return;
    }

    public long position()
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).position();
    }

    public void prev()
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).prev();
        return;
    }

    public int removeTrack(long p2)
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).removeTrack(p2);
    }

    public int removeTracks(int p2, int p3)
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).removeTracks(p2, p3);
    }

    public long seek(long p3)
    {
        return ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).seek(p3);
    }

    public void setDataSource(boolean p2)
    {
        net.sourceforge.servestream.service.MediaPlaybackService.access$1400(((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()), p2);
        return;
    }

    public void setQueuePosition(int p2)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).setQueuePosition(p2);
        return;
    }

    public void setRepeatMode(int p2)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).setRepeatMode(p2);
        return;
    }

    public void setShuffleMode(int p2)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).setShuffleMode(p2);
        return;
    }

    public void setSleepTimerMode(int p2)
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).setSleepTimerMode(p2);
        return;
    }

    public void stop()
    {
        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mService.get()).stop();
        return;
    }
}
package net.sourceforge.servestream.service;
 class MediaPlaybackService$Shuffler {
    private int mPrevious;
    private java.util.Random mRandom;

    private MediaPlaybackService$Shuffler()
    {
        this.mRandom = new java.util.Random();
        return;
    }

    synthetic MediaPlaybackService$Shuffler(net.sourceforge.servestream.service.MediaPlaybackService$1 p1)
    {
        return;
    }

    public int nextInt(int p3)
    {
        do {
            int v0 = this.mRandom.nextInt(p3);
        } while((v0 == this.mPrevious) && (p3 > 1));
        this.mPrevious = v0;
        return v0;
    }
}
package net.sourceforge.servestream.service;
public class MediaPlaybackService extends android.app.Service implements android.content.SharedPreferences$OnSharedPreferenceChangeListener {
    private static final int AUDIOFOCUS_GAIN = 1;
    private static final int AUDIOFOCUS_LOSS = 255;
    private static final int AUDIOFOCUS_LOSS_TRANSIENT = 254;
    public static final String CMDNAME = "command";
    public static final String CMDNEXT = "next";
    public static final String CMDPAUSE = "pause";
    public static final String CMDPREVIOUS = "previous";
    public static final String CMDSTOP = "stop";
    public static final String CMDTOGGLEPAUSE = "togglepause";
    private static final int FOCUSCHANGE = 3;
    private static final int IDLE_DELAY = 300000;
    public static final int LAST = 3;
    private static final int MAX_HISTORY_SIZE = 100;
    public static final String META_CHANGED = "net.sourceforge.servestream.metachanged";
    public static final int NEXT = 2;
    public static final String NEXT_ACTION = "net.sourceforge.servestream.mediaservicecommand.next";
    public static final int NOW = 1;
    public static final String PAUSE_ACTION = "net.sourceforge.servestream.mediaservicecommand.pause";
    public static final int PLAYBACKSERVICE_STATUS = 100;
    public static final String PLAYBACK_COMPLETE = "net.sourceforge.servestream.playbackcomplete";
    public static final String PLAYBACK_STARTED = "net.sourceforge.servestream.playbackstarted";
    public static final String PLAYER_CLOSED = "net.sourceforge.servestream.playerclosed";
    public static final int PLAYER_ERROR = 7;
    public static final int PLAYER_PREPARED = 6;
    public static final String PLAYSTATE_CHANGED = "net.sourceforge.servestream.playstatechanged";
    public static final String PREPARE_VIDEO = "net.sourceforge.servestream.preparevideo";
    public static final String QUEUE_CHANGED = "net.sourceforge.servestream.queuechanged";
    public static final int REPEAT_ALL = 2;
    public static final int REPEAT_CURRENT = 1;
    public static final int REPEAT_NONE = 0;
    public static final int SERVER_DIED = 2;
    public static final String SERVICECMD = "net.sourceforge.servestream.mediaservicecommand";
    public static final int SHUFFLE_NONE = 0;
    public static final int SHUFFLE_ON = 1;
    public static final int SLEEP_TIMER_OFF = 0;
    public static final String START_DIALOG = "net.sourceforge.servestream.startdialog";
    public static final String STOP_DIALOG = "net.sourceforge.servestream.stopdialog";
    private static final String TAG = "";
    public static final String TOGGLEPAUSE_ACTION = "net.sourceforge.servestream.mediaservicecommand.togglepause";
    public static final int TRACK_ENDED = 1;
    private net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider mAppWidgetProvider;
    private android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener;
    private android.media.AudioManager mAudioManager;
    private final android.os.IBinder mBinder;
    private net.sourceforge.servestream.service.ConnectivityReceiver mConnectivityManager;
    private android.database.Cursor mCursor;
    String[] mCursorCols;
    private android.os.Handler mDelayedPlaybackHandler;
    private android.os.Handler mDelayedStopHandler;
    private android.content.BroadcastReceiver mDockReceiver;
    private net.sourceforge.servestream.service.DownloadManager mDownloadManager;
    private String mFileToPlay;
    private java.util.Vector mHistory;
    private android.content.BroadcastReceiver mIntentReceiver;
    private boolean mIsStreaming;
    private boolean mIsSupposedToBePlaying;
    private android.os.Handler mMediaplayerHandler;
    private int mOpenFailedCounter;
    private boolean mPausedByConnectivityReceiver;
    private boolean mPausedByTransientLossOfFocus;
    private boolean mPausedDuringPhoneCall;
    private android.telephony.PhoneStateListener mPhoneListener;
    private long[] mPlayList;
    private int mPlayListLen;
    private int mPlayPos;
    private net.sourceforge.servestream.player.MultiPlayer mPlayer;
    private android.content.SharedPreferences mPreferences;
    private boolean mQuietMode;
    private final net.sourceforge.servestream.service.MediaPlaybackService$Shuffler mRand;
    private int mRepeatMode;
    private net.sourceforge.servestream.metadata.SHOUTcastMetadata mSHOUTcastMetadata;
    private boolean mServiceInUse;
    private int mServiceStartId;
    private int mShuffleMode;
    private net.sourceforge.servestream.service.SimpleLastfmScrobblerManager mSimpleLastfmScrobblerManager;
    private android.os.Handler mSleepTimerHandler;
    private int mSleepTimerMode;
    protected net.sourceforge.servestream.dbutils.StreamDatabase mStreamdb;

    static MediaPlaybackService()
    {
        net.sourceforge.servestream.service.MediaPlaybackService.TAG = net.sourceforge.servestream.service.MediaPlaybackService.getName();
        return;
    }

    public MediaPlaybackService()
    {
        this.mStreamdb = 0;
        this.mShuffleMode = 0;
        this.mRepeatMode = 0;
        this.mSleepTimerMode = 0;
        this.mPlayList = 0;
        this.mPlayListLen = 0;
        this.mHistory = new java.util.Vector(100);
        this.mPlayPos = -1;
        this.mRand = new net.sourceforge.servestream.service.MediaPlaybackService$Shuffler(0);
        this.mOpenFailedCounter = 0;
        net.sourceforge.servestream.service.MediaPlaybackService$8 v0_5 = new String[8];
        v0_5[0] = "_id";
        v0_5[1] = "uri";
        v0_5[2] = "title";
        v0_5[3] = "album";
        v0_5[4] = "artist";
        v0_5[5] = "duration";
        v0_5[6] = "track";
        v0_5[7] = "year";
        this.mCursorCols = v0_5;
        this.mServiceStartId = -1;
        this.mServiceInUse = 0;
        this.mIsSupposedToBePlaying = 0;
        this.mQuietMode = 0;
        this.mPausedByTransientLossOfFocus = 0;
        this.mPausedByConnectivityReceiver = 0;
        this.mPausedDuringPhoneCall = 0;
        this.mIsStreaming = 1;
        this.mAppWidgetProvider = net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.getInstance();
        this.mMediaplayerHandler = new net.sourceforge.servestream.service.MediaPlaybackService$1(this);
        this.mIntentReceiver = new net.sourceforge.servestream.service.MediaPlaybackService$2(this);
        this.mDockReceiver = new net.sourceforge.servestream.service.MediaPlaybackService$3(this);
        this.mAudioFocusListener = new net.sourceforge.servestream.service.MediaPlaybackService$4(this);
        this.mDelayedStopHandler = new net.sourceforge.servestream.service.MediaPlaybackService$5(this);
        this.mSleepTimerHandler = new net.sourceforge.servestream.service.MediaPlaybackService$6(this);
        this.mBinder = new net.sourceforge.servestream.service.MediaPlaybackService$ServiceStub(this);
        this.mPhoneListener = new net.sourceforge.servestream.service.MediaPlaybackService$7(this);
        this.mDelayedPlaybackHandler = new net.sourceforge.servestream.service.MediaPlaybackService$8(this);
        return;
    }

    static synthetic String access$100()
    {
        return net.sourceforge.servestream.service.MediaPlaybackService.TAG;
    }

    static synthetic net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider access$1000(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mAppWidgetProvider;
    }

    static synthetic android.os.Handler access$1100(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mMediaplayerHandler;
    }

    static synthetic boolean access$1200(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mServiceInUse;
    }

    static synthetic int access$1300(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mServiceStartId;
    }

    static synthetic void access$1400(net.sourceforge.servestream.service.MediaPlaybackService p0, boolean p1)
    {
        p0.setDataSource(p1);
        return;
    }

    static synthetic boolean access$1500(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mPausedDuringPhoneCall;
    }

    static synthetic boolean access$1502(net.sourceforge.servestream.service.MediaPlaybackService p0, boolean p1)
    {
        p0.mPausedDuringPhoneCall = p1;
        return p1;
    }

    static synthetic boolean access$200(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mIsSupposedToBePlaying;
    }

    static synthetic void access$300(net.sourceforge.servestream.service.MediaPlaybackService p0)
    {
        p0.openCurrent();
        return;
    }

    static synthetic void access$400(net.sourceforge.servestream.service.MediaPlaybackService p0, String p1)
    {
        p0.notifyChange(p1);
        return;
    }

    static synthetic int access$500(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mRepeatMode;
    }

    static synthetic void access$600(net.sourceforge.servestream.service.MediaPlaybackService p0)
    {
        p0.handleError();
        return;
    }

    static synthetic boolean access$700(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mPausedByTransientLossOfFocus;
    }

    static synthetic boolean access$702(net.sourceforge.servestream.service.MediaPlaybackService p0, boolean p1)
    {
        p0.mPausedByTransientLossOfFocus = p1;
        return p1;
    }

    static synthetic boolean access$802(net.sourceforge.servestream.service.MediaPlaybackService p0, boolean p1)
    {
        p0.mPausedByConnectivityReceiver = p1;
        return p1;
    }

    static synthetic net.sourceforge.servestream.player.MultiPlayer access$900(net.sourceforge.servestream.service.MediaPlaybackService p1)
    {
        return p1.mPlayer;
    }

    private void addToPlayList(long[] p10, int p11)
    {
        int v0 = p10.length;
        if (p11 < 0) {
            this.mPlayListLen = 0;
            p11 = 0;
        }
        this.ensurePlayListCapacity((this.mPlayListLen + v0));
        if (p11 > this.mPlayListLen) {
            p11 = this.mPlayListLen;
        }
        int v1_0 = (this.mPlayListLen - p11);
        while (v1_0 > 0) {
            this.mPlayList[(p11 + v1_0)] = this.mPlayList[((p11 + v1_0) - v0)];
            v1_0--;
        }
        int v1_1 = 0;
        while (v1_1 < v0) {
            this.mPlayList[(p11 + v1_1)] = p10[v1_1];
            v1_1++;
        }
        this.mPlayListLen = (this.mPlayListLen + v0);
        if (this.mPlayListLen != 0) {
            if (this.mPreferences.getBoolean("retrievemetadata", 0)) {
                int v2 = 0;
                if (this.mPlayPos > 0) {
                    v2 = this.mPlayPos;
                }
                net.sourceforge.servestream.utils.MetadataRetriever.retrieve(this, p10, v2);
            }
        } else {
            this.mCursor.close();
            this.mCursor = 0;
            this.notifyChange("net.sourceforge.servestream.metachanged");
        }
        return;
    }

    private android.app.Notification buildNotification()
    {
        String v4 = this.getTrackName();
        if ((v4 == null) || (v4.equals(""))) {
            v4 = this.getMediaUri();
        }
        String v1 = this.getArtistName();
        if ((v1 == null) || (v1.equals(""))) {
            v1 = this.getString(2131361897);
        }
        String v0 = this.getAlbumName();
        if ((v0 == null) || (v0.equals(""))) {
            v0 = this.getString(2131361898);
        }
        android.app.Notification v3_1 = new android.app.Notification(2130837576, 0, System.currentTimeMillis());
        v3_1.flags = (v3_1.flags | 2);
        android.app.PendingIntent v2 = android.app.PendingIntent.getActivity(this, 1, new android.content.Intent(this, net.sourceforge.servestream.activity.MediaPlaybackActivity), 0);
        android.content.Context v5_11 = this.getApplicationContext();
        Object[] v7_2 = new Object[2];
        v7_2[0] = v1;
        v7_2[1] = v0;
        v3_1.setLatestEventInfo(v5_11, v4, this.getString(2131361846, v7_2), v2);
        return v3_1;
    }

    private void ensurePlayListCapacity(int p6)
    {
        if ((this.mPlayList == null) || (p6 > this.mPlayList.length)) {
            int v1;
            long[] v2 = new long[(p6 * 2)];
            if (this.mPlayList == null) {
                v1 = this.mPlayListLen;
            } else {
                v1 = this.mPlayList.length;
            }
            int v0 = 0;
            while (v0 < v1) {
                v2[v0] = this.mPlayList[v0];
                v0++;
            }
            this.mPlayList = v2;
        }
        return;
    }

    private void gotoIdleState()
    {
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        this.mDelayedStopHandler.sendMessageDelayed(this.mDelayedStopHandler.obtainMessage(), 300000);
        this.stopForeground(1);
        return;
    }

    private void handleError()
    {
        if (this.mPlayer.isInitialized()) {
            this.mOpenFailedCounter = 0;
        } else {
            this.sendBroadcast(new android.content.Intent("net.sourceforge.servestream.stopdialog"));
            this.stop(1);
            this.mOpenFailedCounter = (this.mOpenFailedCounter + 1);
            if (this.mPlayListLen > 1) {
                if (this.mOpenFailedCounter != this.mPlayListLen) {
                    this.mDelayedPlaybackHandler.sendEmptyMessageDelayed(0, 2500);
                } else {
                    this.mOpenFailedCounter = 0;
                }
            }
            if (!this.mQuietMode) {
                android.widget.Toast.makeText(this, 2131361849, 0).show();
            }
            android.util.Log.d(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "Failed to open file for playback");
        }
        return;
    }

    private void notifyChange(String p5)
    {
        android.content.Intent v0_1 = new android.content.Intent(p5);
        v0_1.putExtra("id", Long.valueOf(this.getAudioId()));
        v0_1.putExtra("artist", this.getArtistName());
        v0_1.putExtra("album", this.getAlbumName());
        v0_1.putExtra("track", this.getTrackName());
        v0_1.putExtra("duration", Long.valueOf(this.duration()));
        v0_1.putExtra("playing", this.isPlaying());
        this.sendBroadcast(v0_1);
        this.mAppWidgetProvider.notifyChange(this, p5);
        return;
    }

    private void openCurrent()
    {
        try {
            if (this.mCursor != null) {
                this.mCursor.close();
                this.mCursor = 0;
            }
        } catch (String v0_15) {
            throw v0_15;
        }
        if (this.mPlayListLen != 0) {
            this.stop(0);
            String v6 = String.valueOf(this.mPlayList[this.mPlayPos]);
            this.mCursor = this.getContentResolver().query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, this.mCursorCols, new StringBuilder().append("_id=").append(v6).toString(), 0, 0);
            if (this.mCursor != null) {
                this.mCursor.moveToFirst();
                this.open(new StringBuilder().append(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI).append("/").append(v6).toString());
            }
        } else {
        }
        return;
    }

    private boolean playingVideo()
    {
        int v2 = 0;
        try {
            if (this.mFileToPlay.length() > 4) {
                String v1 = this.mFileToPlay.substring((this.mFileToPlay.length() - 4), this.mFileToPlay.length());
                if ((v1.equalsIgnoreCase(".3gp")) || (v1.equalsIgnoreCase(".mp4"))) {
                    v2 = 1;
                }
            }
        } catch (Exception v0) {
            v0.printStackTrace();
        }
        return v2;
    }

    private void reloadSettings()
    {
        int v0 = this.mPreferences.getInt("repeatmode", 0);
        if ((v0 != 2) && (v0 != 1)) {
            v0 = 0;
        }
        this.mRepeatMode = v0;
        int v1 = this.mPreferences.getInt("shufflemode", 0);
        if (v1 != 1) {
            v1 = 0;
        }
        this.mShuffleMode = v1;
        return;
    }

    private int removeTracksInternal(int p9, int p10)
    {
        int v4_0 = 0;
        try {
            if (p10 >= p9) {
                if (p9 < 0) {
                    p9 = 0;
                }
                if (p10 >= this.mPlayListLen) {
                    p10 = (this.mPlayListLen - 1);
                }
                int v0 = 0;
                if ((p9 > this.mPlayPos) || (this.mPlayPos > p10)) {
                    if (this.mPlayPos > p10) {
                        this.mPlayPos = (this.mPlayPos - ((p10 - p9) + 1));
                    }
                } else {
                    this.mPlayPos = p9;
                    v0 = 1;
                }
                int v2 = ((this.mPlayListLen - p10) - 1);
                int v1 = 0;
                while (v1 < v2) {
                    this.mPlayList[(p9 + v1)] = this.mPlayList[((p10 + 1) + v1)];
                    v1++;
                }
                this.mPlayListLen = (this.mPlayListLen - ((p10 - p9) + 1));
                if (v0 != 0) {
                    if (this.mPlayListLen != 0) {
                        if (this.mPlayPos >= this.mPlayListLen) {
                            this.mPlayPos = 0;
                        }
                        boolean v3 = this.isPlaying();
                        this.stop(0);
                        this.openCurrent();
                        if (v3) {
                            this.play();
                        }
                    } else {
                        this.stop(1);
                        this.mPlayPos = -1;
                        if (this.mCursor != null) {
                            this.mCursor.close();
                            this.mCursor = 0;
                        }
                    }
                    this.notifyChange("net.sourceforge.servestream.metachanged");
                }
                v4_0 = ((p10 - p9) + 1);
            } else {
            }
        } catch (int v4_23) {
            throw v4_23;
        }
        return v4_0;
    }

    private void saveSettings()
    {
        android.content.SharedPreferences$Editor v0 = this.mPreferences.edit();
        v0.putInt("repeatmode", this.mRepeatMode);
        v0.putInt("shufflemode", this.mShuffleMode);
        v0.commit();
        return;
    }

    private void setDataSource(boolean p4)
    {
        this.mPlayer.setDataSource(this.mFileToPlay, 0);
        return;
    }

    private void stop(boolean p4)
    {
        if (this.mPlayer.isInitialized()) {
            this.mPlayer.stop();
            this.mDownloadManager.cancelDownload();
        }
        this.mFileToPlay = 0;
        if (this.mCursor != null) {
            this.mCursor.close();
            this.mCursor = 0;
        }
        if (!p4) {
            this.stopForeground(0);
        } else {
            this.gotoIdleState();
        }
        if (p4) {
            this.mIsSupposedToBePlaying = 0;
        }
        return;
    }

    public long duration()
    {
        long v0_2;
        if (!this.mPlayer.isInitialized()) {
            v0_2 = -1;
        } else {
            v0_2 = this.mPlayer.duration();
        }
        return v0_2;
    }

    public void enqueue(long[] p3, int p4)
    {
        try {
            if ((p4 != 2) || ((this.mPlayPos + 1) >= this.mPlayListLen)) {
                this.addToPlayList(p3, 2147483647);
                this.notifyChange("net.sourceforge.servestream.queuechanged");
                if (p4 != 1) {
                    if (this.mPlayPos < 0) {
                        this.mPlayPos = 0;
                        this.openCurrent();
                        this.play();
                        this.notifyChange("net.sourceforge.servestream.metachanged");
                    }
                } else {
                    this.mPlayPos = (this.mPlayListLen - p3.length);
                    this.openCurrent();
                    this.play();
                    this.notifyChange("net.sourceforge.servestream.metachanged");
                }
            } else {
                this.addToPlayList(p3, (this.mPlayPos + 1));
                this.notifyChange("net.sourceforge.servestream.queuechanged");
            }
        } catch (String v0_13) {
            throw v0_13;
        }
        return;
    }

    public String getAlbumName()
    {
        try {
            String v0_3;
            if (this.mCursor != null) {
                v0_3 = this.mCursor.getString(this.mCursor.getColumnIndexOrThrow("album"));
            } else {
                v0_3 = 0;
            }
        } catch (String v0_1) {
            throw v0_1;
        }
        return v0_3;
    }

    public String getArtistName()
    {
        try {
            String v0_3;
            if (this.mCursor != null) {
                v0_3 = this.mCursor.getString(this.mCursor.getColumnIndexOrThrow("artist"));
            } else {
                v0_3 = 0;
            }
        } catch (String v0_1) {
            throw v0_1;
        }
        return v0_3;
    }

    public long getAudioId()
    {
        try {
            if ((this.mPlayPos < 0) || (!this.mPlayer.isInitialized())) {
                long v0_4 = -1;
            } else {
                v0_4 = this.mPlayList[this.mPlayPos];
            }
        } catch (long v0_1) {
            throw v0_1;
        }
        return v0_4;
    }

    public long getCompleteFileDuration()
    {
        try {
            return this.mDownloadManager.getLength();
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public long getMediaId()
    {
        try {
            if ((this.mPlayPos < 0) || (!this.mPlayer.isInitialized())) {
                long v0_4 = -1;
            } else {
                v0_4 = this.mPlayList[this.mPlayPos];
            }
        } catch (long v0_1) {
            throw v0_1;
        }
        return v0_4;
    }

    public net.sourceforge.servestream.player.MultiPlayer getMediaPlayer()
    {
        return this.mPlayer;
    }

    public String getMediaUri()
    {
        try {
            String v0_3;
            if (this.mCursor != null) {
                v0_3 = this.mCursor.getString(this.mCursor.getColumnIndexOrThrow("uri"));
            } else {
                v0_3 = 0;
            }
        } catch (String v0_1) {
            throw v0_1;
        }
        return v0_3;
    }

    public String getPath()
    {
        return this.mFileToPlay;
    }

    public double getPercentDownloaded()
    {
        try {
            return this.mDownloadManager.getPercentDownloaded();
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public long[] getQueue()
    {
        try {
            int v1 = this.mPlayListLen;
            long[] v2 = new long[v1];
            int v0 = 0;
        } catch (long v3_2) {
            throw v3_2;
        }
        while (v0 < v1) {
            v2[v0] = this.mPlayList[v0];
            v0++;
        }
        return v2;
    }

    public int getQueuePosition()
    {
        try {
            return this.mPlayPos;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }

    public int getRepeatMode()
    {
        return this.mRepeatMode;
    }

    public int getShuffleMode()
    {
        return this.mShuffleMode;
    }

    public int getSleepTimerMode()
    {
        return this.mSleepTimerMode;
    }

    public String getTrackName()
    {
        try {
            String v0_3;
            if (this.mCursor != null) {
                v0_3 = this.mCursor.getString(this.mCursor.getColumnIndexOrThrow("title"));
            } else {
                v0_3 = 0;
            }
        } catch (String v0_1) {
            throw v0_1;
        }
        return v0_3;
    }

    public String getTrackNumber()
    {
        try {
            return new StringBuilder().append((this.mPlayPos + 1)).append(" / ").append(this.mPlayListLen).toString();
        } catch (Throwable v0_4) {
            throw v0_4;
        }
    }

    public boolean isCompleteFileAvailable()
    {
        try {
            return this.mDownloadManager.isCompleteFileAvailable();
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public boolean isPlaying()
    {
        return this.mIsSupposedToBePlaying;
    }

    public boolean isStreaming()
    {
        try {
            return this.mIsStreaming;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }

    public void moveQueueItem(int p7, int p8)
    {
        try {
            if (p7 >= this.mPlayListLen) {
                p7 = (this.mPlayListLen - 1);
            }
        } catch (int v3_20) {
            throw v3_20;
        }
        if (p8 >= this.mPlayListLen) {
            p8 = (this.mPlayListLen - 1);
        }
        if (p7 >= p8) {
            if (p8 < p7) {
                long v1_0 = this.mPlayList[p7];
                int v0_0 = p7;
                while (v0_0 > p8) {
                    this.mPlayList[v0_0] = this.mPlayList[(v0_0 - 1)];
                    v0_0--;
                }
                this.mPlayList[p8] = v1_0;
                if (this.mPlayPos != p7) {
                    if ((this.mPlayPos >= p8) && (this.mPlayPos <= p7)) {
                        this.mPlayPos = (this.mPlayPos + 1);
                    }
                } else {
                    this.mPlayPos = p8;
                }
            }
        } else {
            long v1_1 = this.mPlayList[p7];
            int v0_1 = p7;
            while (v0_1 < p8) {
                this.mPlayList[v0_1] = this.mPlayList[(v0_1 + 1)];
                v0_1++;
            }
            this.mPlayList[p8] = v1_1;
            if (this.mPlayPos != p7) {
                if ((this.mPlayPos >= p7) && (this.mPlayPos <= p8)) {
                    this.mPlayPos = (this.mPlayPos - 1);
                }
            } else {
                this.mPlayPos = p8;
            }
        }
        this.notifyChange("net.sourceforge.servestream.queuechanged");
        return;
    }

    public void next(boolean p12)
    {
        try {
            if (this.mPlayListLen > 0) {
                if (this.mShuffleMode != 1) {
                    if (this.mPlayPos < (this.mPlayListLen - 1)) {
                        this.mPlayPos = (this.mPlayPos + 1);
                    } else {
                        if ((this.mRepeatMode != 0) || (p12)) {
                            if ((this.mRepeatMode == 2) || (p12)) {
                                this.mPlayPos = 0;
                            }
                        } else {
                            this.gotoIdleState();
                            this.mIsSupposedToBePlaying = 0;
                            this.notifyChange("net.sourceforge.servestream.playstatechanged");
                        }
                    }
                } else {
                    if (this.mPlayPos >= 0) {
                        this.mHistory.add(Integer.valueOf(this.mPlayPos));
                    }
                    if (this.mHistory.size() > 100) {
                        this.mHistory.removeElementAt(0);
                    }
                    int v4 = this.mPlayListLen;
                    int[] v7 = new int[v4];
                    int v1_0 = 0;
                    while (v1_0 < v4) {
                        v7[v1_0] = v1_0;
                        v1_0++;
                    }
                    int v3 = this.mHistory.size();
                    int v5 = v4;
                    int v1_1 = 0;
                    while (v1_1 < v3) {
                        int v2 = ((Integer) this.mHistory.get(v1_1)).intValue();
                        if ((v2 < v4) && (v7[v2] >= 0)) {
                            v5--;
                            v7[v2] = -1;
                        }
                        v1_1++;
                    }
                    if (v5 <= 0) {
                        if ((this.mRepeatMode != 2) && (!p12)) {
                            this.gotoIdleState();
                            if (this.mIsSupposedToBePlaying) {
                                this.mIsSupposedToBePlaying = 0;
                                this.notifyChange("net.sourceforge.servestream.playstatechanged");
                            }
                        } else {
                            v5 = v4;
                            int v1_2 = 0;
                            while (v1_2 < v4) {
                                v7[v1_2] = v1_2;
                                v1_2++;
                            }
                        }
                    }
                    int v6 = this.mRand.nextInt(v5);
                    int v0 = -1;
                    do {
                        v0++;
                        if (v7[v0] >= 0) {
                            v6--;
                        }
                    } while(v6 >= 0);
                    this.mPlayPos = v0;
                }
                this.stop(0);
                this.openCurrent();
            } else {
                android.util.Log.d(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "No media in playlist queue");
            }
        } catch (String v8_29) {
            throw v8_29;
        }
        return;
    }

    public android.os.IBinder onBind(android.content.Intent p3)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onBind called");
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        this.mServiceInUse = 1;
        return this.mBinder;
    }

    public void onConnectivityLost()
    {
        if (this.isPlaying()) {
            this.mPausedByConnectivityReceiver = 1;
            this.pause();
        }
        return;
    }

    public void onConnectivityRestored()
    {
        if (this.mPausedByConnectivityReceiver) {
            this.mPausedByConnectivityReceiver = 0;
            this.play();
        }
        return;
    }

    public void onCreate()
    {
        super.onCreate();
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onCreate called");
        this.mPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(this);
        this.mPreferences.registerOnSharedPreferenceChangeListener(this);
        this.mConnectivityManager = new net.sourceforge.servestream.service.ConnectivityReceiver(this, this.mPreferences.getBoolean("wifilock", 1));
        this.mSHOUTcastMetadata = new net.sourceforge.servestream.metadata.SHOUTcastMetadata(this, this.mPreferences.getBoolean("retrieveshoutcastmetadata", 0));
        this.mDownloadManager = new net.sourceforge.servestream.service.DownloadManager(this);
        this.mSimpleLastfmScrobblerManager = new net.sourceforge.servestream.service.SimpleLastfmScrobblerManager(this, this.mPreferences.getBoolean("sendscrobblerinfo", 0));
        this.mAudioManager = ((android.media.AudioManager) this.getSystemService("audio"));
        this.mAudioManager.registerMediaButtonEventReceiver(new android.content.ComponentName(this.getPackageName(), net.sourceforge.servestream.service.MediaButtonIntentReceiver.getName()));
        this.mStreamdb = new net.sourceforge.servestream.dbutils.StreamDatabase(this);
        ((android.telephony.TelephonyManager) this.getSystemService("phone")).listen(this.mPhoneListener, 32);
        this.mPlayer = new net.sourceforge.servestream.player.MultiPlayer();
        this.mPlayer.setHandler(this.mMediaplayerHandler);
        this.reloadSettings();
        android.content.IntentFilter v0_1 = new android.content.IntentFilter();
        v0_1.addAction("net.sourceforge.servestream.mediaservicecommand");
        v0_1.addAction("net.sourceforge.servestream.mediaservicecommand.togglepause");
        v0_1.addAction("net.sourceforge.servestream.mediaservicecommand.pause");
        v0_1.addAction("net.sourceforge.servestream.mediaservicecommand.next");
        this.registerReceiver(this.mIntentReceiver, v0_1);
        android.content.IntentFilter v0_3 = new android.content.IntentFilter();
        v0_3.addAction("android.intent.action.DOCK_EVENT");
        this.registerReceiver(this.mDockReceiver, v0_3);
        this.mDelayedStopHandler.sendMessageDelayed(this.mDelayedStopHandler.obtainMessage(), 300000);
        return;
    }

    public void onDestroy()
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onDestroy called");
        if (this.mStreamdb != null) {
            this.mStreamdb.close();
            this.mStreamdb = 0;
        }
        if (this.isPlaying()) {
            android.util.Log.e(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "Service being destroyed while still playing.");
        }
        this.notifyChange("net.sourceforge.servestream.playerclosed");
        this.mPlayer.release();
        this.mPlayer = 0;
        this.mAudioManager.abandonAudioFocus(this.mAudioFocusListener);
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        this.mMediaplayerHandler.removeCallbacksAndMessages(0);
        this.mSleepTimerHandler.removeCallbacksAndMessages(0);
        if (this.mCursor != null) {
            this.mCursor.close();
            this.mCursor = 0;
        }
        this.unregisterReceiver(this.mIntentReceiver);
        this.unregisterReceiver(this.mDockReceiver);
        this.mConnectivityManager.cleanup();
        this.mSHOUTcastMetadata.cleanup();
        this.mDownloadManager.cancelDownload();
        net.sourceforge.servestream.utils.Utils.deleteAllFiles();
        this.mSimpleLastfmScrobblerManager.cleanup();
        this.stopForeground(1);
        super.onDestroy();
        return;
    }

    public void onRebind(android.content.Intent p3)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onRebind called");
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        this.mServiceInUse = 1;
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences p8, String p9)
    {
        if (!p9.equals("wifilock")) {
            if (!p9.equals("retrieveshoutcastmetadata")) {
                if (p9.equals("sendscrobblerinfo")) {
                    this.mSimpleLastfmScrobblerManager.setShouldSendScrobblerInfo(this.mPreferences.getBoolean("sendscrobblerinfo", 0));
                }
            } else {
                this.mSHOUTcastMetadata.setShouldRetrieveMetadata(this.mPreferences.getBoolean("retrieveshoutcastmetadata", 0));
            }
        } else {
            if (p8.getBoolean("wifilock", 1)) {
                this.mConnectivityManager.setWantWifiLock(this.mPreferences.getBoolean("wifilock", 1));
            }
        }
        return;
    }

    public int onStartCommand(android.content.Intent p12, int p13, int p14)
    {
        this.mServiceStartId = p14;
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        if (p12 != null) {
            String v0 = p12.getAction();
            String v1 = p12.getStringExtra("command");
            android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, new StringBuilder().append("onStartCommand ").append(v0).append(" / ").append(v1).toString());
            if ((!"next".equals(v1)) && (!"net.sourceforge.servestream.mediaservicecommand.next".equals(v0))) {
                if (!"previous".equals(v1)) {
                    if ((!"togglepause".equals(v1)) && (!"net.sourceforge.servestream.mediaservicecommand.togglepause".equals(v0))) {
                        if (!"net.sourceforge.servestream.mediaservicecommand.pause".equals(v0)) {
                            if (!"pause".equals(v1)) {
                                if ("stop".equals(v1)) {
                                    this.pause();
                                    this.mPausedByTransientLossOfFocus = 0;
                                    this.mPausedByConnectivityReceiver = 0;
                                    this.seek(0);
                                }
                            } else {
                                if (this.mPreferences.getBoolean("headphonepause", 1)) {
                                    this.pause();
                                    this.mPausedByTransientLossOfFocus = 0;
                                    this.mPausedByConnectivityReceiver = 0;
                                }
                            }
                        } else {
                            this.pause();
                            this.mPausedByTransientLossOfFocus = 0;
                            this.mPausedByConnectivityReceiver = 0;
                        }
                    } else {
                        if (!this.isPlaying()) {
                            this.play();
                        } else {
                            this.pause();
                            this.mPausedByTransientLossOfFocus = 0;
                            this.mPausedByConnectivityReceiver = 0;
                        }
                    }
                } else {
                    if (this.position() >= 2000) {
                        this.seek(0);
                        this.play();
                    } else {
                        this.prev();
                    }
                }
            } else {
                this.next(1);
            }
        }
        this.mDelayedStopHandler.removeCallbacksAndMessages(0);
        this.mDelayedStopHandler.sendMessageDelayed(this.mDelayedStopHandler.obtainMessage(), 300000);
        return 1;
    }

    public boolean onUnbind(android.content.Intent p6)
    {
        android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onUnbind called");
        this.mServiceInUse = 0;
        this.saveSettings();
        if ((!this.isPlaying()) && (!this.mPausedByTransientLossOfFocus)) {
            if ((this.mPlayListLen <= 0) && (!this.mMediaplayerHandler.hasMessages(1))) {
                this.stopSelf(this.mServiceStartId);
                android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, "onUnbind succedded");
            } else {
                this.mDelayedStopHandler.sendMessageDelayed(this.mDelayedStopHandler.obtainMessage(), 300000);
            }
        }
        return 1;
    }

    public void open(String p6)
    {
        try {
            if (p6 != null) {
                this.sendStickyBroadcast(new android.content.Intent("net.sourceforge.servestream.startdialog"));
                this.mFileToPlay = this.mCursor.getString(this.mCursor.getColumnIndex("uri"));
                android.util.Log.v(net.sourceforge.servestream.service.MediaPlaybackService.TAG, new StringBuilder().append("opening: ").append(this.mFileToPlay).toString());
                this.mDownloadManager.cancelDownload();
                if (!this.playingVideo()) {
                    if (!this.mPreferences.getBoolean("progressivedownload", 0)) {
                        this.mIsStreaming = 1;
                        this.mPlayer.setDataSource(this.mFileToPlay, 0);
                    } else {
                        this.mIsStreaming = 0;
                        this.mDownloadManager.download(this.mPlayList[this.mPlayPos]);
                    }
                } else {
                    this.mIsStreaming = 1;
                    android.content.Intent v0_1 = new android.content.Intent(this, net.sourceforge.servestream.activity.MediaPlaybackActivity);
                    v0_1.setAction("net.sourceforge.servestream.preparevideo");
                    v0_1.setFlags(805306368);
                    this.startActivity(v0_1);
                }
            } else {
            }
        } catch (net.sourceforge.servestream.player.MultiPlayer v2_17) {
            throw v2_17;
        }
        return;
    }

    public void open(long[] p10, int p11)
    {
        try {
            long v3 = this.getAudioId();
            int v1 = p10.length;
            int v2 = 1;
        } catch (String v5_9) {
            throw v5_9;
        }
        if (this.mPlayListLen == v1) {
            v2 = 0;
            int v0 = 0;
            while (v0 < v1) {
                if (p10[v0] == this.mPlayList[v0]) {
                    v0++;
                } else {
                    v2 = 1;
                    break;
                }
            }
        }
        if (v2 != 0) {
            this.addToPlayList(p10, -1);
            this.notifyChange("net.sourceforge.servestream.queuechanged");
        }
        if (p11 < 0) {
            this.mPlayPos = this.mRand.nextInt(this.mPlayListLen);
        } else {
            this.mPlayPos = p11;
        }
        this.mHistory.clear();
        this.openCurrent();
        if (v3 != this.getAudioId()) {
            this.notifyChange("net.sourceforge.servestream.metachanged");
        }
        return;
    }

    public void pause()
    {
        try {
            if (this.isPlaying()) {
                this.mPlayer.pause();
                this.gotoIdleState();
                this.mIsSupposedToBePlaying = 0;
                this.notifyChange("net.sourceforge.servestream.playstatechanged");
                this.stopForeground(1);
            }
        } catch (int v0_2) {
            throw v0_2;
        }
        return;
    }

    public void play()
    {
        this.mAudioManager.requestAudioFocus(this.mAudioFocusListener, 3, 1);
        this.mAudioManager.registerMediaButtonEventReceiver(new android.content.ComponentName(this.getPackageName(), net.sourceforge.servestream.service.MediaButtonIntentReceiver.getName()));
        if (!this.mPlayer.isInitialized()) {
            this.openCurrent();
        } else {
            this.mPlayer.start();
            this.startForeground(100, this.buildNotification());
            if (!this.mIsSupposedToBePlaying) {
                this.mIsSupposedToBePlaying = 1;
                this.notifyChange("net.sourceforge.servestream.playstatechanged");
            }
        }
        return;
    }

    public long position()
    {
        long v0_2;
        if (!this.mPlayer.isInitialized()) {
            v0_2 = -1;
        } else {
            v0_2 = this.mPlayer.position();
        }
        return v0_2;
    }

    public void prev()
    {
        try {
            if (this.mShuffleMode != 1) {
                if (this.mPlayPos <= 0) {
                    this.mPlayPos = (this.mPlayListLen - 1);
                    this.stop(0);
                    this.openCurrent();
                } else {
                    this.mPlayPos = (this.mPlayPos - 1);
                }
            } else {
                int v0 = this.mHistory.size();
                if (v0 != 0) {
                    this.mPlayPos = ((Integer) this.mHistory.remove((v0 - 1))).intValue();
                } else {
                }
            }
        } catch (int v2_5) {
            throw v2_5;
        }
        return;
    }

    public int removeTrack(long p5)
    {
        int v1 = 0;
        int v0 = 0;
        while (v0 < this.mPlayListLen) {
            if (this.mPlayList[v0] == p5) {
                v1 += this.removeTracksInternal(v0, v0);
                v0--;
            }
            v0++;
        }
        if (v1 > 0) {
            this.notifyChange("net.sourceforge.servestream.queuechanged");
        }
        return v1;
    }

    public int removeTracks(int p3, int p4)
    {
        int v0 = this.removeTracksInternal(p3, p4);
        if (v0 > 0) {
            this.notifyChange("net.sourceforge.servestream.queuechanged");
        }
        return v0;
    }

    public long seek(long p3)
    {
        long v0_5;
        if (!this.mPlayer.isInitialized()) {
            v0_5 = -1;
        } else {
            if (p3 < 0) {
                p3 = 0;
            }
            if (p3 > this.mPlayer.duration()) {
                p3 = this.mPlayer.duration();
            }
            v0_5 = this.mPlayer.seek(p3);
        }
        return v0_5;
    }

    public void setQueuePosition(int p2)
    {
        try {
            this.stop(0);
            this.mPlayPos = p2;
            this.openCurrent();
            this.notifyChange("net.sourceforge.servestream.metachanged");
            return;
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public void setRepeatMode(int p2)
    {
        try {
            this.mRepeatMode = p2;
            this.saveSettings();
            return;
        } catch (Throwable v0) {
            throw v0;
        }
    }

    public void setShuffleMode(int p2)
    {
        try {
            if ((this.mShuffleMode != p2) || (this.mPlayListLen <= 0)) {
                this.mShuffleMode = p2;
                this.saveSettings();
            } else {
            }
        } catch (int v0_2) {
            throw v0_2;
        }
        return;
    }

    public void setSleepTimerMode(int p5)
    {
        try {
            this.mSleepTimerHandler.removeCallbacksAndMessages(0);
        } catch (android.os.Handler v1_1) {
            throw v1_1;
        }
        if (p5 != 0) {
            this.mSleepTimerHandler.sendMessageDelayed(this.mSleepTimerHandler.obtainMessage(), ((long) (60000 * p5)));
        }
        this.mSleepTimerMode = p5;
        return;
    }

    public void stop()
    {
        this.stop(1);
        return;
    }

    public void updateMetadata()
    {
        if (this.mCursor != null) {
            android.database.Cursor v6 = this.getContentResolver().query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, this.mCursorCols, new StringBuilder().append("_id=").append(this.mPlayList[this.mPlayPos]).toString(), 0, 0);
            if (v6 != null) {
                v6.moveToFirst();
                this.mCursor.close();
                this.mCursor = v6;
                android.content.Intent v7_1 = new android.content.Intent("net.sourceforge.servestream.playstatechanged");
                v7_1.putExtra("id", Long.valueOf(this.getAudioId()));
                v7_1.putExtra("artist", this.getArtistName());
                v7_1.putExtra("album", this.getAlbumName());
                v7_1.putExtra("track", this.getTrackName());
                v7_1.putExtra("duration", Long.valueOf(this.duration()));
                v7_1.putExtra("playing", this.isPlaying());
                this.mSimpleLastfmScrobblerManager.scrobble(v7_1);
                this.notifyChange("net.sourceforge.servestream.metachanged");
                ((android.app.NotificationManager) this.getSystemService("notification")).notify(100, this.buildNotification());
            }
        }
        return;
    }
}
package net.sourceforge.servestream.service;
public class SimpleLastfmScrobblerManager extends android.content.BroadcastReceiver {
    private static final String ALBUM_NAME = "album";
    private static final String APP_NAME_NAME = "app-name";
    private static final String APP_PACKAGE_NAME = "app-package";
    private static final String ARTIST_NAME = "artist";
    private static final String BROADCAST_ACTION = "com.adam.aslfms.notify.playstatechanged";
    private static final int COMPLETE = 3;
    private static final String DURATION_NAME = "duration";
    private static final int PAUSE = 2;
    private static final int RESUME = 1;
    private static final int START = 0;
    private static final String STATE_NAME = "state";
    private static final String TAG = "";
    private static final String TRACK_NAME = "track";
    private Object[] mLock;
    private final net.sourceforge.servestream.service.MediaPlaybackService mMediaPlaybackService;
    private boolean mSendScrobblerInfo;

    static SimpleLastfmScrobblerManager()
    {
        net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.TAG = net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.getName();
        return;
    }

    public SimpleLastfmScrobblerManager(net.sourceforge.servestream.service.MediaPlaybackService p3, boolean p4)
    {
        this.mSendScrobblerInfo = 0;
        String v1_3 = new Object[0];
        this.mLock = v1_3;
        this.mMediaPlaybackService = p3;
        this.mSendScrobblerInfo = p4;
        android.content.IntentFilter v0_1 = new android.content.IntentFilter();
        v0_1.addAction("net.sourceforge.servestream.playbackstarted");
        v0_1.addAction("net.sourceforge.servestream.playstatechanged");
        v0_1.addAction("net.sourceforge.servestream.playbackcomplete");
        p3.registerReceiver(this, v0_1);
        return;
    }

    private boolean metadataPresent(android.content.Intent p9)
    {
        int v4 = 0;
        android.util.Log.d(net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.TAG, "Checking for valid metadata");
        String v0 = p9.getStringExtra("artist");
        String v3 = p9.getStringExtra("track");
        long v1 = p9.getLongExtra("duration", 0);
        if ((v0 != null) && ((!v0.equals("")) && ((v3 != null) && ((!v3.equals("")) && (v1 != -1))))) {
            v4 = 1;
        }
        return v4;
    }

    private void sendBroadcast(android.content.Intent p10)
    {
        int v4 = 1;
        android.content.Intent v2_1 = new android.content.Intent("com.adam.aslfms.notify.playstatechanged");
        v2_1.putExtra("app-name", this.mMediaPlaybackService.getString(2131361792));
        v2_1.putExtra("app-package", this.mMediaPlaybackService.getApplicationContext().getPackageName());
        String v0 = p10.getAction();
        if (!v0.equals("net.sourceforge.servestream.playbackstarted")) {
            if (!v0.equals("net.sourceforge.servestream.playstatechanged")) {
                if (v0.equals("net.sourceforge.servestream.playbackcomplete")) {
                    v4 = 3;
                }
            } else {
                if (!p10.getBooleanExtra("playing", 0)) {
                    v4 = 2;
                } else {
                    v4 = 1;
                }
            }
        } else {
            v4 = 0;
        }
        v2_1.putExtra("state", v4);
        v2_1.putExtra("artist", p10.getStringExtra("artist"));
        String v1 = p10.getStringExtra("album");
        if ((v1 != null) && (!v1.equals(""))) {
            v2_1.putExtra("album", v1);
        }
        v2_1.putExtra("track", p10.getStringExtra("track"));
        v2_1.putExtra("duration", (((int) p10.getLongExtra("duration", 0)) / 1000));
        this.mMediaPlaybackService.sendBroadcast(v2_1);
        android.util.Log.d(net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.TAG, "Broadcast sent");
        return;
    }

    public void cleanup()
    {
        this.mMediaPlaybackService.unregisterReceiver(this);
        return;
    }

    public void onReceive(android.content.Context p5, android.content.Intent p6)
    {
        String v0 = p6.getAction();
        if ((this.mSendScrobblerInfo) && ((v0.equals("net.sourceforge.servestream.playbackstarted")) || ((v0.equals("net.sourceforge.servestream.playstatechanged")) || (v0.equals("net.sourceforge.servestream.playbackcomplete"))))) {
            if (this.metadataPresent(p6)) {
                this.sendBroadcast(p6);
            }
        } else {
            android.util.Log.w(net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.TAG, new StringBuilder().append("onReceived() called: ").append(p6).toString());
        }
        return;
    }

    public void scrobble(android.content.Intent p3)
    {
        if (this.mSendScrobblerInfo) {
            android.util.Log.d(net.sourceforge.servestream.service.SimpleLastfmScrobblerManager.TAG, "Manual scrobble requested");
            if (this.metadataPresent(p3)) {
                this.sendBroadcast(p3);
            }
        }
        return;
    }

    public void setShouldSendScrobblerInfo(boolean p3)
    {
        try {
            this.mSendScrobblerInfo = p3;
            return;
        } catch (Throwable v0) {
            throw v0;
        }
    }
}
package net.sourceforge.servestream.utils;
public abstract class PlaylistParser {
    public static final String TAG;
    int mNumberOfFiles;
    java.util.ArrayList mPlaylistFiles;
    java.net.URL mPlaylistUrl;

    static PlaylistParser()
    {
        net.sourceforge.servestream.utils.PlaylistParser.TAG = net.sourceforge.servestream.utils.PlaylistParser.getName();
        return;
    }

    public PlaylistParser(java.net.URL p2)
    {
        this.mPlaylistUrl = 0;
        this.mPlaylistFiles = 0;
        this.mNumberOfFiles = 0;
        this.mPlaylistUrl = p2;
        this.mPlaylistFiles = new java.util.ArrayList();
        return;
    }

    public static net.sourceforge.servestream.utils.PlaylistParser getPlaylistParser(java.net.URL p3, String p4)
    {
        net.sourceforge.servestream.utils.PLSPlaylistParser v1_0 = 0;
        if (p3 != null) {
            String v0 = android.webkit.MimeTypeMap.getFileExtensionFromUrl(p3.toString());
            if (v0 != null) {
                if ((!v0.equalsIgnoreCase("asx")) && (!p4.equalsIgnoreCase("video/x-ms-asf"))) {
                    if ((!v0.equalsIgnoreCase("m3u")) && (!p4.equalsIgnoreCase("audio/x-mpegurl"))) {
                        if ((!v0.equalsIgnoreCase("m3u8")) && (!p4.equalsIgnoreCase("audio/x-mpegurl"))) {
                            if ((v0.equalsIgnoreCase("pls")) || (p4.equalsIgnoreCase("audio/x-scpls"))) {
                                v1_0 = new net.sourceforge.servestream.utils.PLSPlaylistParser(p3);
                            }
                        } else {
                            v1_0 = new net.sourceforge.servestream.utils.M3U8PlaylistParser(p3);
                        }
                    } else {
                        v1_0 = new net.sourceforge.servestream.utils.M3UPlaylistParser(p3);
                    }
                } else {
                    v1_0 = new net.sourceforge.servestream.utils.ASXPlaylistParser(p3);
                }
            }
        }
        return v1_0;
    }

    public java.util.List getPlaylistFiles()
    {
        return this.mPlaylistFiles;
    }

    public abstract void retrieveAndParsePlaylist();
}
package net.sourceforge.servestream.utils;
public class ASXPlaylistParser extends net.sourceforge.servestream.utils.PlaylistParser {
    public static final String EXTENSION = "asx";
    public static final String MIME_TYPE = "video/x-ms-asf";
    private final String ABSTRACT_ELEMENT;
    private final String ASX_ELEMENT;
    private final String AUTHOR_ELEMENT;
    private final String BASE_ELEMENT;
    private final String COPYRIGHT_ELEMENT;
    private final String DURATION_ELEMENT;
    private final String ENDMARKER_ELEMENT;
    private final String ENTRYREF_ELEMENT;
    private final String ENTRY_ELEMENT;
    private final String EVENT_ELEMENT;
    private final String HREF_ATTRIBUTE;
    private final String MOREINFO_ELEMENT;
    private final String PARAM_ELEMENT;
    private final String REF_ELEMENT;
    private final String REPEAT_ELEMENT;
    private final String STARTMARKER_ELEMENT;
    private final String STARTTIME_ELEMENT;
    private final String TITLE_ELEMENT;

    public ASXPlaylistParser(java.net.URL p2)
    {
        super(p2);
        super.ABSTRACT_ELEMENT = "ABSTRACT";
        super.ASX_ELEMENT = "ASX";
        super.AUTHOR_ELEMENT = "AUTHOR";
        super.BASE_ELEMENT = "BASE";
        super.COPYRIGHT_ELEMENT = "COPYRIGHT";
        super.DURATION_ELEMENT = "DURATION";
        super.ENDMARKER_ELEMENT = "ENDMARKER";
        super.ENTRY_ELEMENT = "ENTRY";
        super.ENTRYREF_ELEMENT = "ENTRYREF";
        super.EVENT_ELEMENT = "EVENT";
        super.MOREINFO_ELEMENT = "MOREINFO";
        super.PARAM_ELEMENT = "PARAM";
        super.REF_ELEMENT = "REF";
        super.REPEAT_ELEMENT = "REPEAT";
        super.STARTMARKER_ELEMENT = "STARTMARKER";
        super.STARTTIME_ELEMENT = "STARTTIME";
        super.TITLE_ELEMENT = "TITLE";
        super.HREF_ATTRIBUTE = "href";
        return;
    }

    private void buildPlaylistEntry(java.util.List p9)
    {
        net.sourceforge.servestream.utils.MediaFile v4_1 = new net.sourceforge.servestream.utils.MediaFile();
        int v3 = 0;
        while (v3 < p9.size()) {
            String v0 = ((org.jdom.Element) p9.get(v3)).getName();
            if ((!v0.equalsIgnoreCase("ABSTRACT")) && ((!v0.equalsIgnoreCase("ASX")) && ((!v0.equalsIgnoreCase("AUTHOR")) && ((!v0.equalsIgnoreCase("BASE")) && ((!v0.equalsIgnoreCase("COPYRIGHT")) && ((!v0.equalsIgnoreCase("DURATION")) && ((!v0.equalsIgnoreCase("ENDMARKER")) && ((!v0.equalsIgnoreCase("ENTRY")) && ((!v0.equalsIgnoreCase("ENTRYREF")) && ((!v0.equalsIgnoreCase("EVENT")) && ((!v0.equalsIgnoreCase("MOREINFO")) && (!v0.equalsIgnoreCase("PARAM"))))))))))))) {
                if (!v0.equalsIgnoreCase("REF")) {
                    if ((!v0.equalsIgnoreCase("REPEAT")) && ((!v0.equalsIgnoreCase("STARTMARKER")) && ((!v0.equalsIgnoreCase("STARTTIME")) && (v0.equalsIgnoreCase("TITLE"))))) {
                        String v5 = ((org.jdom.Element) p9.get(v3)).getValue();
                        if (v5 != null) {
                            v4_1.setPlaylistMetadata(v5);
                        }
                    }
                } else {
                    String v2 = ((org.jdom.Element) p9.get(v3)).getAttributeValue("href");
                    if (v2 == null) {
                        v2 = ((org.jdom.Element) p9.get(v3)).getAttributeValue("href".toUpperCase());
                    }
                    if (v2 == null) {
                        v2 = ((org.jdom.Element) p9.get(v3)).getValue();
                    }
                    try {
                        v4_1.setUrl(java.net.URLDecoder.decode(v2, "UTF-8"));
                    } catch (java.io.UnsupportedEncodingException v1) {
                        v4_1.setUrl(v2);
                    }
                }
            }
            v3++;
        }
        this.mNumberOfFiles = (this.mNumberOfFiles + 1);
        v4_1.setTrack(this.mNumberOfFiles);
        this.mPlaylistFiles.add(v4_1);
        return;
    }

    private java.util.List castList(Class p5, java.util.List p6)
    {
        java.util.ArrayList v1_1 = new java.util.ArrayList(p6.size());
        java.util.Iterator v0 = p6.iterator();
        while (v0.hasNext()) {
            v1_1.add(p5.cast(v0.next()));
        }
        return v1_1;
    }

    private void parseXML(String p11)
    {
        org.jdom.Element v6 = 0;
        try {
            java.util.List v1 = this.castList(org.jdom.Element, new org.jdom.input.SAXBuilder().build(new java.io.StringReader(p11)).getRootElement().getChildren());
            int v4 = 0;
        } catch (java.util.List v8) {
            return;
        } catch (java.util.List v8) {
            return;
        } catch (java.util.List v8) {
            return;
        }
        while (v4 < v1.size()) {
            String v7 = ((org.jdom.Element) v1.get(v4)).getName();
            if ((v7 != null) && (v7.equalsIgnoreCase("ENTRY"))) {
                this.buildPlaylistEntry(this.castList(org.jdom.Element, ((org.jdom.Element) v1.get(v4)).getChildren()));
            }
            v4++;
        }
        return;
    }

    public void retrieveAndParsePlaylist()
    {
        if (this.mPlaylistUrl != null) {
            String v5 = "";
            java.io.BufferedReader v3 = 0;
            try {
                java.net.HttpURLConnection v0 = net.sourceforge.servestream.utils.URLUtils.getConnection(this.mPlaylistUrl);
                java.io.BufferedReader v4_0 = new java.io.BufferedReader(new java.io.InputStreamReader(v0.getInputStream()));
                try {
                    v0.connect();
                } catch (StringBuilder v6_7) {
                    v3 = v4_0;
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v3);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                    throw v6_7;
                } catch (Exception v1) {
                    v3 = v4_0;
                    v1.printStackTrace();
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v3);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                }
                while(true) {
                    String v2 = v4_0.readLine();
                    if (v2 == null) {
                        break;
                    }
                    v5 = new StringBuilder().append(v5).append(v2).toString();
                }
                this.parseXML(v5);
                net.sourceforge.servestream.utils.Utils.closeBufferedReader(v4_0);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
            } catch (StringBuilder v6_7) {
            } catch (Exception v1) {
            }
        }
        return;
    }
}
package net.sourceforge.servestream.utils;
public class HelpTopicView extends android.webkit.WebView {

    public HelpTopicView(android.content.Context p1)
    {
        super(p1);
        super.initialize();
        return;
    }

    public HelpTopicView(android.content.Context p1, android.util.AttributeSet p2)
    {
        super(p1, p2);
        super.initialize();
        return;
    }

    public HelpTopicView(android.content.Context p1, android.util.AttributeSet p2, int p3)
    {
        super(p1, p2, p3);
        super.initialize();
        return;
    }

    private void initialize()
    {
        android.webkit.WebSettings v0 = this.getSettings();
        v0.setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm.NARROW_COLUMNS);
        v0.setUseWideViewPort(0);
        return;
    }

    public net.sourceforge.servestream.utils.HelpTopicView setTopic(String p6)
    {
        Object[] v2_1 = new Object[3];
        v2_1[0] = "help";
        v2_1[1] = p6;
        v2_1[2] = ".html";
        this.loadUrl(String.format("file:///android_asset/%s/%s%s", v2_1));
        this.computeScroll();
        return this;
    }
}
package net.sourceforge.servestream.utils;
public class M3UPlaylistParser extends net.sourceforge.servestream.utils.PlaylistParser {
    private static final String EXTENDED_INFO_TAG = "#EXTM3U";
    public static final String EXTENSION = "m3u";
    public static final String MIME_TYPE = "audio/x-mpegurl";
    private static final String RECORD_TAG = "#EXTINF";
    private net.sourceforge.servestream.utils.MediaFile mediaFile;
    private boolean processingEntry;

    public M3UPlaylistParser(java.net.URL p2)
    {
        super(p2);
        super.mediaFile = 0;
        super.processingEntry = 0;
        return;
    }

    public void retrieveAndParsePlaylist()
    {
        if (this.mPlaylistUrl != null) {
            String v3 = 0;
            java.io.BufferedReader v4 = 0;
            try {
                java.net.HttpURLConnection v0 = net.sourceforge.servestream.utils.URLUtils.getConnection(this.mPlaylistUrl);
                java.io.BufferedReader v5_0 = new java.io.BufferedReader(new java.io.InputStreamReader(v0.getInputStream()));
                try {
                    v0.connect();
                } catch (net.sourceforge.servestream.utils.MediaFile v6_14) {
                    v4 = v5_0;
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v4);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                    throw v6_14;
                } catch (Exception v2) {
                    v4 = v5_0;
                    v2.printStackTrace();
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v4);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                }
                while(true) {
                    v3 = v5_0.readLine();
                    if (v3 == null) {
                        break;
                    }
                    if ((!v3.equals("#EXTM3U")) && (!v3.trim().equals(""))) {
                        if (!v3.contains("#EXTINF")) {
                            if (!this.processingEntry) {
                                this.mediaFile = new net.sourceforge.servestream.utils.MediaFile();
                            }
                            try {
                                this.mediaFile.setUrl(java.net.URLDecoder.decode(v3.trim(), "UTF-8"));
                            } catch (java.io.UnsupportedEncodingException v1) {
                                this.mediaFile.setUrl(v3.trim());
                            }
                            this.savePlaylistFile();
                        } else {
                            this.mediaFile = new net.sourceforge.servestream.utils.MediaFile();
                            this.mediaFile.setPlaylistMetadata(v3.replaceAll("^(.*?),", ""));
                            this.processingEntry = 1;
                        }
                    }
                }
                net.sourceforge.servestream.utils.Utils.closeBufferedReader(v5_0);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
            } catch (net.sourceforge.servestream.utils.MediaFile v6_14) {
            } catch (Exception v2) {
            }
        }
        return;
    }

    public void savePlaylistFile()
    {
        this.mNumberOfFiles = (this.mNumberOfFiles + 1);
        this.mediaFile.setTrack(this.mNumberOfFiles);
        this.mPlaylistFiles.add(this.mediaFile);
        this.processingEntry = 0;
        return;
    }
}
package net.sourceforge.servestream.utils;
public class M3U8PlaylistParser extends net.sourceforge.servestream.utils.M3UPlaylistParser {
    public static final String EXTENSION = "m3u8";
    public static final String MIME_TYPE = "audio/x-mpegurl";
    public static final String TAG;

    static M3U8PlaylistParser()
    {
        net.sourceforge.servestream.utils.M3U8PlaylistParser.TAG = net.sourceforge.servestream.utils.M3U8PlaylistParser.getName();
        return;
    }

    public M3U8PlaylistParser(java.net.URL p1)
    {
        super(p1);
        return;
    }
}
package net.sourceforge.servestream.utils;
public class MediaFile {
    private String mAlbum;
    private String mArtist;
    private long mDuration;
    private String mPlaylistMetadata;
    private String mTitle;
    private int mTrack;
    private String mUrl;
    private int mYear;

    public MediaFile()
    {
        this.mUrl = 0;
        this.mTitle = 0;
        this.mAlbum = 0;
        this.mArtist = 0;
        this.mDuration = -1;
        this.mTrack = -1;
        this.mYear = -1;
        this.mPlaylistMetadata = 0;
        return;
    }

    public String getAlbum()
    {
        return this.mAlbum;
    }

    public String getArtist()
    {
        return this.mArtist;
    }

    public String getDecodedURL()
    {
        try {
            String v0 = java.net.URLDecoder.decode(this.getUrl(), "UTF-8");
        } catch (java.io.UnsupportedEncodingException v1) {
            v1.printStackTrace();
            v0 = "";
        }
        return v0;
    }

    public long getDuration()
    {
        return this.mDuration;
    }

    public String getPlaylistMetadata()
    {
        return this.mPlaylistMetadata;
    }

    public String getTitle()
    {
        return this.mTitle;
    }

    public int getTrack()
    {
        return this.mTrack;
    }

    public String getUrl()
    {
        return this.mUrl;
    }

    public int getYear()
    {
        return this.mYear;
    }

    public void setAlbum(String p1)
    {
        this.mAlbum = p1;
        return;
    }

    public void setArtist(String p1)
    {
        this.mArtist = p1;
        return;
    }

    public void setDuration(long p1)
    {
        this.mDuration = p1;
        return;
    }

    public void setPlaylistMetadata(String p1)
    {
        this.mPlaylistMetadata = p1;
        return;
    }

    public void setTitle(String p1)
    {
        this.mTitle = p1;
        return;
    }

    public void setTrack(int p1)
    {
        this.mTrack = p1;
        return;
    }

    public void setUrl(String p1)
    {
        this.mUrl = p1;
        return;
    }

    public void setYear(int p1)
    {
        this.mYear = p1;
        return;
    }
}
package net.sourceforge.servestream.utils;
 class MetadataRetriever$RetrieveMetadataAsyncTask extends android.os.AsyncTask {
    private android.content.Context mContext;
    int mPosition;

    public MetadataRetriever$RetrieveMetadataAsyncTask(android.content.Context p2, int p3)
    {
        this.mContext = 0;
        this.mPosition = -1;
        this.mContext = p2;
        this.mPosition = p3;
        return;
    }

    protected varargs Boolean doInBackground(long[][] p8)
    {
        int v0 = 0;
        while (v0 < p8[0].length) {
            String v2 = net.sourceforge.servestream.utils.MetadataRetriever.access$000(this.mContext, p8[0][v0]);
            if (v2 != null) {
                org.apache.tika.metadata.Metadata v1 = net.sourceforge.servestream.utils.MetadataRetriever.access$100(v2);
                if (v1 != null) {
                    net.sourceforge.servestream.utils.MetadataRetriever.access$200(this.mContext, p8[0][v0], v1);
                    if (v0 == this.mPosition) {
                        ((net.sourceforge.servestream.service.MediaPlaybackService) this.mContext).updateMetadata();
                    }
                }
            }
            v0++;
        }
        return Boolean.valueOf(1);
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((long[][]) p2));
    }
}
package net.sourceforge.servestream.utils;
public class MetadataRetriever {

    private MetadataRetriever()
    {
        return;
    }

    static synthetic String access$000(android.content.Context p1, long p2)
    {
        return net.sourceforge.servestream.utils.MetadataRetriever.getUri(p1, p2);
    }

    static synthetic org.apache.tika.metadata.Metadata access$100(String p1)
    {
        return net.sourceforge.servestream.utils.MetadataRetriever.retrieveMetadata(p1);
    }

    static synthetic int access$200(android.content.Context p1, long p2, org.apache.tika.metadata.Metadata p4)
    {
        return net.sourceforge.servestream.utils.MetadataRetriever.updateMetadata(p1, p2, p4);
    }

    private static boolean contains(java.util.Set p2, String p3)
    {
        java.util.Iterator v0 = p2.iterator();
        while (v0.hasNext()) {
            if (((org.apache.tika.mime.MediaType) v0.next()).getBaseType().toString().equalsIgnoreCase(p3)) {
                int v1_3 = 1;
            }
            return v1_3;
        }
        v1_3 = 0;
        return v1_3;
    }

    private static int convertToInteger(String p3)
    {
        int v0 = -1;
        String v1 = net.sourceforge.servestream.utils.MetadataRetriever.validateAttribute(p3);
        if (!v1.equals("")) {
            try {
                v0 = Integer.valueOf(v1).intValue();
            } catch (NumberFormatException v2) {
            }
        }
        return v0;
    }

    private static org.apache.tika.parser.AbstractParser detectParser(String p7)
    {
        org.apache.tika.parser.vorbis.VorbisParser v4 = 0;
        org.apache.tika.parser.ParseContext v3_1 = new org.apache.tika.parser.ParseContext();
        org.apache.tika.parser.flac.FlacParser v0_1 = new org.apache.tika.parser.flac.FlacParser();
        org.apache.tika.parser.mp3.Mp3Parser v1_1 = new org.apache.tika.parser.mp3.Mp3Parser();
        org.apache.tika.parser.ogg.OggParser v2_1 = new org.apache.tika.parser.ogg.OggParser();
        org.apache.tika.parser.vorbis.VorbisParser v5_0 = new org.apache.tika.parser.vorbis.VorbisParser();
        if (!net.sourceforge.servestream.utils.MetadataRetriever.contains(v0_1.getSupportedTypes(v3_1), p7)) {
            if (!net.sourceforge.servestream.utils.MetadataRetriever.contains(v1_1.getSupportedTypes(v3_1), p7)) {
                if (!net.sourceforge.servestream.utils.MetadataRetriever.contains(v2_1.getSupportedTypes(v3_1), p7)) {
                    if (net.sourceforge.servestream.utils.MetadataRetriever.contains(v5_0.getSupportedTypes(v3_1), p7)) {
                        v4 = v5_0;
                    }
                } else {
                    v4 = v2_1;
                }
            } else {
                v4 = v1_1;
            }
        } else {
            v4 = v0_1;
        }
        return v4;
    }

    private static String getUri(android.content.Context p10, long p11)
    {
        String v7 = 0;
        String[] v2 = new String[1];
        v2[0] = "uri";
        String v0_3 = p10.getContentResolver();
        String[] v4_1 = new String[1];
        v4_1[0] = String.valueOf(p11);
        android.database.Cursor v6 = v0_3.query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2, "_id= ? ", v4_1, 0);
        if (v6.moveToFirst()) {
            v7 = v6.getString(v6.getColumnIndex("uri"));
        }
        v6.close();
        return v7;
    }

    public static void retrieve(android.content.Context p0, long p1, int p3)
    {
        return;
    }

    public static void retrieve(android.content.Context p3, long[] p4, int p5)
    {
        net.sourceforge.servestream.utils.MetadataRetriever$RetrieveMetadataAsyncTask v0_1 = new net.sourceforge.servestream.utils.MetadataRetriever$RetrieveMetadataAsyncTask(p3, p5);
        long[][] v1_1 = new long[][1];
        v1_1[0] = p4;
        v0_1.execute(v1_1);
        return;
    }

    private static org.apache.tika.metadata.Metadata retrieveMetadata(java.io.InputStream p3, org.apache.tika.parser.AbstractParser p4)
    {
        org.apache.tika.sax.BodyContentHandler v0_1 = new org.apache.tika.sax.BodyContentHandler();
        org.apache.tika.metadata.Metadata v1_1 = new org.apache.tika.metadata.Metadata();
        p4.parse(p3, v0_1, v1_1, new org.apache.tika.parser.ParseContext());
        return v1_1;
    }

    private static org.apache.tika.metadata.Metadata retrieveMetadata(String p9)
    {
        int v6_0 = 0;
        org.apache.tika.metadata.Metadata v3 = 0;
        java.net.HttpURLConnection v0 = 0;
        java.io.InputStream v2 = 0;
        if (p9 != null) {
            try {
                v0 = net.sourceforge.servestream.utils.URLUtils.getConnection(new java.net.URL(p9));
                v0.setRequestProperty("User-Agent", "ServeStream");
                v0.setConnectTimeout(6000);
                v0.setReadTimeout(6000);
                v0.setRequestMethod("GET");
                String v1 = v0.getContentType();
            } catch (int v6_1) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                throw v6_1;
            } catch (int v6) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                v6_0 = v3;
            } catch (int v6) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
            } catch (int v6) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
            } catch (int v6) {
                net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
            }
            if (v1 != null) {
                v2 = v0.getInputStream();
                if (v2 != null) {
                    org.apache.tika.parser.AbstractParser v4 = net.sourceforge.servestream.utils.MetadataRetriever.detectParser(v1);
                    if (v4 != null) {
                        v3 = net.sourceforge.servestream.utils.MetadataRetriever.retrieveMetadata(v2, v4);
                        net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                    } else {
                        net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                    }
                } else {
                    net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                }
            } else {
                net.sourceforge.servestream.utils.Utils.closeInputStream(0);
            }
        }
        return v6_0;
    }

    private static int updateMetadata(android.content.Context p8, long p9, org.apache.tika.metadata.Metadata p11)
    {
        int v3 = 0;
        if ((p11.get("title") != null) || ((p11.get(org.apache.tika.metadata.XMPDM.ALBUM) != null) || (p11.get(org.apache.tika.metadata.XMPDM.ARTIST) != null))) {
            android.content.ContentValues v2_1 = new android.content.ContentValues();
            v2_1.put("title", net.sourceforge.servestream.utils.MetadataRetriever.validateAttribute(p11.get("title")));
            v2_1.put("album", net.sourceforge.servestream.utils.MetadataRetriever.validateAttribute(p11.get(org.apache.tika.metadata.XMPDM.ALBUM)));
            v2_1.put("artist", net.sourceforge.servestream.utils.MetadataRetriever.validateAttribute(p11.get(org.apache.tika.metadata.XMPDM.ARTIST)));
            v2_1.put("track", net.sourceforge.servestream.utils.MetadataRetriever.validateAttribute(p11.get(org.apache.tika.metadata.XMPDM.TRACK_NUMBER)));
            v2_1.put("year", Integer.valueOf(net.sourceforge.servestream.utils.MetadataRetriever.convertToInteger(p11.get(org.apache.tika.metadata.XMPDM.RELEASE_DATE))));
            String v4_9 = p8.getContentResolver();
            String[] v6_1 = new String[1];
            v6_1[0] = String.valueOf(p9);
            v3 = v4_9.update(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2_1, "_id= ? ", v6_1);
        }
        return v3;
    }

    private static String validateAttribute(String p1)
    {
        String v0;
        if (p1 != null) {
            v0 = p1.trim();
        } else {
            v0 = "";
        }
        return v0;
    }
}
package net.sourceforge.servestream.utils;
public class MusicUtils$AddToCurrentPlaylistAsyncTask extends android.os.AsyncTask {
    android.content.Context mContext;
    android.os.Handler mHandler;

    public MusicUtils$AddToCurrentPlaylistAsyncTask(android.content.Context p2, android.os.Handler p3)
    {
        this.mContext = 0;
        this.mHandler = 0;
        this.mContext = p2;
        this.mHandler = p3;
        return;
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((net.sourceforge.servestream.dbutils.Stream[]) p2));
    }

    protected varargs Void doInBackground(net.sourceforge.servestream.dbutils.Stream[] p12)
    {
        String v0 = 0;
        java.net.URL v5 = 0;
        long[] v3 = new long[0];
        try {
            v5 = p12[0].getURL();
            try {
                net.sourceforge.servestream.utils.URLUtils v7_1 = new net.sourceforge.servestream.utils.URLUtils(v5);
            } catch (Exception v2) {
                v2.printStackTrace();
                return 0;
            }
            if (v7_1.getResponseCode() == 200) {
                v0 = v7_1.getContentType();
            }
            if ((v0 != null) && (!v0.contains("text/html"))) {
                v3 = net.sourceforge.servestream.utils.MusicUtils.getFilesInPlaylist(this.mContext, v5, v0);
            }
            android.os.Message v4_1 = new android.os.Message();
            v4_1.obj = v3;
            this.mHandler.sendMessage(v4_1);
            return 0;
        } catch (java.net.MalformedURLException v1) {
            v1.printStackTrace();
        }
    }
}
package net.sourceforge.servestream.utils;
 class MusicUtils$ServiceBinder implements android.content.ServiceConnection {
    android.content.ServiceConnection mCallback;

    MusicUtils$ServiceBinder(android.content.ServiceConnection p1)
    {
        this.mCallback = p1;
        return;
    }

    public void onServiceConnected(android.content.ComponentName p2, android.os.IBinder p3)
    {
        net.sourceforge.servestream.utils.MusicUtils.sService = net.sourceforge.servestream.service.IMediaPlaybackService$Stub.asInterface(p3);
        if (this.mCallback != null) {
            this.mCallback.onServiceConnected(p2, p3);
        }
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName p2)
    {
        if (this.mCallback != null) {
            this.mCallback.onServiceDisconnected(p2);
        }
        net.sourceforge.servestream.utils.MusicUtils.sService = 0;
        return;
    }
}
package net.sourceforge.servestream.utils;
public class MusicUtils$ServiceToken {
    android.content.ContextWrapper mWrappedContext;

    MusicUtils$ServiceToken(android.content.ContextWrapper p1)
    {
        this.mWrappedContext = p1;
        return;
    }
}
package net.sourceforge.servestream.utils;
public class MusicUtils {
    private static java.util.HashMap sConnectionMap;
    private static final long[] sEmptyList;
    public static net.sourceforge.servestream.service.IMediaPlaybackService sService;

    static MusicUtils()
    {
        net.sourceforge.servestream.utils.MusicUtils.sService = 0;
        net.sourceforge.servestream.utils.MusicUtils.sConnectionMap = new java.util.HashMap();
        long[] v0_4 = new long[0];
        net.sourceforge.servestream.utils.MusicUtils.sEmptyList = v0_4;
        return;
    }

    public MusicUtils()
    {
        return;
    }

    private static long[] addFilesToMediaStore(android.content.Context p12, java.util.List p13)
    {
        long[] v5;
        if (p13 != null) {
            java.util.ArrayList v1_1 = new java.util.ArrayList();
            android.content.ContentResolver v0 = p12.getContentResolver();
            java.util.Map v7 = net.sourceforge.servestream.utils.MusicUtils.retrieveAllRows(p12);
            v5 = new long[p13.size()];
            int v2 = 0;
            while (v2 < p13.size()) {
                if (v7.get(((net.sourceforge.servestream.utils.MediaFile) p13.get(v2)).getUrl()) == null) {
                    android.content.ContentValues v8_1 = new android.content.ContentValues();
                    v8_1.put("uri", ((net.sourceforge.servestream.utils.MediaFile) p13.get(v2)).getUrl());
                    if (((net.sourceforge.servestream.utils.MediaFile) p13.get(v2)).getPlaylistMetadata() != null) {
                        v8_1.put("title", ((net.sourceforge.servestream.utils.MediaFile) p13.get(v2)).getPlaylistMetadata());
                    }
                    v1_1.add(v8_1);
                } else {
                    v5[v2] = ((long) ((Integer) v7.get(((net.sourceforge.servestream.utils.MediaFile) p13.get(v2)).getUrl())).intValue());
                }
                v2++;
            }
            if (v1_1.size() > 0) {
                android.content.ContentValues[] v9_0 = new android.content.ContentValues[v1_1.size()];
                if (v0.bulkInsert(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, ((android.content.ContentValues[]) v1_1.toArray(v9_0))) > 0) {
                    v5 = net.sourceforge.servestream.utils.MusicUtils.addFilesToMediaStore(p12, p13);
                }
            }
        } else {
            v5 = net.sourceforge.servestream.utils.MusicUtils.sEmptyList;
        }
        return v5;
    }

    public static void addToCurrentPlaylist(android.content.Context p7, long[] p8)
    {
        if ((p8.length != 0) && (net.sourceforge.servestream.utils.MusicUtils.sService != null)) {
            try {
                net.sourceforge.servestream.utils.MusicUtils.sService.enqueue(p8, 3);
                android.os.RemoteException v1_0 = p7.getResources();
                int v3_1 = p8.length;
                Object[] v4_2 = new Object[1];
                v4_2[0] = Integer.valueOf(p8.length);
                android.widget.Toast.makeText(p7, v1_0.getQuantityString(2131427328, v3_1, v4_2), 0).show();
            } catch (android.os.RemoteException v1) {
            }
        } else {
            android.util.Log.d("MusicUtils", "attempt to play empty song list");
            int v2_2 = new Object[1];
            v2_2[0] = Integer.valueOf(p8.length);
            android.widget.Toast.makeText(p7, p7.getString(2131361807, v2_2), 0).show();
        }
        return;
    }

    public static net.sourceforge.servestream.utils.MusicUtils$AddToCurrentPlaylistAsyncTask addToCurrentPlaylistFromURL(android.content.Context p3, android.os.Handler p4, net.sourceforge.servestream.dbutils.Stream p5)
    {
        net.sourceforge.servestream.utils.MusicUtils$AddToCurrentPlaylistAsyncTask v0_1 = new net.sourceforge.servestream.utils.MusicUtils$AddToCurrentPlaylistAsyncTask(p3, p4);
        net.sourceforge.servestream.dbutils.Stream[] v1_1 = new net.sourceforge.servestream.dbutils.Stream[1];
        v1_1[0] = p5;
        v0_1.execute(v1_1);
        return v0_1;
    }

    public static net.sourceforge.servestream.utils.MusicUtils$ServiceToken bindToService(android.app.Activity p1)
    {
        return net.sourceforge.servestream.utils.MusicUtils.bindToService(p1, 0);
    }

    public static net.sourceforge.servestream.utils.MusicUtils$ServiceToken bindToService(android.app.Activity p5, android.content.ServiceConnection p6)
    {
        android.app.Activity v1 = p5.getParent();
        if (v1 == null) {
            v1 = p5;
        }
        int v3_5;
        android.content.ContextWrapper v0_1 = new android.content.ContextWrapper(v1);
        v0_1.startService(new android.content.Intent(v0_1, net.sourceforge.servestream.service.MediaPlaybackService));
        net.sourceforge.servestream.utils.MusicUtils$ServiceBinder v2_1 = new net.sourceforge.servestream.utils.MusicUtils$ServiceBinder(p6);
        if (!v0_1.bindService(new android.content.Intent().setClass(v0_1, net.sourceforge.servestream.service.MediaPlaybackService), v2_1, 0)) {
            android.util.Log.e("Music", "Failed to bind to service");
            v3_5 = 0;
        } else {
            net.sourceforge.servestream.utils.MusicUtils.sConnectionMap.put(v0_1, v2_1);
            v3_5 = new net.sourceforge.servestream.utils.MusicUtils$ServiceToken(v0_1);
        }
        return v3_5;
    }

    public static net.sourceforge.servestream.utils.MusicUtils$ServiceToken bindToService(android.app.Service p4, android.content.ServiceConnection p5)
    {
        int v2_4;
        android.content.ContextWrapper v0_1 = new android.content.ContextWrapper(p4);
        v0_1.startService(new android.content.Intent(v0_1, net.sourceforge.servestream.service.MediaPlaybackService));
        net.sourceforge.servestream.utils.MusicUtils$ServiceBinder v1_1 = new net.sourceforge.servestream.utils.MusicUtils$ServiceBinder(p5);
        if (!v0_1.bindService(new android.content.Intent().setClass(v0_1, net.sourceforge.servestream.service.MediaPlaybackService), v1_1, 0)) {
            android.util.Log.e("Music", "Failed to bind to service");
            v2_4 = 0;
        } else {
            net.sourceforge.servestream.utils.MusicUtils.sConnectionMap.put(v0_1, v1_1);
            v2_4 = new net.sourceforge.servestream.utils.MusicUtils$ServiceToken(v0_1);
        }
        return v2_4;
    }

    public static long[] getFilesInPlaylist(android.content.Context p4, java.net.URL p5, String p6)
    {
        long[] v3_1;
        java.util.List v1_1 = new java.util.ArrayList();
        if (p5 != null) {
            net.sourceforge.servestream.utils.PlaylistParser v2 = net.sourceforge.servestream.utils.PlaylistParser.getPlaylistParser(p5, p6);
            if (v2 == null) {
                net.sourceforge.servestream.utils.MediaFile v0_1 = new net.sourceforge.servestream.utils.MediaFile();
                v0_1.setUrl(p5.toString());
                v0_1.setTrack(1);
                v1_1.add(v0_1);
            } else {
                v2.retrieveAndParsePlaylist();
                v1_1 = v2.getPlaylistFiles();
            }
            v3_1 = net.sourceforge.servestream.utils.MusicUtils.addFilesToMediaStore(p4, v1_1);
        } else {
            v3_1 = net.sourceforge.servestream.utils.MusicUtils.sEmptyList;
        }
        return v3_1;
    }

    public static String makeTimeString(android.content.Context p12, long p13)
    {
        String v5_1;
        long v8 = 60;
        StringBuilder v1_1 = new StringBuilder();
        java.util.Formatter v2_1 = new java.util.Formatter(v1_1, java.util.Locale.getDefault());
        Object[] v3 = new Object[5];
        if (p13 >= 3600) {
            v5_1 = 2131361806;
        } else {
            v5_1 = 2131361805;
        }
        String v0 = p12.getString(v5_1);
        v1_1.setLength(0);
        Object[] v4 = v3;
        v4[0] = Long.valueOf((p13 / 3600));
        v4[1] = Long.valueOf((p13 / 60));
        v4[2] = Long.valueOf(((p13 / v8) % v8));
        v4[3] = Long.valueOf(p13);
        v4[4] = Long.valueOf((p13 % 60));
        return v2_1.format(v0, v4).toString();
    }

    public static void playAll(android.content.Context p2, long[] p3, int p4)
    {
        net.sourceforge.servestream.utils.MusicUtils.playAll(p2, p3, p4, 0, 1);
        return;
    }

    public static void playAll(android.content.Context p1, long[] p2, int p3, boolean p4)
    {
        net.sourceforge.servestream.utils.MusicUtils.playAll(p1, p2, p3, 0, p4);
        return;
    }

    private static void playAll(android.content.Context p10, long[] p11, int p12, boolean p13, boolean p14)
    {
        if ((p11.length != 0) && (net.sourceforge.servestream.utils.MusicUtils.sService != null)) {
            try {
                if (p13) {
                    net.sourceforge.servestream.utils.MusicUtils.sService.setShuffleMode(1);
                }
            } catch (int v6_12) {
                android.content.Intent v3_3 = new android.content.Intent("net.sourceforge.servestream.PLAYBACK_VIEWER");
                if (!p14) {
                    v3_3.setFlags(268435456);
                } else {
                    v3_3.setFlags(67108864);
                }
                p10.startActivity(v3_3);
                throw v6_12;
            } catch (int v6) {
                android.content.Intent v3_1 = new android.content.Intent("net.sourceforge.servestream.PLAYBACK_VIEWER");
                if (!p14) {
                    v3_1.setFlags(268435456);
                } else {
                    v3_1.setFlags(67108864);
                }
                p10.startActivity(v3_1);
            }
            long v0 = net.sourceforge.servestream.utils.MusicUtils.sService.getAudioId();
            int vtmp6 = net.sourceforge.servestream.utils.MusicUtils.sService.getQueuePosition();
            if ((p12 == -1) || ((vtmp6 != p12) || ((v0 != p11[p12]) || (!java.util.Arrays.equals(p11, net.sourceforge.servestream.utils.MusicUtils.sService.getQueue()))))) {
                if (p12 < 0) {
                    p12 = 0;
                }
                int v6_8;
                if (!p13) {
                    v6_8 = p12;
                } else {
                    v6_8 = -1;
                }
                net.sourceforge.servestream.utils.MusicUtils.sService.open(p11, v6_8);
                android.content.Intent v3_5 = new android.content.Intent("net.sourceforge.servestream.PLAYBACK_VIEWER");
                if (!p14) {
                    v3_5.setFlags(268435456);
                } else {
                    v3_5.setFlags(67108864);
                }
                p10.startActivity(v3_5);
            } else {
                net.sourceforge.servestream.utils.MusicUtils.sService.play();
                android.content.Intent v3_7 = new android.content.Intent("net.sourceforge.servestream.PLAYBACK_VIEWER");
                if (!p14) {
                    v3_7.setFlags(268435456);
                } else {
                    v3_7.setFlags(67108864);
                }
                p10.startActivity(v3_7);
            }
        } else {
            android.util.Log.d("MusicUtils", "attempt to play empty song list");
            net.sourceforge.servestream.service.IMediaPlaybackService v7_7 = new Object[1];
            v7_7[0] = Integer.valueOf(p11.length);
            android.widget.Toast.makeText(p10, p10.getString(2131361807, v7_7), 0).show();
        }
        return;
    }

    public static android.database.Cursor query(android.content.Context p7, android.net.Uri p8, String[] p9, String p10, String[] p11, String p12)
    {
        return net.sourceforge.servestream.utils.MusicUtils.query(p7, p8, p9, p10, p11, p12, 0);
    }

    public static android.database.Cursor query(android.content.Context p8, android.net.Uri p9, String[] p10, String p11, String[] p12, String p13, int p14)
    {
        try {
            android.database.Cursor v1_2;
            android.content.ContentResolver v0 = p8.getContentResolver();
        } catch (UnsupportedOperationException v6) {
            v1_2 = 0;
            return v1_2;
        }
        if (v0 != null) {
            if (p14 > 0) {
                p9 = p9.buildUpon().appendQueryParameter("limit", new StringBuilder().append("").append(p14).toString()).build();
            }
            v1_2 = v0.query(p9, p10, p11, p12, p13);
            return v1_2;
        } else {
            v1_2 = 0;
            return v1_2;
        }
    }

    private static java.util.Map retrieveAllRows(android.content.Context p12)
    {
        java.util.HashMap v9_1 = new java.util.HashMap();
        String[] v2 = new String[2];
        v2[0] = "_id";
        v2[1] = "uri";
        android.database.Cursor v6 = p12.getContentResolver().query(net.sourceforge.servestream.provider.Media$MediaColumns.CONTENT_URI, v2, 0, 0, 0);
        while (v6.moveToNext()) {
            v9_1.put(v6.getString(v6.getColumnIndex("uri")), Integer.valueOf(v6.getInt(v6.getColumnIndex("_id"))));
        }
        v6.close();
        return v9_1;
    }

    public static void unbindFromService(net.sourceforge.servestream.utils.MusicUtils$ServiceToken p4)
    {
        if (p4 != null) {
            android.content.ContextWrapper v0 = p4.mWrappedContext;
            net.sourceforge.servestream.utils.MusicUtils$ServiceBinder v1_1 = ((net.sourceforge.servestream.utils.MusicUtils$ServiceBinder) net.sourceforge.servestream.utils.MusicUtils.sConnectionMap.remove(v0));
            if (v1_1 != null) {
                v0.unbindService(v1_1);
                if (net.sourceforge.servestream.utils.MusicUtils.sConnectionMap.isEmpty()) {
                    net.sourceforge.servestream.utils.MusicUtils.sService = 0;
                }
            } else {
                android.util.Log.e("MusicUtils", "Trying to unbind for unknown Context");
            }
        } else {
            android.util.Log.e("MusicUtils", "Trying to unbind with null token");
        }
        return;
    }
}
package net.sourceforge.servestream.utils;
public class PLSPlaylistParser extends net.sourceforge.servestream.utils.PlaylistParser {
    public static final String EXTENSION = "pls";
    public static final String MIME_TYPE = "audio/x-scpls";
    public static final String TAG;
    private net.sourceforge.servestream.utils.MediaFile mediaFile;
    private boolean processingEntry;

    static PLSPlaylistParser()
    {
        net.sourceforge.servestream.utils.PLSPlaylistParser.TAG = net.sourceforge.servestream.utils.PLSPlaylistParser.getName();
        return;
    }

    public PLSPlaylistParser(java.net.URL p2)
    {
        super(p2);
        super.mediaFile = 0;
        super.processingEntry = 0;
        return;
    }

    public void retrieveAndParsePlaylist()
    {
        if (this.mPlaylistUrl != null) {
            String v3 = 0;
            java.io.BufferedReader v5 = 0;
            try {
                java.net.HttpURLConnection v0 = net.sourceforge.servestream.utils.URLUtils.getConnection(this.mPlaylistUrl);
                java.io.BufferedReader v6_0 = new java.io.BufferedReader(new java.io.InputStreamReader(v0.getInputStream()));
                try {
                    v0.connect();
                    this.mediaFile = new net.sourceforge.servestream.utils.MediaFile();
                    this.processingEntry = 0;
                } catch (int v7_1) {
                    v5 = v6_0;
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v5);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                    throw v7_1;
                } catch (Exception v2) {
                    v5 = v6_0;
                    v2.printStackTrace();
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v5);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                }
                do {
                    v3 = v6_0.readLine();
                    if (v3 == null) {
                        if (this.processingEntry) {
                            this.savePlaylistFile();
                        }
                        net.sourceforge.servestream.utils.Utils.closeBufferedReader(v6_0);
                        net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0);
                    } else {
                        if (!v3.trim().equals("")) {
                            String[] v4 = v3.split("\\=");
                        } else {
                            if (this.processingEntry) {
                                this.savePlaylistFile();
                            }
                            this.mediaFile = new net.sourceforge.servestream.utils.MediaFile();
                            this.processingEntry = 0;
                        }
                    }
                } while(v4.length != 2);
                if (!v4[0].trim().contains("File")) {
                    if (!v4[0].trim().contains("Title")) {
                        if (v4[0].trim().contains("Length")) {
                            if (this.processingEntry) {
                                this.savePlaylistFile();
                            }
                            this.mediaFile = new net.sourceforge.servestream.utils.MediaFile();
                            this.processingEntry = 0;
                        }
                    } else {
                        this.mediaFile.setPlaylistMetadata(v4[1].trim());
                    }
                } else {
                    this.processingEntry = 1;
                    try {
                        this.mediaFile.setUrl(java.net.URLDecoder.decode(v4[1].trim(), "UTF-8"));
                    } catch (java.io.UnsupportedEncodingException v1) {
                        this.mediaFile.setUrl(v4[1].trim());
                    }
                }
            } catch (int v7_1) {
            } catch (Exception v2) {
            }
        }
        return;
    }

    public void savePlaylistFile()
    {
        this.mNumberOfFiles = (this.mNumberOfFiles + 1);
        this.mediaFile.setTrack(this.mNumberOfFiles);
        this.mPlaylistFiles.add(this.mediaFile);
        this.processingEntry = 0;
        return;
    }
}
package net.sourceforge.servestream.utils;
public final class PreferenceConstants {
    public static final String AUTOSAVE = "autosave";
    public static final String BACKUP_PREF_KEY = "prefs";
    public static final String HEADPHONE_PAUSE = "headphonepause";
    public static final String LAST_CHECKED = "lastchecked";
    public static final boolean PRE_ECLAIR = False;
    public static final boolean PRE_FROYO = False;
    public static final String PROGRESSIVE_DOWNLOAD = "progressivedownload";
    public static final String RATE_APPLICATION_FLAG = "rateapplicationflag";
    public static final String RETRIEVE_METADATA = "retrievemetadata";
    public static final String RETRIEVE_SHOUTCAST_METADATA = "retrieveshoutcastmetadata";
    public static final String SEND_SCROBBLER_INFO = "sendscrobblerinfo";
    public static final String SORT_BY_NAME = "sortbyname";
    public static final String UPDATE = "update";
    public static final String UPDATE_DAILY = "Daily";
    public static final String UPDATE_NEVER = "Never";
    public static final String UPDATE_WEEKLY = "Weekly";
    public static final String WAKELOCK = "wakelock";
    public static final String WIFI_LOCK = "wifilock";

    static PreferenceConstants()
    {
        int v0_5;
        int v1 = 1;
        if (Integer.parseInt(android.os.Build$VERSION.SDK) > 4) {
            v0_5 = 0;
        } else {
            v0_5 = 1;
        }
        net.sourceforge.servestream.utils.PreferenceConstants.PRE_ECLAIR = v0_5;
        if ((!net.sourceforge.servestream.utils.PreferenceConstants.PRE_ECLAIR) && (Integer.parseInt(android.os.Build$VERSION.SDK) > 7)) {
            v1 = 0;
        }
        net.sourceforge.servestream.utils.PreferenceConstants.PRE_FROYO = v1;
        return;
    }

    public PreferenceConstants()
    {
        return;
    }
}
package net.sourceforge.servestream.utils;
 class TouchInterceptor$1 extends android.view.GestureDetector$SimpleOnGestureListener {
    final synthetic net.sourceforge.servestream.utils.TouchInterceptor this$0;

    TouchInterceptor$1(net.sourceforge.servestream.utils.TouchInterceptor p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean onFling(android.view.MotionEvent p5, android.view.MotionEvent p6, float p7, float p8)
    {
        int v1 = 1;
        if (net.sourceforge.servestream.utils.TouchInterceptor.access$000(this.this$0) == null) {
            v1 = 0;
        } else {
            if (p7 > 1148846080) {
                android.graphics.Rect v0 = net.sourceforge.servestream.utils.TouchInterceptor.access$100(this.this$0);
                net.sourceforge.servestream.utils.TouchInterceptor.access$000(this.this$0).getDrawingRect(v0);
                if (p6.getX() > ((float) ((v0.right * 2) / 3))) {
                    net.sourceforge.servestream.utils.TouchInterceptor.access$200(this.this$0);
                    net.sourceforge.servestream.utils.TouchInterceptor.access$400(this.this$0).remove(net.sourceforge.servestream.utils.TouchInterceptor.access$300(this.this$0));
                    net.sourceforge.servestream.utils.TouchInterceptor.access$500(this.this$0, 1);
                }
            }
        }
        return v1;
    }
}
package net.sourceforge.servestream.utils;
public interface TouchInterceptor$DragListener {

    public abstract void drag();
}
package net.sourceforge.servestream.utils;
public class TouchInterceptor extends android.widget.ListView {
    private static final int FLING = 0;
    private static final int SLIDE = 1;
    private static final int TRASH = 2;
    private android.graphics.Bitmap mDragBitmap;
    private net.sourceforge.servestream.utils.TouchInterceptor$DragListener mDragListener;
    private int mDragPointX;
    private int mDragPointY;
    private int mDragPos;
    private android.widget.ImageView mDragView;
    private net.sourceforge.servestream.utils.TouchInterceptor$DropListener mDropListener;
    private android.view.GestureDetector mGestureDetector;
    private int mHeight;
    private int mItemHeightExpanded;
    private int mItemHeightHalf;
    private int mItemHeightNormal;
    private int mLowerBound;
    private net.sourceforge.servestream.utils.TouchInterceptor$RemoveListener mRemoveListener;
    private int mRemoveMode;
    private int mSrcDragPos;
    private android.graphics.Rect mTempRect;
    private final int mTouchSlop;
    private android.graphics.drawable.Drawable mTrashcan;
    private int mUpperBound;
    private android.view.WindowManager mWindowManager;
    private android.view.WindowManager$LayoutParams mWindowParams;
    private int mXOffset;
    private int mYOffset;

    public TouchInterceptor(android.content.Context p6, android.util.AttributeSet p7)
    {
        super(p6, p7);
        super.mRemoveMode = -1;
        super.mTempRect = new android.graphics.Rect();
        super.mRemoveMode = p6.getSharedPreferences("Music", 3).getInt("deletemode", -1);
        super.mTouchSlop = android.view.ViewConfiguration.get(p6).getScaledTouchSlop();
        android.content.res.Resources v1 = super.getResources();
        super.mItemHeightNormal = v1.getDimensionPixelSize(2131296256);
        super.mItemHeightHalf = (super.mItemHeightNormal / 2);
        super.mItemHeightExpanded = v1.getDimensionPixelSize(2131296257);
        return;
    }

    static synthetic android.widget.ImageView access$000(net.sourceforge.servestream.utils.TouchInterceptor p1)
    {
        return p1.mDragView;
    }

    static synthetic android.graphics.Rect access$100(net.sourceforge.servestream.utils.TouchInterceptor p1)
    {
        return p1.mTempRect;
    }

    static synthetic void access$200(net.sourceforge.servestream.utils.TouchInterceptor p0)
    {
        p0.stopDragging();
        return;
    }

    static synthetic int access$300(net.sourceforge.servestream.utils.TouchInterceptor p1)
    {
        return p1.mSrcDragPos;
    }

    static synthetic net.sourceforge.servestream.utils.TouchInterceptor$RemoveListener access$400(net.sourceforge.servestream.utils.TouchInterceptor p1)
    {
        return p1.mRemoveListener;
    }

    static synthetic void access$500(net.sourceforge.servestream.utils.TouchInterceptor p0, boolean p1)
    {
        p0.unExpandViews(p1);
        return;
    }

    private void adjustScrollBounds(int p2)
    {
        if (p2 >= (this.mHeight / 3)) {
            this.mUpperBound = (this.mHeight / 3);
        }
        if (p2 <= ((this.mHeight * 2) / 3)) {
            this.mLowerBound = ((this.mHeight * 2) / 3);
        }
        return;
    }

    private void doExpansion()
    {
        int v0 = (this.mDragPos - this.getFirstVisiblePosition());
        if (this.mDragPos > this.mSrcDragPos) {
            v0++;
        }
        int v4 = this.getHeaderViewsCount();
        android.view.View v1 = this.getChildAt((this.mSrcDragPos - this.getFirstVisiblePosition()));
        int v3 = 0;
        while(true) {
            android.view.View v7 = this.getChildAt(v3);
            if (v7 == null) {
                break;
            }
            int v2 = this.mItemHeightNormal;
            int v6 = 0;
            if ((this.mDragPos >= v4) || (v3 != v4)) {
                if (!v7.equals(v1)) {
                    if ((v3 == v0) && ((this.mDragPos >= v4) && (this.mDragPos < (this.getCount() - 1)))) {
                        v2 = this.mItemHeightExpanded;
                    }
                } else {
                    if ((this.mDragPos != this.mSrcDragPos) && (this.getPositionForView(v7) != (this.getCount() - 1))) {
                        v2 = 1;
                    } else {
                        v6 = 4;
                    }
                }
            } else {
                if (!v7.equals(v1)) {
                    v2 = this.mItemHeightExpanded;
                } else {
                    v6 = 4;
                }
            }
            android.view.ViewGroup$LayoutParams v5 = v7.getLayoutParams();
            v5.height = v2;
            v7.setLayoutParams(v5);
            v7.setVisibility(v6);
            v3++;
        }
        return;
    }

    private void dragView(int p9, int p10)
    {
        if (this.mRemoveMode == 1) {
            float v0 = 1065353216;
            int v1_1 = this.mDragView.getWidth();
            if (p9 > (v1_1 / 2)) {
                v0 = (((float) (v1_1 - p9)) / ((float) (v1_1 / 2)));
            }
            this.mWindowParams.alpha = v0;
        }
        if ((this.mRemoveMode != 0) && (this.mRemoveMode != 2)) {
            this.mWindowParams.x = 0;
        } else {
            this.mWindowParams.x = ((p9 - this.mDragPointX) + this.mXOffset);
        }
        this.mWindowParams.y = ((p10 - this.mDragPointY) + this.mYOffset);
        this.mWindowManager.updateViewLayout(this.mDragView, this.mWindowParams);
        if (this.mTrashcan != null) {
            int v1_0 = this.mDragView.getWidth();
            if (p10 <= ((this.getHeight() * 3) / 4)) {
                if ((v1_0 <= 0) || (p9 <= (v1_0 / 4))) {
                    this.mTrashcan.setLevel(0);
                } else {
                    this.mTrashcan.setLevel(1);
                }
            } else {
                this.mTrashcan.setLevel(2);
            }
        }
        return;
    }

    private int getItemForPosition(int p5)
    {
        int v0 = ((p5 - this.mDragPointY) - this.mItemHeightHalf);
        int v1 = this.myPointToPosition(0, v0);
        if (v1 < 0) {
            if (v0 < 0) {
                v1 = 0;
            }
        } else {
            if (v1 <= this.mSrcDragPos) {
                v1++;
            }
        }
        return v1;
    }

    private int myPointToPosition(int p7, int p8)
    {
        int v5_1;
        if (p8 >= 0) {
            android.graphics.Rect v2 = this.mTempRect;
            int v3 = (this.getChildCount() - 1);
            while (v3 >= 0) {
                this.getChildAt(v3).getHitRect(v2);
                if (!v2.contains(p7, p8)) {
                    v3--;
                } else {
                    v5_1 = (this.getFirstVisiblePosition() + v3);
                }
            }
            v5_1 = -1;
        } else {
            int v4 = this.myPointToPosition(p7, (this.mItemHeightNormal + p8));
            if (v4 <= 0) {
            } else {
                v5_1 = (v4 - 1);
            }
        }
        return v5_1;
    }

    private void startDragging(android.graphics.Bitmap p8, int p9, int p10)
    {
        this.stopDragging();
        this.mWindowParams = new android.view.WindowManager$LayoutParams();
        this.mWindowParams.gravity = 51;
        this.mWindowParams.x = ((p9 - this.mDragPointX) + this.mXOffset);
        this.mWindowParams.y = ((p10 - this.mDragPointY) + this.mYOffset);
        this.mWindowParams.height = -2;
        this.mWindowParams.width = -2;
        this.mWindowParams.flags = 920;
        this.mWindowParams.format = -3;
        this.mWindowParams.windowAnimations = 0;
        android.content.Context v0 = this.getContext();
        android.widget.ImageView v1_1 = new android.widget.ImageView(v0);
        v1_1.setBackgroundResource(2130837591);
        v1_1.setPadding(0, 0, 0, 0);
        v1_1.setImageBitmap(p8);
        this.mDragBitmap = p8;
        this.mWindowManager = ((android.view.WindowManager) v0.getSystemService("window"));
        this.mWindowManager.addView(v1_1, this.mWindowParams);
        this.mDragView = v1_1;
        return;
    }

    private void stopDragging()
    {
        if (this.mDragView != null) {
            this.mDragView.setVisibility(8);
            ((android.view.WindowManager) this.getContext().getSystemService("window")).removeView(this.mDragView);
            this.mDragView.setImageDrawable(0);
            this.mDragView = 0;
        }
        if (this.mDragBitmap != null) {
            this.mDragBitmap.recycle();
            this.mDragBitmap = 0;
        }
        if (this.mTrashcan != null) {
            this.mTrashcan.setLevel(0);
        }
        return;
    }

    private void unExpandViews(boolean p8)
    {
        int v0 = 0;
        while(true) {
            android.view.View v3 = this.getChildAt(v0);
            if (v3 == null) {
                if (p8) {
                    int v2 = this.getFirstVisiblePosition();
                    int v4 = this.getChildAt(0).getTop();
                    this.setAdapter(this.getAdapter());
                    this.setSelectionFromTop(v2, v4);
                }
                try {
                    this.layoutChildren();
                    v3 = this.getChildAt(v0);
                } catch (IllegalStateException v5) {
                }
                if (v3 == null) {
                    break;
                }
            }
            android.view.ViewGroup$LayoutParams v1 = v3.getLayoutParams();
            v1.height = this.mItemHeightNormal;
            v3.setLayoutParams(v1);
            v3.setVisibility(0);
            v0++;
        }
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent p10)
    {
        if ((this.mRemoveListener != null) && ((this.mGestureDetector == null) && (this.mRemoveMode == 0))) {
            this.mGestureDetector = new android.view.GestureDetector(this.getContext(), new net.sourceforge.servestream.utils.TouchInterceptor$1(this));
        }
        if ((this.mDragListener == null) && (this.mDropListener == null)) {
            int v6_32 = super.onInterceptTouchEvent(p10);
        } else {
            switch (p10.getAction()) {
                case 0:
                    int v4 = ((int) p10.getX());
                    int v5 = ((int) p10.getY());
                    int v2 = this.pointToPosition(v4, v5);
                    if (v2 == -1) {
                    } else {
                        android.view.ViewGroup v1_1 = ((android.view.ViewGroup) this.getChildAt((v2 - this.getFirstVisiblePosition())));
                        this.mDragPointX = (v4 - v1_1.getLeft());
                        this.mDragPointY = (v5 - v1_1.getTop());
                        this.mXOffset = (((int) p10.getRawX()) - v4);
                        this.mYOffset = (((int) p10.getRawY()) - v5);
                        if (v4 >= 64) {
                            this.stopDragging();
                        } else {
                            v1_1.setDrawingCacheEnabled(1);
                            this.startDragging(android.graphics.Bitmap.createBitmap(v1_1.getDrawingCache()), v4, v5);
                            this.mDragPos = v2;
                            this.mSrcDragPos = this.mDragPos;
                            this.mHeight = this.getHeight();
                            int v3 = this.mTouchSlop;
                            this.mUpperBound = Math.min((v5 - v3), (this.mHeight / 3));
                            this.mLowerBound = Math.max((v5 + v3), ((this.mHeight * 2) / 3));
                            v6_32 = 0;
                        }
                    }
                    break;
                default:
            }
        }
        return v6_32;
    }

    public boolean onTouchEvent(android.view.MotionEvent p12)
    {
        boolean v6 = 1;
        if (this.mGestureDetector != null) {
            this.mGestureDetector.onTouchEvent(p12);
        }
        if (((this.mDragListener == null) && (this.mDropListener == null)) || (this.mDragView == null)) {
            v6 = super.onTouchEvent(p12);
        } else {
            int v0 = p12.getAction();
            switch (v0) {
                case 0:
                case 2:
                    int v5 = ((int) p12.getY());
                    this.dragView(((int) p12.getX()), v5);
                    int v1 = this.getItemForPosition(v5);
                    if (v1 >= 0) {
                        if ((v0 == 0) || (v1 != this.mDragPos)) {
                            if (this.mDragListener != null) {
                                this.mDragListener.drag(this.mDragPos, v1);
                            }
                            this.mDragPos = v1;
                            this.doExpansion();
                        }
                        int v3 = 0;
                        this.adjustScrollBounds(v5);
                        if (v5 <= this.mLowerBound) {
                            if (v5 < this.mUpperBound) {
                                if (v5 >= (this.mUpperBound / 2)) {
                                    v3 = -4;
                                } else {
                                    v3 = -16;
                                }
                                if ((this.getFirstVisiblePosition() == 0) && (this.getChildAt(0).getTop() >= this.getPaddingTop())) {
                                    v3 = 0;
                                }
                            }
                        } else {
                            if (this.getLastVisiblePosition() >= (this.getCount() - 1)) {
                                v3 = 1;
                            } else {
                                if (v5 <= ((this.mHeight + this.mLowerBound) / 2)) {
                                    v3 = 4;
                                } else {
                                    v3 = 16;
                                }
                            }
                        }
                        if (v3 != 0) {
                            this.smoothScrollBy(v3, 30);
                        }
                    }
                    break;
                case 1:
                case 3:
                    android.graphics.Rect v2 = this.mTempRect;
                    this.mDragView.getDrawingRect(v2);
                    this.stopDragging();
                    if ((this.mRemoveMode != 1) || (p12.getX() <= ((float) ((v2.right * 3) / 4)))) {
                        if ((this.mDropListener != null) && ((this.mDragPos >= 0) && (this.mDragPos < this.getCount()))) {
                            this.mDropListener.drop(this.mSrcDragPos, this.mDragPos);
                        }
                        this.unExpandViews(0);
                    } else {
                        if (this.mRemoveListener != null) {
                            this.mRemoveListener.remove(this.mSrcDragPos);
                        }
                        this.unExpandViews(1);
                    }
                    break;
            }
        }
        return v6;
    }

    public void setDragListener(net.sourceforge.servestream.utils.TouchInterceptor$DragListener p1)
    {
        this.mDragListener = p1;
        return;
    }

    public void setDropListener(net.sourceforge.servestream.utils.TouchInterceptor$DropListener p1)
    {
        this.mDropListener = p1;
        return;
    }

    public void setRemoveListener(net.sourceforge.servestream.utils.TouchInterceptor$RemoveListener p1)
    {
        this.mRemoveListener = p1;
        return;
    }

    public void setTrashcan(android.graphics.drawable.Drawable p2)
    {
        this.mTrashcan = p2;
        this.mRemoveMode = 2;
        return;
    }
}
package net.sourceforge.servestream.utils;
final class URLUtils$1 extends java.net.Authenticator {
    final synthetic String val$password;
    final synthetic String val$username;

    URLUtils$1(String p1, String p2)
    {
        this.val$username = p1;
        this.val$password = p2;
        return;
    }

    protected java.net.PasswordAuthentication getPasswordAuthentication()
    {
        return new java.net.PasswordAuthentication(this.val$username, this.val$password.toCharArray());
    }
}
package net.sourceforge.servestream.utils;
public class URLUtils {
    public static final String HTTP = "http";
    public static final String HTTPS = "https";
    public static final int NOT_FOUND = 255;
    public static final String USER_AGENT = "ServeStream";
    private static final android.webkit.MimeTypeMap mMimeTypeMap;
    private String mContentType;
    private int mResponseCode;

    static URLUtils()
    {
        net.sourceforge.servestream.utils.URLUtils.mMimeTypeMap = android.webkit.MimeTypeMap.getSingleton();
        return;
    }

    public URLUtils(java.net.URL p2)
    {
        this.mResponseCode = -1;
        this.mContentType = "";
        this.getURLInformation(p2);
        return;
    }

    public static String encodeUrl(String p4)
    {
        String v2 = 0;
        if (p4 != null) {
            try {
                java.net.URL v1 = net.sourceforge.servestream.utils.URLUtils.encodeUrl(new java.net.URL(p4));
            } catch (java.net.MalformedURLException v0) {
                v0.printStackTrace();
            }
            if (v1 != null) {
                v2 = v1.toString();
            }
        }
        return v2;
    }

    public static java.net.URL encodeUrl(java.net.URL p14)
    {
        java.net.URL v12_11;
        java.net.URL v9 = 0;
        if (p14 != null) {
            String v1 = p14.getProtocol();
            String v2 = p14.getUserInfo();
            String v3 = p14.getHost();
            int v4 = -1;
            if (p14.getPort() != -1) {
                v4 = p14.getPort();
            } else {
                if (!v1.equalsIgnoreCase("http")) {
                    if (v1.equalsIgnoreCase("https")) {
                        v4 = 443;
                    }
                } else {
                    v4 = 80;
                }
            }
            String v5 = p14.getPath();
            String v6 = p14.getQuery();
            String v7 = p14.getRef();
            String[] v10 = v3.split("\\:");
            if (v10.length == 2) {
                v3 = v10[0];
                v4 = Integer.valueOf(v10[1]).intValue();
            }
            try {
                try {
                    v9 = new java.net.URI(v1, v2, v3, v4, v5, v6, v7).toURL();
                } catch (java.net.MalformedURLException v8_1) {
                    v8_1.printStackTrace();
                } catch (java.net.MalformedURLException v8_0) {
                    v8_0.printStackTrace();
                }
                v12_11 = v9;
            } catch (java.net.MalformedURLException v8_1) {
            } catch (java.net.MalformedURLException v8_0) {
            }
        } else {
            v12_11 = 0;
        }
        return v12_11;
    }

    public static java.net.HttpURLConnection getConnection(java.net.URL p10)
    {
        java.net.URLConnection v6_16;
        javax.net.ssl.HttpsURLConnection v1 = 0;
        if (p10 != null) {
            java.net.URL v10_1 = net.sourceforge.servestream.utils.URLUtils.encodeUrl(p10);
            String v4 = v10_1.getUserInfo();
            try {
                if ((v4 == null) || (v4.split("\\:").length != 2)) {
                    if (!v10_1.getProtocol().equalsIgnoreCase("http")) {
                        if (v10_1.getProtocol().equalsIgnoreCase("https")) {
                            v1 = ((javax.net.ssl.HttpsURLConnection) v10_1.openConnection());
                        }
                    } else {
                        v1 = ((java.net.HttpURLConnection) v10_1.openConnection());
                    }
                    v1.setRequestProperty("User-Agent", "ServeStream");
                } else {
                    java.net.Authenticator.setDefault(new net.sourceforge.servestream.utils.URLUtils$1(v4.split("\\:")[0], v4.split("\\:")[1]));
                    v10_1 = net.sourceforge.servestream.utils.URLUtils.encodeUrl(new java.net.URL(v10_1.toString().replace(new StringBuilder().append(v4).append("@").toString(), "")));
                }
            } catch (java.io.IOException v2) {
                v2.printStackTrace();
            }
            v6_16 = v1;
        } else {
            v6_16 = 0;
        }
        return v6_16;
    }

    public static String getContentType(String p4)
    {
        String v2_2;
        String v0 = 0;
        if (p4 != null) {
            String v1 = android.webkit.MimeTypeMap.getFileExtensionFromUrl(p4);
            if (!v1.equals("")) {
                v0 = net.sourceforge.servestream.utils.URLUtils.mMimeTypeMap.getMimeTypeFromExtension(v1);
            } else {
                if (p4.lastIndexOf("/") == (p4.length() - 1)) {
                    v0 = "text/html";
                }
            }
            v2_2 = v0;
        } else {
            v2_2 = 0;
        }
        return v2_2;
    }

    private void getURLInformation(java.net.URL p5)
    {
        if (p5 != null) {
            try {
                java.net.HttpURLConnection v0_1 = net.sourceforge.servestream.utils.URLUtils.getConnection(p5);
            } catch (String v2_3) {
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0_1);
                throw v2_3;
            } catch (IllegalArgumentException v1_1) {
                v1_1.printStackTrace();
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0_1);
            } catch (IllegalArgumentException v1_0) {
                v1_0.printStackTrace();
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0_1);
            }
            if (v0_1 != null) {
                v0_1.setConnectTimeout(6000);
                v0_1.setReadTimeout(6000);
                v0_1.setRequestMethod("GET");
                this.mResponseCode = v0_1.getResponseCode();
                if (this.mResponseCode == -1) {
                    this.mResponseCode = 200;
                }
                this.mContentType = v0_1.getContentType();
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0_1);
            } else {
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(v0_1);
            }
        } else {
            net.sourceforge.servestream.utils.Utils.closeHttpConnection(0);
        }
        return;
    }

    public String getContentType()
    {
        return this.mContentType;
    }

    public int getResponseCode()
    {
        return this.mResponseCode;
    }
}
package net.sourceforge.servestream.utils;
 class UpdateHelper$1$1 implements android.content.DialogInterface$OnClickListener {
    final synthetic net.sourceforge.servestream.utils.UpdateHelper$1 this$1;
    final synthetic String val$target;

    UpdateHelper$1$1(net.sourceforge.servestream.utils.UpdateHelper$1 p1, String p2)
    {
        this.this$1 = p1;
        this.val$target = p2;
        return;
    }

    public void onClick(android.content.DialogInterface p4, int p5)
    {
        this.this$1.this$0.context.startActivity(new android.content.Intent("android.intent.action.VIEW", android.net.Uri.parse(this.val$target)));
        return;
    }
}
package net.sourceforge.servestream.utils;
 class UpdateHelper$1 extends android.os.Handler {
    final synthetic net.sourceforge.servestream.utils.UpdateHelper this$0;

    UpdateHelper$1(net.sourceforge.servestream.utils.UpdateHelper p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p8)
    {
        if ((p8.obj instanceof org.json.JSONObject)) {
            org.json.JSONObject v1_1 = ((org.json.JSONObject) p8.obj);
            int v3 = v1_1.optInt("versionCode");
            String v0 = v1_1.optString("features");
            String v2 = new StringBuilder().append("market://").append(v1_1.optString("target")).toString();
            if (v3 > this.this$0.versionCode) {
                new android.app.AlertDialog$Builder(this.this$0.context).setTitle(2131361900).setMessage(v0).setPositiveButton(2131361901, new net.sourceforge.servestream.utils.UpdateHelper$1$1(this, v2)).setNegativeButton(2131361902, 0).create().show();
            }
        }
        return;
    }
}
package net.sourceforge.servestream.utils;
public final class UpdateHelper implements java.lang.Runnable {
    public static final String TAG = "";
    public static final String UPDATE_URL = "http://servestream.sourceforge.net/version";
    protected android.content.Context context;
    private String packageName;
    private String userAgent;
    protected int versionCode;
    private android.os.Handler versionHandler;
    private String versionName;

    static UpdateHelper()
    {
        net.sourceforge.servestream.utils.UpdateHelper.TAG = net.sourceforge.servestream.utils.UpdateHelper.getName();
        return;
    }

    public UpdateHelper(android.content.Context p23)
    {
        net.sourceforge.servestream.utils.UpdateHelper v22_1 = ;
String v18_0 = new net.sourceforge.servestream.utils.UpdateHelper$1;
        v18_0(v22_1);
        v22_1.versionHandler = v18_0;
        v22_1.context = p23;
        try {
            android.content.pm.PackageInfo v7 = p23.getPackageManager().getPackageInfo(p23.getPackageName(), 0);
            v22_1.packageName = v7.packageName;
            v22_1.versionCode = v7.versionCode;
            v22_1.versionName = v7.versionName;
            android.content.SharedPreferences v15 = android.preference.PreferenceManager.getDefaultSharedPreferences(p23);
            try {
                String v6 = v15.getString("update", "Daily");
            } catch (ClassCastException v3) {
                v6 = "Daily";
                android.content.SharedPreferences$Editor v5_1 = v15.edit();
                v5_1.putString("update", "Daily");
                v5_1.commit();
            }
            long v8 = v15.getLong("lastchecked", 0);
            long v11 = (System.currentTimeMillis() / 1000);
            long v13 = (v11 - v8);
            int v16 = 0;
            if (!"Daily".equals(v6)) {
                if ("Weekly".equals(v6)) {
                    if (v13 <= 604800) {
                        v16 = 0;
                    } else {
                        v16 = 1;
                    }
                }
            } else {
                if (v13 <= 86400) {
                    v16 = 0;
                } else {
                    v16 = 1;
                }
            }
            String v0_24 = new Object[5];
            Object[] v19_5 = v0_24;
            v19_5[0] = v22_1.packageName;
            v19_5[1] = v22_1.versionName;
            v19_5[2] = Integer.valueOf(v22_1.versionCode);
            v19_5[3] = v6;
            v19_5[4] = java.util.Locale.getDefault().getLanguage();
            v22_1.userAgent = String.format("%s/%s (%d, freq=%s, lang=%s)", v19_5);
            if (v16 == 0) {
                return;
            } else {
                Thread v17 = new Thread;
                v17(v22_1);
                v17.setName("UpdateHelper");
                v17.start();
                android.content.SharedPreferences$Editor v5_0 = v15.edit();
                v5_0.putLong("lastchecked", v11);
                v5_0.commit();
                return;
            }
        } catch (Exception v4) {
            android.util.Log.e(net.sourceforge.servestream.utils.UpdateHelper.TAG, "Couldn\'t find package information in PackageManager", v4);
            return;
        }
    }

    private static String getUrl(String p8, String p9)
    {
        java.net.URLConnection v2 = new java.net.URL(p8).openConnection();
        v2.setConnectTimeout(6000);
        v2.setReadTimeout(6000);
        v2.setRequestProperty("User-Agent", p9);
        v2.connect();
        java.io.InputStream v3 = v2.getInputStream();
        java.io.ByteArrayOutputStream v4_1 = new java.io.ByteArrayOutputStream();
        byte[] v0 = new byte[1024];
        while(true) {
            int v1 = v3.read(v0);
            if (v1 == -1) {
                break;
            }
            v4_1.write(v0, 0, v1);
        }
        v4_1.flush();
        v4_1.close();
        v3.close();
        return new String(v4_1.toByteArray());
    }

    public void run()
    {
        try {
            android.os.Message.obtain(this.versionHandler, -1, new org.json.JSONObject(net.sourceforge.servestream.utils.UpdateHelper.getUrl("http://servestream.sourceforge.net/version", this.userAgent))).sendToTarget();
        } catch (Exception v0) {
            android.util.Log.e(net.sourceforge.servestream.utils.UpdateHelper.TAG, "Problem while fetching/parsing update response", v0);
        }
        return;
    }
}
package net.sourceforge.servestream.utils;
public class Utils {
    private static final String DOWNLOAD_DIRECTORY_NAME = "ServeStream";

    public Utils()
    {
        return;
    }

    public static void closeBufferedReader(java.io.BufferedReader p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static void closeHttpConnection(java.net.HttpURLConnection p0)
    {
        if (p0 != null) {
            p0.disconnect();
        }
        return;
    }

    public static void closeInputStream(java.io.InputStream p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (Exception v0) {
                v0.printStackTrace();
            }
        }
        return;
    }

    public static void closeOutputStream(java.io.OutputStream p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
                v0.printStackTrace();
            }
        }
        return;
    }

    public static void copyFile(java.io.File p10, java.io.File p11)
    {
        java.io.FileInputStream v2 = 0;
        java.io.FileOutputStream v5 = 0;
        if ((p10 != null) && (p11 != null)) {
            java.io.File v7_0 = new java.io.File(new StringBuilder().append(p11.getPath()).append(".tmp").toString());
            try {
                java.io.FileInputStream v3_1 = new java.io.FileInputStream(p10);
                try {
                    java.io.FileOutputStream v6_1 = new java.io.FileOutputStream(v7_0);
                    try {
                        byte[] v0 = new byte[1024];
                    } catch (int v8_4) {
                        v5 = v6_1;
                        v2 = v3_1;
                        net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                        net.sourceforge.servestream.utils.Utils.closeOutputStream(v5);
                        net.sourceforge.servestream.utils.Utils.deleteFile(v7_0);
                        throw v8_4;
                    } catch (java.io.IOException v1) {
                        v5 = v6_1;
                        v2 = v3_1;
                        v1.printStackTrace();
                        net.sourceforge.servestream.utils.Utils.closeInputStream(v2);
                        net.sourceforge.servestream.utils.Utils.closeOutputStream(v5);
                        net.sourceforge.servestream.utils.Utils.deleteFile(v7_0);
                    }
                    while(true) {
                        int v4 = v3_1.read(v0);
                        if (v4 == -1) {
                            break;
                        }
                        v6_1.write(v0, 0, v4);
                    }
                    v6_1.close();
                    v7_0.renameTo(p11);
                    net.sourceforge.servestream.utils.Utils.closeInputStream(v3_1);
                    net.sourceforge.servestream.utils.Utils.closeOutputStream(v6_1);
                    net.sourceforge.servestream.utils.Utils.deleteFile(v7_0);
                    v2 = v3_1;
                } catch (int v8_4) {
                    v2 = v3_1;
                } catch (java.io.IOException v1) {
                    v2 = v3_1;
                }
            } catch (int v8_4) {
            } catch (java.io.IOException v1) {
            }
        }
        return;
    }

    public static boolean deleteAllFiles()
    {
        int v3 = 1;
        java.io.File v0 = net.sourceforge.servestream.utils.Utils.getDownloadDirectory();
        if (v0 != null) {
            java.io.File[] v1 = v0.listFiles();
            int v2 = 0;
            while (v2 < v1.length) {
                if (!net.sourceforge.servestream.utils.Utils.deleteFile(v1[v2])) {
                    v3 = 0;
                }
                v2++;
            }
        } else {
            v3 = 0;
        }
        return v3;
    }

    public static boolean deleteFile(java.io.File p1)
    {
        if ((p1 == null) || (!p1.exists())) {
            boolean v0_1 = 0;
        } else {
            v0_1 = p1.delete();
        }
        return v0_1;
    }

    public static java.io.File getDownloadDirectory()
    {
        int v0_1 = new java.io.File(android.os.Environment.getExternalStorageDirectory(), "ServeStream");
        if ((!v0_1.exists()) && (!v0_1.mkdirs())) {
            v0_1 = 0;
        }
        return v0_1;
    }
}
package net.sourceforge.servestream.utils;
public class WebpageParser {
    private static final String REQUEST_METHOD = "GET";
    private static final String TAG;
    private java.util.ArrayList mParsedLinks;
    private java.net.URL mURL;

    static WebpageParser()
    {
        net.sourceforge.servestream.utils.WebpageParser.TAG = net.sourceforge.servestream.utils.WebpageParser.getName();
        return;
    }

    public WebpageParser(java.net.URL p2)
    {
        this.mURL = 0;
        this.mParsedLinks = 0;
        this.mURL = p2;
        this.mParsedLinks = new java.util.ArrayList();
        return;
    }

    public java.util.List getParsedLinks()
    {
        return this.mParsedLinks;
    }

    public net.sourceforge.servestream.dbutils.Stream getParsedLinks(int p2)
    {
        return ((net.sourceforge.servestream.dbutils.Stream) this.mParsedLinks.get(p2));
    }

    public void parse()
    {
        int v8 = 0;
        java.net.HttpURLConnection v1 = 0;
        StringBuffer v4_1 = new StringBuffer();
        java.io.BufferedReader v10 = 0;
        try {
            if (this.mURL != null) {
                v1 = net.sourceforge.servestream.utils.URLUtils.getConnection(this.mURL);
                if (v1 != null) {
                    v1.setRequestProperty("User-Agent", "ServeStream");
                    v1.setConnectTimeout(6000);
                    v1.setReadTimeout(6000);
                    v1.setRequestMethod("GET");
                    java.io.BufferedReader v11_1 = new java.io.BufferedReader(new java.io.InputStreamReader(v1.getInputStream()));
                    try {
                        v1.connect();
                    } catch (String v14_0) {
                        v10 = v11_1;
                        net.sourceforge.servestream.utils.Utils.closeBufferedReader(v10);
                        net.sourceforge.servestream.utils.Utils.closeHttpConnection(v1);
                        throw v14_0;
                    } catch (String v14) {
                        v10 = v11_1;
                        net.sourceforge.servestream.utils.Utils.closeBufferedReader(v10);
                        net.sourceforge.servestream.utils.Utils.closeHttpConnection(v1);
                    }
                    while(true) {
                        String v6 = v11_1.readLine();
                        if (v6 == null) {
                            break;
                        }
                        v4_1 = v4_1.append(v6);
                    }
                    org.jsoup.select.Elements v9 = org.jsoup.Jsoup.parse(v4_1.toString()).select("a[href]");
                    int v5 = 0;
                    while (v5 < v9.size()) {
                        try {
                            v9.get(v5).setBaseUri(this.mURL.toString());
                            String v7 = v9.get(v5).attr("abs:href");
                            net.sourceforge.servestream.dbutils.Stream v13_1 = new net.sourceforge.servestream.dbutils.Stream(java.net.URLDecoder.decode(v7, "UTF-8"));
                            try {
                                v13_1.setNickname(v9.get(v5).text());
                                v13_1.setContentType(net.sourceforge.servestream.utils.URLUtils.getContentType(v7));
                                this.mParsedLinks.add(v8, v13_1);
                                v8++;
                            } catch (java.net.MalformedURLException v3) {
                                android.util.Log.v(net.sourceforge.servestream.utils.WebpageParser.TAG, new StringBuilder().append("Malformed URL: ").append(v7).toString());
                            }
                            v5++;
                        } catch (java.net.MalformedURLException v3) {
                        }
                    }
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(v11_1);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v1);
                } else {
                    net.sourceforge.servestream.utils.Utils.closeBufferedReader(0);
                    net.sourceforge.servestream.utils.Utils.closeHttpConnection(v1);
                }
            } else {
                net.sourceforge.servestream.utils.Utils.closeBufferedReader(0);
                net.sourceforge.servestream.utils.Utils.closeHttpConnection(0);
            }
        } catch (String v14_0) {
        } catch (String v14) {
        }
        return;
    }
}
package net.sourceforge.servestream.widget;
public class ServeStreamAppWidgetOneProvider extends android.appwidget.AppWidgetProvider {
    public static final String CMDAPPWIDGETUPDATE = "appwidgetupdate";
    static final String TAG;
    private static net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider sInstance;

    static ServeStreamAppWidgetOneProvider()
    {
        net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.TAG = net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.getName();
        return;
    }

    public ServeStreamAppWidgetOneProvider()
    {
        return;
    }

    private void defaultAppWidget(android.content.Context p5, int[] p6)
    {
        android.content.res.Resources v0 = p5.getResources();
        android.widget.RemoteViews v1_1 = new android.widget.RemoteViews(p5.getPackageName(), 2130903051);
        v1_1.setViewVisibility(2131623980, 8);
        v1_1.setTextViewText(2131623981, v0.getText(2131361903));
        this.linkButtons(p5, v1_1, 0);
        this.pushUpdate(p5, p6, v1_1);
        return;
    }

    public static declared_synchronized net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider getInstance()
    {
        try {
            if (net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.sInstance == null) {
                net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.sInstance = new net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider();
            }
        } catch (net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider v0_3) {
            throw v0_3;
        }
        return net.sourceforge.servestream.widget.ServeStreamAppWidgetOneProvider.sInstance;
    }

    private boolean hasInstances(android.content.Context p5)
    {
        int v2_0;
        if (android.appwidget.AppWidgetManager.getInstance(p5).getAppWidgetIds(new android.content.ComponentName(p5, this.getClass())).length <= 0) {
            v2_0 = 0;
        } else {
            v2_0 = 1;
        }
        return v2_0;
    }

    private void linkButtons(android.content.Context p7, android.widget.RemoteViews p8, boolean p9)
    {
        android.content.ComponentName v2_1 = new android.content.ComponentName(p7, net.sourceforge.servestream.service.MediaPlaybackService);
        if (!p9) {
            p8.setOnClickPendingIntent(2131623979, android.app.PendingIntent.getActivity(p7, 0, new android.content.Intent(p7, net.sourceforge.servestream.activity.URLListActivity), 0));
        } else {
            p8.setOnClickPendingIntent(2131623979, android.app.PendingIntent.getActivity(p7, 0, new android.content.Intent(p7, net.sourceforge.servestream.activity.MediaPlaybackActivity), 0));
        }
        android.content.Intent v0_3 = new android.content.Intent("net.sourceforge.servestream.mediaservicecommand.togglepause");
        v0_3.setComponent(v2_1);
        p8.setOnClickPendingIntent(2131623982, android.app.PendingIntent.getService(p7, 0, v0_3, 0));
        android.content.Intent v0_5 = new android.content.Intent("net.sourceforge.servestream.mediaservicecommand.next");
        v0_5.setComponent(v2_1);
        p8.setOnClickPendingIntent(2131623983, android.app.PendingIntent.getService(p7, 0, v0_5, 0));
        return;
    }

    private void pushUpdate(android.content.Context p4, int[] p5, android.widget.RemoteViews p6)
    {
        android.appwidget.AppWidgetManager v0 = android.appwidget.AppWidgetManager.getInstance(p4);
        if (p5 == null) {
            v0.updateAppWidget(new android.content.ComponentName(p4, this.getClass()), p6);
        } else {
            v0.updateAppWidget(p5, p6);
        }
        return;
    }

    public void notifyChange(net.sourceforge.servestream.service.MediaPlaybackService p2, String p3)
    {
        if ((this.hasInstances(p2)) && (("net.sourceforge.servestream.metachanged".equals(p3)) || (("net.sourceforge.servestream.playstatechanged".equals(p3)) || ("net.sourceforge.servestream.playerclosed".equals(p3))))) {
            this.performUpdate(p2, 0, p3);
        }
        return;
    }

    public void onUpdate(android.content.Context p4, android.appwidget.AppWidgetManager p5, int[] p6)
    {
        this.defaultAppWidget(p4, p6);
        android.content.Intent v0_1 = new android.content.Intent("net.sourceforge.servestream.mediaservicecommand");
        v0_1.putExtra("command", "appwidgetupdate");
        v0_1.putExtra("appWidgetIds", p6);
        v0_1.addFlags(1073741824);
        p4.sendBroadcast(v0_1);
        return;
    }

    public void performUpdate(net.sourceforge.servestream.service.MediaPlaybackService p12, int[] p13, String p14)
    {
        android.content.res.Resources v2 = p12.getResources();
        android.widget.RemoteViews v4_0 = new android.widget.RemoteViews(p12.getPackageName(), 2130903051);
        if (!p14.equals("net.sourceforge.servestream.playerclosed")) {
            CharSequence v3 = p12.getTrackName();
            String v0 = p12.getArtistName();
            if ((v3 == null) || (v3.equals(""))) {
                v3 = v2.getText(2131361904);
            }
            if ((v0 == null) || (v0.equals(""))) {
                v0 = p12.getMediaUri();
            }
            v4_0.setViewVisibility(2131623980, 0);
            v4_0.setTextViewText(2131623980, v3);
            v4_0.setTextViewText(2131623981, v0);
            if (!p12.isPlaying()) {
                v4_0.setImageViewResource(2131623982, 2130837540);
            } else {
                v4_0.setImageViewResource(2131623982, 2130837539);
            }
            this.linkButtons(p12, v4_0, 1);
        } else {
            v4_0.setViewVisibility(2131623980, 8);
            v4_0.setTextViewText(2131623981, v2.getText(2131361903));
            this.linkButtons(p12, v4_0, 0);
        }
        this.pushUpdate(p12, p13, v4_0);
        return;
    }
}
package org.apache.tika.exception;
public class TikaException extends java.lang.Exception {

    public TikaException(String p1)
    {
        super(p1);
        return;
    }

    public TikaException(String p1, Throwable p2)
    {
        super(p1, p2);
        return;
    }
}
package org.apache.tika.io;
public class IOExceptionWithCause extends java.io.IOException {
    private static final long serialVersionUID = 1;

    public IOExceptionWithCause(String p1, Throwable p2)
    {
        super(p1);
        super.initCause(p2);
        return;
    }

    public IOExceptionWithCause(Throwable p2)
    {
        String v0;
        if (p2 != null) {
            v0 = p2.toString();
        } else {
            v0 = 0;
        }
        super(v0);
        super.initCause(p2);
        return;
    }
}
package org.apache.tika.io;
public class IOUtils {
    private static final int DEFAULT_BUFFER_SIZE = 4096;

    public IOUtils()
    {
        return;
    }

    public static void closeQuietly(java.io.InputStream p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static void closeQuietly(java.io.OutputStream p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static void closeQuietly(java.io.Reader p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static void closeQuietly(java.io.Writer p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static void closeQuietly(java.nio.channels.Channel p1)
    {
        if (p1 != null) {
            try {
                p1.close();
            } catch (java.io.IOException v0) {
            }
        }
        return;
    }

    public static boolean contentEquals(java.io.InputStream p4, java.io.InputStream p5)
    {
        int v1 = 0;
        if (!(p4 instanceof java.io.BufferedInputStream)) {
            p4 = new java.io.BufferedInputStream(p4);
        }
        if (!(p5 instanceof java.io.BufferedInputStream)) {
            p5 = new java.io.BufferedInputStream(p5);
        }
        int v0_1 = p4.read();
        while (-1 != v0_1) {
            if (v0_1 == p5.read()) {
                v0_1 = p4.read();
            }
            return v1;
        }
        int v0_3;
        if (p5.read() != -1) {
            v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        v1 = v0_3;
        return v1;
    }

    public static boolean contentEquals(java.io.Reader p4, java.io.Reader p5)
    {
        int v1 = 0;
        if (!(p4 instanceof java.io.BufferedReader)) {
            p4 = new java.io.BufferedReader(p4);
        }
        if (!(p5 instanceof java.io.BufferedReader)) {
            p5 = new java.io.BufferedReader(p5);
        }
        int v0_1 = p4.read();
        while (-1 != v0_1) {
            if (v0_1 == p5.read()) {
                v0_1 = p4.read();
            }
            return v1;
        }
        int v0_3;
        if (p5.read() != -1) {
            v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        v1 = v0_3;
        return v1;
    }

    public static int copy(java.io.InputStream p4, java.io.OutputStream p5)
    {
        int v0_1;
        int v0_0 = org.apache.tika.io.IOUtils.copyLarge(p4, p5);
        if (v0_0 <= 2147483647) {
            v0_1 = ((int) v0_0);
        } else {
            v0_1 = -1;
        }
        return v0_1;
    }

    public static int copy(java.io.Reader p4, java.io.Writer p5)
    {
        int v0_1;
        int v0_0 = org.apache.tika.io.IOUtils.copyLarge(p4, p5);
        if (v0_0 <= 2147483647) {
            v0_1 = ((int) v0_0);
        } else {
            v0_1 = -1;
        }
        return v0_1;
    }

    public static void copy(java.io.InputStream p1, java.io.Writer p2)
    {
        org.apache.tika.io.IOUtils.copy(new java.io.InputStreamReader(p1), p2);
        return;
    }

    public static void copy(java.io.InputStream p1, java.io.Writer p2, String p3)
    {
        if (p3 != null) {
            org.apache.tika.io.IOUtils.copy(new java.io.InputStreamReader(p1, p3), p2);
        } else {
            org.apache.tika.io.IOUtils.copy(p1, p2);
        }
        return;
    }

    public static void copy(java.io.Reader p1, java.io.OutputStream p2)
    {
        java.io.OutputStreamWriter v0_1 = new java.io.OutputStreamWriter(p2);
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        v0_1.flush();
        return;
    }

    public static void copy(java.io.Reader p1, java.io.OutputStream p2, String p3)
    {
        if (p3 != null) {
            java.io.OutputStreamWriter v0_1 = new java.io.OutputStreamWriter(p2, p3);
            org.apache.tika.io.IOUtils.copy(p1, v0_1);
            v0_1.flush();
        } else {
            org.apache.tika.io.IOUtils.copy(p1, p2);
        }
        return;
    }

    public static long copyLarge(java.io.InputStream p5, java.io.OutputStream p6)
    {
        byte[] v2 = new byte[4096];
        long v0_1 = 0;
        while(true) {
            int v4 = p5.read(v2);
            if (-1 == v4) {
                break;
            }
            p6.write(v2, 0, v4);
            v0_1 += ((long) v4);
        }
        return v0_1;
    }

    public static long copyLarge(java.io.Reader p5, java.io.Writer p6)
    {
        char[] v2 = new char[4096];
        long v0_1 = 0;
        while(true) {
            int v4 = p5.read(v2);
            if (-1 == v4) {
                break;
            }
            p6.write(v2, 0, v4);
            v0_1 += ((long) v4);
        }
        return v0_1;
    }

    public static java.util.List readLines(java.io.InputStream p1)
    {
        return org.apache.tika.io.IOUtils.readLines(new java.io.InputStreamReader(p1));
    }

    public static java.util.List readLines(java.io.InputStream p1, String p2)
    {
        java.util.List v0_2;
        if (p2 != null) {
            v0_2 = org.apache.tika.io.IOUtils.readLines(new java.io.InputStreamReader(p1, p2));
        } else {
            v0_2 = org.apache.tika.io.IOUtils.readLines(p1);
        }
        return v0_2;
    }

    public static java.util.List readLines(java.io.Reader p3)
    {
        java.io.BufferedReader v1_1 = new java.io.BufferedReader(p3);
        java.util.ArrayList v2_1 = new java.util.ArrayList();
        String v0 = v1_1.readLine();
        while (v0 != null) {
            v2_1.add(v0);
            v0 = v1_1.readLine();
        }
        return v2_1;
    }

    public static byte[] toByteArray(java.io.InputStream p1)
    {
        byte[] v0_1 = new java.io.ByteArrayOutputStream();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toByteArray();
    }

    public static byte[] toByteArray(java.io.Reader p1)
    {
        byte[] v0_1 = new java.io.ByteArrayOutputStream();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toByteArray();
    }

    public static byte[] toByteArray(java.io.Reader p1, String p2)
    {
        byte[] v0_1 = new java.io.ByteArrayOutputStream();
        org.apache.tika.io.IOUtils.copy(p1, v0_1, p2);
        return v0_1.toByteArray();
    }

    public static byte[] toByteArray(String p1)
    {
        return p1.getBytes();
    }

    public static char[] toCharArray(java.io.InputStream p1)
    {
        char[] v0_1 = new java.io.CharArrayWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toCharArray();
    }

    public static char[] toCharArray(java.io.InputStream p1, String p2)
    {
        char[] v0_1 = new java.io.CharArrayWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1, p2);
        return v0_1.toCharArray();
    }

    public static char[] toCharArray(java.io.Reader p1)
    {
        char[] v0_1 = new java.io.CharArrayWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toCharArray();
    }

    public static java.io.InputStream toInputStream(CharSequence p1)
    {
        return org.apache.tika.io.IOUtils.toInputStream(p1.toString());
    }

    public static java.io.InputStream toInputStream(CharSequence p1, String p2)
    {
        return org.apache.tika.io.IOUtils.toInputStream(p1.toString(), p2);
    }

    public static java.io.InputStream toInputStream(String p2)
    {
        return new java.io.ByteArrayInputStream(p2.getBytes());
    }

    public static java.io.InputStream toInputStream(String p2, String p3)
    {
        byte[] v0;
        if (p3 == null) {
            v0 = p2.getBytes();
        } else {
            v0 = p2.getBytes(p3);
        }
        return new java.io.ByteArrayInputStream(v0);
    }

    public static String toString(java.io.InputStream p1)
    {
        String v0_1 = new java.io.StringWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toString();
    }

    public static String toString(java.io.InputStream p1, String p2)
    {
        String v0_1 = new java.io.StringWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1, p2);
        return v0_1.toString();
    }

    public static String toString(java.io.Reader p1)
    {
        String v0_1 = new java.io.StringWriter();
        org.apache.tika.io.IOUtils.copy(p1, v0_1);
        return v0_1.toString();
    }

    public static String toString(byte[] p1)
    {
        return new String(p1);
    }

    public static String toString(byte[] p1, String p2)
    {
        String v0_1;
        if (p2 != null) {
            v0_1 = new String(p1, p2);
        } else {
            v0_1 = new String(p1);
        }
        return v0_1;
    }

    public static void write(CharSequence p1, java.io.OutputStream p2)
    {
        if (p1 != null) {
            org.apache.tika.io.IOUtils.write(p1.toString(), p2);
        }
        return;
    }

    public static void write(CharSequence p1, java.io.OutputStream p2, String p3)
    {
        if (p1 != null) {
            org.apache.tika.io.IOUtils.write(p1.toString(), p2, p3);
        }
        return;
    }

    public static void write(CharSequence p1, java.io.Writer p2)
    {
        if (p1 != null) {
            org.apache.tika.io.IOUtils.write(p1.toString(), p2);
        }
        return;
    }

    public static void write(String p1, java.io.OutputStream p2)
    {
        if (p1 != null) {
            p2.write(p1.getBytes());
        }
        return;
    }

    public static void write(String p1, java.io.OutputStream p2, String p3)
    {
        if (p1 != null) {
            if (p3 != null) {
                p2.write(p1.getBytes(p3));
            } else {
                org.apache.tika.io.IOUtils.write(p1, p2);
            }
        }
        return;
    }

    public static void write(String p0, java.io.Writer p1)
    {
        if (p0 != null) {
            p1.write(p0);
        }
        return;
    }

    public static void write(StringBuffer p1, java.io.OutputStream p2)
    {
        if (p1 != null) {
            p2.write(p1.toString().getBytes());
        }
        return;
    }

    public static void write(StringBuffer p1, java.io.OutputStream p2, String p3)
    {
        if (p1 != null) {
            if (p3 != null) {
                p2.write(p1.toString().getBytes(p3));
            } else {
                org.apache.tika.io.IOUtils.write(p1, p2);
            }
        }
        return;
    }

    public static void write(StringBuffer p1, java.io.Writer p2)
    {
        if (p1 != null) {
            p2.write(p1.toString());
        }
        return;
    }

    public static void write(byte[] p0, java.io.OutputStream p1)
    {
        if (p0 != null) {
            p1.write(p0);
        }
        return;
    }

    public static void write(byte[] p1, java.io.Writer p2)
    {
        if (p1 != null) {
            p2.write(new String(p1));
        }
        return;
    }

    public static void write(byte[] p1, java.io.Writer p2, String p3)
    {
        if (p1 != null) {
            if (p3 != null) {
                p2.write(new String(p1, p3));
            } else {
                org.apache.tika.io.IOUtils.write(p1, p2);
            }
        }
        return;
    }

    public static void write(char[] p1, java.io.OutputStream p2)
    {
        if (p1 != null) {
            p2.write(new String(p1).getBytes());
        }
        return;
    }

    public static void write(char[] p1, java.io.OutputStream p2, String p3)
    {
        if (p1 != null) {
            if (p3 != null) {
                p2.write(new String(p1).getBytes(p3));
            } else {
                org.apache.tika.io.IOUtils.write(p1, p2);
            }
        }
        return;
    }

    public static void write(char[] p0, java.io.Writer p1)
    {
        if (p0 != null) {
            p1.write(p0);
        }
        return;
    }
}
package org.apache.tika.io;
public abstract class ProxyInputStream extends java.io.FilterInputStream {

    public ProxyInputStream(java.io.InputStream p1)
    {
        super(p1);
        return;
    }

    protected void afterRead(int p1)
    {
        return;
    }

    public int available()
    {
        try {
            int v0_0 = super.available();
        } catch (int v0_1) {
            this.handleIOException(v0_1);
            v0_0 = 0;
        }
        return v0_0;
    }

    protected void beforeRead(int p1)
    {
        return;
    }

    public void close()
    {
        try {
            this.in.close();
        } catch (java.io.IOException v0_1) {
            this.handleIOException(v0_1);
        }
        return;
    }

    protected void handleIOException(java.io.IOException p1)
    {
        throw p1;
    }

    public declared_synchronized void mark(int p2)
    {
        try {
            this.in.mark(p2);
            return;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }

    public boolean markSupported()
    {
        return this.in.markSupported();
    }

    public int read()
    {
        int v2 = 1;
        try {
            this.beforeRead(1);
            int v0_1 = this.in.read();
        } catch (int v0_0) {
            this.handleIOException(v0_0);
            v0_1 = -1;
            return v0_1;
        }
        if (v0_1 == -1) {
            v2 = -1;
        }
        this.afterRead(v2);
        return v0_1;
    }

    public int read(byte[] p2)
    {
        try {
            this.beforeRead(p2.length);
            int v0_2 = this.in.read(p2);
            this.afterRead(v0_2);
        } catch (int v0_3) {
            this.handleIOException(v0_3);
            v0_2 = -1;
        }
        return v0_2;
    }

    public int read(byte[] p2, int p3, int p4)
    {
        try {
            this.beforeRead(p4);
            int v0_1 = this.in.read(p2, p3, p4);
            this.afterRead(v0_1);
        } catch (int v0_2) {
            this.handleIOException(v0_2);
            v0_1 = -1;
        }
        return v0_1;
    }

    public declared_synchronized void reset()
    {
        try {
            this.in.reset();
        } catch (java.io.IOException v0_2) {
            throw v0_2;
        } catch (java.io.IOException v0_1) {
            this.handleIOException(v0_1);
        }
        return;
    }

    public long skip(long p3)
    {
        try {
            long v0_1 = this.in.skip(p3);
        } catch (long v0_2) {
            this.handleIOException(v0_2);
            v0_1 = 0;
        }
        return v0_1;
    }
}
package org.apache.tika.io;
public class TaggedIOException extends org.apache.tika.io.IOExceptionWithCause {
    private final Object tag;

    public TaggedIOException(java.io.IOException p2, Object p3)
    {
        super(p2.getMessage(), p2);
        super.tag = p3;
        return;
    }

    public java.io.IOException getCause()
    {
        return ((java.io.IOException) super.getCause());
    }

    public bridge synthetic Throwable getCause()
    {
        return this.getCause();
    }

    public Object getTag()
    {
        return this.tag;
    }
}
package org.apache.tika.io;
public class TaggedInputStream extends org.apache.tika.io.ProxyInputStream {
    private final java.io.Serializable tag;

    public TaggedInputStream(java.io.InputStream p2)
    {
        super(p2);
        super.tag = java.util.UUID.randomUUID();
        return;
    }

    public static org.apache.tika.io.TaggedInputStream get(java.io.InputStream p1)
    {
        org.apache.tika.io.TaggedInputStream v1_1;
        if (!(p1 instanceof org.apache.tika.io.TaggedInputStream)) {
            v1_1 = new org.apache.tika.io.TaggedInputStream(p1);
        } else {
            v1_1 = ((org.apache.tika.io.TaggedInputStream) p1);
        }
        return v1_1;
    }

    protected void handleIOException(java.io.IOException p3)
    {
        throw new org.apache.tika.io.TaggedIOException(p3, this.tag);
    }

    public boolean isCauseOf(java.io.IOException p3)
    {
        int v0_1;
        if (!(p3 instanceof org.apache.tika.io.TaggedIOException)) {
            v0_1 = 0;
        } else {
            v0_1 = this.tag.equals(((org.apache.tika.io.TaggedIOException) p3).getTag());
        }
        return v0_1;
    }

    public void throwIfCauseOf(Exception p3)
    {
        if ((!(p3 instanceof org.apache.tika.io.TaggedIOException)) || (!this.tag.equals(((org.apache.tika.io.TaggedIOException) p3).getTag()))) {
            return;
        } else {
            throw ((org.apache.tika.io.TaggedIOException) p3).getCause();
        }
    }

    public String toString()
    {
        return new StringBuilder().append("Tika Tagged InputStream wrapping ").append(this.in).toString();
    }
}
package org.apache.tika.io;
 class TemporaryResources$1 implements java.io.Closeable {
    final synthetic org.apache.tika.io.TemporaryResources this$0;
    final synthetic java.io.File val$file;

    TemporaryResources$1(org.apache.tika.io.TemporaryResources p1, java.io.File p2)
    {
        this.this$0 = p1;
        this.val$file = p2;
        return;
    }

    public void close()
    {
        if (this.val$file.delete()) {
            return;
        } else {
            throw new java.io.IOException(new StringBuilder().append("Could not delete temporary file ").append(this.val$file.getPath()).toString());
        }
    }
}
package org.apache.tika.io;
public class TemporaryResources implements java.io.Closeable {
    private final java.util.LinkedList resources;
    private java.io.File tmp;

    public TemporaryResources()
    {
        this.resources = new java.util.LinkedList();
        this.tmp = 0;
        return;
    }

    public void addResource(java.io.Closeable p2)
    {
        this.resources.addFirst(p2);
        return;
    }

    public void close()
    {
        java.util.LinkedList v1_1 = new java.util.LinkedList();
        org.apache.tika.io.IOExceptionWithCause v2_3 = this.resources.iterator();
        while (v2_3.hasNext()) {
            try {
                ((java.io.Closeable) v2_3.next()).close();
            } catch (Throwable v0_13) {
                v1_1.add(v0_13);
            }
        }
        this.resources.clear();
        if (v1_1.isEmpty()) {
            return;
        } else {
            if (v1_1.size() != 1) {
                throw new org.apache.tika.io.IOExceptionWithCause(new StringBuilder().append("Multiple IOExceptions").append(v1_1).toString(), ((Throwable) v1_1.get(0)));
            } else {
                throw ((java.io.IOException) v1_1.get(0));
            }
        }
    }

    public java.io.File createTemporaryFile()
    {
        java.io.File v0_1 = java.io.File.createTempFile("apache-tika-", ".tmp", this.tmp);
        this.addResource(new org.apache.tika.io.TemporaryResources$1(this, v0_1));
        return v0_1;
    }

    public void dispose()
    {
        try {
            this.close();
            return;
        } catch (java.io.IOException v0) {
            throw new org.apache.tika.exception.TikaException("Failed to close temporary resources", v0);
        }
    }

    public java.io.Closeable getResource(Class p4)
    {
        java.util.Iterator v1 = this.resources.iterator();
        while (v1.hasNext()) {
            int v0_2 = ((java.io.Closeable) v1.next());
            if (p4.isAssignableFrom(v0_2.getClass())) {
            }
            return v0_2;
        }
        v0_2 = 0;
        return v0_2;
    }

    public void setTemporaryFileDirectory(java.io.File p1)
    {
        this.tmp = p1;
        return;
    }
}
package org.apache.tika.io;
 class TikaInputStream$1 extends java.io.BufferedInputStream {
    final synthetic org.apache.tika.io.TikaInputStream this$0;
    final synthetic java.io.InputStream val$oldStream;

    TikaInputStream$1(org.apache.tika.io.TikaInputStream p1, java.io.InputStream p2, java.io.InputStream p3)
    {
        this.this$0 = p1;
        this.val$oldStream = p3;
        super(p2);
        return;
    }

    public void close()
    {
        this.val$oldStream.close();
        return;
    }
}
package org.apache.tika.io;
public class TikaInputStream extends org.apache.tika.io.TaggedInputStream {
    private static final int BLOB_SIZE_THRESHOLD = 1048576;
    private java.io.File file;
    private long length;
    private long mark;
    private Object openContainer;
    private long position;
    private final org.apache.tika.io.TemporaryResources tmp;

    private TikaInputStream(java.io.File p3)
    {
        super(new java.io.BufferedInputStream(new java.io.FileInputStream(p3)));
        super.position = 0;
        super.mark = -1;
        super.file = p3;
        super.tmp = new org.apache.tika.io.TemporaryResources();
        super.length = p3.length();
        return;
    }

    private TikaInputStream(java.io.InputStream p3, org.apache.tika.io.TemporaryResources p4, long p5)
    {
        super(p3);
        super.position = 0;
        super.mark = -1;
        super.file = 0;
        super.tmp = p4;
        super.length = p5;
        return;
    }

    public static org.apache.tika.io.TikaInputStream cast(java.io.InputStream p1)
    {
        int v1_1;
        if (!(p1 instanceof org.apache.tika.io.TikaInputStream)) {
            v1_1 = 0;
        } else {
            v1_1 = ((org.apache.tika.io.TikaInputStream) p1);
        }
        return v1_1;
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.File p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.metadata.Metadata());
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.File p3, org.apache.tika.metadata.Metadata p4)
    {
        p4.set("resourceName", p3.getName());
        p4.set("Content-Length", Long.toString(p3.length()));
        return new org.apache.tika.io.TikaInputStream(p3);
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.InputStream p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.io.TemporaryResources());
    }

    public static org.apache.tika.io.TikaInputStream get(java.io.InputStream p3, org.apache.tika.io.TemporaryResources p4)
    {
        if (p3 != null) {
            java.io.BufferedInputStream v3_1;
            if (!(p3 instanceof org.apache.tika.io.TikaInputStream)) {
                if ((!(p3 instanceof java.io.BufferedInputStream)) && (!(p3 instanceof java.io.ByteArrayInputStream))) {
                    p3 = new java.io.BufferedInputStream(p3);
                }
                v3_1 = new org.apache.tika.io.TikaInputStream(p3, p4, -1);
            } else {
                v3_1 = ((org.apache.tika.io.TikaInputStream) p3);
            }
            return v3_1;
        } else {
            throw new NullPointerException("The Stream must not be null");
        }
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URI p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.metadata.Metadata());
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URI p2, org.apache.tika.metadata.Metadata p3)
    {
        org.apache.tika.io.TikaInputStream v0_2;
        if (!"file".equalsIgnoreCase(p2.getScheme())) {
            v0_2 = org.apache.tika.io.TikaInputStream.get(p2.toURL(), p3);
        } else {
            org.apache.tika.io.TikaInputStream v0_5 = new java.io.File(p2);
            if (!v0_5.isFile()) {
            } else {
                v0_2 = org.apache.tika.io.TikaInputStream.get(v0_5, p3);
            }
        }
        return v0_2;
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URL p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.metadata.Metadata());
    }

    public static org.apache.tika.io.TikaInputStream get(java.net.URL p6, org.apache.tika.metadata.Metadata p7)
    {
        org.apache.tika.io.TikaInputStream v0_8;
        if (!"file".equalsIgnoreCase(p6.getProtocol())) {
            org.apache.tika.io.TemporaryResources v1_1 = p6.openConnection();
            org.apache.tika.io.TikaInputStream v0_1 = p6.getPath();
            int v2_1 = v0_1.lastIndexOf(47);
            if ((v2_1 + 1) < v0_1.length()) {
                p7.set("resourceName", v0_1.substring((v2_1 + 1)));
            }
            org.apache.tika.io.TikaInputStream v0_3 = v1_1.getContentType();
            if (v0_3 != null) {
                p7.set("Content-Type", v0_3);
            }
            org.apache.tika.io.TikaInputStream v0_4 = v1_1.getContentEncoding();
            if (v0_4 != null) {
                p7.set("Content-Encoding", v0_4);
            }
            int v2_5 = v1_1.getContentLength();
            if (v2_5 >= 0) {
                p7.set("Content-Length", Integer.toString(v2_5));
            }
            v0_8 = new org.apache.tika.io.TikaInputStream(new java.io.BufferedInputStream(v1_1.getInputStream()), new org.apache.tika.io.TemporaryResources(), ((long) v2_5));
        } else {
            try {
                org.apache.tika.io.TikaInputStream v0_10 = new java.io.File(p6.toURI());
            } catch (org.apache.tika.io.TikaInputStream v0) {
            }
            if (!v0_10.isFile()) {
            } else {
                v0_8 = org.apache.tika.io.TikaInputStream.get(v0_10, p7);
            }
        }
        return v0_8;
    }

    public static org.apache.tika.io.TikaInputStream get(java.sql.Blob p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.metadata.Metadata());
    }

    public static org.apache.tika.io.TikaInputStream get(java.sql.Blob p5, org.apache.tika.metadata.Metadata p6)
    {
        try {
            org.apache.tika.io.TikaInputStream v0_3 = p5.length();
            p6.set("Content-Length", Long.toString(v0_3));
            long v1 = v0_3;
        } catch (java.sql.SQLException v2) {
            v1 = v0_3;
        }
        if ((0 > v1) || (v1 > 1048576)) {
            org.apache.tika.io.TikaInputStream v0_4 = new org.apache.tika.io.TikaInputStream(new java.io.BufferedInputStream(p5.getBinaryStream()), new org.apache.tika.io.TemporaryResources(), v1);
        } else {
            v0_4 = org.apache.tika.io.TikaInputStream.get(p5.getBytes(1, ((int) v1)), p6);
        }
        return v0_4;
    }

    public static org.apache.tika.io.TikaInputStream get(byte[] p1)
    {
        return org.apache.tika.io.TikaInputStream.get(p1, new org.apache.tika.metadata.Metadata());
    }

    public static org.apache.tika.io.TikaInputStream get(byte[] p5, org.apache.tika.metadata.Metadata p6)
    {
        p6.set("Content-Length", Integer.toString(p5.length));
        return new org.apache.tika.io.TikaInputStream(new java.io.ByteArrayInputStream(p5), new org.apache.tika.io.TemporaryResources(), ((long) p5.length));
    }

    public static boolean isTikaInputStream(java.io.InputStream p1)
    {
        return (p1 instanceof org.apache.tika.io.TikaInputStream);
    }

    protected void afterRead(int p5)
    {
        if (p5 != -1) {
            this.position = (this.position + ((long) p5));
        }
        return;
    }

    public void close()
    {
        this.file = 0;
        this.mark = -1;
        this.tmp.addResource(this.in);
        this.tmp.close();
        return;
    }

    public java.io.File getFile()
    {
        if (this.file == null) {
            if (this.position <= 0) {
                this.file = this.tmp.createTemporaryFile();
                java.io.InputStream v1_1 = new java.io.FileOutputStream(this.file);
                try {
                    org.apache.tika.io.IOUtils.copy(this.in, v1_1);
                    v1_1.close();
                    Throwable v0_4 = new java.io.FileInputStream(this.file);
                    this.tmp.addResource(v0_4);
                    java.io.InputStream v1_4 = this.in;
                    this.in = new org.apache.tika.io.TikaInputStream$1(this, v0_4, v1_4);
                    this.length = this.file.length();
                } catch (Throwable v0_8) {
                    v1_4.close();
                    throw v0_8;
                }
            } else {
                throw new java.io.IOException("Stream is already being read");
            }
        }
        return this.file;
    }

    public java.nio.channels.FileChannel getFileChannel()
    {
        java.nio.channels.FileChannel v0_1 = new java.io.FileInputStream(this.getFile());
        this.tmp.addResource(v0_1);
        java.nio.channels.FileChannel v0_2 = v0_1.getChannel();
        this.tmp.addResource(v0_2);
        return v0_2;
    }

    public long getLength()
    {
        if (this.length == -1) {
            this.length = this.getFile().length();
        }
        return this.length;
    }

    public Object getOpenContainer()
    {
        return this.openContainer;
    }

    public long getPosition()
    {
        return this.position;
    }

    public boolean hasFile()
    {
        int v0_1;
        if (this.file == null) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean hasLength()
    {
        int v0_2;
        if (this.length == -1) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public void mark(int p3)
    {
        super.mark(p3);
        this.mark = this.position;
        return;
    }

    public boolean markSupported()
    {
        return 1;
    }

    public int peek(byte[] p4)
    {
        int v2 = 0;
        this.mark(p4.length);
        int v0_1 = this.read(p4);
        while (v0_1 != -1) {
            v2 += v0_1;
            if (v2 >= p4.length) {
                v0_1 = -1;
            } else {
                v0_1 = this.read(p4, v2, (p4.length - v2));
            }
        }
        this.reset();
        return v2;
    }

    public void reset()
    {
        super.reset();
        this.position = this.mark;
        this.mark = -1;
        return;
    }

    public void setOpenContainer(Object p2)
    {
        this.openContainer = p2;
        if ((p2 instanceof java.io.Closeable)) {
            this.tmp.addResource(((java.io.Closeable) p2));
        }
        return;
    }

    public long skip(long p5)
    {
        long v0 = super.skip(p5);
        this.position = (this.position + v0);
        return v0;
    }

    public String toString()
    {
        String v0_2;
        if (!this.hasFile()) {
            v0_2 = new StringBuilder().append("TikaInputStream of ").append(this.in.toString()).toString();
        } else {
            v0_2 = new StringBuilder().append("TikaInputStream of ").append(this.file.toString()).toString();
        }
        if (this.openContainer != null) {
            v0_2 = new StringBuilder().append(v0_2).append(" (in ").append(this.openContainer).append(")").toString();
        }
        return v0_2;
    }
}
package org.apache.tika.metadata;
public interface DublinCore {
    public static final String CONTRIBUTOR = "contributor";
    public static final String COVERAGE = "coverage";
    public static final String CREATOR = "creator";
    public static final org.apache.tika.metadata.Property DATE = None;
    public static final String DESCRIPTION = "description";
    public static final String FORMAT = "format";
    public static final String IDENTIFIER = "identifier";
    public static final String LANGUAGE = "language";
    public static final String MODIFIED = "modified";
    public static final String PUBLISHER = "publisher";
    public static final String RELATION = "relation";
    public static final String RIGHTS = "rights";
    public static final String SOURCE = "source";
    public static final String SUBJECT = "subject";
    public static final String TITLE = "title";
    public static final String TYPE = "type";

    static DublinCore()
    {
        org.apache.tika.metadata.DublinCore.DATE = org.apache.tika.metadata.Property.internalDate("date");
        return;
    }
}
package org.apache.tika.metadata;
public interface HttpHeaders {
    public static final String CONTENT_DISPOSITION = "Content-Disposition";
    public static final String CONTENT_ENCODING = "Content-Encoding";
    public static final String CONTENT_LANGUAGE = "Content-Language";
    public static final String CONTENT_LENGTH = "Content-Length";
    public static final String CONTENT_LOCATION = "Content-Location";
    public static final String CONTENT_MD5 = "Content-MD5";
    public static final String CONTENT_TYPE = "Content-Type";
    public static final org.apache.tika.metadata.Property LAST_MODIFIED = None;
    public static final String LOCATION = "Location";

    static HttpHeaders()
    {
        org.apache.tika.metadata.HttpHeaders.LAST_MODIFIED = org.apache.tika.metadata.Property.internalDate("Last-Modified");
        return;
    }
}
package org.apache.tika.metadata;
public interface MSOffice {
    public static final String APPLICATION_NAME = "Application-Name";
    public static final String APPLICATION_VERSION = "Application-Version";
    public static final String AUTHOR = "Author";
    public static final String CATEGORY = "Category";
    public static final org.apache.tika.metadata.Property CHARACTER_COUNT = None;
    public static final org.apache.tika.metadata.Property CHARACTER_COUNT_WITH_SPACES = None;
    public static final String COMMENTS = "Comments";
    public static final String COMPANY = "Company";
    public static final String CONTENT_STATUS = "Content-Status";
    public static final org.apache.tika.metadata.Property CREATION_DATE = None;
    public static final String EDIT_TIME = "Edit-Time";
    public static final org.apache.tika.metadata.Property IMAGE_COUNT = None;
    public static final String KEYWORDS = "Keywords";
    public static final String LAST_AUTHOR = "Last-Author";
    public static final org.apache.tika.metadata.Property LAST_PRINTED = None;
    public static final org.apache.tika.metadata.Property LAST_SAVED = None;
    public static final org.apache.tika.metadata.Property LINE_COUNT = None;
    public static final String MANAGER = "Manager";
    public static final String NOTES = "Notes";
    public static final org.apache.tika.metadata.Property OBJECT_COUNT = None;
    public static final org.apache.tika.metadata.Property PAGE_COUNT = None;
    public static final org.apache.tika.metadata.Property PARAGRAPH_COUNT = None;
    public static final String PRESENTATION_FORMAT = "Presentation-Format";
    public static final String REVISION_NUMBER = "Revision-Number";
    public static final String SECURITY = "Security";
    public static final org.apache.tika.metadata.Property SLIDE_COUNT = None;
    public static final org.apache.tika.metadata.Property TABLE_COUNT = None;
    public static final String TEMPLATE = "Template";
    public static final String TOTAL_TIME = "Total-Time";
    public static final String USER_DEFINED_METADATA_NAME_PREFIX = "custom:";
    public static final String VERSION = "Version";
    public static final org.apache.tika.metadata.Property WORD_COUNT;

    static MSOffice()
    {
        org.apache.tika.metadata.MSOffice.SLIDE_COUNT = org.apache.tika.metadata.Property.internalInteger("Slide-Count");
        org.apache.tika.metadata.MSOffice.PAGE_COUNT = org.apache.tika.metadata.Property.internalInteger("Page-Count");
        org.apache.tika.metadata.MSOffice.PARAGRAPH_COUNT = org.apache.tika.metadata.Property.internalInteger("Paragraph-Count");
        org.apache.tika.metadata.MSOffice.LINE_COUNT = org.apache.tika.metadata.Property.internalInteger("Line-Count");
        org.apache.tika.metadata.MSOffice.WORD_COUNT = org.apache.tika.metadata.Property.internalInteger("Word-Count");
        org.apache.tika.metadata.MSOffice.CHARACTER_COUNT = org.apache.tika.metadata.Property.internalInteger("Character Count");
        org.apache.tika.metadata.MSOffice.CHARACTER_COUNT_WITH_SPACES = org.apache.tika.metadata.Property.internalInteger("Character-Count-With-Spaces");
        org.apache.tika.metadata.MSOffice.TABLE_COUNT = org.apache.tika.metadata.Property.internalInteger("Table-Count");
        org.apache.tika.metadata.MSOffice.IMAGE_COUNT = org.apache.tika.metadata.Property.internalInteger("Image-Count");
        org.apache.tika.metadata.MSOffice.OBJECT_COUNT = org.apache.tika.metadata.Property.internalInteger("Object-Count");
        org.apache.tika.metadata.MSOffice.CREATION_DATE = org.apache.tika.metadata.Property.internalDate("Creation-Date");
        org.apache.tika.metadata.MSOffice.LAST_SAVED = org.apache.tika.metadata.Property.internalDate("Last-Save-Date");
        org.apache.tika.metadata.MSOffice.LAST_PRINTED = org.apache.tika.metadata.Property.internalDate("Last-Printed");
        return;
    }
}
package org.apache.tika.metadata;
public interface Message {
    public static final String MESSAGE_BCC = "Message-Bcc";
    public static final String MESSAGE_CC = "Message-Cc";
    public static final String MESSAGE_FROM = "Message-From";
    public static final String MESSAGE_RECIPIENT_ADDRESS = "Message-Recipient-Address";
    public static final String MESSAGE_TO = "Message-To";
}
package org.apache.tika.metadata;
public interface TIFF {
    public static final org.apache.tika.metadata.Property BITS_PER_SAMPLE;
    public static final org.apache.tika.metadata.Property EQUIPMENT_MAKE;
    public static final org.apache.tika.metadata.Property EQUIPMENT_MODEL;
    public static final org.apache.tika.metadata.Property EXPOSURE_TIME;
    public static final org.apache.tika.metadata.Property FLASH_FIRED;
    public static final org.apache.tika.metadata.Property FOCAL_LENGTH;
    public static final org.apache.tika.metadata.Property F_NUMBER;
    public static final org.apache.tika.metadata.Property IMAGE_LENGTH;
    public static final org.apache.tika.metadata.Property IMAGE_WIDTH;
    public static final org.apache.tika.metadata.Property ISO_SPEED_RATINGS;
    public static final org.apache.tika.metadata.Property ORIENTATION;
    public static final org.apache.tika.metadata.Property ORIGINAL_DATE;
    public static final org.apache.tika.metadata.Property RESOLUTION_HORIZONTAL;
    public static final org.apache.tika.metadata.Property RESOLUTION_UNIT;
    public static final org.apache.tika.metadata.Property RESOLUTION_VERTICAL;
    public static final org.apache.tika.metadata.Property SAMPLES_PER_PIXEL;
    public static final org.apache.tika.metadata.Property SOFTWARE;

    static TIFF()
    {
        org.apache.tika.metadata.TIFF.BITS_PER_SAMPLE = org.apache.tika.metadata.Property.internalIntegerSequence("tiff:BitsPerSample");
        org.apache.tika.metadata.TIFF.IMAGE_LENGTH = org.apache.tika.metadata.Property.internalInteger("tiff:ImageLength");
        org.apache.tika.metadata.TIFF.IMAGE_WIDTH = org.apache.tika.metadata.Property.internalInteger("tiff:ImageWidth");
        org.apache.tika.metadata.TIFF.SAMPLES_PER_PIXEL = org.apache.tika.metadata.Property.internalInteger("tiff:SamplesPerPixel");
        org.apache.tika.metadata.TIFF.FLASH_FIRED = org.apache.tika.metadata.Property.internalBoolean("exif:Flash");
        org.apache.tika.metadata.TIFF.EXPOSURE_TIME = org.apache.tika.metadata.Property.internalRational("exif:ExposureTime");
        org.apache.tika.metadata.TIFF.F_NUMBER = org.apache.tika.metadata.Property.internalRational("exif:FNumber");
        org.apache.tika.metadata.TIFF.FOCAL_LENGTH = org.apache.tika.metadata.Property.internalRational("exif:FocalLength");
        org.apache.tika.metadata.TIFF.ISO_SPEED_RATINGS = org.apache.tika.metadata.Property.internalIntegerSequence("exif:IsoSpeedRatings");
        org.apache.tika.metadata.TIFF.EQUIPMENT_MAKE = org.apache.tika.metadata.Property.internalText("tiff:Make");
        org.apache.tika.metadata.TIFF.EQUIPMENT_MODEL = org.apache.tika.metadata.Property.internalText("tiff:Model");
        org.apache.tika.metadata.TIFF.SOFTWARE = org.apache.tika.metadata.Property.internalText("tiff:Software");
        String[] v1_1 = new String[8];
        v1_1[0] = "1";
        v1_1[1] = "2";
        v1_1[2] = "3";
        v1_1[3] = "4";
        v1_1[4] = "5";
        v1_1[5] = "6";
        v1_1[6] = "7";
        v1_1[7] = "8";
        org.apache.tika.metadata.TIFF.ORIENTATION = org.apache.tika.metadata.Property.internalClosedChoise("tiff:Orientation", v1_1);
        org.apache.tika.metadata.TIFF.RESOLUTION_HORIZONTAL = org.apache.tika.metadata.Property.internalRational("tiff:XResolution");
        org.apache.tika.metadata.TIFF.RESOLUTION_VERTICAL = org.apache.tika.metadata.Property.internalRational("tiff:YResolution");
        String[] v1_2 = new String[2];
        v1_2[0] = "Inch";
        v1_2[1] = "cm";
        org.apache.tika.metadata.TIFF.RESOLUTION_UNIT = org.apache.tika.metadata.Property.internalClosedChoise("tiff:ResolutionUnit", v1_2);
        org.apache.tika.metadata.TIFF.ORIGINAL_DATE = org.apache.tika.metadata.Property.internalDate("exif:DateTimeOriginal");
        return;
    }
}
package org.apache.tika.metadata;
public interface TikaMetadataKeys {
    public static final String PROTECTED = "protected";
    public static final String RESOURCE_NAME_KEY = "resourceName";
}
package org.apache.tika.metadata;
public class Metadata implements org.apache.tika.metadata.HttpHeaders, org.apache.tika.metadata.DublinCore, org.apache.tika.metadata.MSOffice, org.apache.tika.metadata.TIFF, org.apache.tika.metadata.TikaMetadataKeys, java.io.Serializable {
    private static final java.text.DateFormat iso8601Format = None;
    private static final java.text.DateFormat[] iso8601InputFormats = None;
    private static final long serialVersionUID = 5623926545693153182;
    private java.util.Map metadata;

    static Metadata()
    {
        org.apache.tika.metadata.Metadata.iso8601Format = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'", "UTF");
        java.text.DateFormat[] v0_3 = new java.text.DateFormat[6];
        v0_3[0] = org.apache.tika.metadata.Metadata.iso8601Format;
        v0_3[1] = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\'T\'HH:mm:ssZ", 0);
        v0_3[2] = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\'T\'HH:mm:ss", 0);
        v0_3[3] = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\' \'HH:mm:ss\'Z\'", "UTF");
        v0_3[4] = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\' \'HH:mm:ssZ", 0);
        v0_3[5] = org.apache.tika.metadata.Metadata.createDateFormat("yyyy-MM-dd\' \'HH:mm:ss", 0);
        org.apache.tika.metadata.Metadata.iso8601InputFormats = v0_3;
        return;
    }

    public Metadata()
    {
        this.metadata = 0;
        this.metadata = new java.util.HashMap();
        return;
    }

    private String[] _getValues(String p2)
    {
        String[] v0_2 = ((String[]) this.metadata.get(p2));
        if (v0_2 == null) {
            v0_2 = new String[0];
        }
        return v0_2;
    }

    private static java.text.DateFormat createDateFormat(String p3, String p4)
    {
        java.text.SimpleDateFormat v0_1 = new java.text.SimpleDateFormat(p3, new java.text.DateFormatSymbols(java.util.Locale.US));
        if (p4 != null) {
            v0_1.setTimeZone(java.util.TimeZone.getTimeZone(p4));
        }
        return v0_1;
    }

    private static declared_synchronized String formatDate(java.util.Date p2)
    {
        try {
            return org.apache.tika.metadata.Metadata.iso8601Format.format(p2);
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    private static declared_synchronized java.util.Date parseDate(String p6)
    {
        int v0_0 = 0;
        try {
            StringBuilder v2_2 = p6.length();
        } catch (int v0_2) {
            throw v0_2;
        }
        if ((p6.charAt((v2_2 - 3)) == 58) && ((p6.charAt((v2_2 - 6)) == 43) || (p6.charAt((v2_2 - 6)) == 45))) {
            p6 = new StringBuilder().append(p6.substring(0, (v2_2 - 3))).append(p6.substring((v2_2 - 2))).toString();
        }
        StringBuilder v2_4 = org.apache.tika.metadata.Metadata.iso8601InputFormats;
        StringBuilder v3_6 = v2_4.length;
        while (v0_0 < v3_6) {
            try {
                int v0_1 = v2_4[v0_0].parse(p6);
            } catch (java.text.ParseException v4) {
                v0_0 = (v0_1 + 1);
            }
            return v0_1;
        }
        v0_1 = 0;
        return v0_1;
    }

    public void add(String p5, String p6)
    {
        java.util.Map v0_5 = ((String[]) this.metadata.get(p5));
        if (v0_5 != null) {
            String[] v1_2 = new String[(v0_5.length + 1)];
            System.arraycopy(v0_5, 0, v1_2, 0, v0_5.length);
            v1_2[(v1_2.length - 1)] = p6;
            this.metadata.put(p5, v1_2);
        } else {
            this.set(p5, p6);
        }
        return;
    }

    public boolean equals(Object p9)
    {
        int v1 = 0;
        try {
            if ((p9 != null) && (((org.apache.tika.metadata.Metadata) p9).size() == this.size())) {
                String[] v3 = this.names();
                int v0_0 = 0;
                while (v0_0 < v3.length) {
                    String[] v4 = ((org.apache.tika.metadata.Metadata) p9)._getValues(v3[v0_0]);
                    String[] v5 = this._getValues(v3[v0_0]);
                    if (v4.length == v5.length) {
                        int v2_4 = 0;
                        while (v2_4 < v4.length) {
                            if (v4[v2_4].equals(v5[v2_4])) {
                                v2_4++;
                            }
                        }
                        v0_0++;
                    }
                }
                v1 = 1;
            }
        } catch (int v0) {
        }
        return v1;
    }

    public String get(String p3)
    {
        int v0_3;
        int v0_2 = ((String[]) this.metadata.get(p3));
        if (v0_2 != 0) {
            v0_3 = v0_2[0];
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    public String get(org.apache.tika.metadata.Property p2)
    {
        return this.get(p2.getName());
    }

    public java.util.Date getDate(org.apache.tika.metadata.Property p4)
    {
        java.util.Date v0 = 0;
        if ((p4.getPropertyType() == org.apache.tika.metadata.Property$PropertyType.SIMPLE) && (p4.getValueType() == org.apache.tika.metadata.Property$ValueType.DATE)) {
            String v1_0 = this.get(p4);
            if (v1_0 != null) {
                v0 = org.apache.tika.metadata.Metadata.parseDate(v1_0);
            }
        }
        return v0;
    }

    public Integer getInt(org.apache.tika.metadata.Property p4)
    {
        Integer v0 = 0;
        if ((p4.getPropertyType() == org.apache.tika.metadata.Property$PropertyType.SIMPLE) && (p4.getValueType() == org.apache.tika.metadata.Property$ValueType.INTEGER)) {
            NumberFormatException v1_0 = this.get(p4);
            if (v1_0 != null) {
                try {
                    v0 = Integer.valueOf(v1_0);
                } catch (NumberFormatException v1) {
                }
            }
        }
        return v0;
    }

    public String[] getValues(String p2)
    {
        return this._getValues(p2);
    }

    public boolean isMultiValued(String p3)
    {
        if ((this.metadata.get(p3) == null) || (((String[]) this.metadata.get(p3)).length <= 1)) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public String[] names()
    {
        String[] v1_3 = new String[this.metadata.keySet().size()];
        return ((String[]) this.metadata.keySet().toArray(v1_3));
    }

    public void remove(String p2)
    {
        this.metadata.remove(p2);
        return;
    }

    public void set(String p4, String p5)
    {
        java.util.Map v0 = this.metadata;
        String[] v1_1 = new String[1];
        v1_1[0] = p5;
        v0.put(p4, v1_1);
        return;
    }

    public void set(org.apache.tika.metadata.Property p4, double p5)
    {
        if (p4.getPropertyType() == org.apache.tika.metadata.Property$PropertyType.SIMPLE) {
            if ((p4.getValueType() == org.apache.tika.metadata.Property$ValueType.REAL) || (p4.getValueType() == org.apache.tika.metadata.Property$ValueType.RATIONAL)) {
                this.set(p4.getName(), Double.toString(p5));
                return;
            } else {
                throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$ValueType.REAL, p4.getValueType());
            }
        } else {
            throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$PropertyType.SIMPLE, p4.getPropertyType());
        }
    }

    public void set(org.apache.tika.metadata.Property p4, int p5)
    {
        if (p4.getPropertyType() == org.apache.tika.metadata.Property$PropertyType.SIMPLE) {
            if (p4.getValueType() == org.apache.tika.metadata.Property$ValueType.INTEGER) {
                this.set(p4.getName(), Integer.toString(p5));
                return;
            } else {
                throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$ValueType.INTEGER, p4.getValueType());
            }
        } else {
            throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$PropertyType.SIMPLE, p4.getPropertyType());
        }
    }

    public void set(org.apache.tika.metadata.Property p2, String p3)
    {
        this.set(p2.getName(), p3);
        return;
    }

    public void set(org.apache.tika.metadata.Property p4, java.util.Date p5)
    {
        if (p4.getPropertyType() == org.apache.tika.metadata.Property$PropertyType.SIMPLE) {
            if (p4.getValueType() == org.apache.tika.metadata.Property$ValueType.DATE) {
                this.set(p4.getName(), org.apache.tika.metadata.Metadata.formatDate(p5));
                return;
            } else {
                throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$ValueType.DATE, p4.getValueType());
            }
        } else {
            throw new org.apache.tika.metadata.PropertyTypeException(org.apache.tika.metadata.Property$PropertyType.SIMPLE, p4.getPropertyType());
        }
    }

    public void setAll(java.util.Properties p7)
    {
        java.util.Enumeration v1 = p7.propertyNames();
        while (v1.hasMoreElements()) {
            String v0_2 = ((String) v1.nextElement());
            java.util.Map v2 = this.metadata;
            String[] v3_1 = new String[1];
            v3_1[0] = p7.getProperty(v0_2);
            v2.put(v0_2, v3_1);
        }
        return;
    }

    public int size()
    {
        return this.metadata.size();
    }

    public String toString()
    {
        StringBuffer v3_1 = new StringBuffer();
        String[] v4 = this.names();
        int v0_0 = 0;
        while (v0_0 < v4.length) {
            String[] v5 = this._getValues(v4[v0_0]);
            int v2_1 = 0;
            while (v2_1 < v5.length) {
                v3_1.append(v4[v0_0]).append("=").append(v5[v2_1]).append(" ");
                v2_1++;
            }
            v0_0++;
        }
        return v3_1.toString();
    }
}
package org.apache.tika.metadata;
public final enum class Property$PropertyType extends java.lang.Enum {
    private static final synthetic org.apache.tika.metadata.Property$PropertyType[] $VALUES;
    public static final enum org.apache.tika.metadata.Property$PropertyType ALT;
    public static final enum org.apache.tika.metadata.Property$PropertyType BAG;
    public static final enum org.apache.tika.metadata.Property$PropertyType SEQ;
    public static final enum org.apache.tika.metadata.Property$PropertyType SIMPLE;
    public static final enum org.apache.tika.metadata.Property$PropertyType STRUCTURE;

    static Property$PropertyType()
    {
        org.apache.tika.metadata.Property$PropertyType.SIMPLE = new org.apache.tika.metadata.Property$PropertyType("SIMPLE", 0);
        org.apache.tika.metadata.Property$PropertyType.STRUCTURE = new org.apache.tika.metadata.Property$PropertyType("STRUCTURE", 1);
        org.apache.tika.metadata.Property$PropertyType.BAG = new org.apache.tika.metadata.Property$PropertyType("BAG", 2);
        org.apache.tika.metadata.Property$PropertyType.SEQ = new org.apache.tika.metadata.Property$PropertyType("SEQ", 3);
        org.apache.tika.metadata.Property$PropertyType.ALT = new org.apache.tika.metadata.Property$PropertyType("ALT", 4);
        org.apache.tika.metadata.Property$PropertyType[] v0_8 = new org.apache.tika.metadata.Property$PropertyType[5];
        v0_8[0] = org.apache.tika.metadata.Property$PropertyType.SIMPLE;
        v0_8[1] = org.apache.tika.metadata.Property$PropertyType.STRUCTURE;
        v0_8[2] = org.apache.tika.metadata.Property$PropertyType.BAG;
        v0_8[3] = org.apache.tika.metadata.Property$PropertyType.SEQ;
        v0_8[4] = org.apache.tika.metadata.Property$PropertyType.ALT;
        org.apache.tika.metadata.Property$PropertyType.$VALUES = v0_8;
        return;
    }

    private Property$PropertyType(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    public static org.apache.tika.metadata.Property$PropertyType valueOf(String p1)
    {
        return ((org.apache.tika.metadata.Property$PropertyType) Enum.valueOf(org.apache.tika.metadata.Property$PropertyType, p1));
    }

    public static org.apache.tika.metadata.Property$PropertyType[] values()
    {
        return ((org.apache.tika.metadata.Property$PropertyType[]) org.apache.tika.metadata.Property$PropertyType.$VALUES.clone());
    }
}
package org.apache.tika.metadata;
public final enum class Property$ValueType extends java.lang.Enum {
    private static final synthetic org.apache.tika.metadata.Property$ValueType[] $VALUES;
    public static final enum org.apache.tika.metadata.Property$ValueType BOOLEAN;
    public static final enum org.apache.tika.metadata.Property$ValueType CLOSED_CHOICE;
    public static final enum org.apache.tika.metadata.Property$ValueType DATE;
    public static final enum org.apache.tika.metadata.Property$ValueType INTEGER;
    public static final enum org.apache.tika.metadata.Property$ValueType LOCALE;
    public static final enum org.apache.tika.metadata.Property$ValueType MIME_TYPE;
    public static final enum org.apache.tika.metadata.Property$ValueType OPEN_CHOICE;
    public static final enum org.apache.tika.metadata.Property$ValueType PROPER_NAME;
    public static final enum org.apache.tika.metadata.Property$ValueType RATIONAL;
    public static final enum org.apache.tika.metadata.Property$ValueType REAL;
    public static final enum org.apache.tika.metadata.Property$ValueType TEXT;
    public static final enum org.apache.tika.metadata.Property$ValueType URI;
    public static final enum org.apache.tika.metadata.Property$ValueType URL;
    public static final enum org.apache.tika.metadata.Property$ValueType XPATH;

    static Property$ValueType()
    {
        org.apache.tika.metadata.Property$ValueType.BOOLEAN = new org.apache.tika.metadata.Property$ValueType("BOOLEAN", 0);
        org.apache.tika.metadata.Property$ValueType.OPEN_CHOICE = new org.apache.tika.metadata.Property$ValueType("OPEN_CHOICE", 1);
        org.apache.tika.metadata.Property$ValueType.CLOSED_CHOICE = new org.apache.tika.metadata.Property$ValueType("CLOSED_CHOICE", 2);
        org.apache.tika.metadata.Property$ValueType.DATE = new org.apache.tika.metadata.Property$ValueType("DATE", 3);
        org.apache.tika.metadata.Property$ValueType.INTEGER = new org.apache.tika.metadata.Property$ValueType("INTEGER", 4);
        org.apache.tika.metadata.Property$ValueType.LOCALE = new org.apache.tika.metadata.Property$ValueType("LOCALE", 5);
        org.apache.tika.metadata.Property$ValueType.MIME_TYPE = new org.apache.tika.metadata.Property$ValueType("MIME_TYPE", 6);
        org.apache.tika.metadata.Property$ValueType.PROPER_NAME = new org.apache.tika.metadata.Property$ValueType("PROPER_NAME", 7);
        org.apache.tika.metadata.Property$ValueType.RATIONAL = new org.apache.tika.metadata.Property$ValueType("RATIONAL", 8);
        org.apache.tika.metadata.Property$ValueType.REAL = new org.apache.tika.metadata.Property$ValueType("REAL", 9);
        org.apache.tika.metadata.Property$ValueType.TEXT = new org.apache.tika.metadata.Property$ValueType("TEXT", 10);
        org.apache.tika.metadata.Property$ValueType.URI = new org.apache.tika.metadata.Property$ValueType("URI", 11);
        org.apache.tika.metadata.Property$ValueType.URL = new org.apache.tika.metadata.Property$ValueType("URL", 12);
        org.apache.tika.metadata.Property$ValueType.XPATH = new org.apache.tika.metadata.Property$ValueType("XPATH", 13);
        org.apache.tika.metadata.Property$ValueType[] v0_28 = new org.apache.tika.metadata.Property$ValueType[14];
        v0_28[0] = org.apache.tika.metadata.Property$ValueType.BOOLEAN;
        v0_28[1] = org.apache.tika.metadata.Property$ValueType.OPEN_CHOICE;
        v0_28[2] = org.apache.tika.metadata.Property$ValueType.CLOSED_CHOICE;
        v0_28[3] = org.apache.tika.metadata.Property$ValueType.DATE;
        v0_28[4] = org.apache.tika.metadata.Property$ValueType.INTEGER;
        v0_28[5] = org.apache.tika.metadata.Property$ValueType.LOCALE;
        v0_28[6] = org.apache.tika.metadata.Property$ValueType.MIME_TYPE;
        v0_28[7] = org.apache.tika.metadata.Property$ValueType.PROPER_NAME;
        v0_28[8] = org.apache.tika.metadata.Property$ValueType.RATIONAL;
        v0_28[9] = org.apache.tika.metadata.Property$ValueType.REAL;
        v0_28[10] = org.apache.tika.metadata.Property$ValueType.TEXT;
        v0_28[11] = org.apache.tika.metadata.Property$ValueType.URI;
        v0_28[12] = org.apache.tika.metadata.Property$ValueType.URL;
        v0_28[13] = org.apache.tika.metadata.Property$ValueType.XPATH;
        org.apache.tika.metadata.Property$ValueType.$VALUES = v0_28;
        return;
    }

    private Property$ValueType(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    public static org.apache.tika.metadata.Property$ValueType valueOf(String p1)
    {
        return ((org.apache.tika.metadata.Property$ValueType) Enum.valueOf(org.apache.tika.metadata.Property$ValueType, p1));
    }

    public static org.apache.tika.metadata.Property$ValueType[] values()
    {
        return ((org.apache.tika.metadata.Property$ValueType[]) org.apache.tika.metadata.Property$ValueType.$VALUES.clone());
    }
}
package org.apache.tika.metadata;
public final class Property {
    private final java.util.Set choices;
    private final boolean internal;
    private final String name;
    private final org.apache.tika.metadata.Property$PropertyType propertyType;
    private final org.apache.tika.metadata.Property$ValueType valueType;

    private Property(String p7, boolean p8, org.apache.tika.metadata.Property$PropertyType p9, org.apache.tika.metadata.Property$ValueType p10)
    {
        this(p7, p8, p9, p10, 0);
        return;
    }

    private Property(String p3, boolean p4, org.apache.tika.metadata.Property$PropertyType p5, org.apache.tika.metadata.Property$ValueType p6, String[] p7)
    {
        this.name = p3;
        this.internal = p4;
        this.propertyType = p5;
        this.valueType = p6;
        if (p7 == null) {
            this.choices = 0;
        } else {
            this.choices = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(((Object[]) p7.clone()))));
        }
        return;
    }

    private Property(String p7, boolean p8, org.apache.tika.metadata.Property$ValueType p9)
    {
        this(p7, p8, org.apache.tika.metadata.Property$PropertyType.SIMPLE, p9, 0);
        return;
    }

    private Property(String p7, boolean p8, org.apache.tika.metadata.Property$ValueType p9, String[] p10)
    {
        this(p7, p8, org.apache.tika.metadata.Property$PropertyType.SIMPLE, p9, p10);
        return;
    }

    public static varargs org.apache.tika.metadata.Property externalClosedChoise(String p3, String[] p4)
    {
        return new org.apache.tika.metadata.Property(p3, 0, org.apache.tika.metadata.Property$ValueType.CLOSED_CHOICE, p4);
    }

    public static org.apache.tika.metadata.Property externalDate(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 0, org.apache.tika.metadata.Property$ValueType.DATE);
    }

    public static org.apache.tika.metadata.Property externalInteger(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 0, org.apache.tika.metadata.Property$ValueType.INTEGER);
    }

    public static org.apache.tika.metadata.Property externalText(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 0, org.apache.tika.metadata.Property$ValueType.TEXT);
    }

    public static org.apache.tika.metadata.Property internalBoolean(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.BOOLEAN);
    }

    public static varargs org.apache.tika.metadata.Property internalClosedChoise(String p3, String[] p4)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.CLOSED_CHOICE, p4);
    }

    public static org.apache.tika.metadata.Property internalDate(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.DATE);
    }

    public static org.apache.tika.metadata.Property internalInteger(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.INTEGER);
    }

    public static org.apache.tika.metadata.Property internalIntegerSequence(String p4)
    {
        return new org.apache.tika.metadata.Property(p4, 1, org.apache.tika.metadata.Property$PropertyType.SEQ, org.apache.tika.metadata.Property$ValueType.INTEGER);
    }

    public static varargs org.apache.tika.metadata.Property internalOpenChoise(String p3, String[] p4)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.OPEN_CHOICE, p4);
    }

    public static org.apache.tika.metadata.Property internalRational(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.RATIONAL);
    }

    public static org.apache.tika.metadata.Property internalReal(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.REAL);
    }

    public static org.apache.tika.metadata.Property internalText(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.TEXT);
    }

    public static org.apache.tika.metadata.Property internalURI(String p3)
    {
        return new org.apache.tika.metadata.Property(p3, 1, org.apache.tika.metadata.Property$ValueType.URI);
    }

    public java.util.Set getChoices()
    {
        return this.choices;
    }

    public String getName()
    {
        return this.name;
    }

    public org.apache.tika.metadata.Property$PropertyType getPropertyType()
    {
        return this.propertyType;
    }

    public org.apache.tika.metadata.Property$ValueType getValueType()
    {
        return this.valueType;
    }

    public boolean isExternal()
    {
        int v0_1;
        if (this.internal) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean isInternal()
    {
        return this.internal;
    }
}
package org.apache.tika.metadata;
public final class PropertyTypeException extends java.lang.IllegalArgumentException {

    public PropertyTypeException(org.apache.tika.metadata.Property$PropertyType p3, org.apache.tika.metadata.Property$PropertyType p4)
    {
        super(new StringBuilder().append("Expected a property of type ").append(p3).append(", but received ").append(p4).toString());
        return;
    }

    public PropertyTypeException(org.apache.tika.metadata.Property$ValueType p3, org.apache.tika.metadata.Property$ValueType p4)
    {
        super(new StringBuilder().append("Expected a property with a ").append(p3).append(" value, but received a ").append(p4).toString());
        return;
    }
}
package org.apache.tika.metadata;
public interface XMPDM {
    public static final org.apache.tika.metadata.Property ABS_PEAK_AUDIO_FILE_PATH;
    public static final org.apache.tika.metadata.Property ALBUM;
    public static final org.apache.tika.metadata.Property ALT_TAPE_NAME;
    public static final org.apache.tika.metadata.Property ARTIST;
    public static final org.apache.tika.metadata.Property AUDIO_CHANNEL_TYPE;
    public static final org.apache.tika.metadata.Property AUDIO_COMPRESSOR;
    public static final org.apache.tika.metadata.Property AUDIO_MOD_DATE;
    public static final org.apache.tika.metadata.Property AUDIO_SAMPLE_RATE;
    public static final org.apache.tika.metadata.Property AUDIO_SAMPLE_TYPE;
    public static final org.apache.tika.metadata.Property COMPOSER;
    public static final org.apache.tika.metadata.Property COPYRIGHT;
    public static final org.apache.tika.metadata.Property ENGINEER;
    public static final org.apache.tika.metadata.Property FILE_DATA_RATE;
    public static final org.apache.tika.metadata.Property GENRE;
    public static final org.apache.tika.metadata.Property INSTRUMENT;
    public static final org.apache.tika.metadata.Property KEY;
    public static final org.apache.tika.metadata.Property LOG_COMMENT;
    public static final org.apache.tika.metadata.Property LOOP;
    public static final org.apache.tika.metadata.Property METADATA_MOD_DATE;
    public static final org.apache.tika.metadata.Property NUMBER_OF_BEATS;
    public static final org.apache.tika.metadata.Property PULL_DOWN;
    public static final org.apache.tika.metadata.Property RELATIVE_PEAK_AUDIO_FILE_PATH;
    public static final org.apache.tika.metadata.Property RELEASE_DATE;
    public static final org.apache.tika.metadata.Property SCALE_TYPE;
    public static final org.apache.tika.metadata.Property SCENE;
    public static final org.apache.tika.metadata.Property SHOT_DATE;
    public static final org.apache.tika.metadata.Property SHOT_LOCATION;
    public static final org.apache.tika.metadata.Property SHOT_NAME;
    public static final org.apache.tika.metadata.Property SPEAKER_PLACEMENT;
    public static final org.apache.tika.metadata.Property STRETCH_MODE;
    public static final org.apache.tika.metadata.Property TAPE_NAME;
    public static final org.apache.tika.metadata.Property TEMPO;
    public static final org.apache.tika.metadata.Property TIME_SIGNATURE;
    public static final org.apache.tika.metadata.Property TRACK_NUMBER;
    public static final org.apache.tika.metadata.Property VIDEO_ALPHA_MODE;
    public static final org.apache.tika.metadata.Property VIDEO_ALPHA_UNITY_IS_TRANSPARENT;
    public static final org.apache.tika.metadata.Property VIDEO_COLOR_SPACE;
    public static final org.apache.tika.metadata.Property VIDEO_COMPRESSOR;
    public static final org.apache.tika.metadata.Property VIDEO_FIELD_ORDER;
    public static final org.apache.tika.metadata.Property VIDEO_FRAME_RATE;
    public static final org.apache.tika.metadata.Property VIDEO_MOD_DATE;
    public static final org.apache.tika.metadata.Property VIDEO_PIXEL_ASPECT_RATIO;
    public static final org.apache.tika.metadata.Property VIDEO_PIXEL_DEPTH;

    static XMPDM()
    {
        org.apache.tika.metadata.XMPDM.ABS_PEAK_AUDIO_FILE_PATH = org.apache.tika.metadata.Property.internalURI("xmpDM:absPeakAudioFilePath");
        org.apache.tika.metadata.XMPDM.ALBUM = org.apache.tika.metadata.Property.externalText("xmpDM:album");
        org.apache.tika.metadata.XMPDM.ALT_TAPE_NAME = org.apache.tika.metadata.Property.externalText("xmpDM:altTapeName");
        org.apache.tika.metadata.XMPDM.ARTIST = org.apache.tika.metadata.Property.externalText("xmpDM:artist");
        org.apache.tika.metadata.XMPDM.AUDIO_MOD_DATE = org.apache.tika.metadata.Property.internalDate("xmpDM:audioModDate");
        org.apache.tika.metadata.XMPDM.AUDIO_SAMPLE_RATE = org.apache.tika.metadata.Property.internalInteger("xmpDM:audioSampleRate");
        String[] v1_10 = new String[4];
        v1_10[0] = "8Int";
        v1_10[1] = "16Int";
        v1_10[2] = "32Int";
        v1_10[3] = "32Float";
        org.apache.tika.metadata.XMPDM.AUDIO_SAMPLE_TYPE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:audioSampleType", v1_10);
        String[] v1_13 = new String[4];
        v1_13[0] = "Mono";
        v1_13[1] = "Stereo";
        v1_13[2] = "5.1";
        v1_13[3] = "7.1";
        org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:audioChannelType", v1_13);
        org.apache.tika.metadata.XMPDM.AUDIO_COMPRESSOR = org.apache.tika.metadata.Property.internalText("xmpDM:audioCompressor");
        org.apache.tika.metadata.XMPDM.COMPOSER = org.apache.tika.metadata.Property.externalText("xmpDM:composer");
        org.apache.tika.metadata.XMPDM.COPYRIGHT = org.apache.tika.metadata.Property.externalText("xmpDM:copyright");
        org.apache.tika.metadata.XMPDM.ENGINEER = org.apache.tika.metadata.Property.externalText("xmpDM:engineer");
        org.apache.tika.metadata.XMPDM.FILE_DATA_RATE = org.apache.tika.metadata.Property.internalRational("xmpDM:fileDataRate");
        org.apache.tika.metadata.XMPDM.GENRE = org.apache.tika.metadata.Property.externalText("xmpDM:genre");
        org.apache.tika.metadata.XMPDM.INSTRUMENT = org.apache.tika.metadata.Property.externalText("xmpDM:instrument");
        String[] v1_15 = new String[12];
        v1_15[0] = "C";
        v1_15[1] = "C#";
        v1_15[2] = "D";
        v1_15[3] = "D#";
        v1_15[4] = "E";
        v1_15[5] = "F";
        v1_15[6] = "F#";
        v1_15[7] = "G";
        v1_15[8] = "G#";
        v1_15[9] = "A";
        v1_15[10] = "A#";
        v1_15[11] = "B";
        org.apache.tika.metadata.XMPDM.KEY = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:key", v1_15);
        org.apache.tika.metadata.XMPDM.LOG_COMMENT = org.apache.tika.metadata.Property.externalText("xmpDM:logComment");
        org.apache.tika.metadata.XMPDM.LOOP = org.apache.tika.metadata.Property.internalBoolean("xmpDM:loop");
        org.apache.tika.metadata.XMPDM.NUMBER_OF_BEATS = org.apache.tika.metadata.Property.internalReal("xmpDM:numberOfBeats");
        org.apache.tika.metadata.XMPDM.METADATA_MOD_DATE = org.apache.tika.metadata.Property.internalDate("xmpDM:metadataModDate");
        String[] v1_1 = new String[10];
        v1_1[0] = "WSSWW";
        v1_1[1] = "SSWWW";
        v1_1[2] = "SWWWS";
        v1_1[3] = "WWWSS";
        v1_1[4] = "WWSSW";
        v1_1[5] = "WSSWW_24p";
        v1_1[6] = "SSWWW_24p";
        v1_1[7] = "SWWWS_24p";
        v1_1[8] = "WWWSS_24p";
        v1_1[9] = "WWSSW_24p";
        org.apache.tika.metadata.XMPDM.PULL_DOWN = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:pullDown", v1_1);
        org.apache.tika.metadata.XMPDM.RELATIVE_PEAK_AUDIO_FILE_PATH = org.apache.tika.metadata.Property.internalURI("xmpDM:relativePeakAudioFilePath");
        org.apache.tika.metadata.XMPDM.RELEASE_DATE = org.apache.tika.metadata.Property.externalDate("xmpDM:releaseDate");
        String[] v1_2 = new String[4];
        v1_2[0] = "Major";
        v1_2[1] = "Minor";
        v1_2[2] = "Both";
        v1_2[3] = "Neither";
        org.apache.tika.metadata.XMPDM.SCALE_TYPE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:scaleType", v1_2);
        org.apache.tika.metadata.XMPDM.SCENE = org.apache.tika.metadata.Property.externalText("xmpDM:scene");
        org.apache.tika.metadata.XMPDM.SHOT_DATE = org.apache.tika.metadata.Property.externalDate("xmpDM:shotDate");
        org.apache.tika.metadata.XMPDM.SHOT_LOCATION = org.apache.tika.metadata.Property.externalText("xmpDM:shotLocation");
        org.apache.tika.metadata.XMPDM.SHOT_NAME = org.apache.tika.metadata.Property.externalText("xmpDM:shotName");
        org.apache.tika.metadata.XMPDM.SPEAKER_PLACEMENT = org.apache.tika.metadata.Property.externalText("xmpDM:speakerPlacement");
        String[] v1_4 = new String[5];
        v1_4[0] = "Fixed length";
        v1_4[1] = "Time-Scale";
        v1_4[2] = "Resample";
        v1_4[3] = "Beat Splice";
        v1_4[4] = "Hybrid";
        org.apache.tika.metadata.XMPDM.STRETCH_MODE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:stretchMode", v1_4);
        org.apache.tika.metadata.XMPDM.TAPE_NAME = org.apache.tika.metadata.Property.externalText("xmpDM:tapeName");
        org.apache.tika.metadata.XMPDM.TEMPO = org.apache.tika.metadata.Property.internalReal("xmpDM:tempo");
        String[] v1_6 = new String[9];
        v1_6[0] = "2/4";
        v1_6[1] = "3/4";
        v1_6[2] = "4/4";
        v1_6[3] = "5/4";
        v1_6[4] = "7/4";
        v1_6[5] = "6/8";
        v1_6[6] = "9/8";
        v1_6[7] = "12/8";
        v1_6[8] = "other";
        org.apache.tika.metadata.XMPDM.TIME_SIGNATURE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:timeSignature", v1_6);
        org.apache.tika.metadata.XMPDM.TRACK_NUMBER = org.apache.tika.metadata.Property.externalInteger("xmpDM:trackNumber");
        String[] v1_7 = new String[2];
        v1_7[0] = "straight";
        v1_7[1] = "pre-multiplied";
        org.apache.tika.metadata.XMPDM.VIDEO_ALPHA_MODE = org.apache.tika.metadata.Property.externalClosedChoise("xmpDM:videoAlphaMode", v1_7);
        org.apache.tika.metadata.XMPDM.VIDEO_ALPHA_UNITY_IS_TRANSPARENT = org.apache.tika.metadata.Property.internalBoolean("xmpDM:videoAlphaUnityIsTransparent");
        String[] v1_8 = new String[3];
        v1_8[0] = "sRGB";
        v1_8[1] = "CCIR-601";
        v1_8[2] = "CCIR-709";
        org.apache.tika.metadata.XMPDM.VIDEO_COLOR_SPACE = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:videoColorSpace", v1_8);
        org.apache.tika.metadata.XMPDM.VIDEO_COMPRESSOR = org.apache.tika.metadata.Property.internalText("xmpDM:videoCompressor");
        String[] v1_9 = new String[3];
        v1_9[0] = "Upper";
        v1_9[1] = "Lower";
        v1_9[2] = "Progressive";
        org.apache.tika.metadata.XMPDM.VIDEO_FIELD_ORDER = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:videoFieldOrder", v1_9);
        String[] v1_11 = new String[3];
        v1_11[0] = "24";
        v1_11[1] = "NTSC";
        v1_11[2] = "PAL";
        org.apache.tika.metadata.XMPDM.VIDEO_FRAME_RATE = org.apache.tika.metadata.Property.internalOpenChoise("xmpDM:videoFrameRate", v1_11);
        org.apache.tika.metadata.XMPDM.VIDEO_MOD_DATE = org.apache.tika.metadata.Property.internalDate("xmpDM:videoModDate");
        String[] v1_12 = new String[4];
        v1_12[0] = "8Int";
        v1_12[1] = "16Int";
        v1_12[2] = "32Int";
        v1_12[3] = "32Float";
        org.apache.tika.metadata.XMPDM.VIDEO_PIXEL_DEPTH = org.apache.tika.metadata.Property.internalClosedChoise("xmpDM:videoPixelDepth", v1_12);
        org.apache.tika.metadata.XMPDM.VIDEO_PIXEL_ASPECT_RATIO = org.apache.tika.metadata.Property.internalRational("xmpDM:videoPixelAspectRatio");
        return;
    }
}
package org.apache.tika.mime;
public final class MediaType implements java.lang.Comparable, java.io.Serializable {
    public static final org.apache.tika.mime.MediaType APPLICATION_XML = None;
    public static final org.apache.tika.mime.MediaType APPLICATION_ZIP = None;
    private static final java.util.regex.Pattern CONTENT_TYPE_CHARSET_FIRST_PATTERN = None;
    private static final java.util.regex.Pattern CONTENT_TYPE_PATTERN = None;
    private static final String MIME_TYPE_PATTERN_STRING = "([^\\c\\(\\)<>@,;:\\\\"/\\[\\]\\?=\\s]+)\\s*/\\s*([^\\c\\(\\)<>@,;:\\\\"/\\[\\]\\?=\\s]+)";
    private static final java.util.SortedMap NO_PARAMETERS = None;
    public static final org.apache.tika.mime.MediaType OCTET_STREAM = None;
    private static final java.util.regex.Pattern SPECIAL = None;
    private static final java.util.regex.Pattern SPECIAL_OR_WHITESPACE = None;
    public static final org.apache.tika.mime.MediaType TEXT_PLAIN = None;
    private static final String VALID_MIMETYPE_CHARS = "[^\\c\\(\\)<>@,;:\\\\"/\\[\\]\\?=\\s]";
    private static final long serialVersionUID = 14615743517520515224;
    private final java.util.SortedMap parameters;
    private final String subtype;
    private final String type;

    static MediaType()
    {
        org.apache.tika.mime.MediaType.NO_PARAMETERS = java.util.Collections.unmodifiableSortedMap(new java.util.TreeMap());
        org.apache.tika.mime.MediaType.SPECIAL = java.util.regex.Pattern.compile("[\\(\\)<>@,;:\\\\\"/\\[\\]\\?=]");
        org.apache.tika.mime.MediaType.SPECIAL_OR_WHITESPACE = java.util.regex.Pattern.compile("[\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]");
        org.apache.tika.mime.MediaType.CONTENT_TYPE_PATTERN = java.util.regex.Pattern.compile("(?is)\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*/\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*($|;.*)");
        org.apache.tika.mime.MediaType.CONTENT_TYPE_CHARSET_FIRST_PATTERN = java.util.regex.Pattern.compile("(?i)\\s*(charset\\s*=\\s*[^\\c;\\s]+)\\s*;\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)\\s*/\\s*([^\\c\\(\\)<>@,;:\\\\\"/\\[\\]\\?=\\s]+)");
        org.apache.tika.mime.MediaType.OCTET_STREAM = org.apache.tika.mime.MediaType.application("octet-stream");
        org.apache.tika.mime.MediaType.TEXT_PLAIN = org.apache.tika.mime.MediaType.text("plain");
        org.apache.tika.mime.MediaType.APPLICATION_XML = org.apache.tika.mime.MediaType.application("xml");
        org.apache.tika.mime.MediaType.APPLICATION_ZIP = org.apache.tika.mime.MediaType.application("zip");
        return;
    }

    public MediaType(String p2, String p3)
    {
        this(p2, p3, org.apache.tika.mime.MediaType.NO_PARAMETERS);
        return;
    }

    public MediaType(String p6, String p7, java.util.Map p8)
    {
        this.type = p6.trim().toLowerCase(java.util.Locale.ENGLISH);
        this.subtype = p7.trim().toLowerCase(java.util.Locale.ENGLISH);
        if (!p8.isEmpty()) {
            java.util.TreeMap v2_1 = new java.util.TreeMap();
            java.util.Iterator v3 = p8.entrySet().iterator();
            while (v3.hasNext()) {
                java.util.SortedMap v0_7 = ((java.util.Map$Entry) v3.next());
                v2_1.put(((String) v0_7.getKey()).trim().toLowerCase(java.util.Locale.ENGLISH), v0_7.getValue());
            }
            this.parameters = java.util.Collections.unmodifiableSortedMap(v2_1);
        } else {
            this.parameters = org.apache.tika.mime.MediaType.NO_PARAMETERS;
        }
        return;
    }

    public MediaType(org.apache.tika.mime.MediaType p4, java.util.Map p5)
    {
        this(p4.type, p4.subtype, org.apache.tika.mime.MediaType.union(p4.parameters, p5));
        return;
    }

    public static org.apache.tika.mime.MediaType application(String p2)
    {
        return new org.apache.tika.mime.MediaType("application", p2);
    }

    public static org.apache.tika.mime.MediaType audio(String p2)
    {
        return new org.apache.tika.mime.MediaType("audio", p2);
    }

    public static org.apache.tika.mime.MediaType image(String p2)
    {
        return new org.apache.tika.mime.MediaType("image", p2);
    }

    public static org.apache.tika.mime.MediaType parse(String p12)
    {
        int v0_0 = 0;
        if (p12 != null) {
            String v2_1;
            String v1_3;
            int v0_1;
            java.util.HashMap v4_2 = org.apache.tika.mime.MediaType.CONTENT_TYPE_PATTERN.matcher(p12);
            if (!v4_2.matches()) {
                String v1_2 = org.apache.tika.mime.MediaType.CONTENT_TYPE_CHARSET_FIRST_PATTERN.matcher(p12);
                if (!v1_2.matches()) {
                    return v0_0;
                } else {
                    v0_1 = v1_2.group(1);
                    v2_1 = v1_2.group(2);
                    v1_3 = v1_2.group(3);
                }
            } else {
                v2_1 = v4_2.group(1);
                v1_3 = v4_2.group(2);
                v0_1 = v4_2.group(3);
            }
            java.util.HashMap v4_1 = new java.util.HashMap();
            String[] v5_2 = v0_1.split(";");
            int v6 = v5_2.length;
            int v0_2 = 0;
            while (v0_2 < v6) {
                String v7_1 = v5_2[v0_2].split("=", 2);
                String v8_2 = v7_1[0].trim();
                if (v8_2.length() > 0) {
                    if (v7_1.length <= 1) {
                        v4_1.put(v8_2, "");
                    } else {
                        v4_1.put(v8_2, v7_1[1].trim());
                    }
                }
                v0_2++;
            }
            v0_0 = new org.apache.tika.mime.MediaType(v2_1, v1_3, v4_1);
        }
        return v0_0;
    }

    public static org.apache.tika.mime.MediaType text(String p2)
    {
        return new org.apache.tika.mime.MediaType("text", p2);
    }

    private static java.util.Map union(java.util.Map p1, java.util.Map p2)
    {
        if (!p1.isEmpty()) {
            if (!p2.isEmpty()) {
                java.util.HashMap v0_3 = new java.util.HashMap();
                v0_3.putAll(p1);
                v0_3.putAll(p2);
                p2 = v0_3;
            } else {
                p2 = p1;
            }
        }
        return p2;
    }

    public static org.apache.tika.mime.MediaType video(String p2)
    {
        return new org.apache.tika.mime.MediaType("video", p2);
    }

    public bridge synthetic int compareTo(Object p2)
    {
        return this.compareTo(((org.apache.tika.mime.MediaType) p2));
    }

    public int compareTo(org.apache.tika.mime.MediaType p3)
    {
        return this.toString().compareTo(p3.toString());
    }

    public boolean equals(Object p4)
    {
        int v0 = 0;
        if (((p4 instanceof org.apache.tika.mime.MediaType)) && ((this.type.equals(((org.apache.tika.mime.MediaType) p4).type)) && ((this.subtype.equals(((org.apache.tika.mime.MediaType) p4).subtype)) && (this.parameters.equals(((org.apache.tika.mime.MediaType) p4).parameters))))) {
            v0 = 1;
        }
        return v0;
    }

    public org.apache.tika.mime.MediaType getBaseType()
    {
        if (!this.parameters.isEmpty()) {
            this = new org.apache.tika.mime.MediaType(this.type, this.subtype);
        }
        return this;
    }

    public java.util.Map getParameters()
    {
        return this.parameters;
    }

    public String getSubtype()
    {
        return this.subtype;
    }

    public String getType()
    {
        return this.type;
    }

    public boolean hasParameters()
    {
        int v0_2;
        if (this.parameters.isEmpty()) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public int hashCode()
    {
        return (((((this.type.hashCode() + 527) * 31) + this.subtype.hashCode()) * 31) + this.parameters.hashCode());
    }

    public String toString()
    {
        StringBuilder v2_1 = new StringBuilder();
        v2_1.append(this.type);
        v2_1.append(47);
        v2_1.append(this.subtype);
        java.util.Iterator v3 = this.parameters.entrySet().iterator();
        while (v3.hasNext()) {
            String v0_4 = ((java.util.Map$Entry) v3.next());
            v2_1.append("; ");
            v2_1.append(((String) v0_4.getKey()));
            v2_1.append("=");
            String v0_7 = ((String) v0_4.getValue());
            if (!org.apache.tika.mime.MediaType.SPECIAL_OR_WHITESPACE.matcher(v0_7).find()) {
                v2_1.append(v0_7);
            } else {
                v2_1.append(34);
                v2_1.append(org.apache.tika.mime.MediaType.SPECIAL.matcher(v0_7).replaceAll("\\\\$0"));
                v2_1.append(34);
            }
        }
        return v2_1.toString();
    }
}
package org.apache.tika.parser;
public interface Parser implements java.io.Serializable {

    public abstract java.util.Set getSupportedTypes();

    public abstract void parse();

    public abstract void parse();
}
package org.apache.tika.parser;
public abstract class AbstractParser implements org.apache.tika.parser.Parser {
    private static final long serialVersionUID = 7186985395903074255;

    public AbstractParser()
    {
        return;
    }

    public void parse(java.io.InputStream p2, org.xml.sax.ContentHandler p3, org.apache.tika.metadata.Metadata p4)
    {
        this.parse(p2, p3, p4, new org.apache.tika.parser.ParseContext());
        return;
    }
}
package org.apache.tika.parser;
public class ParseContext implements java.io.Serializable {
    private static final long serialVersionUID = 12525307211563725082;
    private final java.util.Map context;

    public ParseContext()
    {
        this.context = new java.util.HashMap();
        return;
    }

    public Object get(Class p3)
    {
        return this.context.get(p3.getName());
    }

    public Object get(Class p2, Object p3)
    {
        Object v0 = this.get(p2);
        if (v0 != null) {
            p3 = v0;
        }
        return p3;
    }

    public javax.xml.parsers.SAXParser getSAXParser()
    {
        org.xml.sax.SAXException v0_3 = ((javax.xml.parsers.SAXParser) this.get(javax.xml.parsers.SAXParser));
        if (v0_3 == null) {
            try {
                v0_3 = this.getSAXParserFactory().newSAXParser();
            } catch (org.xml.sax.SAXException v0_1) {
                throw new org.apache.tika.exception.TikaException("Unable to configure a SAX parser", v0_1);
            } catch (org.xml.sax.SAXException v0_5) {
                throw new org.apache.tika.exception.TikaException("Unable to create a SAX parser", v0_5);
            }
        }
        return v0_3;
    }

    public javax.xml.parsers.SAXParserFactory getSAXParserFactory()
    {
        javax.xml.parsers.SAXParserFactory v0_2 = ((javax.xml.parsers.SAXParserFactory) this.get(javax.xml.parsers.SAXParserFactory));
        if (v0_2 == null) {
            v0_2 = javax.xml.parsers.SAXParserFactory.newInstance();
            v0_2.setNamespaceAware(1);
            try {
                v0_2.setFeature("http://javax.xml.XMLConstants/feature/secure-processing", 1);
            } catch (org.xml.sax.SAXNotRecognizedException v1) {
            } catch (org.xml.sax.SAXNotRecognizedException v1) {
            } catch (org.xml.sax.SAXNotRecognizedException v1) {
            }
        }
        return v0_2;
    }

    public void set(Class p3, Object p4)
    {
        if (p4 == null) {
            this.context.remove(p3.getName());
        } else {
            this.context.put(p3.getName(), p4);
        }
        return;
    }
}
package org.apache.tika.parser.flac;
public abstract class FlacFrame {

    public FlacFrame()
    {
        return;
    }

    public abstract byte[] getData();
}
package org.apache.tika.parser.flac;
public class FlacAudioFrame extends org.apache.tika.parser.flac.FlacFrame {
    private byte[] data;
    private long position;

    public FlacAudioFrame(byte[] p1)
    {
        this.data = p1;
        return;
    }

    public byte[] getData()
    {
        return this.data;
    }
}
package org.apache.tika.parser.flac;
public abstract class FlacFile {
    protected org.apache.tika.parser.flac.FlacInfo info;
    protected java.util.List otherMetadata;
    protected org.apache.tika.parser.flac.FlacTags tags;

    public FlacFile()
    {
        return;
    }

    public static org.apache.tika.parser.flac.FlacFile open(java.io.File p2)
    {
        java.io.FileInputStream v0_1 = new java.io.FileInputStream(p2);
        org.apache.tika.parser.flac.FlacFile v1 = org.apache.tika.parser.flac.FlacFile.open(v0_1);
        v0_1.close();
        return v1;
    }

    public static org.apache.tika.parser.flac.FlacFile open(java.io.InputStream p7)
    {
        org.apache.tika.parser.flac.FlacNativeFile v0_5;
        p7.mark(4);
        org.apache.tika.parser.flac.FlacNativeFile v0_7 = new byte[4];
        org.apache.tika.parser.ogg.IOUtils.readFully(p7, v0_7);
        p7.reset();
        if ((v0_7[0] != 79) || ((v0_7[1] != 103) || ((v0_7[2] != 103) || (v0_7[3] != 83)))) {
            if ((v0_7[0] != 102) || ((v0_7[1] != 76) || ((v0_7[2] != 97) || (v0_7[3] != 67)))) {
                throw new IllegalArgumentException("File type not recognised");
            } else {
                v0_5 = new org.apache.tika.parser.flac.FlacNativeFile(p7);
            }
        } else {
            v0_5 = new org.apache.tika.parser.flac.FlacOggFile(new org.apache.tika.parser.ogg.OggFile(p7));
        }
        return v0_5;
    }

    public static org.apache.tika.parser.flac.FlacFile open(org.apache.tika.parser.ogg.OggFile p1)
    {
        return new org.apache.tika.parser.flac.FlacOggFile(p1);
    }

    public abstract void close();

    public org.apache.tika.parser.flac.FlacInfo getInfo()
    {
        return this.info;
    }

    public abstract org.apache.tika.parser.flac.FlacAudioFrame getNextAudioPacket();

    public org.apache.tika.parser.flac.FlacTags getTags()
    {
        return this.tags;
    }

    public abstract void skipToGranule();
}
package org.apache.tika.parser.ogg;
public abstract class HighLevelOggStreamPacket {
    private byte[] data;
    private org.apache.tika.parser.ogg.OggPacket oggPacket;

    protected HighLevelOggStreamPacket()
    {
        this.oggPacket = 0;
        return;
    }

    protected HighLevelOggStreamPacket(org.apache.tika.parser.ogg.OggPacket p1)
    {
        this.oggPacket = p1;
        return;
    }

    public byte[] getData()
    {
        int v0_2;
        if (this.data == null) {
            if (this.oggPacket == null) {
                v0_2 = 0;
            } else {
                v0_2 = this.oggPacket.getData();
            }
        } else {
            v0_2 = this.data;
        }
        return v0_2;
    }

    protected org.apache.tika.parser.ogg.OggPacket getOggPacket()
    {
        return this.oggPacket;
    }

    public void setData(byte[] p1)
    {
        this.data = p1;
        return;
    }

    public org.apache.tika.parser.ogg.OggPacket write()
    {
        this.oggPacket = new org.apache.tika.parser.ogg.OggPacket(this.getData());
        return this.oggPacket;
    }
}
package org.apache.tika.parser.flac;
public class FlacFirstOggPacket extends org.apache.tika.parser.ogg.HighLevelOggStreamPacket {
    private org.apache.tika.parser.flac.FlacInfo info;
    private int majorVersion;
    private int minorVersion;
    private int numberOfHeaderBlocks;

    public FlacFirstOggPacket()
    {
        this(new org.apache.tika.parser.flac.FlacInfo());
        return;
    }

    public FlacFirstOggPacket(org.apache.tika.parser.flac.FlacInfo p3)
    {
        this.majorVersion = 1;
        this.minorVersion = 0;
        this.numberOfHeaderBlocks = 0;
        this.info = p3;
        return;
    }

    public FlacFirstOggPacket(org.apache.tika.parser.ogg.OggPacket p4)
    {
        super(p4);
        byte[] v0 = super.getData();
        super.majorVersion = org.apache.tika.parser.ogg.IOUtils.toInt(v0[5]);
        super.minorVersion = org.apache.tika.parser.ogg.IOUtils.toInt(v0[6]);
        super.numberOfHeaderBlocks = org.apache.tika.parser.ogg.IOUtils.getInt2BE(v0, 7);
        super.info = new org.apache.tika.parser.flac.FlacInfo(v0, 17);
        return;
    }

    private static boolean isFlacSpecial(org.apache.tika.parser.ogg.OggPacket p5)
    {
        int v0 = 1;
        byte v2_1 = p5.getData();
        if ((v2_1[0] != 127) || ((v2_1[1] != 70) || ((v2_1[2] != 76) || ((v2_1[3] != 65) || (v2_1[4] != 67))))) {
            v0 = 0;
        }
        return v0;
    }

    public static boolean isFlacStream(org.apache.tika.parser.ogg.OggPacket p1)
    {
        boolean v0_1;
        if (p1.isBeginningOfStream()) {
            v0_1 = org.apache.tika.parser.flac.FlacFirstOggPacket.isFlacSpecial(p1);
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    public org.apache.tika.parser.flac.FlacInfo getInfo()
    {
        return this.info;
    }

    public int getMajorVersion()
    {
        return this.majorVersion;
    }

    public int getMinorVersion()
    {
        return this.minorVersion;
    }

    public int getNumberOfHeaderBlocks()
    {
        return this.numberOfHeaderBlocks;
    }

    public void setMajorVersion(int p3)
    {
        if (p3 <= 255) {
            this.majorVersion = p3;
            return;
        } else {
            throw new IllegalArgumentException("Version numbers must be in the range 0-255");
        }
    }

    public void setMinorVersion(int p3)
    {
        if (p3 <= 255) {
            this.minorVersion = p3;
            return;
        } else {
            throw new IllegalArgumentException("Version numbers must be in the range 0-255");
        }
    }

    public void setNumberOfHeaderBlocks(int p1)
    {
        this.numberOfHeaderBlocks = p1;
        return;
    }

    public org.apache.tika.parser.ogg.OggPacket write()
    {
        java.io.IOException v0_1 = new java.io.ByteArrayOutputStream();
        try {
            v0_1.write("FLAC".getBytes("ASCII"));
            v0_1.write(this.majorVersion);
            v0_1.write(this.minorVersion);
            org.apache.tika.parser.ogg.IOUtils.writeInt2BE(v0_1, this.numberOfHeaderBlocks);
            v0_1.write("fLaC".getBytes("ASCII"));
            v0_1.write(this.info.getData());
            this.setData(v0_1.toByteArray());
            return super.write();
        } catch (java.io.IOException v0_4) {
            throw new RuntimeException(v0_4);
        }
    }
}
package org.apache.tika.parser.flac;
public abstract class FlacMetadataBlock extends org.apache.tika.parser.flac.FlacFrame {
    public static final byte APPLICATION = 0x2;
    public static final byte CUESHEET = 0x5;
    public static final byte PADDING = 0x1;
    public static final byte PICTURE = 0x6;
    public static final byte SEEKTABLE = 0x3;
    public static final byte STREAMINFO = 0x0;
    public static final byte VORBIS_COMMENT = 0x4;
    private byte type;

    protected FlacMetadataBlock(byte p1)
    {
        this.type = p1;
        return;
    }

    public static org.apache.tika.parser.flac.FlacMetadataBlock create(java.io.InputStream p4)
    {
        org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata v0_0 = p4.read();
        if (v0_0 != -1) {
            org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata v0_3;
            int v1_2 = org.apache.tika.parser.ogg.IOUtils.fromInt(v0_0);
            org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata v0_9 = new byte[3];
            org.apache.tika.parser.ogg.IOUtils.readFully(p4, v0_9);
            byte[] v2_1 = new byte[((int) org.apache.tika.parser.ogg.IOUtils.getInt3BE(v0_9))];
            org.apache.tika.parser.ogg.IOUtils.readFully(p4, v2_1);
            switch (v1_2) {
                case 0:
                    v0_3 = new org.apache.tika.parser.flac.FlacInfo(v2_1, 0);
                    break;
                case 4:
                    v0_3 = new org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata(v2_1);
                    break;
                default:
                    v0_3 = new org.apache.tika.parser.flac.FlacUnhandledMetadataBlock(v1_2, v2_1);
            }
            return v0_3;
        } else {
            throw new IllegalArgumentException();
        }
    }

    public byte[] getData()
    {
        java.io.IOException v0_1 = new java.io.ByteArrayOutputStream();
        try {
            v0_1.write(this.type);
            RuntimeException v1_5 = new byte[3];
            v0_1.write(v1_5);
            this.write(v0_1);
            java.io.IOException v0_3 = v0_1.toByteArray();
            org.apache.tika.parser.ogg.IOUtils.putInt3BE(v0_3, 1, ((long) v0_3.length));
            return v0_3;
        } catch (java.io.IOException v0_2) {
            throw new RuntimeException(v0_2);
        }
    }

    public int getType()
    {
        return (this.type & 127);
    }

    public boolean isLastMetadataBlock()
    {
        int v0_1;
        if (this.type >= 0) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    protected abstract void write();
}
package org.apache.tika.parser.flac;
public class FlacInfo extends org.apache.tika.parser.flac.FlacMetadataBlock {
    private int bitsPerSample;
    private int maximumBlockSize;
    private int maximumFrameSize;
    private int minimumBlockSize;
    private int minimumFrameSize;
    private int numChannels;
    private long numberOfSamples;
    private int sampleRate;
    private byte[] signature;

    public FlacInfo()
    {
        super(0);
        byte[] v0_2 = new byte[16];
        super.signature = v0_2;
        return;
    }

    public FlacInfo(byte[] p10, int p11)
    {
        super(0);
        int v0_16 = (p11 + 1);
        int v3_0 = (v0_16 + 1);
        super.minimumBlockSize = org.apache.tika.parser.ogg.IOUtils.getIntBE(org.apache.tika.parser.ogg.IOUtils.toInt(p10[p11]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v0_16]));
        int v0_4 = (v3_0 + 1);
        int v3_5 = (v0_4 + 1);
        super.maximumBlockSize = org.apache.tika.parser.ogg.IOUtils.getIntBE(org.apache.tika.parser.ogg.IOUtils.toInt(p10[v3_0]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v0_4]));
        int v0_8 = (v3_5 + 1);
        int v3_6 = (v0_8 + 1);
        int v4_4 = (v3_6 + 1);
        super.minimumFrameSize = ((int) org.apache.tika.parser.ogg.IOUtils.getIntBE(org.apache.tika.parser.ogg.IOUtils.toInt(p10[v3_5]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v0_8]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v3_6])));
        int v0_12 = (v4_4 + 1);
        int v3_9 = (v0_12 + 1);
        int v4_5 = (v3_9 + 1);
        super.maximumFrameSize = ((int) org.apache.tika.parser.ogg.IOUtils.getIntBE(org.apache.tika.parser.ogg.IOUtils.toInt(p10[v4_4]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v0_12]), org.apache.tika.parser.ogg.IOUtils.toInt(p10[v3_9])));
        byte[] v2_13 = new int[8];
        int v0_1 = 0;
        while (v0_1 < 8) {
            v2_13[v0_1] = org.apache.tika.parser.ogg.IOUtils.toInt(p10[(v0_1 + v4_5)]);
            v0_1++;
        }
        int v0_17 = (v4_5 + 8);
        super.sampleRate = (((v2_13[0] << 12) + (v2_13[1] << 4)) + ((v2_13[2] & 240) >> 4));
        super.numChannels = (((v2_13[2] & 14) >> 1) + 1);
        super.bitsPerSample = ((((v2_13[2] & 1) << 4) + ((v2_13[3] & 240) >> 4)) + 1);
        super.numberOfSamples = ((long) (v2_13[7] + (((((v2_13[3] & 15) << 30) + (v2_13[4] << 24)) + (v2_13[5] << 16)) + (v2_13[6] << 8))));
        byte[] v2_3 = new byte[16];
        super.signature = v2_3;
        System.arraycopy(p10, v0_17, super.signature, 0, 16);
        return;
    }

    public int getBitsPerSample()
    {
        return this.bitsPerSample;
    }

    public int getMaximumBlockSize()
    {
        return this.maximumBlockSize;
    }

    public int getMaximumFrameSize()
    {
        return this.maximumFrameSize;
    }

    public int getMinimumBlockSize()
    {
        return this.minimumBlockSize;
    }

    public int getMinimumFrameSize()
    {
        return this.minimumFrameSize;
    }

    public int getNumChannels()
    {
        return this.numChannels;
    }

    public long getNumberOfSamples()
    {
        return this.numberOfSamples;
    }

    public int getSampleRate()
    {
        return this.sampleRate;
    }

    public byte[] getSignature()
    {
        return this.signature;
    }

    public void setBitsPerSample(int p1)
    {
        this.bitsPerSample = p1;
        return;
    }

    public void setMaximumBlockSize(int p1)
    {
        this.maximumBlockSize = p1;
        return;
    }

    public void setMaximumFrameSize(int p1)
    {
        this.maximumFrameSize = p1;
        return;
    }

    public void setMinimumBlockSize(int p1)
    {
        this.minimumBlockSize = p1;
        return;
    }

    public void setMinimumFrameSize(int p1)
    {
        this.minimumFrameSize = p1;
        return;
    }

    public void setNumChannels(int p1)
    {
        this.numChannels = p1;
        return;
    }

    public void setNumberOfSamples(long p1)
    {
        this.numberOfSamples = p1;
        return;
    }

    public void setSampleRate(int p1)
    {
        this.sampleRate = p1;
        return;
    }

    public void setSignature(byte[] p1)
    {
        this.signature = p1;
        return;
    }

    protected void write(java.io.OutputStream p3)
    {
        org.apache.tika.parser.ogg.IOUtils.writeInt2BE(p3, this.minimumBlockSize);
        org.apache.tika.parser.ogg.IOUtils.writeInt2BE(p3, this.maximumBlockSize);
        org.apache.tika.parser.ogg.IOUtils.writeInt3BE(p3, ((long) this.minimumFrameSize));
        org.apache.tika.parser.ogg.IOUtils.writeInt3BE(p3, ((long) this.maximumFrameSize));
        byte[] v0_2 = new byte[8];
        p3.write(v0_2);
        p3.write(this.signature);
        return;
    }
}
package org.apache.tika.parser.flac;
public class FlacNativeFile extends org.apache.tika.parser.flac.FlacFile {
    private java.io.InputStream input;

    public FlacNativeFile(java.io.File p2)
    {
        this(new java.io.FileInputStream(p2));
        return;
    }

    public FlacNativeFile(java.io.InputStream p4)
    {
        boolean v0_2 = new byte[4];
        org.apache.tika.parser.ogg.IOUtils.readFully(p4, v0_2);
        if ((v0_2[0] != 102) || ((v0_2[1] != 76) || ((v0_2[2] != 97) || (v0_2[3] != 67)))) {
            throw new IllegalArgumentException("Not a FLAC file");
        } else {
            this.info = ((org.apache.tika.parser.flac.FlacInfo) org.apache.tika.parser.flac.FlacMetadataBlock.create(p4));
            this.otherMetadata = new java.util.ArrayList();
            do {
                org.apache.tika.parser.flac.FlacMetadataBlock v1_5 = org.apache.tika.parser.flac.FlacMetadataBlock.create(p4);
                if (!(v1_5 instanceof org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata)) {
                    this.otherMetadata.add(v1_5);
                } else {
                    this.tags = ((org.apache.tika.parser.flac.FlacTags$FlacTagsAsMetadata) v1_5).getTags();
                }
            } while(!v1_5.isLastMetadataBlock());
            return;
        }
    }

    public void close()
    {
        if (this.input == null) {
            throw new RuntimeException("Not supported");
        } else {
            this.input.close();
            this.input = 0;
            return;
        }
    }

    public org.apache.tika.parser.flac.FlacAudioFrame getNextAudioPacket()
    {
        return new org.apache.tika.parser.flac.FlacAudioFrame(0);
    }

    public void skipToGranule(long p3)
    {
        throw new RuntimeException("Not supported");
    }
}
package org.apache.tika.parser.flac;
public class FlacOggFile extends org.apache.tika.parser.flac.FlacFile {
    private org.apache.tika.parser.flac.FlacFirstOggPacket firstPacket;
    private org.apache.tika.parser.ogg.OggFile ogg;
    private org.apache.tika.parser.ogg.OggPacketReader r;
    private int sid;
    private org.apache.tika.parser.ogg.OggPacketWriter w;
    private java.util.List writtenAudio;

    public FlacOggFile(java.io.File p3)
    {
        this(new org.apache.tika.parser.ogg.OggFile(new java.io.FileInputStream(p3)));
        return;
    }

    public FlacOggFile(java.io.OutputStream p3)
    {
        this(p3, new org.apache.tika.parser.flac.FlacInfo(), new org.apache.tika.parser.flac.FlacTags());
        return;
    }

    public FlacOggFile(java.io.OutputStream p2, int p3, org.apache.tika.parser.flac.FlacInfo p4, org.apache.tika.parser.flac.FlacTags p5)
    {
        this.sid = -1;
        this.ogg = new org.apache.tika.parser.ogg.OggFile(p2);
        if (p3 <= 0) {
            this.w = this.ogg.getPacketWriter();
            this.sid = this.w.getSid();
        } else {
            this.w = this.ogg.getPacketWriter(p3);
            this.sid = p3;
        }
        this.writtenAudio = new java.util.ArrayList();
        this.firstPacket = new org.apache.tika.parser.flac.FlacFirstOggPacket(p4);
        this.info = p4;
        this.tags = p5;
        return;
    }

    public FlacOggFile(java.io.OutputStream p2, org.apache.tika.parser.flac.FlacInfo p3, org.apache.tika.parser.flac.FlacTags p4)
    {
        this(p2, -1, p3, p4);
        return;
    }

    public FlacOggFile(org.apache.tika.parser.ogg.OggFile p2)
    {
        this(p2.getPacketReader());
        this.ogg = p2;
        return;
    }

    public FlacOggFile(org.apache.tika.parser.ogg.OggPacketReader p4)
    {
        this.sid = -1;
        this.r = p4;
        do {
            boolean v0_11 = p4.getNextPacket();
            if (v0_11) {
            }
            this.firstPacket = new org.apache.tika.parser.flac.FlacFirstOggPacket(v0_11);
            this.info = this.firstPacket.getInfo();
            this.tags = new org.apache.tika.parser.flac.FlacTags(p4.getNextPacketWithSid(this.sid));
            this.otherMetadata = new java.util.ArrayList();
            do {
                boolean v0_8 = p4.getNextPacketWithSid(this.sid);
                if (!v0_8) {
                    break;
                }
                boolean v0_10 = org.apache.tika.parser.flac.FlacMetadataBlock.create(new java.io.ByteArrayInputStream(v0_8.getData()));
                this.otherMetadata.add(v0_10);
            } while(!v0_10.isLastMetadataBlock());
            return;
        } while((!v0_11.isBeginningOfStream()) || ((v0_11.getData().length <= 10) || (!org.apache.tika.parser.flac.FlacFirstOggPacket.isFlacStream(v0_11))));
        this.sid = v0_11.getSid();
    }

    public void close()
    {
        if (this.r != null) {
            this.r = 0;
            this.ogg.close();
            this.ogg = 0;
        }
        if (this.w != null) {
            this.w.bufferPacket(this.firstPacket.write(), 1);
            this.w.bufferPacket(this.tags.write(), 0);
            java.util.Iterator v1_4 = this.writtenAudio.iterator();
            while (v1_4.hasNext()) {
                this.w.bufferPacket(new org.apache.tika.parser.ogg.OggPacket(((org.apache.tika.parser.flac.FlacAudioFrame) v1_4.next()).getData()));
                if (this.w.getSizePendingFlush() > 16384) {
                    this.w.flush();
                }
            }
            this.w.close();
            this.w = 0;
            this.ogg.close();
            this.ogg = 0;
        }
        return;
    }

    public org.apache.tika.parser.flac.FlacFirstOggPacket getFirstPacket()
    {
        return this.firstPacket;
    }

    public org.apache.tika.parser.flac.FlacAudioFrame getNextAudioPacket()
    {
        int v0_1;
        byte[] v1_1 = this.r.getNextPacketWithSid(this.sid);
        if (v1_1 == null) {
            v0_1 = 0;
        } else {
            v0_1 = new org.apache.tika.parser.flac.FlacAudioFrame(v1_1.getData());
        }
        return v0_1;
    }

    public org.apache.tika.parser.ogg.OggFile getOggFile()
    {
        return this.ogg;
    }

    public int getSid()
    {
        return this.sid;
    }

    public void skipToGranule(long p3)
    {
        this.r.skipToGranulePosition(this.sid, p3);
        return;
    }

    public void writeAudioData(org.apache.tika.parser.flac.FlacAudioFrame p2)
    {
        this.writtenAudio.add(p2);
        return;
    }
}
package org.apache.tika.parser.flac;
public class FlacParser extends org.apache.tika.parser.AbstractParser {
    private static java.util.List TYPES;

    static FlacParser()
    {
        java.util.List v0_1 = new org.apache.tika.mime.MediaType[2];
        v0_1[0] = org.apache.tika.mime.MediaType.audio("x-flac");
        v0_1[1] = org.apache.tika.mime.MediaType.application("x-flac");
        org.apache.tika.parser.flac.FlacParser.TYPES = java.util.Arrays.asList(v0_1);
        return;
    }

    public FlacParser()
    {
        return;
    }

    protected void extractInfo(org.apache.tika.metadata.Metadata p3, org.apache.tika.parser.flac.FlacInfo p4)
    {
        p3.set(org.apache.tika.metadata.XMPDM.AUDIO_SAMPLE_RATE, p4.getSampleRate());
        org.apache.tika.parser.vorbis.VorbisParser.extractChannelInfo(p3, p4.getNumChannels());
        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext p3)
    {
        return new java.util.HashSet(org.apache.tika.parser.flac.FlacParser.TYPES);
    }

    public void parse(java.io.InputStream p7, org.xml.sax.ContentHandler p8, org.apache.tika.metadata.Metadata p9, org.apache.tika.parser.ParseContext p10)
    {
        p9.set("Content-Type", "audio/x-flac");
        p9.set(org.apache.tika.metadata.XMPDM.AUDIO_COMPRESSOR, "FLAC");
        org.apache.tika.parser.flac.FlacFile v1_2 = org.apache.tika.parser.flac.FlacFile.open(p7);
        org.apache.tika.sax.XHTMLContentHandler v2_1 = new org.apache.tika.sax.XHTMLContentHandler(p8, p9);
        v2_1.startDocument();
        this.extractInfo(p9, v1_2.getInfo());
        if ((v1_2 instanceof org.apache.tika.parser.flac.FlacOggFile)) {
            org.apache.tika.parser.flac.FlacTags v0_4 = ((org.apache.tika.parser.flac.FlacOggFile) v1_2);
            p9.add("version", new StringBuilder().append("Flac ").append(v0_4.getFirstPacket().getMajorVersion()).append(".").append(v0_4.getFirstPacket().getMinorVersion()).toString());
        }
        org.apache.tika.parser.vorbis.VorbisParser.extractComments(p9, v2_1, v1_2.getTags());
        v2_1.endDocument();
        return;
    }
}
package org.apache.tika.parser.flac;
public class FlacTags$FlacTagsAsMetadata extends org.apache.tika.parser.flac.FlacMetadataBlock {
    private org.apache.tika.parser.flac.FlacTags tags;

    protected FlacTags$FlacTagsAsMetadata(byte[] p5)
    {
        super(4);
        byte[] v0_2 = new byte[(p5.length + 4)];
        v0_2[0] = 4;
        System.arraycopy(p5, 0, v0_2, 4, p5.length);
        super.tags = new org.apache.tika.parser.flac.FlacTags(new org.apache.tika.parser.ogg.OggPacket(v0_2));
        return;
    }

    public byte[] getData()
    {
        return this.tags.getData();
    }

    public org.apache.tika.parser.flac.FlacTags getTags()
    {
        return this.tags;
    }

    protected void write(java.io.OutputStream p3)
    {
        throw new IllegalStateException("Must not call directly");
    }
}
package org.apache.tika.parser.vorbis;
public abstract class VorbisPacket extends org.apache.tika.parser.ogg.HighLevelOggStreamPacket {
    protected static final int HEADER_LENGTH_AUDIO = 0;
    protected static final int HEADER_LENGTH_METADATA = 7;
    public static final int TYPE_COMMENTS = 3;
    public static final int TYPE_INFO = 1;
    public static final int TYPE_SETUP = 5;

    protected VorbisPacket()
    {
        return;
    }

    protected VorbisPacket(org.apache.tika.parser.ogg.OggPacket p1)
    {
        super(p1);
        return;
    }

    public static org.apache.tika.parser.vorbis.VorbisPacket create(org.apache.tika.parser.ogg.OggPacket p2)
    {
        org.apache.tika.parser.vorbis.VorbisSetup v0_2;
        if (!org.apache.tika.parser.vorbis.VorbisPacket.isVorbisSpecial(p2)) {
            v0_2 = new org.apache.tika.parser.vorbis.VorbisAudioData(p2);
        } else {
            switch (p2.getData()[0]) {
                case 1:
                    v0_2 = new org.apache.tika.parser.vorbis.VorbisInfo(p2);
                    break;
                case 3:
                    v0_2 = new org.apache.tika.parser.vorbis.VorbisComments(p2);
                    break;
                case 5:
                    v0_2 = new org.apache.tika.parser.vorbis.VorbisSetup(p2);
                    break;
                default:
            }
        }
        return v0_2;
    }

    private static boolean isVorbisSpecial(org.apache.tika.parser.ogg.OggPacket p7)
    {
        int v0 = 1;
        byte v2_3 = p7.getData()[0];
        if ((v2_3 != 1) && ((v2_3 != 3) && (v2_3 != 5))) {
            v0 = 0;
        } else {
            byte v2_0 = p7.getData();
            if ((v2_0[1] != 118) || ((v2_0[2] != 111) || ((v2_0[3] != 114) || ((v2_0[4] != 98) || ((v2_0[5] != 105) || (v2_0[6] != 115)))))) {
            }
        }
        return v0;
    }

    public static boolean isVorbisStream(org.apache.tika.parser.ogg.OggPacket p1)
    {
        boolean v0_1;
        if (p1.isBeginningOfStream()) {
            v0_1 = org.apache.tika.parser.vorbis.VorbisPacket.isVorbisSpecial(p1);
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    protected abstract int getHeaderSize();

    protected void populateMetadataHeader(byte[] p3, int p4, int p5)
    {
        p3[0] = org.apache.tika.parser.ogg.IOUtils.fromInt(p4);
        p3[1] = 118;
        p3[2] = 111;
        p3[3] = 114;
        p3[4] = 98;
        p3[5] = 105;
        p3[6] = 115;
        return;
    }
}
package org.apache.tika.parser.vorbis;
public class VorbisComments extends org.apache.tika.parser.vorbis.VorbisPacket {
    public static final String KEY_ALBUM = "album";
    public static final String KEY_ARTIST = "artist";
    public static final String KEY_DATE = "date";
    public static final String KEY_GENRE = "genre";
    public static final String KEY_TITLE = "title";
    public static final String KEY_TRACKNUMBER = "tracknumber";
    private java.util.Map comments;
    private String vendor;

    public VorbisComments()
    {
        this.comments = new java.util.HashMap();
        this.vendor = "Xiph.org Java Vorbis Tools 20100203";
        return;
    }

    public VorbisComments(org.apache.tika.parser.ogg.OggPacket p10)
    {
        super(p10);
        super.comments = new java.util.HashMap();
        byte[] v3 = p10.getData();
        IllegalArgumentException v0_10 = super.getHeaderSize();
        int v2_0 = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v3, v0_10));
        super.vendor = org.apache.tika.parser.ogg.IOUtils.getUTF8(v3, (v0_10 + 4), v2_0);
        IllegalArgumentException v0_1 = ((v0_10 + 4) + v2_0);
        int v4_4 = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v3, v0_1));
        int v2_1 = (v0_1 + 4);
        IllegalArgumentException v0_4 = 0;
        while (v0_4 < v4_4) {
            String v5_1 = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v3, v2_1));
            int v2_2 = (v2_1 + 4);
            String v6_0 = org.apache.tika.parser.ogg.IOUtils.getUTF8(v3, v2_2, v5_1);
            v2_1 = (v2_2 + v5_1);
            String v5_3 = v6_0.indexOf(61);
            if (v5_3 != -1) {
                super.addComment(org.apache.tika.parser.vorbis.VorbisComments.normaliseTag(v6_0.substring(0, v5_3)), v6_0.substring((v5_3 + 1)));
            } else {
                System.err.println(new StringBuilder().append("Warning - unable to parse comment \'").append(v6_0).append("\'").toString());
            }
            v0_4++;
        }
        if ((v2_1 >= v3.length) || (v3[v2_1] != 0)) {
            return;
        } else {
            throw new IllegalArgumentException("Framing bit not set, invalid");
        }
    }

    protected static String normaliseTag(String p6)
    {
        StringBuffer v1_1 = new StringBuffer();
        char[] v2 = p6.toLowerCase().toCharArray();
        int v3 = v2.length;
        int v0_1 = 0;
        while (v0_1 < v3) {
            char v4 = v2[v0_1];
            if ((v4 >= 32) && ((v4 <= 125) && (v4 != 61))) {
                v1_1.append(v4);
            }
            v0_1++;
        }
        return v1_1.toString();
    }

    public void addComment(String p4, String p5)
    {
        java.util.List v0_0 = org.apache.tika.parser.vorbis.VorbisComments.normaliseTag(p4);
        if (!this.comments.containsKey(v0_0)) {
            this.comments.put(v0_0, new java.util.ArrayList());
        }
        ((java.util.List) this.comments.get(v0_0)).add(p5);
        return;
    }

    public String getAlbum()
    {
        return this.getSingleComment("album");
    }

    public java.util.Map getAllComments()
    {
        return this.comments;
    }

    public String getArtist()
    {
        return this.getSingleComment("artist");
    }

    public java.util.List getComments(String p3)
    {
        java.util.ArrayList v0_2 = ((java.util.List) this.comments.get(org.apache.tika.parser.vorbis.VorbisComments.normaliseTag(p3)));
        if (v0_2 == null) {
            v0_2 = new java.util.ArrayList();
        }
        return v0_2;
    }

    public String getDate()
    {
        return this.getSingleComment("date");
    }

    public String getGenre()
    {
        return this.getSingleComment("genre");
    }

    protected int getHeaderSize()
    {
        return 7;
    }

    protected String getSingleComment(String p3)
    {
        String v0_2;
        String v0_4 = ((java.util.List) this.comments.get(p3));
        if ((v0_4 == null) || (v0_4.size() <= 0)) {
            v0_2 = 0;
        } else {
            v0_2 = ((String) v0_4.get(0));
        }
        return v0_2;
    }

    public String getTitle()
    {
        return this.getSingleComment("title");
    }

    public String getTrackNumber()
    {
        return this.getSingleComment("tracknumber");
    }

    public int getTrackNumberNumeric()
    {
        int v0 = -1;
        NumberFormatException v1 = this.getTrackNumber();
        if (v1 != null) {
            try {
                v0 = Integer.parseInt(v1);
            } catch (NumberFormatException v1) {
            }
        }
        return v0;
    }

    public String getVendor()
    {
        return this.vendor;
    }

    public void removeAllComments()
    {
        this.comments.clear();
        return;
    }

    public void removeComments(String p3)
    {
        this.comments.remove(org.apache.tika.parser.vorbis.VorbisComments.normaliseTag(p3));
        return;
    }

    public void setComments(String p3, java.util.List p4)
    {
        String v0 = org.apache.tika.parser.vorbis.VorbisComments.normaliseTag(p3);
        if (this.comments.containsKey(v0)) {
            this.comments.remove(v0);
        }
        this.comments.put(v0, p4);
        return;
    }

    public void setVendor(String p1)
    {
        this.vendor = p1;
        return;
    }

    public org.apache.tika.parser.ogg.OggPacket write()
    {
        java.io.ByteArrayOutputStream v3_1 = new java.io.ByteArrayOutputStream();
        try {
            org.apache.tika.parser.ogg.OggPacket v0_10 = new byte[this.getHeaderSize()];
            v3_1.write(v0_10);
            org.apache.tika.parser.ogg.IOUtils.writeUTF8WithLength(v3_1, this.vendor);
            int v4_0 = this.comments.values().iterator();
            int v2_0 = 0;
        } catch (org.apache.tika.parser.ogg.OggPacket v0_16) {
            throw new RuntimeException(v0_16);
        }
        while (v4_0.hasNext()) {
            v2_0 = (((java.util.List) v4_0.next()).size() + v2_0);
        }
        org.apache.tika.parser.ogg.IOUtils.writeInt4(v3_1, ((long) v2_0));
        int v2_3 = new String[this.comments.size()];
        org.apache.tika.parser.ogg.OggPacket v0_5 = ((String[]) this.comments.keySet().toArray(v2_3));
        java.util.Arrays.sort(v0_5);
        int v4_2 = v0_5.length;
        int v2_4 = 0;
        while (v2_4 < v4_2) {
            String v5 = v0_5[v2_4];
            java.util.Iterator v6 = ((java.util.List) this.comments.get(v5)).iterator();
            while (v6.hasNext()) {
                org.apache.tika.parser.ogg.IOUtils.writeUTF8WithLength(v3_1, new StringBuilder().append(v5).append(61).append(((String) v6.next())).toString());
            }
            v2_4++;
        }
        v3_1.write(1);
        org.apache.tika.parser.ogg.OggPacket v0_7 = v3_1.toByteArray();
        this.populateMetadataHeader(v0_7, 3, v0_7.length);
        this.setData(v0_7);
        return super.write();
    }
}
package org.apache.tika.parser.flac;
public class FlacTags extends org.apache.tika.parser.vorbis.VorbisComments {

    public FlacTags()
    {
        return;
    }

    public FlacTags(org.apache.tika.parser.ogg.OggPacket p5)
    {
        super(p5);
        String v0_3 = super.getData()[0];
        if (v0_3 == 4) {
            return;
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Invalid type ").append(v0_3).toString());
        }
    }

    protected int getHeaderSize()
    {
        return 4;
    }

    protected void populateMetadataHeader(byte[] p4, int p5, int p6)
    {
        p4[0] = 4;
        org.apache.tika.parser.ogg.IOUtils.putInt3BE(p4, 1, ((long) p6));
        return;
    }
}
package org.apache.tika.parser.flac;
public class FlacUnhandledMetadataBlock extends org.apache.tika.parser.flac.FlacMetadataBlock {
    private byte[] data;

    public FlacUnhandledMetadataBlock(byte p1, byte[] p2)
    {
        super(p1);
        super.data = p2;
        return;
    }

    protected void write(java.io.OutputStream p2)
    {
        p2.write(this.data);
        return;
    }
}
package org.apache.tika.parser.mp3;
public interface MP3Frame {
}
package org.apache.tika.parser.mp3;
public class AudioFrame implements org.apache.tika.parser.mp3.MP3Frame {
    private int channels;
    private int sampleRate;
    private String version;

    public AudioFrame(int p7, int p8, int p9, int p10, java.io.InputStream p11)
    {
        if ((p7 == -2) && ((p8 == -2) && ((p9 == -2) && (p10 == -2)))) {
            p7 = p11.read();
            p8 = p11.read();
            p9 = p11.read();
            p10 = p11.read();
        }
        if (!org.apache.tika.parser.mp3.AudioFrame.isAudioHeader(p7, p8, p9, p10)) {
            throw new IllegalArgumentException("Magic Audio Frame Header not found");
        } else {
            this.version = "MPEG 3 Layer ";
            int v0_10 = ((p8 >> 1) & 3);
            if (v0_10 != 1) {
                if (v0_10 != 2) {
                    if (v0_10 != 3) {
                        this.version = new StringBuilder().append(this.version).append("(reserved)").toString();
                    } else {
                        this.version = new StringBuilder().append(this.version).append("I").toString();
                    }
                } else {
                    this.version = new StringBuilder().append(this.version).append("II").toString();
                }
            } else {
                this.version = new StringBuilder().append(this.version).append("III").toString();
            }
            this.version = new StringBuilder().append(this.version).append(" Version ").toString();
            int v0_38 = ((p8 >> 3) & 3);
            if (v0_38 != 0) {
                if (v0_38 != 2) {
                    if (v0_38 != 3) {
                        this.version = new StringBuilder().append(this.version).append("(reseved)").toString();
                    } else {
                        this.version = new StringBuilder().append(this.version).append("1").toString();
                    }
                } else {
                    this.version = new StringBuilder().append(this.version).append("2").toString();
                }
            } else {
                this.version = new StringBuilder().append(this.version).append("2.5").toString();
            }
            switch (((p9 >> 2) & 3)) {
                case 0:
                    this.sampleRate = 11025;
                    break;
                case 1:
                    this.sampleRate = 12000;
                    break;
                default:
                    this.sampleRate = 8000;
            }
            if (v0_38 != 2) {
                if (v0_38 == 3) {
                    this.sampleRate = (this.sampleRate * 4);
                }
            } else {
                this.sampleRate = (this.sampleRate * 2);
            }
            if ((p10 & 3) >= 3) {
                this.channels = 1;
            } else {
                this.channels = 2;
            }
            return;
        }
    }

    public AudioFrame(java.io.InputStream p7, org.xml.sax.ContentHandler p8)
    {
        this(-2, -2, -2, -2, p7);
        return;
    }

    public static boolean isAudioHeader(int p3, int p4, int p5, int p6)
    {
        int v0 = 0;
        if ((p3 != -1) && ((p4 != -1) && ((p5 != -1) && ((p6 != -1) && ((p3 == 255) && ((p4 & 96) == 96)))))) {
            v0 = 1;
        }
        return v0;
    }

    public int getChannels()
    {
        return this.channels;
    }

    public int getSampleRate()
    {
        return this.sampleRate;
    }

    public String getVersion()
    {
        return this.version;
    }
}
package org.apache.tika.parser.mp3;
public interface ID3Tags {
    public static final String[] GENRES;

    static ID3Tags()
    {
        String[] v0_1 = new String[127];
        v0_1[0] = "Blues";
        v0_1[1] = "Classic Rock";
        v0_1[2] = "Country";
        v0_1[3] = "Dance";
        v0_1[4] = "Disco";
        v0_1[5] = "Funk";
        v0_1[6] = "Grunge";
        v0_1[7] = "Hip-Hop";
        v0_1[8] = "Jazz";
        v0_1[9] = "Metal";
        v0_1[10] = "New Age";
        v0_1[11] = "Oldies";
        v0_1[12] = "Other";
        v0_1[13] = "Pop";
        v0_1[14] = "R&B";
        v0_1[15] = "Rap";
        v0_1[16] = "Reggae";
        v0_1[17] = "Rock";
        v0_1[18] = "Techno";
        v0_1[19] = "Industrial";
        v0_1[20] = "Alternative";
        v0_1[21] = "Ska";
        v0_1[22] = "Death Metal";
        v0_1[23] = "Pranks";
        v0_1[24] = "Soundtrack";
        v0_1[25] = "Euro-Techno";
        v0_1[26] = "Ambient";
        v0_1[27] = "Trip-Hop";
        v0_1[28] = "Vocal";
        v0_1[29] = "Jazz+Funk";
        v0_1[30] = "Fusion";
        v0_1[31] = "Trance";
        v0_1[32] = "Classical";
        v0_1[33] = "Instrumental";
        v0_1[34] = "Acid";
        v0_1[35] = "House";
        v0_1[36] = "Game";
        v0_1[37] = "Sound Clip";
        v0_1[38] = "Gospel";
        v0_1[39] = "Noise";
        v0_1[40] = "AlternRock";
        v0_1[41] = "Bass";
        v0_1[42] = "Soul";
        v0_1[43] = "Punk";
        v0_1[44] = "Space";
        v0_1[45] = "Meditative";
        v0_1[46] = "Instrumental Pop";
        v0_1[47] = "Instrumental Rock";
        v0_1[48] = "Ethnic";
        v0_1[49] = "Gothic";
        v0_1[50] = "Darkwave";
        v0_1[51] = "Techno-Industrial";
        v0_1[52] = "Electronic";
        v0_1[53] = "Pop-Folk";
        v0_1[54] = "Eurodance";
        v0_1[55] = "Dream";
        v0_1[56] = "Southern Rock";
        v0_1[57] = "Comedy";
        v0_1[58] = "Cult";
        v0_1[59] = "Gangsta";
        v0_1[60] = "Top 40";
        v0_1[61] = "Christian Rap";
        v0_1[62] = "Pop/Funk";
        v0_1[63] = "Jungle";
        v0_1[64] = "Native American";
        v0_1[65] = "Cabaret";
        v0_1[66] = "New Wave";
        v0_1[67] = "Psychadelic";
        v0_1[68] = "Rave";
        v0_1[69] = "Showtunes";
        v0_1[70] = "Trailer";
        v0_1[71] = "Lo-Fi";
        v0_1[72] = "Tribal";
        v0_1[73] = "Acid Punk";
        v0_1[74] = "Acid Jazz";
        v0_1[75] = "Polka";
        v0_1[76] = "Retro";
        v0_1[77] = "Musical";
        v0_1[78] = "Rock & Roll";
        v0_1[79] = "Hard Rock";
        v0_1[80] = "Folk";
        v0_1[81] = "Folk-Rock";
        v0_1[82] = "National Folk";
        v0_1[83] = "Swing";
        v0_1[84] = "Fast Fusion";
        v0_1[85] = "Bebob";
        v0_1[86] = "Latin";
        v0_1[87] = "Revival";
        v0_1[88] = "Celtic";
        v0_1[89] = "Bluegrass";
        v0_1[90] = "Avantgarde";
        v0_1[91] = "Gothic Rock";
        v0_1[92] = "Progressive Rock";
        v0_1[93] = "Psychedelic Rock";
        v0_1[94] = "Symphonic Rock";
        v0_1[95] = "Slow Rock";
        v0_1[96] = "Big Band";
        v0_1[97] = "Chorus";
        v0_1[98] = "Easy Listening";
        v0_1[99] = "Acoustic";
        v0_1[100] = "Humour";
        v0_1[101] = "Speech";
        v0_1[102] = "Chanson";
        v0_1[103] = "Opera";
        v0_1[104] = "Chamber Music";
        v0_1[105] = "Sonata";
        v0_1[106] = "Symphony";
        v0_1[107] = "Booty Bass";
        v0_1[108] = "Primus";
        v0_1[109] = "Porn Groove";
        v0_1[110] = "Satire";
        v0_1[111] = "Slow Jam";
        v0_1[112] = "Club";
        v0_1[113] = "Tango";
        v0_1[114] = "Samba";
        v0_1[115] = "Folklore";
        v0_1[116] = "Ballad";
        v0_1[117] = "Power Ballad";
        v0_1[118] = "Rhythmic Soul";
        v0_1[119] = "Freestyle";
        v0_1[120] = "Duet";
        v0_1[121] = "Punk Rock";
        v0_1[122] = "Drum Solo";
        v0_1[123] = "A capella";
        v0_1[124] = "Euro-House";
        v0_1[125] = "Dance Hall";
        v0_1[126] = "";
        org.apache.tika.parser.mp3.ID3Tags.GENRES = v0_1;
        return;
    }

    public abstract String getAlbum();

    public abstract String getArtist();

    public abstract java.util.List getComments();

    public abstract String getComposer();

    public abstract String getGenre();

    public abstract boolean getTagsPresent();

    public abstract String getTitle();

    public abstract String getTrackNumber();

    public abstract String getYear();
}
package org.apache.tika.parser.mp3;
public class CompositeTagHandler implements org.apache.tika.parser.mp3.ID3Tags {
    private org.apache.tika.parser.mp3.ID3Tags[] tags;

    public CompositeTagHandler(org.apache.tika.parser.mp3.ID3Tags[] p1)
    {
        this.tags = p1;
        return;
    }

    public String getAlbum()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getAlbum() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getAlbum();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public String getArtist()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getArtist() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getArtist();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public java.util.List getComments()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v2 = this.tags;
        int v3 = v2.length;
        int v1 = 0;
        while (v1 < v3) {
            int v0_2 = v2[v1].getComments();
            if ((v0_2 == 0) || (v0_2.size() <= 0)) {
                v1++;
            }
            return v0_2;
        }
        v0_2 = java.util.Collections.emptyList();
        return v0_2;
    }

    public String getComposer()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getComposer() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getComposer();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public String getGenre()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getGenre() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getGenre();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public boolean getTagsPresent()
    {
        int v0 = 0;
        org.apache.tika.parser.mp3.ID3Tags[] v2 = this.tags;
        int v1 = 0;
        while (v1 < v2.length) {
            if (!v2[v1].getTagsPresent()) {
                v1++;
            } else {
                v0 = 1;
                break;
            }
        }
        return v0;
    }

    public String getTitle()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getTitle() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getTitle();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public String getTrackNumber()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getTrackNumber() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getTrackNumber();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public String getYear()
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1 = this.tags;
        int v0_1 = 0;
        while (v0_1 < v1.length) {
            org.apache.tika.parser.mp3.ID3Tags v3 = v1[v0_1];
            if (v3.getYear() == null) {
                v0_1++;
            } else {
                int v0_0 = v3.getYear();
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }
}
package org.apache.tika.parser.mp3;
public class ID3Tags$ID3Comment {
    private String description;
    private String language;
    private String text;

    public ID3Tags$ID3Comment(String p1)
    {
        this.text = p1;
        return;
    }

    public ID3Tags$ID3Comment(String p1, String p2, String p3)
    {
        this.language = p1;
        this.description = p2;
        this.text = p3;
        return;
    }

    public String getDescription()
    {
        return this.description;
    }

    public String getLanguage()
    {
        return this.language;
    }

    public String getText()
    {
        return this.text;
    }
}
package org.apache.tika.parser.mp3;
public class ID3v1Handler implements org.apache.tika.parser.mp3.ID3Tags {
    private String album;
    private String artist;
    private org.apache.tika.parser.mp3.ID3Tags$ID3Comment comment;
    boolean found;
    private String genre;
    private String title;
    private String trackNumber;
    private String year;

    public ID3v1Handler(java.io.InputStream p2, org.xml.sax.ContentHandler p3)
    {
        this(org.apache.tika.parser.mp3.LyricsHandler.getSuffix(p2, 128));
        return;
    }

    protected ID3v1Handler(byte[] p8)
    {
        this.found = 0;
        if ((p8.length == 128) && ((p8[0] == 84) && ((p8[1] == 65) && (p8[2] == 71)))) {
            this.found = 1;
            this.title = org.apache.tika.parser.mp3.ID3v1Handler.getString(p8, 3, 33);
            this.artist = org.apache.tika.parser.mp3.ID3v1Handler.getString(p8, 33, 63);
            this.album = org.apache.tika.parser.mp3.ID3v1Handler.getString(p8, 63, 93);
            this.year = org.apache.tika.parser.mp3.ID3v1Handler.getString(p8, 93, 97);
            this.comment = new org.apache.tika.parser.mp3.ID3Tags$ID3Comment(org.apache.tika.parser.mp3.ID3v1Handler.getString(p8, 97, 127));
            this.genre = org.apache.tika.parser.mp3.ID3v1Handler.GENRES[Math.min((p8[127] & 255), (org.apache.tika.parser.mp3.ID3v1Handler.GENRES.length - 1))];
            if ((p8[125] == 0) && (p8[126] != 0)) {
                this.trackNumber = Integer.toString((p8[126] & 255));
            }
        }
        return;
    }

    private static String getString(byte[] p3, int p4, int p5)
    {
        java.io.UnsupportedEncodingException v0_0 = p4;
        while ((v0_0 < p5) && (p3[v0_0] != 0)) {
            v0_0++;
        }
        while ((p4 < v0_0) && (p3[(v0_0 - 1)] <= 32)) {
            v0_0--;
        }
        while ((p4 < v0_0) && (p3[p4] <= 32)) {
            p4++;
        }
        try {
            return new String(p3, p4, (v0_0 - p4), "ISO-8859-1");
        } catch (java.io.UnsupportedEncodingException v0_2) {
            throw new org.apache.tika.exception.TikaException("ISO-8859-1 encoding is not available", v0_2);
        }
    }

    public String getAlbum()
    {
        return this.album;
    }

    public String getArtist()
    {
        return this.artist;
    }

    public java.util.List getComments()
    {
        java.util.List v0_1 = new org.apache.tika.parser.mp3.ID3Tags$ID3Comment[1];
        v0_1[0] = this.comment;
        return java.util.Arrays.asList(v0_1);
    }

    public String getComposer()
    {
        return 0;
    }

    public String getGenre()
    {
        return this.genre;
    }

    public boolean getTagsPresent()
    {
        return this.found;
    }

    public String getTitle()
    {
        return this.title;
    }

    public String getTrackNumber()
    {
        return this.trackNumber;
    }

    public String getYear()
    {
        return this.year;
    }
}
package org.apache.tika.parser.mp3;
synthetic class ID3v22Handler$1 {
}
package org.apache.tika.parser.mp3;
public class ID3v2Frame$RawTagIterator implements java.util.Iterator {
    private int flagLength;
    private int nameLength;
    private int offset;
    private int sizeLength;
    private int sizeMultiplier;
    final synthetic org.apache.tika.parser.mp3.ID3v2Frame this$0;

    protected ID3v2Frame$RawTagIterator(org.apache.tika.parser.mp3.ID3v2Frame p2, int p3, int p4, int p5, int p6)
    {
        this.this$0 = p2;
        this.offset = 0;
        this.nameLength = p3;
        this.sizeLength = p4;
        this.sizeMultiplier = p5;
        this.flagLength = p6;
        return;
    }

    public boolean hasNext()
    {
        if ((this.offset >= org.apache.tika.parser.mp3.ID3v2Frame.access$100(this.this$0).length) || (org.apache.tika.parser.mp3.ID3v2Frame.access$100(this.this$0)[this.offset] == 0)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public bridge synthetic Object next()
    {
        return this.next();
    }

    public org.apache.tika.parser.mp3.ID3v2Frame$RawTag next()
    {
        org.apache.tika.parser.mp3.ID3v2Frame$RawTag v0_1 = new org.apache.tika.parser.mp3.ID3v2Frame$RawTag(this.nameLength, this.sizeLength, this.sizeMultiplier, this.flagLength, org.apache.tika.parser.mp3.ID3v2Frame.access$100(this.this$0), this.offset, 0);
        this.offset = (this.offset + v0_1.getSize());
        return v0_1;
    }

    public void remove()
    {
        return;
    }
}
package org.apache.tika.parser.mp3;
 class ID3v22Handler$RawV22TagIterator extends org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator {
    final synthetic org.apache.tika.parser.mp3.ID3v22Handler this$0;

    private ID3v22Handler$RawV22TagIterator(org.apache.tika.parser.mp3.ID3v22Handler p7, org.apache.tika.parser.mp3.ID3v2Frame p8)
    {
        this.this$0 = p7;
        p8.getClass();
        super(p8, 3, 3, 1, 0);
        return;
    }

    synthetic ID3v22Handler$RawV22TagIterator(org.apache.tika.parser.mp3.ID3v22Handler p1, org.apache.tika.parser.mp3.ID3v2Frame p2, org.apache.tika.parser.mp3.ID3v22Handler$1 p3)
    {
        this(p1, p2);
        return;
    }
}
package org.apache.tika.parser.mp3;
public class ID3v22Handler implements org.apache.tika.parser.mp3.ID3Tags {
    private String album;
    private String artist;
    private java.util.List comments;
    private String composer;
    private String genre;
    private String title;
    private String trackNumber;
    private String year;

    public ID3v22Handler(org.apache.tika.parser.mp3.ID3v2Frame p6)
    {
        this.comments = new java.util.ArrayList();
        org.apache.tika.parser.mp3.ID3v22Handler$RawV22TagIterator v0_3 = new org.apache.tika.parser.mp3.ID3v22Handler$RawV22TagIterator(this, p6, 0);
        while (v0_3.hasNext()) {
            String v1_3 = v0_3.next();
            if (!v1_3.name.equals("TT2")) {
                if (!v1_3.name.equals("TP1")) {
                    if (!v1_3.name.equals("TAL")) {
                        if (!v1_3.name.equals("TYE")) {
                            if (!v1_3.name.equals("TCM")) {
                                if (!v1_3.name.equals("COM")) {
                                    if (!v1_3.name.equals("TRK")) {
                                        if (v1_3.name.equals("TCO")) {
                                            this.genre = org.apache.tika.parser.mp3.ID3v22Handler.extractGenre(this.getTagString(v1_3.data, 0, v1_3.data.length));
                                        }
                                    } else {
                                        this.trackNumber = this.getTagString(v1_3.data, 0, v1_3.data.length);
                                    }
                                } else {
                                    this.comments.add(this.getComment(v1_3.data, 0, v1_3.data.length));
                                }
                            } else {
                                this.composer = this.getTagString(v1_3.data, 0, v1_3.data.length);
                            }
                        } else {
                            this.year = this.getTagString(v1_3.data, 0, v1_3.data.length);
                        }
                    } else {
                        this.album = this.getTagString(v1_3.data, 0, v1_3.data.length);
                    }
                } else {
                    this.artist = this.getTagString(v1_3.data, 0, v1_3.data.length);
                }
            } else {
                this.title = this.getTagString(v1_3.data, 0, v1_3.data.length);
            }
        }
        return;
    }

    protected static String extractGenre(String p4)
    {
        NumberFormatException v1_3 = p4.indexOf("(");
        String[] v2_1 = p4.indexOf(")");
        if ((v1_3 != -1) || (v2_1 != -1)) {
            if (v1_3 >= v2_1) {
                p4 = 0;
            } else {
                String v0_3 = p4.substring(0, v1_3).trim();
                try {
                    p4 = org.apache.tika.parser.mp3.ID3Tags.GENRES[Integer.parseInt(p4.substring((v1_3 + 1), v2_1))];
                } catch (NumberFormatException v1) {
                    p4 = v0_3;
                } catch (NumberFormatException v1) {
                    p4 = v0_3;
                }
            }
        }
        return p4;
    }

    private org.apache.tika.parser.mp3.ID3Tags$ID3Comment getComment(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getComment(p2, p3, p4);
    }

    private String getTagString(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getTagString(p2, p3, p4);
    }

    public String getAlbum()
    {
        return this.album;
    }

    public String getArtist()
    {
        return this.artist;
    }

    public java.util.List getComments()
    {
        return this.comments;
    }

    public String getComposer()
    {
        return this.composer;
    }

    public String getGenre()
    {
        return this.genre;
    }

    public boolean getTagsPresent()
    {
        return 1;
    }

    public String getTitle()
    {
        return this.title;
    }

    public String getTrackNumber()
    {
        return this.trackNumber;
    }

    public String getYear()
    {
        return this.year;
    }
}
package org.apache.tika.parser.mp3;
synthetic class ID3v23Handler$1 {
}
package org.apache.tika.parser.mp3;
 class ID3v23Handler$RawV23TagIterator extends org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator {
    final synthetic org.apache.tika.parser.mp3.ID3v23Handler this$0;

    private ID3v23Handler$RawV23TagIterator(org.apache.tika.parser.mp3.ID3v23Handler p7, org.apache.tika.parser.mp3.ID3v2Frame p8)
    {
        this.this$0 = p7;
        p8.getClass();
        super(p8, 4, 4, 1, 2);
        return;
    }

    synthetic ID3v23Handler$RawV23TagIterator(org.apache.tika.parser.mp3.ID3v23Handler p1, org.apache.tika.parser.mp3.ID3v2Frame p2, org.apache.tika.parser.mp3.ID3v23Handler$1 p3)
    {
        this(p1, p2);
        return;
    }
}
package org.apache.tika.parser.mp3;
public class ID3v23Handler implements org.apache.tika.parser.mp3.ID3Tags {
    private String album;
    private String artist;
    private java.util.List comments;
    private String composer;
    private String genre;
    private String title;
    private String trackNumber;
    private String year;

    public ID3v23Handler(org.apache.tika.parser.mp3.ID3v2Frame p6)
    {
        this.comments = new java.util.ArrayList();
        org.apache.tika.parser.mp3.ID3v23Handler$RawV23TagIterator v0_3 = new org.apache.tika.parser.mp3.ID3v23Handler$RawV23TagIterator(this, p6, 0);
        while (v0_3.hasNext()) {
            String v1_3 = v0_3.next();
            if (!v1_3.name.equals("TIT2")) {
                if (!v1_3.name.equals("TPE1")) {
                    if (!v1_3.name.equals("TALB")) {
                        if (!v1_3.name.equals("TYER")) {
                            if (!v1_3.name.equals("TCOM")) {
                                if (!v1_3.name.equals("COMM")) {
                                    if (!v1_3.name.equals("TRCK")) {
                                        if (v1_3.name.equals("TCON")) {
                                            this.genre = org.apache.tika.parser.mp3.ID3v22Handler.extractGenre(this.getTagString(v1_3.data, 0, v1_3.data.length));
                                        }
                                    } else {
                                        this.trackNumber = this.getTagString(v1_3.data, 0, v1_3.data.length);
                                    }
                                } else {
                                    this.comments.add(this.getComment(v1_3.data, 0, v1_3.data.length));
                                }
                            } else {
                                this.composer = this.getTagString(v1_3.data, 0, v1_3.data.length);
                            }
                        } else {
                            this.year = this.getTagString(v1_3.data, 0, v1_3.data.length);
                        }
                    } else {
                        this.album = this.getTagString(v1_3.data, 0, v1_3.data.length);
                    }
                } else {
                    this.artist = this.getTagString(v1_3.data, 0, v1_3.data.length);
                }
            } else {
                this.title = this.getTagString(v1_3.data, 0, v1_3.data.length);
            }
        }
        return;
    }

    private org.apache.tika.parser.mp3.ID3Tags$ID3Comment getComment(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getComment(p2, p3, p4);
    }

    private String getTagString(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getTagString(p2, p3, p4);
    }

    public String getAlbum()
    {
        return this.album;
    }

    public String getArtist()
    {
        return this.artist;
    }

    public java.util.List getComments()
    {
        return this.comments;
    }

    public String getComposer()
    {
        return this.composer;
    }

    public String getGenre()
    {
        return this.genre;
    }

    public boolean getTagsPresent()
    {
        return 1;
    }

    public String getTitle()
    {
        return this.title;
    }

    public String getTrackNumber()
    {
        return this.trackNumber;
    }

    public String getYear()
    {
        return this.year;
    }
}
package org.apache.tika.parser.mp3;
synthetic class ID3v24Handler$1 {
}
package org.apache.tika.parser.mp3;
 class ID3v24Handler$RawV24TagIterator extends org.apache.tika.parser.mp3.ID3v2Frame$RawTagIterator {
    final synthetic org.apache.tika.parser.mp3.ID3v24Handler this$0;

    private ID3v24Handler$RawV24TagIterator(org.apache.tika.parser.mp3.ID3v24Handler p7, org.apache.tika.parser.mp3.ID3v2Frame p8)
    {
        this.this$0 = p7;
        p8.getClass();
        super(p8, 4, 4, 1, 2);
        return;
    }

    synthetic ID3v24Handler$RawV24TagIterator(org.apache.tika.parser.mp3.ID3v24Handler p1, org.apache.tika.parser.mp3.ID3v2Frame p2, org.apache.tika.parser.mp3.ID3v24Handler$1 p3)
    {
        this(p1, p2);
        return;
    }
}
package org.apache.tika.parser.mp3;
public class ID3v24Handler implements org.apache.tika.parser.mp3.ID3Tags {
    private String album;
    private String artist;
    private java.util.List comments;
    private String composer;
    private String genre;
    private String title;
    private String trackNumber;
    private String year;

    public ID3v24Handler(org.apache.tika.parser.mp3.ID3v2Frame p6)
    {
        this.comments = new java.util.ArrayList();
        org.apache.tika.parser.mp3.ID3v24Handler$RawV24TagIterator v0_3 = new org.apache.tika.parser.mp3.ID3v24Handler$RawV24TagIterator(this, p6, 0);
        while (v0_3.hasNext()) {
            String v1_9 = v0_3.next();
            if (!v1_9.name.equals("TIT2")) {
                if (!v1_9.name.equals("TPE1")) {
                    if (!v1_9.name.equals("TALB")) {
                        if (!v1_9.name.equals("TYER")) {
                            if (!v1_9.name.equals("TDRC")) {
                                if (!v1_9.name.equals("TCOM")) {
                                    if (!v1_9.name.equals("COMM")) {
                                        if (!v1_9.name.equals("TRCK")) {
                                            if (v1_9.name.equals("TCON")) {
                                                this.genre = org.apache.tika.parser.mp3.ID3v22Handler.extractGenre(this.getTagString(v1_9.data, 0, v1_9.data.length));
                                            }
                                        } else {
                                            this.trackNumber = this.getTagString(v1_9.data, 0, v1_9.data.length);
                                        }
                                    } else {
                                        this.comments.add(this.getComment(v1_9.data, 0, v1_9.data.length));
                                    }
                                } else {
                                    this.composer = this.getTagString(v1_9.data, 0, v1_9.data.length);
                                }
                            } else {
                                if (this.year == null) {
                                    this.year = this.getTagString(v1_9.data, 0, v1_9.data.length);
                                }
                            }
                        } else {
                            this.year = this.getTagString(v1_9.data, 0, v1_9.data.length);
                        }
                    } else {
                        this.album = this.getTagString(v1_9.data, 0, v1_9.data.length);
                    }
                } else {
                    this.artist = this.getTagString(v1_9.data, 0, v1_9.data.length);
                }
            } else {
                this.title = this.getTagString(v1_9.data, 0, v1_9.data.length);
            }
        }
        return;
    }

    private org.apache.tika.parser.mp3.ID3Tags$ID3Comment getComment(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getComment(p2, p3, p4);
    }

    private String getTagString(byte[] p2, int p3, int p4)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getTagString(p2, p3, p4);
    }

    public String getAlbum()
    {
        return this.album;
    }

    public String getArtist()
    {
        return this.artist;
    }

    public java.util.List getComments()
    {
        return this.comments;
    }

    public String getComposer()
    {
        return this.composer;
    }

    public String getGenre()
    {
        return this.genre;
    }

    public boolean getTagsPresent()
    {
        return 1;
    }

    public String getTitle()
    {
        return this.title;
    }

    public String getTrackNumber()
    {
        return this.trackNumber;
    }

    public String getYear()
    {
        return this.year;
    }
}
package org.apache.tika.parser.mp3;
synthetic class ID3v2Frame$1 {
}
package org.apache.tika.parser.mp3;
public class ID3v2Frame$RawTag {
    protected byte[] data;
    protected int flag;
    private int headerSize;
    protected String name;

    private ID3v2Frame$RawTag(int p5, int p6, int p7, int p8, byte[] p9, int p10)
    {
        int v0_1;
        this.headerSize = ((p5 + p6) + p8);
        this.name = org.apache.tika.parser.mp3.ID3v2Frame.getString(p9, p10, p5);
        if (p6 != 3) {
            v0_1 = org.apache.tika.parser.mp3.ID3v2Frame.getInt(p9, (p10 + p5));
        } else {
            v0_1 = org.apache.tika.parser.mp3.ID3v2Frame.getInt3(p9, (p10 + p5));
        }
        int v0_3 = (v0_1 * p7);
        if (p8 > 0) {
            if (p8 != 1) {
                this.flag = org.apache.tika.parser.mp3.ID3v2Frame.getInt2(p9, ((p10 + p5) + p6));
            } else {
                this.flag = p9[((p10 + p5) + p6)];
            }
        }
        int v1_9 = (((p10 + p5) + p6) + p8);
        int v0_5 = Math.min(v0_3, (p9.length - v1_9));
        byte[] v2_2 = new byte[v0_5];
        this.data = v2_2;
        System.arraycopy(p9, v1_9, this.data, 0, v0_5);
        return;
    }

    synthetic ID3v2Frame$RawTag(int p1, int p2, int p3, int p4, byte[] p5, int p6, org.apache.tika.parser.mp3.ID3v2Frame$1 p7)
    {
        this(p1, p2, p3, p4, p5, p6);
        return;
    }

    protected int getSize()
    {
        return (this.headerSize + this.data.length);
    }
}
package org.apache.tika.parser.mp3;
public class ID3v2Frame$TextEncoding {
    public final boolean doubleByte;
    public final String encoding;

    private ID3v2Frame$TextEncoding(String p1, boolean p2)
    {
        this.doubleByte = p2;
        this.encoding = p1;
        return;
    }

    synthetic ID3v2Frame$TextEncoding(String p1, boolean p2, org.apache.tika.parser.mp3.ID3v2Frame$1 p3)
    {
        this(p1, p2);
        return;
    }
}
package org.apache.tika.parser.mp3;
public class ID3v2Frame implements org.apache.tika.parser.mp3.MP3Frame {
    protected static final org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] encodings;
    private byte[] data;
    private byte[] extendedHeader;
    private int flags;
    private int length;
    private int majorVersion;
    private int minorVersion;

    static ID3v2Frame()
    {
        org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[] v0_1 = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding[4];
        v0_1[0] = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding("ISO-8859-1", 0, 0);
        v0_1[1] = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding("UTF-16", 1, 0);
        v0_1[2] = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding("UTF-16BE", 1, 0);
        v0_1[3] = new org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding("UTF-8", 0, 0);
        org.apache.tika.parser.mp3.ID3v2Frame.encodings = v0_1;
        return;
    }

    private ID3v2Frame(int p5, int p6, java.io.InputStream p7)
    {
        this.majorVersion = p5;
        this.minorVersion = p6;
        this.flags = p7.read();
        this.length = org.apache.tika.parser.mp3.ID3v2Frame.get7BitsInt(org.apache.tika.parser.mp3.ID3v2Frame.readFully(p7, 4), 0);
        if ((this.flags & 2) == 2) {
            this.extendedHeader = org.apache.tika.parser.mp3.ID3v2Frame.readFully(p7, org.apache.tika.parser.mp3.ID3v2Frame.getInt(org.apache.tika.parser.mp3.ID3v2Frame.readFully(p7, 4)));
        }
        this.data = org.apache.tika.parser.mp3.ID3v2Frame.readFully(p7, this.length, 0);
        return;
    }

    static synthetic byte[] access$100(org.apache.tika.parser.mp3.ID3v2Frame p1)
    {
        return p1.data;
    }

    public static org.apache.tika.parser.mp3.MP3Frame createFrameIfPresent(java.io.InputStream p6)
    {
        org.apache.tika.parser.mp3.ID3v2Frame v0_0 = 0;
        int v1_1 = p6.read();
        int v2_1 = p6.read();
        int v3 = p6.read();
        if ((v1_1 != 73) || ((v2_1 != 68) || (v3 != 51))) {
            int v4_2 = p6.read();
            if (org.apache.tika.parser.mp3.AudioFrame.isAudioHeader(v1_1, v2_1, v3, v4_2)) {
                v0_0 = new org.apache.tika.parser.mp3.AudioFrame(v1_1, v2_1, v3, v4_2, p6);
            }
        } else {
            int v1_0 = p6.read();
            int v2_0 = p6.read();
            if ((v1_0 != -1) && (v2_0 != -1)) {
                v0_0 = new org.apache.tika.parser.mp3.ID3v2Frame(v1_0, v2_0, p6);
            }
        }
        return v0_0;
    }

    protected static int get7BitsInt(byte[] p4, int p5)
    {
        return (((((p4[(p5 + 0)] & 127) << 21) + ((p4[(p5 + 1)] & 127) << 14)) + ((p4[(p5 + 2)] & 127) << 7)) + ((p4[(p5 + 3)] & 127) << 0));
    }

    protected static org.apache.tika.parser.mp3.ID3Tags$ID3Comment getComment(byte[] p8, int p9, int p10)
    {
        int v0_0 = 0;
        int v1_3 = p8[p9];
        try {
            if ((v1_3 >= 0) && (v1_3 < org.apache.tika.parser.mp3.ID3v2Frame.encodings.length)) {
                org.apache.tika.parser.mp3.ID3v2Frame$TextEncoding v5 = org.apache.tika.parser.mp3.ID3v2Frame.encodings[v1_3];
                String v6 = org.apache.tika.parser.mp3.ID3v2Frame.getString(p8, (p9 + 1), 3);
                String v4_0 = (p9 + 4);
                int v2_1 = v4_0;
                while (v2_1 < (p9 + p10)) {
                    if ((!v5.doubleByte) || ((p8[v2_1] != 0) || (p8[(v2_1 + 1)] != 0))) {
                        if ((v5.doubleByte) || (p8[v2_1] != 0)) {
                            v2_1++;
                        } else {
                            int v1_1 = (v2_1 + 1);
                            int v2_2 = new String(p8, v4_0, (v2_1 - v4_0), v5.encoding);
                        }
                    } else {
                        if (((v2_1 + 2) < (p9 + p10)) && ((p8[(v2_1 + 1)] == 0) && (p8[(v2_1 + 2)] == 0))) {
                            v2_1++;
                        }
                        v1_1 = (v2_1 + 2);
                        v2_2 = new String(p8, v4_0, (v2_1 - v4_0), v5.encoding);
                    }
                    int v1_12;
                    if (v1_1 <= -1) {
                        v1_12 = new String(p8, v4_0, ((p9 + p10) - v4_0), v5.encoding);
                    } else {
                        v1_12 = new String(p8, v1_1, ((p9 + p10) - v1_1), v5.encoding);
                    }
                    v0_0 = new org.apache.tika.parser.mp3.ID3Tags$ID3Comment(v6, v2_2, v1_12);
                }
                v2_2 = 0;
                v1_1 = -1;
            }
        } catch (int v0_16) {
            throw new RuntimeException(new StringBuilder().append("Core encoding ").append(v5.encoding).append(" is not available").toString(), v0_16);
        }
        return v0_0;
    }

    protected static int getInt(byte[] p1)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.getInt(p1, 0);
    }

    protected static int getInt(byte[] p4, int p5)
    {
        return (((((p4[(p5 + 0)] & 255) << 24) + ((p4[(p5 + 1)] & 255) << 16)) + ((p4[(p5 + 2)] & 255) << 8)) + ((p4[(p5 + 3)] & 255) << 0));
    }

    protected static int getInt2(byte[] p2, int p3)
    {
        return (((p2[(p3 + 0)] & 255) << 8) + ((p2[(p3 + 1)] & 255) << 0));
    }

    protected static int getInt3(byte[] p3, int p4)
    {
        return ((((p3[(p4 + 0)] & 255) << 16) + ((p3[(p4 + 1)] & 255) << 8)) + ((p3[(p4 + 2)] & 255) << 0));
    }

    protected static String getString(byte[] p3, int p4, int p5)
    {
        try {
            return new String(p3, p4, p5, "ISO-8859-1");
        } catch (java.io.UnsupportedEncodingException v0_2) {
            throw new RuntimeException("Core encoding ISO-8859-1 encoding is not available", v0_2);
        }
    }

    protected static String getTagString(byte[] p5, int p6, int p7)
    {
        String v0_3;
        if (p7 != 0) {
            if ((p7 != 1) || (p5[p6] != 0)) {
                String v0_1 = org.apache.tika.parser.mp3.ID3v2Frame.encodings[0];
                java.io.UnsupportedEncodingException v1_16 = p5[p6];
                if ((v1_16 >= null) && (v1_16 < org.apache.tika.parser.mp3.ID3v2Frame.encodings.length)) {
                    p6++;
                    p7--;
                    v0_1 = org.apache.tika.parser.mp3.ID3v2Frame.encodings[v1_16];
                }
                while ((v0_1.doubleByte) && ((p7 >= 2) && ((p5[((p6 + p7) - 1)] == 0) && (p5[((p6 + p7) - 2)] == 0)))) {
                    p7 -= 2;
                }
                while ((!v0_1.doubleByte) && ((p7 >= 1) && (p5[((p6 + p7) - 1)] == 0))) {
                    p7--;
                }
                if (p7 != 0) {
                    try {
                        v0_3 = new String(p5, p6, p7, v0_1.encoding);
                    } catch (java.io.UnsupportedEncodingException v1_14) {
                        throw new RuntimeException(new StringBuilder().append("Core encoding ").append(v0_3.encoding).append(" is not available").toString(), v1_14);
                    }
                } else {
                    v0_3 = "";
                }
            } else {
                v0_3 = "";
            }
        } else {
            v0_3 = "";
        }
        return v0_3;
    }

    protected static byte[] readFully(java.io.InputStream p1, int p2)
    {
        return org.apache.tika.parser.mp3.ID3v2Frame.readFully(p1, p2, 1);
    }

    protected static byte[] readFully(java.io.InputStream p4, int p5, boolean p6)
    {
        java.io.IOException v0_0 = new byte[p5];
        String v1_0 = 0;
        while (v1_0 < p5) {
            String v2_7 = p4.read(v0_0, v1_0, (p5 - v1_0));
            if (v2_7 != -1) {
                v1_0 += v2_7;
            } else {
                if (!p6) {
                    break;
                }
                throw new java.io.IOException(new StringBuilder().append("Tried to read ").append(p5).append(" bytes, but only ").append(v1_0).append(" bytes present").toString());
            }
        }
        return v0_0;
    }

    public byte[] getData()
    {
        return this.data;
    }

    public byte[] getExtendedHeader()
    {
        return this.extendedHeader;
    }

    public int getFlags()
    {
        return this.flags;
    }

    public int getLength()
    {
        return this.length;
    }

    public int getMajorVersion()
    {
        return this.majorVersion;
    }

    public int getMinorVersion()
    {
        return this.minorVersion;
    }
}
package org.apache.tika.parser.mp3;
public class LyricsHandler {
    boolean foundLyrics;
    org.apache.tika.parser.mp3.ID3v1Handler id3v1;
    String lyricsText;

    public LyricsHandler(java.io.InputStream p2, org.xml.sax.ContentHandler p3)
    {
        this(org.apache.tika.parser.mp3.LyricsHandler.getSuffix(p2, 10368));
        return;
    }

    protected LyricsHandler(byte[] p6)
    {
        this.foundLyrics = 0;
        this.lyricsText = 0;
        this.id3v1 = 0;
        if (p6.length >= 128) {
            int v0_1 = new byte[128];
            System.arraycopy(p6, (p6.length - 128), v0_1, 0, 128);
            this.id3v1 = new org.apache.tika.parser.mp3.ID3v1Handler(v0_1);
            if (p6.length >= 137) {
                int v0_4 = (p6.length - 9);
                if (this.id3v1.found) {
                    v0_4 -= 128;
                }
                if ((p6[(v0_4 + 0)] == 76) && ((p6[(v0_4 + 1)] == 89) && ((p6[(v0_4 + 2)] == 82) && ((p6[(v0_4 + 3)] == 73) && ((p6[(v0_4 + 4)] == 67) && ((p6[(v0_4 + 5)] == 83) && ((p6[(v0_4 + 6)] == 50) && ((p6[(v0_4 + 7)] == 48) && (p6[(v0_4 + 8)] == 48))))))))) {
                    this.foundLyrics = 1;
                    String v2_28 = Integer.parseInt(new String(p6, (v0_4 - 6), 6));
                    String v3_10 = new String(p6, ((v0_4 - v2_28) + 5), (v2_28 - 11), "ASCII");
                    int v0_7 = 0;
                    while (v0_7 < (v3_10.length() - 8)) {
                        String v1_4 = v3_10.substring(v0_7, (v0_7 + 3));
                        int v4_4 = (v0_7 + 8);
                        v0_7 = (v4_4 + Integer.parseInt(v3_10.substring((v0_7 + 3), (v0_7 + 8))));
                        if (v1_4.equals("LYR")) {
                            this.lyricsText = v3_10.substring(v4_4, v0_7);
                        }
                    }
                }
            }
        }
        return;
    }

    protected static byte[] getSuffix(java.io.InputStream p5, int p6)
    {
        byte[] v3 = new byte[(p6 * 2)];
        byte[] v1_4 = p5.read(v3);
        int v0_2 = 0;
        while (v1_4 != -1) {
            v0_2 += v1_4;
            if (v0_2 == v3.length) {
                System.arraycopy(v3, (v0_2 - p6), v3, 0, p6);
                v0_2 = p6;
            }
            v1_4 = p5.read(v3, v0_2, (v3.length - v0_2));
        }
        if (v0_2 < p6) {
            p6 = v0_2;
        }
        byte[] v1_0 = new byte[p6];
        System.arraycopy(v3, (v0_2 - p6), v1_0, 0, p6);
        return v1_0;
    }

    public boolean hasID3v1()
    {
        if ((this.id3v1 != null) && (this.id3v1.found)) {
            int v0_3 = 1;
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    public boolean hasLyrics()
    {
        if ((this.lyricsText == null) || (this.lyricsText.length() <= 0)) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }
}
package org.apache.tika.parser.mp3;
public class Mp3Parser$ID3TagsAndAudio {
    private org.apache.tika.parser.mp3.AudioFrame audio;
    private org.apache.tika.parser.mp3.LyricsHandler lyrics;
    private org.apache.tika.parser.mp3.ID3Tags[] tags;

    protected Mp3Parser$ID3TagsAndAudio()
    {
        return;
    }

    static synthetic org.apache.tika.parser.mp3.ID3Tags[] access$000(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p1)
    {
        return p1.tags;
    }

    static synthetic org.apache.tika.parser.mp3.ID3Tags[] access$002(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p0, org.apache.tika.parser.mp3.ID3Tags[] p1)
    {
        p0.tags = p1;
        return p1;
    }

    static synthetic org.apache.tika.parser.mp3.AudioFrame access$100(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p1)
    {
        return p1.audio;
    }

    static synthetic org.apache.tika.parser.mp3.AudioFrame access$102(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p0, org.apache.tika.parser.mp3.AudioFrame p1)
    {
        p0.audio = p1;
        return p1;
    }

    static synthetic org.apache.tika.parser.mp3.LyricsHandler access$200(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p1)
    {
        return p1.lyrics;
    }

    static synthetic org.apache.tika.parser.mp3.LyricsHandler access$202(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio p0, org.apache.tika.parser.mp3.LyricsHandler p1)
    {
        p0.lyrics = p1;
        return p1;
    }
}
package org.apache.tika.parser.mp3;
public class Mp3Parser extends org.apache.tika.parser.AbstractParser {
    private static final java.util.Set SUPPORTED_TYPES = None;
    private static final long serialVersionUID = 8537074922934844370;

    static Mp3Parser()
    {
        org.apache.tika.parser.mp3.Mp3Parser.SUPPORTED_TYPES = java.util.Collections.singleton(org.apache.tika.mime.MediaType.audio("mpeg"));
        return;
    }

    public Mp3Parser()
    {
        return;
    }

    protected static org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio getAllTagHandlers(java.io.InputStream p8, org.xml.sax.ContentHandler p9)
    {
        org.apache.tika.parser.mp3.ID3Tags[] v1_0 = 0;
        boolean v3_0 = 0;
        boolean v4_1 = 0;
        boolean v5_1 = 0;
        while(true) {
            boolean v0_5 = org.apache.tika.parser.mp3.ID3v2Frame.createFrameIfPresent(p8);
            if ((!v0_5) || (v1_0 != null)) {
                break;
            }
            if (!(v0_5 instanceof org.apache.tika.parser.mp3.ID3v2Frame)) {
                if ((v0_5 instanceof org.apache.tika.parser.mp3.AudioFrame)) {
                    v1_0 = ((org.apache.tika.parser.mp3.AudioFrame) v0_5);
                }
            } else {
                boolean v3_4;
                boolean v4_2;
                boolean v0_6;
                boolean v0_4 = ((org.apache.tika.parser.mp3.ID3v2Frame) v0_5);
                if (v0_4.getMajorVersion() != 4) {
                    if (v0_4.getMajorVersion() != 3) {
                        if (v0_4.getMajorVersion() != 2) {
                            v0_6 = v3_0;
                            v3_4 = v4_1;
                            v4_2 = v5_1;
                        } else {
                            v0_6 = new org.apache.tika.parser.mp3.ID3v22Handler(v0_4);
                            v3_4 = v4_1;
                            v4_2 = v5_1;
                        }
                    } else {
                        v0_6 = v3_0;
                        v3_4 = new org.apache.tika.parser.mp3.ID3v23Handler(v0_4);
                        v4_2 = v5_1;
                    }
                } else {
                    v0_6 = v3_0;
                    v3_4 = v4_1;
                    v4_2 = new org.apache.tika.parser.mp3.ID3v24Handler(v0_4);
                }
                v5_1 = v4_2;
                v4_1 = v3_4;
                v3_0 = v0_6;
            }
        }
        boolean v0_0 = new java.util.ArrayList();
        if ((v5_1) && (v5_1.getTagsPresent())) {
            v0_0.add(v5_1);
        }
        if ((v4_1) && (v4_1.getTagsPresent())) {
            v0_0.add(v4_1);
        }
        if ((v3_0) && (v3_0.getTagsPresent())) {
            v0_0.add(v3_0);
        }
        if ((0 != 0) && (0.getTagsPresent())) {
            v0_0.add(0);
        }
        boolean v3_3 = new org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio();
        org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$102(v3_3, v1_0);
        org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$202(v3_3, 0);
        org.apache.tika.parser.mp3.ID3Tags[] v1_2 = new org.apache.tika.parser.mp3.ID3Tags[v0_0.size()];
        org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$002(v3_3, ((org.apache.tika.parser.mp3.ID3Tags[]) v0_0.toArray(v1_2)));
        return v3_3;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext p2)
    {
        return org.apache.tika.parser.mp3.Mp3Parser.SUPPORTED_TYPES;
    }

    public void parse(java.io.InputStream p9, org.xml.sax.ContentHandler p10, org.apache.tika.metadata.Metadata p11, org.apache.tika.parser.ParseContext p12)
    {
        p11.set("Content-Type", "audio/mpeg");
        p11.set(org.apache.tika.metadata.XMPDM.AUDIO_COMPRESSOR, "MP3");
        org.apache.tika.sax.XHTMLContentHandler v1_3 = new org.apache.tika.sax.XHTMLContentHandler(p10, p11);
        v1_3.startDocument();
        org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio v2 = org.apache.tika.parser.mp3.Mp3Parser.getAllTagHandlers(p9, p10);
        if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$000(v2).length > 0) {
            String v3_21 = new org.apache.tika.parser.mp3.CompositeTagHandler(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$000(v2));
            p11.set("title", v3_21.getTitle());
            p11.set("Author", v3_21.getArtist());
            p11.set(org.apache.tika.metadata.XMPDM.ARTIST, v3_21.getArtist());
            p11.set(org.apache.tika.metadata.XMPDM.COMPOSER, v3_21.getComposer());
            p11.set(org.apache.tika.metadata.XMPDM.ALBUM, v3_21.getAlbum());
            p11.set(org.apache.tika.metadata.XMPDM.RELEASE_DATE, v3_21.getYear());
            p11.set(org.apache.tika.metadata.XMPDM.GENRE, v3_21.getGenre());
            String v4_10 = new java.util.ArrayList();
            String v5_0 = v3_21.getComments().iterator();
            while (v5_0.hasNext()) {
                String v0_33 = ((org.apache.tika.parser.mp3.ID3Tags$ID3Comment) v5_0.next());
                String v6_1 = new StringBuffer();
                if (v0_33.getLanguage() != null) {
                    v6_1.append(v0_33.getLanguage());
                    v6_1.append(" - ");
                }
                if (v0_33.getDescription() != null) {
                    v6_1.append(v0_33.getDescription());
                    if (v0_33.getText() != null) {
                        v6_1.append("\n");
                    }
                }
                if (v0_33.getText() != null) {
                    v6_1.append(v0_33.getText());
                }
                v4_10.add(v6_1.toString());
                p11.add(org.apache.tika.metadata.XMPDM.LOG_COMMENT.getName(), v6_1.toString());
            }
            v1_3.element("h1", v3_21.getTitle());
            v1_3.element("p", v3_21.getArtist());
            if (v3_21.getTrackNumber() == null) {
                v1_3.element("p", v3_21.getAlbum());
            } else {
                v1_3.element("p", new StringBuilder().append(v3_21.getAlbum()).append(", track ").append(v3_21.getTrackNumber()).toString());
                p11.set(org.apache.tika.metadata.XMPDM.TRACK_NUMBER, v3_21.getTrackNumber());
            }
            v1_3.element("p", v3_21.getYear());
            v1_3.element("p", v3_21.getGenre());
            String v3_0 = v4_10.iterator();
            while (v3_0.hasNext()) {
                v1_3.element("p", ((String) v3_0.next()));
            }
        }
        if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2) != null) {
            p11.set("samplerate", String.valueOf(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getSampleRate()));
            p11.set("channels", String.valueOf(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getChannels()));
            p11.set("version", org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getVersion());
            p11.set(org.apache.tika.metadata.XMPDM.AUDIO_SAMPLE_RATE, Integer.toString(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getSampleRate()));
            if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getChannels() != 1) {
                if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getChannels() != 2) {
                    if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getChannels() != 5) {
                        if (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$100(v2).getChannels() == 7) {
                            p11.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "7.1");
                        }
                    } else {
                        p11.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "5.1");
                    }
                } else {
                    p11.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "Stereo");
                }
            } else {
                p11.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "Mono");
            }
        }
        if ((org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$200(v2) != null) && (org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$200(v2).hasLyrics())) {
            v1_3.startElement("p", "class", "lyrics");
            v1_3.characters(org.apache.tika.parser.mp3.Mp3Parser$ID3TagsAndAudio.access$200(v2).lyricsText);
            v1_3.endElement("p");
        }
        v1_3.endDocument();
        return;
    }
}
package org.apache.tika.parser.ogg;
public class CRCUtils {
    protected static final Integer CRC_POLYNOMIAL;
    private static int[] CRC_TABLE;

    static CRCUtils()
    {
        org.apache.tika.parser.ogg.CRCUtils.CRC_POLYNOMIAL = Integer.valueOf(79764919);
        int v0_5 = new int[256];
        org.apache.tika.parser.ogg.CRCUtils.CRC_TABLE = v0_5;
        int v3 = 0;
        while (v3 < 256) {
            int v0_0 = (v3 << 24);
            int v1_0 = 0;
            while (v1_0 < 8) {
                if ((-2147483648 & v0_0) == 0) {
                    v0_0 <<= 1;
                } else {
                    v0_0 = ((v0_0 << 1) ^ org.apache.tika.parser.ogg.CRCUtils.CRC_POLYNOMIAL.intValue());
                }
                v1_0++;
            }
            org.apache.tika.parser.ogg.CRCUtils.CRC_TABLE[v3] = v0_0;
            v3++;
        }
        return;
    }

    public CRCUtils()
    {
        return;
    }

    public static int getCRC(byte[] p1)
    {
        return org.apache.tika.parser.ogg.CRCUtils.getCRC(p1, 0);
    }

    public static int getCRC(byte[] p5, int p6)
    {
        int v0 = 0;
        while (v0 < p5.length) {
            p6 = ((p6 << 8) ^ org.apache.tika.parser.ogg.CRCUtils.CRC_TABLE[(((p6 >> 24) & 255) ^ (p5[v0] & 255))]);
            v0++;
        }
        return p6;
    }
}
package org.apache.tika.parser.ogg;
public class IOUtils {

    public IOUtils()
    {
        return;
    }

    public static byte fromInt(int p3)
    {
        if (p3 <= 256) {
            byte v0_3;
            if (p3 <= 127) {
                v0_3 = ((byte) p3);
            } else {
                v0_3 = ((byte) (p3 + -256));
            }
            return v0_3;
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Number ").append(p3).append(" too big").toString());
        }
    }

    public static int getInt(int p2, int p3)
    {
        return ((p3 << 8) + (p2 << 0));
    }

    public static long getInt(int p2, int p3, int p4)
    {
        return ((long) (((p4 << 16) + (p3 << 8)) + (p2 << 0)));
    }

    public static long getInt(int p2, int p3, int p4, int p5)
    {
        return ((long) ((((p5 << 24) + (p4 << 16)) + (p3 << 8)) + (p2 << 0)));
    }

    public static long getInt(int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11)
    {
        return (((((((((long) (p11 << 56)) + ((long) (p10 << 48))) + ((long) (p9 << 40))) + ((long) (p8 << 32))) + ((long) (p7 << 24))) + ((long) (p6 << 16))) + ((long) (p5 << 8))) + ((long) (p4 << 0)));
    }

    public static int getInt2(byte[] p1)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt2(p1, 0);
    }

    public static int getInt2(byte[] p3, int p4)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt((p3[p4] & 255), (p3[(p4 + 1)] & 255));
    }

    public static int getInt2BE(byte[] p1)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt2BE(p1, 0);
    }

    public static int getInt2BE(byte[] p3, int p4)
    {
        return org.apache.tika.parser.ogg.IOUtils.getIntBE((p3[p4] & 255), (p3[(p4 + 1)] & 255));
    }

    public static long getInt3(byte[] p2)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt3(p2, 0);
    }

    public static long getInt3(byte[] p4, int p5)
    {
        long v0_0 = (p5 + 1);
        return org.apache.tika.parser.ogg.IOUtils.getInt((p4[p5] & 255), (p4[v0_0] & 255), (p4[(v0_0 + 1)] & 255));
    }

    public static long getInt3BE(byte[] p2)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt3BE(p2, 0);
    }

    public static long getInt3BE(byte[] p4, int p5)
    {
        long v0_0 = (p5 + 1);
        return org.apache.tika.parser.ogg.IOUtils.getIntBE((p4[p5] & 255), (p4[v0_0] & 255), (p4[(v0_0 + 1)] & 255));
    }

    public static long getInt4(byte[] p2)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt4(p2, 0);
    }

    public static long getInt4(byte[] p5, int p6)
    {
        long v0_0 = (p6 + 1);
        int v2_0 = (v0_0 + 1);
        return org.apache.tika.parser.ogg.IOUtils.getInt((p5[p6] & 255), (p5[v0_0] & 255), (p5[v2_0] & 255), (p5[(v2_0 + 1)] & 255));
    }

    public static long getInt4BE(byte[] p2)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt4BE(p2, 0);
    }

    public static long getInt4BE(byte[] p5, int p6)
    {
        long v0_0 = (p6 + 1);
        int v2_0 = (v0_0 + 1);
        return org.apache.tika.parser.ogg.IOUtils.getIntBE((p5[p6] & 255), (p5[v0_0] & 255), (p5[v2_0] & 255), (p5[(v2_0 + 1)] & 255));
    }

    public static long getInt8(byte[] p2)
    {
        return org.apache.tika.parser.ogg.IOUtils.getInt8(p2, 0);
    }

    public static long getInt8(byte[] p9, int p10)
    {
        int v1_0 = (p10 + 1);
        int v2_0 = (v1_0 + 1);
        int v3_2 = (v2_0 + 1);
        int v4_2 = (v3_2 + 1);
        int v5_0 = (v4_2 + 1);
        int v6_0 = (v5_0 + 1);
        return org.apache.tika.parser.ogg.IOUtils.getInt((p9[p10] & 255), (p9[v1_0] & 255), (p9[v2_0] & 255), (p9[v3_2] & 255), (p9[v4_2] & 255), (p9[v5_0] & 255), (p9[v6_0] & 255), (p9[(v6_0 + 1)] & 255));
    }

    public static int getIntBE(int p2, int p3)
    {
        return ((p2 << 8) + (p3 << 0));
    }

    public static long getIntBE(int p2, int p3, int p4)
    {
        return ((long) (((p2 << 16) + (p3 << 8)) + (p4 << 0)));
    }

    public static long getIntBE(int p2, int p3, int p4, int p5)
    {
        return ((long) ((((p2 << 24) + (p3 << 16)) + (p4 << 8)) + (p5 << 0)));
    }

    public static String getUTF8(byte[] p3, int p4, int p5)
    {
        try {
            return new String(p3, p4, p5, "UTF-8");
        } catch (java.io.UnsupportedEncodingException v0_2) {
            throw new RuntimeException("Broken JVM, UTF-8 not found", v0_2);
        }
    }

    public static void putInt2(byte[] p2, int p3, int p4)
    {
        int v0 = (p3 + 1);
        p2[p3] = ((byte) ((p4 >> 0) & 255));
        p2[v0] = ((byte) ((p4 >> 8) & 255));
        return;
    }

    public static void putInt2BE(byte[] p2, int p3, int p4)
    {
        p2[(p3 + 1)] = ((byte) ((p4 >> 0) & 255));
        p2[(p3 + 0)] = ((byte) ((p4 >> 8) & 255));
        return;
    }

    public static void putInt3(byte[] p6, int p7, long p8)
    {
        byte v0_0 = (p7 + 1);
        p6[p7] = ((byte) ((int) ((p8 >> 0) & 255)));
        int v1_5 = (v0_0 + 1);
        p6[v0_0] = ((byte) ((int) ((p8 >> 8) & 255)));
        p6[v1_5] = ((byte) ((int) ((p8 >> 16) & 255)));
        return;
    }

    public static void putInt3BE(byte[] p5, int p6, long p7)
    {
        p5[(p6 + 2)] = ((byte) ((int) ((p7 >> 0) & 255)));
        p5[(p6 + 1)] = ((byte) ((int) ((p7 >> 8) & 255)));
        p5[(p6 + 0)] = ((byte) ((int) ((p7 >> 16) & 255)));
        return;
    }

    public static void putInt4(byte[] p6, int p7, long p8)
    {
        int v0_0 = (p7 + 1);
        p6[p7] = ((byte) ((int) ((p8 >> 0) & 255)));
        byte v1_10 = (v0_0 + 1);
        p6[v0_0] = ((byte) ((int) ((p8 >> 8) & 255)));
        int v0_1 = (v1_10 + 1);
        p6[v1_10] = ((byte) ((int) ((p8 >> 16) & 255)));
        p6[v0_1] = ((byte) ((int) ((p8 >> 24) & 255)));
        return;
    }

    public static void putInt4BE(byte[] p5, int p6, long p7)
    {
        p5[(p6 + 3)] = ((byte) ((int) ((p7 >> 0) & 255)));
        p5[(p6 + 2)] = ((byte) ((int) ((p7 >> 8) & 255)));
        p5[(p6 + 1)] = ((byte) ((int) ((p7 >> 16) & 255)));
        p5[(p6 + 0)] = ((byte) ((int) ((p7 >> 24) & 255)));
        return;
    }

    public static void putInt8(byte[] p6, int p7, long p8)
    {
        int v0_0 = (p7 + 1);
        p6[p7] = ((byte) ((int) ((p8 >> 0) & 255)));
        byte v1_12 = (v0_0 + 1);
        p6[v0_0] = ((byte) ((int) ((p8 >> 8) & 255)));
        int v0_1 = (v1_12 + 1);
        p6[v1_12] = ((byte) ((int) ((p8 >> 16) & 255)));
        byte v1_1 = (v0_1 + 1);
        p6[v0_1] = ((byte) ((int) ((p8 >> 24) & 255)));
        int v0_2 = (v1_1 + 1);
        p6[v1_1] = ((byte) ((int) ((p8 >> 32) & 255)));
        byte v1_3 = (v0_2 + 1);
        p6[v0_2] = ((byte) ((int) ((p8 >> 40) & 255)));
        int v0_3 = (v1_3 + 1);
        p6[v1_3] = ((byte) ((int) ((p8 >> 48) & 255)));
        p6[v0_3] = ((byte) ((int) ((p8 >> 56) & 255)));
        return;
    }

    public static int putUTF8(byte[] p3, int p4, String p5)
    {
        try {
            java.io.UnsupportedEncodingException v0_1 = p5.getBytes("UTF-8");
            System.arraycopy(v0_1, 0, p3, p4, v0_1.length);
            return v0_1.length;
        } catch (java.io.UnsupportedEncodingException v0_3) {
            throw new RuntimeException("Broken JVM, UTF-8 not found", v0_3);
        }
    }

    public static void readFully(java.io.InputStream p2, byte[] p3)
    {
        org.apache.tika.parser.ogg.IOUtils.readFully(p2, p3, 0, p3.length);
        return;
    }

    public static void readFully(java.io.InputStream p4, byte[] p5, int p6, int p7)
    {
        int v0_0 = 0;
        while (v0_0 < p7) {
            java.io.IOException v1_3 = p4.read(p5, (p6 + v0_0), (p7 - v0_0));
            if (v1_3 != -1) {
                v0_0 += v1_3;
            } else {
                throw new java.io.IOException(new StringBuilder().append("Asked to read ").append(p7).append(" bytes from ").append(p6).append(" but hit EoF at ").append(v0_0).toString());
            }
        }
        return;
    }

    public static int toInt(byte p0)
    {
        if (p0 < 0) {
            p0 &= 255;
        }
        return p0;
    }

    public static void writeInt2(java.io.OutputStream p2, int p3)
    {
        byte[] v0_1 = new byte[2];
        org.apache.tika.parser.ogg.IOUtils.putInt2(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt2BE(java.io.OutputStream p2, int p3)
    {
        byte[] v0_1 = new byte[2];
        org.apache.tika.parser.ogg.IOUtils.putInt2BE(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt3(java.io.OutputStream p2, long p3)
    {
        byte[] v0_1 = new byte[3];
        org.apache.tika.parser.ogg.IOUtils.putInt3(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt3BE(java.io.OutputStream p2, long p3)
    {
        byte[] v0_1 = new byte[3];
        org.apache.tika.parser.ogg.IOUtils.putInt3BE(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt4(java.io.OutputStream p2, long p3)
    {
        byte[] v0_1 = new byte[4];
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt4BE(java.io.OutputStream p2, long p3)
    {
        byte[] v0_1 = new byte[4];
        org.apache.tika.parser.ogg.IOUtils.putInt4BE(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeInt8(java.io.OutputStream p2, long p3)
    {
        byte[] v0_1 = new byte[8];
        org.apache.tika.parser.ogg.IOUtils.putInt8(v0_1, 0, p3);
        p2.write(v0_1);
        return;
    }

    public static void writeUTF8(java.io.OutputStream p3, String p4)
    {
        try {
            p3.write(p4.getBytes("UTF-8"));
            return;
        } catch (java.io.UnsupportedEncodingException v0_2) {
            throw new RuntimeException("Broken JVM, UTF-8 not found", v0_2);
        }
    }

    public static void writeUTF8WithLength(java.io.OutputStream p3, String p4)
    {
        try {
            java.io.UnsupportedEncodingException v0_1 = p4.getBytes("UTF-8");
            org.apache.tika.parser.ogg.IOUtils.writeInt4(p3, ((long) v0_1.length));
            p3.write(v0_1);
            return;
        } catch (java.io.UnsupportedEncodingException v0_2) {
            throw new RuntimeException("Broken JVM, UTF-8 not found", v0_2);
        }
    }
}
package org.apache.tika.parser.ogg;
public class OggDetector {
    public static final org.apache.tika.mime.MediaType FLAC;
    public static final org.apache.tika.mime.MediaType OGG_AUDIO;
    public static final org.apache.tika.mime.MediaType OGG_GENERAL;
    public static final org.apache.tika.mime.MediaType OGG_VIDEO;
    public static final org.apache.tika.mime.MediaType OGG_VORBIS;

    static OggDetector()
    {
        org.apache.tika.parser.ogg.OggDetector.OGG_VIDEO = org.apache.tika.mime.MediaType.video("ogg");
        org.apache.tika.parser.ogg.OggDetector.OGG_GENERAL = org.apache.tika.mime.MediaType.application("ogg");
        org.apache.tika.parser.ogg.OggDetector.OGG_AUDIO = org.apache.tika.mime.MediaType.audio("ogg");
        org.apache.tika.parser.ogg.OggDetector.OGG_VORBIS = org.apache.tika.mime.MediaType.audio("vorbis");
        org.apache.tika.parser.ogg.OggDetector.FLAC = org.apache.tika.mime.MediaType.audio("x-flac");
        return;
    }

    public OggDetector()
    {
        return;
    }

    public org.apache.tika.mime.MediaType detect(java.io.InputStream p11, org.apache.tika.metadata.Metadata p12)
    {
        org.apache.tika.mime.MediaType v0_2;
        org.apache.tika.mime.MediaType v0_0 = 0;
        if (p11 != null) {
            p11.mark(4);
            try {
                if ((p11.read() == 79) && ((p11.read() == 103) && ((p11.read() == 103) && (p11.read() == 83)))) {
                    p11.reset();
                    org.apache.tika.io.TikaInputStream v3_1 = org.apache.tika.io.TikaInputStream.cast(p11);
                    if (v3_1 != null) {
                        v3_1.mark((((int) v3_1.getLength()) + 1));
                        int v1_7 = new org.apache.tika.parser.ogg.OggFile(v3_1);
                        java.util.ArrayList v4_1 = new java.util.ArrayList();
                        org.apache.tika.parser.ogg.OggPacketReader v5 = v1_7.getPacketReader();
                        int v1_8 = 0;
                        int v2_1 = 0;
                        do {
                            boolean v6_0 = v5.getNextPacket();
                            if (!v6_0) {
                                v3_1.reset();
                                if ((v0_0 != 1) || (v2_1 != 1)) {
                                    if ((v1_8 != 1) || (v2_1 != 1)) {
                                        if ((v0_0 <= 1) || (v0_0 != v2_1)) {
                                            if ((v1_8 <= 1) || (v1_8 != v2_1)) {
                                                if (v2_1 <= 0) {
                                                    v0_2 = org.apache.tika.parser.ogg.OggDetector.OGG_GENERAL;
                                                }
                                            } else {
                                                v0_2 = org.apache.tika.parser.ogg.OggDetector.FLAC;
                                            }
                                        } else {
                                            v0_2 = org.apache.tika.parser.ogg.OggDetector.OGG_VORBIS;
                                        }
                                    } else {
                                        v0_2 = org.apache.tika.parser.ogg.OggDetector.FLAC;
                                    }
                                } else {
                                    v0_2 = org.apache.tika.parser.ogg.OggDetector.OGG_VORBIS;
                                }
                            } else {
                                if (v6_0.isBeginningOfStream()) {
                                    v2_1++;
                                    v4_1.add(Integer.valueOf(v6_0.getSid()));
                                }
                            }
                        } while((v6_0.getData() == null) || (v6_0.getData().length <= 10));
                        if (org.apache.tika.parser.vorbis.VorbisPacket.isVorbisStream(v6_0)) {
                            v0_0++;
                        }
                        if (org.apache.tika.parser.flac.FlacFirstOggPacket.isFlacStream(v6_0)) {
                            v1_8++;
                        }
                    }
                    v0_2 = org.apache.tika.parser.ogg.OggDetector.OGG_GENERAL;
                } else {
                    v0_2 = org.apache.tika.mime.MediaType.OCTET_STREAM;
                    p11.reset();
                }
            } catch (org.apache.tika.mime.MediaType v0_1) {
                p11.reset();
                throw v0_1;
            }
        } else {
            v0_2 = org.apache.tika.mime.MediaType.OCTET_STREAM;
        }
        return v0_2;
    }
}
package org.apache.tika.parser.ogg;
public class OggFile {
    private java.io.InputStream inp;
    private java.io.OutputStream out;
    private java.util.Set seenSIDs;
    private boolean writing;

    public OggFile(java.io.InputStream p2)
    {
        this.writing = 1;
        this.seenSIDs = new java.util.HashSet();
        this.inp = p2;
        this.writing = 0;
        return;
    }

    public OggFile(java.io.InputStream p8, org.apache.tika.parser.ogg.OggStreamListener p9)
    {
        this(p8);
        java.util.HashMap v2_1 = new java.util.HashMap();
        org.apache.tika.parser.ogg.OggPacketReader v3 = this.getPacketReader();
        do {
            org.apache.tika.parser.ogg.OggPacket v4 = v3.getNextPacket();
            if (v4 == null) {
                return;
            } else {
                if (!v4.isBeginningOfStream()) {
                    int v0_4 = ((org.apache.tika.parser.ogg.OggStreamReader[]) v2_1.get(Integer.valueOf(v4.getSid())));
                    if (v0_4 != 0) {
                        int v5 = v0_4.length;
                        int v1_0 = 0;
                        while (v1_0 < v5) {
                            v0_4[v1_0].processPacket(v4);
                            v1_0++;
                        }
                    }
                } else {
                    int v0_6 = p9.processNewStream(v4.getSid(), v4.getData());
                    if ((v0_6 != 0) && (v0_6.length > 0)) {
                        v2_1.put(Integer.valueOf(v4.getSid()), v0_6);
                    }
                }
            }
        } while(!v4.isEndOfStream());
        p9.processStreamEnd(v4.getSid());
    }

    public OggFile(java.io.OutputStream p3)
    {
        this.writing = 1;
        this.seenSIDs = new java.util.HashSet();
        this.out = p3;
        this.writing = 1;
        return;
    }

    public void close()
    {
        if (this.inp != null) {
            this.inp.close();
        }
        if (this.out != null) {
            this.out.close();
        }
        return;
    }

    public org.apache.tika.parser.ogg.OggPacketReader getPacketReader()
    {
        if ((!this.writing) && (this.inp != null)) {
            return new org.apache.tika.parser.ogg.OggPacketReader(this.inp);
        } else {
            throw new IllegalStateException("Can only read from a file opened with an InputStream");
        }
    }

    public org.apache.tika.parser.ogg.OggPacketWriter getPacketWriter()
    {
        return this.getPacketWriter(this.getUnusedSerialNumber());
    }

    public org.apache.tika.parser.ogg.OggPacketWriter getPacketWriter(int p3)
    {
        if (this.writing) {
            this.seenSIDs.add(Integer.valueOf(p3));
            return new org.apache.tika.parser.ogg.OggPacketWriter(this, p3);
        } else {
            throw new IllegalStateException("Can only write to a file opened with an OutputStream");
        }
    }

    protected int getUnusedSerialNumber()
    {
        do {
            int v0_2 = ((int) (Math.random() * 32767.0));
        } while(this.seenSIDs.contains(Integer.valueOf(v0_2)));
        return v0_2;
    }

    protected declared_synchronized void writePages(org.apache.tika.parser.ogg.OggPage[] p5)
    {
        try {
            int v1 = p5.length;
            java.io.OutputStream v0_0 = 0;
        } catch (java.io.OutputStream v0_1) {
            throw v0_1;
        }
        while (v0_0 < v1) {
            byte[] v2_1 = p5[v0_0];
            v2_1.writeHeader(this.out);
            this.out.write(v2_1.getData());
            v0_0++;
        }
        this.out.flush();
        return;
    }
}
package org.apache.tika.parser.ogg;
public class OggPacketData {
    private byte[] data;

    protected OggPacketData(byte[] p1)
    {
        this.data = p1;
        return;
    }

    public byte[] getData()
    {
        return this.data;
    }
}
package org.apache.tika.parser.ogg;
public class OggPacket extends org.apache.tika.parser.ogg.OggPacketData {
    private boolean bos;
    private boolean eos;
    private org.apache.tika.parser.ogg.OggPage parent;

    protected OggPacket(org.apache.tika.parser.ogg.OggPage p1, byte[] p2, boolean p3, boolean p4)
    {
        super(p2);
        super.parent = p1;
        super.bos = p3;
        super.eos = p4;
        return;
    }

    public OggPacket(byte[] p1)
    {
        super(p1);
        return;
    }

    protected org.apache.tika.parser.ogg.OggPage _getParent()
    {
        return this.parent;
    }

    public long getGranulePosition()
    {
        return this.parent.getGranulePosition();
    }

    public int getSequenceNumber()
    {
        return this.parent.getSequenceNumber();
    }

    public int getSid()
    {
        return this.parent.getSid();
    }

    public boolean isBeginningOfStream()
    {
        return this.bos;
    }

    public boolean isEndOfStream()
    {
        return this.eos;
    }

    protected void setIsBOS()
    {
        this.bos = 1;
        return;
    }

    protected void setIsEOS()
    {
        this.eos = 1;
        return;
    }

    protected void setParent(org.apache.tika.parser.ogg.OggPage p1)
    {
        this.parent = p1;
        return;
    }
}
package org.apache.tika.parser.ogg;
public class OggPacketReader {
    private java.io.InputStream inp;
    private java.util.Iterator it;
    private org.apache.tika.parser.ogg.OggPacket nextPacket;

    public OggPacketReader(java.io.InputStream p1)
    {
        this.inp = p1;
        return;
    }

    public org.apache.tika.parser.ogg.OggPacket getNextPacket()
    {
        org.apache.tika.parser.ogg.OggPacket v0_1;
        if (this.nextPacket == null) {
            if ((this.it == null) || (!this.it.hasNext())) {
                org.apache.tika.parser.ogg.OggPacket v0_2 = 0;
            } else {
                v0_2 = ((org.apache.tika.parser.ogg.OggPacketData) this.it.next());
                if ((v0_2 instanceof org.apache.tika.parser.ogg.OggPacket)) {
                    v0_1 = ((org.apache.tika.parser.ogg.OggPacket) v0_2);
                    return v0_1;
                }
            }
            String v2_0 = 0;
            int v4_0 = -1;
            int v7 = 0;
            while ((v7 < 65536) && (v2_0 == null)) {
                int v8_1 = this.inp.read();
                if (v8_1 != -1) {
                    switch (v4_0) {
                        case -1:
                            if (v8_1 != 79) {
                            } else {
                                v4_0 = 0;
                            }
                        case 0:
                            if (v8_1 != 103) {
                                v4_0 = -1;
                            } else {
                                v4_0 = 1;
                            }
                            break;
                        case 1:
                            if (v8_1 != 103) {
                                v4_0 = -1;
                            } else {
                                v4_0 = 2;
                            }
                            break;
                        case 2:
                            if (v8_1 != 83) {
                                v4_0 = -1;
                            } else {
                                v2_0 = 1;
                            }
                            break;
                    }
                    if (v2_0 == null) {
                        v7++;
                    }
                } else {
                    v0_1 = 0;
                }
            }
            if (v2_0 != null) {
                org.apache.tika.parser.ogg.OggPage v1_1 = (v7 - 3);
                if (v1_1 > null) {
                    System.err.println(new StringBuilder().append("Warning - had to skip ").append(v1_1).append(" bytes of junk data before finding the next packet header").toString());
                }
                org.apache.tika.parser.ogg.OggPage v1_6 = new org.apache.tika.parser.ogg.OggPage(this.inp);
                if (!v1_6.isChecksumValid()) {
                    System.err.println(new StringBuilder().append("Warning - invalid checksum on page ").append(v1_6.getSequenceNumber()).append(" of stream ").append(Integer.toHexString(v1_6.getSid())).append(" (").append(v1_6.getSid()).append(")").toString());
                }
                this.it = v1_6.getPacketIterator(v0_2);
                v0_1 = this.getNextPacket();
            } else {
                throw new java.io.IOException(new StringBuilder().append("Next ogg packet header not found after searching ").append(v7).append(" bytes").toString());
            }
        } else {
            v0_1 = this.nextPacket;
            this.nextPacket = 0;
        }
        return v0_1;
    }

    public org.apache.tika.parser.ogg.OggPacket getNextPacketWithSid(int p3)
    {
        do {
            int v0 = this.getNextPacket();
            if (v0 == 0) {
                v0 = 0;
                break;
            } else {
            }
        } while(v0.getSid() != p3);
        return v0;
    }

    public void skipToGranulePosition(int p4, long p5)
    {
        do {
            org.apache.tika.parser.ogg.OggPacket v0 = this.getNextPacket();
            if (v0 != null) {
            }
            return;
        } while((v0.getSid() != p4) || (v0.getGranulePosition() < p5));
        this.nextPacket = v0;
        return;
    }

    public void skipToSequenceNumber(int p3, int p4)
    {
        do {
            org.apache.tika.parser.ogg.OggPacket v0 = this.getNextPacket();
            if (v0 != null) {
            }
            return;
        } while((v0.getSid() != p3) || (v0.getSequenceNumber() < p4));
        this.nextPacket = v0;
        return;
    }

    public void unreadPacket(org.apache.tika.parser.ogg.OggPacket p3)
    {
        if (this.nextPacket == null) {
            this.nextPacket = p3;
            return;
        } else {
            throw new IllegalStateException("Can\'t un-read twice");
        }
    }
}
package org.apache.tika.parser.ogg;
public class OggPacketWriter {
    private java.util.ArrayList buffer;
    private boolean closed;
    private long currentGranulePosition;
    private boolean doneFirstPacket;
    private org.apache.tika.parser.ogg.OggFile file;
    private int sequenceNumber;
    private int sid;

    protected OggPacketWriter(org.apache.tika.parser.ogg.OggFile p4, int p5)
    {
        this.closed = 0;
        this.doneFirstPacket = 0;
        this.currentGranulePosition = 0;
        this.buffer = new java.util.ArrayList();
        this.file = p4;
        this.sid = p5;
        this.sequenceNumber = 0;
        return;
    }

    private org.apache.tika.parser.ogg.OggPage getCurrentPage(boolean p6)
    {
        if ((this.buffer.size() != 0) && (!p6)) {
            org.apache.tika.parser.ogg.OggPage v0_2 = ((org.apache.tika.parser.ogg.OggPage) this.buffer.get((this.buffer.size() - 1)));
        } else {
            java.util.ArrayList v1_0 = this.sid;
            int v2 = this.sequenceNumber;
            this.sequenceNumber = (v2 + 1);
            v0_2 = new org.apache.tika.parser.ogg.OggPage(v1_0, v2);
            if (this.currentGranulePosition > 0) {
                v0_2.setGranulePosition(this.currentGranulePosition);
            }
            this.buffer.add(v0_2);
        }
        return v0_2;
    }

    public void bufferPacket(org.apache.tika.parser.ogg.OggPacket p7)
    {
        if (!this.closed) {
            if (!this.doneFirstPacket) {
                p7.setIsBOS();
                this.doneFirstPacket = 1;
            }
            org.apache.tika.parser.ogg.OggPage v0_0;
            int v5 = p7.getData().length;
            if (v5 != 0) {
                v0_0 = 0;
            } else {
                v0_0 = 1;
            }
            int v4 = v0_0;
            org.apache.tika.parser.ogg.OggPage v0_1 = this.getCurrentPage(0);
            int v3_1 = 0;
            while ((v3_1 < v5) || (v4 != 0)) {
                v3_1 = v0_1.addPacket(p7, v3_1);
                if (v3_1 < v5) {
                    v0_1 = this.getCurrentPage(1);
                    v0_1.setIsContinuation();
                }
                v4 = 0;
            }
            p7.setParent(v0_1);
            return;
        } else {
            throw new IllegalStateException("Can\'t buffer packets on a closed stream!");
        }
    }

    public void bufferPacket(org.apache.tika.parser.ogg.OggPacket p1, boolean p2)
    {
        this.bufferPacket(p1);
        if (p2) {
            this.flush();
        }
        return;
    }

    public void close()
    {
        if (this.buffer.size() <= 0) {
            byte[] v1_4 = new byte[0];
            int v0_7 = new org.apache.tika.parser.ogg.OggPacket(v1_4);
            v0_7.setIsEOS();
            this.bufferPacket(v0_7);
        } else {
            ((org.apache.tika.parser.ogg.OggPage) this.buffer.get((this.buffer.size() - 1))).setIsEOS();
        }
        this.flush();
        this.closed = 1;
        return;
    }

    public void flush()
    {
        if (!this.closed) {
            org.apache.tika.parser.ogg.OggFile v1_4 = new org.apache.tika.parser.ogg.OggPage[this.buffer.size()];
            this.file.writePages(((org.apache.tika.parser.ogg.OggPage[]) this.buffer.toArray(v1_4)));
            this.buffer.clear();
            return;
        } else {
            throw new IllegalStateException("Can\'t flush packets on a closed stream!");
        }
    }

    public long getCurrentGranulePosition()
    {
        return this.currentGranulePosition;
    }

    public int getSid()
    {
        return this.sid;
    }

    public int getSizePendingFlush()
    {
        java.util.Iterator v2 = this.buffer.iterator();
        int v1_1 = 0;
        while (v2.hasNext()) {
            v1_1 = (((org.apache.tika.parser.ogg.OggPage) v2.next()).getDataSize() + v1_1);
        }
        return v1_1;
    }

    public void setGranulePosition(long p3)
    {
        this.currentGranulePosition = p3;
        java.util.Iterator v1 = this.buffer.iterator();
        while (v1.hasNext()) {
            ((org.apache.tika.parser.ogg.OggPage) v1.next()).setGranulePosition(p3);
        }
        return;
    }
}
package org.apache.tika.parser.ogg;
synthetic class OggPage$1 {
}
package org.apache.tika.parser.ogg;
public class OggPage$OggPacketIterator implements java.util.Iterator {
    private int currentLV;
    private int currentOffset;
    private org.apache.tika.parser.ogg.OggPacketData prevPart;
    final synthetic org.apache.tika.parser.ogg.OggPage this$0;

    private OggPage$OggPacketIterator(org.apache.tika.parser.ogg.OggPage p2, org.apache.tika.parser.ogg.OggPacketData p3)
    {
        this.this$0 = p2;
        this.currentLV = 0;
        this.currentOffset = 0;
        this.prevPart = p3;
        return;
    }

    synthetic OggPage$OggPacketIterator(org.apache.tika.parser.ogg.OggPage p1, org.apache.tika.parser.ogg.OggPacketData p2, org.apache.tika.parser.ogg.OggPage$1 p3)
    {
        this(p1, p2);
        return;
    }

    public boolean hasNext()
    {
        int v0 = 1;
        if ((this.currentLV >= org.apache.tika.parser.ogg.OggPage.access$100(this.this$0)) && ((this.currentLV != 0) || (org.apache.tika.parser.ogg.OggPage.access$100(this.this$0) != 0))) {
            v0 = 0;
        }
        return v0;
    }

    public bridge synthetic Object next()
    {
        return this.next();
    }

    public org.apache.tika.parser.ogg.OggPacketData next()
    {
        int v2_0 = 0;
        org.apache.tika.parser.ogg.OggPacket v0_1 = this.currentLV;
        int v1_0 = 0;
        int v3 = 0;
        org.apache.tika.parser.ogg.OggPacket v4_0 = 0;
        while (v0_1 < org.apache.tika.parser.ogg.OggPage.access$100(this.this$0)) {
            byte[] v6_3 = org.apache.tika.parser.ogg.IOUtils.toInt(org.apache.tika.parser.ogg.OggPage.access$200(this.this$0)[v0_1]);
            v1_0 += v6_3;
            v3++;
            if (v6_3 < 255) {
                break;
            }
            if ((v0_1 == (org.apache.tika.parser.ogg.OggPage.access$100(this.this$0) - 1)) && (v6_3 == 255)) {
                v4_0 = 1;
            }
            v0_1++;
        }
        byte[] v6_4 = new byte[v1_0];
        org.apache.tika.parser.ogg.OggPacket v0_0 = this.currentLV;
        while (v0_0 < (this.currentLV + v3)) {
            int v8_6 = ((v0_0 - this.currentLV) * 255);
            System.arraycopy(org.apache.tika.parser.ogg.OggPage.access$300(this.this$0), (this.currentOffset + v8_6), v6_4, v8_6, org.apache.tika.parser.ogg.IOUtils.toInt(org.apache.tika.parser.ogg.OggPage.access$200(this.this$0)[v0_0]));
            v0_0++;
        }
        if (this.prevPart != null) {
            org.apache.tika.parser.ogg.OggPage v7_5 = this.prevPart.getData().length;
            org.apache.tika.parser.ogg.OggPacket v0_7 = new byte[(v6_4.length + v7_5)];
            System.arraycopy(this.prevPart.getData(), 0, v0_7, 0, v7_5);
            System.arraycopy(v6_4, 0, v0_7, v7_5, v6_4.length);
            this.prevPart = 0;
            v6_4 = v0_7;
        }
        org.apache.tika.parser.ogg.OggPacket v0_12;
        if (v4_0 == null) {
            if ((!org.apache.tika.parser.ogg.OggPage.access$400(this.this$0)) || (this.currentLV != 0)) {
                org.apache.tika.parser.ogg.OggPacket v0_11 = 0;
            } else {
                v0_11 = 1;
            }
            if ((org.apache.tika.parser.ogg.OggPage.access$500(this.this$0)) && ((this.currentLV + v3) == org.apache.tika.parser.ogg.OggPage.access$100(this.this$0))) {
                v2_0 = 1;
            }
            v0_12 = new org.apache.tika.parser.ogg.OggPacket(this.this$0, v6_4, v0_11, v2_0);
        } else {
            v0_12 = new org.apache.tika.parser.ogg.OggPacketData(v6_4);
        }
        this.currentLV = (this.currentLV + v3);
        this.currentOffset = (v1_0 + this.currentOffset);
        if (this.currentLV == 0) {
            this.currentLV = 1;
        }
        return v0_12;
    }

    public void remove()
    {
        throw new IllegalStateException("Remove not supported");
    }
}
package org.apache.tika.parser.ogg;
public class OggPage {
    private long checksum;
    private byte[] data;
    private long granulePosition;
    private boolean isBOS;
    private boolean isContinue;
    private boolean isEOS;
    private byte[] lvs;
    private int numLVs;
    private int seqNum;
    private int sid;
    private java.io.ByteArrayOutputStream tmpData;

    protected OggPage(int p2, int p3)
    {
        this.numLVs = 0;
        java.io.ByteArrayOutputStream v0_2 = new byte[255];
        this.lvs = v0_2;
        this.sid = p2;
        this.seqNum = p3;
        this.tmpData = new java.io.ByteArrayOutputStream();
        return;
    }

    protected OggPage(java.io.InputStream p9)
    {
        this.numLVs = 0;
        byte[] v0_9 = new byte[255];
        this.lvs = v0_9;
        byte[] v0_18 = p9.read();
        if (v0_18 == null) {
            byte[] v0_2 = p9.read();
            if ((v0_2 & 1) == 1) {
                this.isContinue = 1;
            }
            if ((v0_2 & 2) == 2) {
                this.isBOS = 1;
            }
            if ((v0_2 & 4) == 4) {
                this.isEOS = 1;
            }
            this.granulePosition = org.apache.tika.parser.ogg.IOUtils.getInt(p9.read(), p9.read(), p9.read(), p9.read(), p9.read(), p9.read(), p9.read(), p9.read());
            this.sid = ((int) org.apache.tika.parser.ogg.IOUtils.getInt(p9.read(), p9.read(), p9.read(), p9.read()));
            this.seqNum = ((int) org.apache.tika.parser.ogg.IOUtils.getInt(p9.read(), p9.read(), p9.read(), p9.read()));
            this.checksum = org.apache.tika.parser.ogg.IOUtils.getInt(p9.read(), p9.read(), p9.read(), p9.read());
            this.numLVs = p9.read();
            byte[] v0_20 = new byte[this.numLVs];
            this.lvs = v0_20;
            org.apache.tika.parser.ogg.IOUtils.readFully(p9, this.lvs);
            byte[] v0_23 = new byte[this.getDataSize()];
            this.data = v0_23;
            org.apache.tika.parser.ogg.IOUtils.readFully(p9, this.data);
            return;
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Found Ogg page in format ").append(v0_18).append(" but we only support version 0").toString());
        }
    }

    static synthetic int access$100(org.apache.tika.parser.ogg.OggPage p1)
    {
        return p1.numLVs;
    }

    static synthetic byte[] access$200(org.apache.tika.parser.ogg.OggPage p1)
    {
        return p1.lvs;
    }

    static synthetic byte[] access$300(org.apache.tika.parser.ogg.OggPage p1)
    {
        return p1.data;
    }

    static synthetic boolean access$400(org.apache.tika.parser.ogg.OggPage p1)
    {
        return p1.isBOS;
    }

    static synthetic boolean access$500(org.apache.tika.parser.ogg.OggPage p1)
    {
        return p1.isEOS;
    }

    protected int addPacket(org.apache.tika.parser.ogg.OggPacket p8, int p9)
    {
        if (p8.isBeginningOfStream()) {
            this.isBOS = 1;
        }
        if (p8.isEndOfStream()) {
            this.isEOS = 1;
        }
        int v4 = p8.getData().length;
        int v3 = this.numLVs;
        int v2_1 = p9;
        while (v3 < 255) {
            int v0_3 = (v4 - v2_1);
            if (v0_3 >= 255) {
                v0_3 = 255;
            }
            this.lvs[v3] = org.apache.tika.parser.ogg.IOUtils.fromInt(v0_3);
            this.tmpData.write(p8.getData(), v2_1, v0_3);
            this.numLVs = (this.numLVs + 1);
            v2_1 += v0_3;
            if (v0_3 >= 255) {
                v3++;
            } else {
                int v0_2 = v2_1;
            }
            return v0_2;
        }
        v0_2 = v2_1;
        return v0_2;
    }

    protected long getChecksum()
    {
        return this.checksum;
    }

    public byte[] getData()
    {
        if ((this.tmpData != null) && ((this.data == null) || (this.tmpData.size() != this.data.length))) {
            this.data = this.tmpData.toByteArray();
        }
        return this.data;
    }

    public int getDataSize()
    {
        int v0 = 0;
        int v1 = 0;
        while (v0 < this.numLVs) {
            v1 += org.apache.tika.parser.ogg.IOUtils.toInt(this.lvs[v0]);
            v0++;
        }
        return v1;
    }

    public long getGranulePosition()
    {
        return this.granulePosition;
    }

    protected byte[] getHeader()
    {
        byte[] v0_3;
        byte[] v2 = new byte[(this.numLVs + 27)];
        v2[0] = 79;
        v2[1] = 103;
        v2[2] = 103;
        v2[3] = 83;
        v2[4] = 0;
        if (!this.isContinue) {
            v0_3 = 0;
        } else {
            v0_3 = ((byte) 1);
        }
        if (this.isBOS) {
            v0_3 = ((byte) (v0_3 + 2));
        }
        if (this.isEOS) {
            v0_3 = ((byte) (v0_3 + 4));
        }
        v2[5] = v0_3;
        org.apache.tika.parser.ogg.IOUtils.putInt8(v2, 6, this.granulePosition);
        org.apache.tika.parser.ogg.IOUtils.putInt4(v2, 14, ((long) this.sid));
        org.apache.tika.parser.ogg.IOUtils.putInt4(v2, 18, ((long) this.seqNum));
        v2[26] = org.apache.tika.parser.ogg.IOUtils.fromInt(this.numLVs);
        System.arraycopy(this.lvs, 0, v2, 27, this.numLVs);
        return v2;
    }

    protected int getNumLVs()
    {
        return this.numLVs;
    }

    public org.apache.tika.parser.ogg.OggPage$OggPacketIterator getPacketIterator()
    {
        return new org.apache.tika.parser.ogg.OggPage$OggPacketIterator(this, 0, 0);
    }

    public org.apache.tika.parser.ogg.OggPage$OggPacketIterator getPacketIterator(org.apache.tika.parser.ogg.OggPacketData p3)
    {
        return new org.apache.tika.parser.ogg.OggPage$OggPacketIterator(this, p3, 0);
    }

    public int getPageSize()
    {
        return ((this.numLVs + 27) + this.getDataSize());
    }

    public int getSequenceNumber()
    {
        return this.seqNum;
    }

    public int getSid()
    {
        return this.sid;
    }

    public boolean hasContinuation()
    {
        int v0 = 0;
        if ((this.numLVs != 0) && (org.apache.tika.parser.ogg.IOUtils.toInt(this.lvs[(this.numLVs - 1)]) == 255)) {
            v0 = 1;
        }
        return v0;
    }

    protected boolean hasSpaceFor(int p5)
    {
        int v0_1;
        if ((((int) Math.ceil((((double) p5) / 255.0))) + this.numLVs) <= 255) {
            v0_1 = 1;
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    public boolean isChecksumValid()
    {
        int v1 = 1;
        if (this.checksum != 0) {
            int v0_0 = org.apache.tika.parser.ogg.CRCUtils.getCRC(this.getHeader());
            if ((this.data != null) && (this.data.length > 0)) {
                v0_0 = org.apache.tika.parser.ogg.CRCUtils.getCRC(this.data, v0_0);
            }
            int v0_2;
            if (this.checksum != ((long) v0_0)) {
                v0_2 = 0;
            } else {
                v0_2 = 1;
            }
            v1 = v0_2;
        }
        return v1;
    }

    public boolean isContinuation()
    {
        return this.isContinue;
    }

    protected void setGranulePosition(long p1)
    {
        this.granulePosition = p1;
        return;
    }

    protected void setIsContinuation()
    {
        this.isContinue = 1;
        return;
    }

    protected void setIsEOS()
    {
        this.isEOS = 1;
        return;
    }

    public String toString()
    {
        return new StringBuilder().append("Ogg Page - ").append(this.getSid()).append(" @ ").append(this.getSequenceNumber()).append(" - ").append(this.numLVs).append(" LVs").toString();
    }

    public void writeHeader(java.io.OutputStream p6)
    {
        byte[] v1 = this.getHeader();
        this.getData();
        int v0 = org.apache.tika.parser.ogg.CRCUtils.getCRC(v1);
        if ((this.data != null) && (this.data.length > 0)) {
            v0 = org.apache.tika.parser.ogg.CRCUtils.getCRC(this.data, v0);
        }
        org.apache.tika.parser.ogg.IOUtils.putInt4(v1, 22, ((long) v0));
        this.checksum = ((long) v0);
        p6.write(v1);
        return;
    }
}
package org.apache.tika.parser.ogg;
public class OggParser extends org.apache.tika.parser.AbstractParser {
    private static java.util.List TYPES;

    static OggParser()
    {
        java.util.List v0_1 = new org.apache.tika.mime.MediaType[1];
        v0_1[0] = org.apache.tika.parser.ogg.OggDetector.OGG_VIDEO;
        org.apache.tika.parser.ogg.OggParser.TYPES = java.util.Arrays.asList(v0_1);
        return;
    }

    public OggParser()
    {
        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext p3)
    {
        return new java.util.HashSet(org.apache.tika.parser.ogg.OggParser.TYPES);
    }

    public void parse(java.io.InputStream p9, org.xml.sax.ContentHandler p10, org.apache.tika.metadata.Metadata p11, org.apache.tika.parser.ParseContext p12)
    {
        int v0_0 = 0;
        int v1_1 = new org.apache.tika.parser.ogg.OggFile(p9);
        String v3_2 = new java.util.ArrayList();
        org.apache.tika.parser.ogg.OggPacketReader v4 = v1_1.getPacketReader();
        int v1_3 = 0;
        int v2_2 = 0;
        do {
            boolean v5_0 = v4.getNextPacket();
            if (!v5_0) {
                p11.add("streams-total", Integer.toString(v2_2));
                p11.add("streams-vorbis", Integer.toString(v0_0));
                p11.add("streams-flac", Integer.toString(v1_3));
                return;
            } else {
                if (v5_0.isBeginningOfStream()) {
                    v2_2++;
                    v3_2.add(Integer.valueOf(v5_0.getSid()));
                }
            }
        } while((v5_0.getData() == null) || (v5_0.getData().length <= 10));
        if (org.apache.tika.parser.vorbis.VorbisPacket.isVorbisStream(v5_0)) {
            v0_0++;
        }
        if (org.apache.tika.parser.flac.FlacFirstOggPacket.isFlacStream(v5_0)) {
            v1_3++;
        }
    }
}
package org.apache.tika.parser.ogg;
public interface OggStreamListener {

    public abstract org.apache.tika.parser.ogg.OggStreamReader[] processNewStream();

    public abstract void processStreamEnd();
}
package org.apache.tika.parser.ogg;
public interface OggStreamReader {

    public abstract void processPacket();
}
package org.apache.tika.parser.vorbis;
public class VorbisAudioData extends org.apache.tika.parser.vorbis.VorbisPacket {
    private long granulePosition;

    public VorbisAudioData(org.apache.tika.parser.ogg.OggPacket p3)
    {
        super(p3);
        super.granulePosition = p3.getGranulePosition();
        return;
    }

    public VorbisAudioData(byte[] p3)
    {
        this.setData(p3);
        this.granulePosition = -1;
        return;
    }

    public long getGranulePosition()
    {
        return this.granulePosition;
    }

    protected int getHeaderSize()
    {
        return 0;
    }

    public void setGranulePosition(long p1)
    {
        this.granulePosition = p1;
        return;
    }
}
package org.apache.tika.parser.vorbis;
public class VorbisFile {
    private org.apache.tika.parser.vorbis.VorbisComments comment;
    private org.apache.tika.parser.vorbis.VorbisInfo info;
    private org.apache.tika.parser.ogg.OggFile ogg;
    private org.apache.tika.parser.ogg.OggPacketReader r;
    private org.apache.tika.parser.vorbis.VorbisSetup setup;
    private int sid;
    private org.apache.tika.parser.ogg.OggPacketWriter w;
    private java.util.List writtenPackets;

    public VorbisFile(java.io.File p3)
    {
        this(new org.apache.tika.parser.ogg.OggFile(new java.io.FileInputStream(p3)));
        return;
    }

    public VorbisFile(java.io.OutputStream p4)
    {
        this(p4, new org.apache.tika.parser.vorbis.VorbisInfo(), new org.apache.tika.parser.vorbis.VorbisComments(), new org.apache.tika.parser.vorbis.VorbisSetup());
        return;
    }

    public VorbisFile(java.io.OutputStream p2, int p3, org.apache.tika.parser.vorbis.VorbisInfo p4, org.apache.tika.parser.vorbis.VorbisComments p5, org.apache.tika.parser.vorbis.VorbisSetup p6)
    {
        this.sid = -1;
        this.ogg = new org.apache.tika.parser.ogg.OggFile(p2);
        if (p3 <= 0) {
            this.w = this.ogg.getPacketWriter();
            this.sid = this.w.getSid();
        } else {
            this.w = this.ogg.getPacketWriter(p3);
            this.sid = p3;
        }
        this.writtenPackets = new java.util.ArrayList();
        this.info = p4;
        this.comment = p5;
        this.setup = p6;
        return;
    }

    public VorbisFile(java.io.OutputStream p7, org.apache.tika.parser.vorbis.VorbisInfo p8, org.apache.tika.parser.vorbis.VorbisComments p9, org.apache.tika.parser.vorbis.VorbisSetup p10)
    {
        this(p7, -1, p8, p9, p10);
        return;
    }

    public VorbisFile(org.apache.tika.parser.ogg.OggFile p2)
    {
        this(p2.getPacketReader());
        this.ogg = p2;
        return;
    }

    public VorbisFile(org.apache.tika.parser.ogg.OggPacketReader p4)
    {
        this.sid = -1;
        this.r = p4;
        while(true) {
            IllegalArgumentException v0_11 = p4.getNextPacket();
            if (v0_11 == null) {
                break;
            }
            if ((v0_11.isBeginningOfStream()) && (v0_11.getData().length > 10)) {
                try {
                    org.apache.tika.parser.vorbis.VorbisPacket.create(v0_11);
                    this.sid = v0_11.getSid();
                    break;
                } catch (IllegalArgumentException v0) {
                }
            }
        }
        this.info = ((org.apache.tika.parser.vorbis.VorbisInfo) org.apache.tika.parser.vorbis.VorbisPacket.create(v0_11));
        this.comment = ((org.apache.tika.parser.vorbis.VorbisComments) org.apache.tika.parser.vorbis.VorbisPacket.create(p4.getNextPacketWithSid(this.sid)));
        this.setup = ((org.apache.tika.parser.vorbis.VorbisSetup) org.apache.tika.parser.vorbis.VorbisPacket.create(p4.getNextPacketWithSid(this.sid)));
        return;
    }

    public void close()
    {
        if (this.r != null) {
            this.r = 0;
            this.ogg.close();
            this.ogg = 0;
        }
        if (this.w != null) {
            this.w.bufferPacket(this.info.write(), 1);
            this.w.bufferPacket(this.comment.write(), 0);
            this.w.bufferPacket(this.setup.write(), 1);
            java.util.Iterator v5_1 = this.writtenPackets.iterator();
            long v1_6 = 0;
            while (v5_1.hasNext()) {
                org.apache.tika.parser.ogg.OggPacketWriter v0_9 = ((org.apache.tika.parser.vorbis.VorbisAudioData) v5_1.next());
                if ((v0_9.getGranulePosition() >= 0) && (v1_6 != v0_9.getGranulePosition())) {
                    this.w.flush();
                    v1_6 = v0_9.getGranulePosition();
                    this.w.setGranulePosition(v1_6);
                }
                this.w.bufferPacket(v0_9.write());
                if (this.w.getSizePendingFlush() > 16384) {
                    this.w.flush();
                }
            }
            this.w.close();
            this.w = 0;
            this.ogg.close();
            this.ogg = 0;
        }
        return;
    }

    public org.apache.tika.parser.vorbis.VorbisComments getComment()
    {
        return this.comment;
    }

    public org.apache.tika.parser.vorbis.VorbisInfo getInfo()
    {
        return this.info;
    }

    public org.apache.tika.parser.vorbis.VorbisAudioData getNextAudioPacket()
    {
        while(true) {
            String v0_4;
            String v0_5 = this.r.getNextPacketWithSid(this.sid);
            if (v0_5 == null) {
                v0_4 = 0;
            } else {
                String v0_6 = org.apache.tika.parser.vorbis.VorbisPacket.create(v0_5);
                if ((v0_6 instanceof org.apache.tika.parser.vorbis.VorbisAudioData)) {
                    break;
                }
                System.err.println(new StringBuilder().append("Skipping non audio packet ").append(v0_6).append(" mid audio stream").toString());
            }
            return v0_4;
        }
        v0_4 = ((org.apache.tika.parser.vorbis.VorbisAudioData) v0_6);
        return v0_4;
    }

    public org.apache.tika.parser.ogg.OggFile getOggFile()
    {
        return this.ogg;
    }

    public org.apache.tika.parser.vorbis.VorbisSetup getSetup()
    {
        return this.setup;
    }

    public int getSid()
    {
        return this.sid;
    }

    public void skipToGranule(long p3)
    {
        this.r.skipToGranulePosition(this.sid, p3);
        return;
    }

    public void writeAudioData(org.apache.tika.parser.vorbis.VorbisAudioData p2)
    {
        this.writtenPackets.add(p2);
        return;
    }
}
package org.apache.tika.parser.vorbis;
public class VorbisInfo extends org.apache.tika.parser.vorbis.VorbisPacket {
    private int bitrateLower;
    private int bitrateNominal;
    private int bitrateUpper;
    private int blocksizes;
    private int channels;
    private long rate;
    private int version;

    public VorbisInfo()
    {
        this.version = 0;
        return;
    }

    public VorbisInfo(org.apache.tika.parser.ogg.OggPacket p4)
    {
        super(p4);
        IllegalArgumentException v0_0 = super.getData();
        super.version = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v0_0, 7));
        if (super.version == 0) {
            super.channels = v0_0[11];
            super.rate = org.apache.tika.parser.ogg.IOUtils.getInt4(v0_0, 12);
            super.bitrateUpper = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v0_0, 16));
            super.bitrateNominal = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v0_0, 20));
            super.bitrateLower = ((int) org.apache.tika.parser.ogg.IOUtils.getInt4(v0_0, 24));
            super.blocksizes = org.apache.tika.parser.ogg.IOUtils.toInt(v0_0[28]);
            if (v0_0[29] != null) {
                return;
            } else {
                throw new IllegalArgumentException("Framing bit not set, invalid");
            }
        } else {
            throw new IllegalArgumentException(new StringBuilder().append("Unsupported vorbis version ").append(super.version).append(" detected").toString());
        }
    }

    public int getBitrateLower()
    {
        return this.bitrateLower;
    }

    public int getBitrateNominal()
    {
        return this.bitrateNominal;
    }

    public int getBitrateUpper()
    {
        return this.bitrateUpper;
    }

    public int getBlocksize0()
    {
        return ((int) Math.pow(2.0, ((double) (this.blocksizes & 15))));
    }

    public int getBlocksize1()
    {
        return ((int) Math.pow(2.0, ((double) ((this.blocksizes & 240) >> 4))));
    }

    public int getChannels()
    {
        return this.channels;
    }

    protected int getHeaderSize()
    {
        return 7;
    }

    public long getRate()
    {
        return this.rate;
    }

    public int getVersion()
    {
        return this.version;
    }

    public void setBitrateLower(int p1)
    {
        this.bitrateLower = p1;
        return;
    }

    public void setBitrateNominal(int p1)
    {
        this.bitrateNominal = p1;
        return;
    }

    public void setBitrateUpper(int p1)
    {
        this.bitrateUpper = p1;
        return;
    }

    public void setBlocksize0(int p5)
    {
        this.blocksizes = (((int) (Math.log(((double) p5)) / Math.log(2.0))) + (this.blocksizes & 240));
        return;
    }

    public void setBlocksize1(int p5)
    {
        this.blocksizes = ((((int) (Math.log(((double) p5)) / Math.log(2.0))) << 4) + (this.blocksizes & 15));
        return;
    }

    public void setChannels(int p1)
    {
        this.channels = p1;
        return;
    }

    public void setRate(long p1)
    {
        this.rate = p1;
        return;
    }

    public org.apache.tika.parser.ogg.OggPacket write()
    {
        org.apache.tika.parser.ogg.OggPacket v0_1 = new byte[30];
        this.populateMetadataHeader(v0_1, 1, v0_1.length);
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 7, ((long) this.version));
        v0_1[11] = org.apache.tika.parser.ogg.IOUtils.fromInt(this.channels);
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 12, this.rate);
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 16, ((long) this.bitrateUpper));
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 20, ((long) this.bitrateNominal));
        org.apache.tika.parser.ogg.IOUtils.putInt4(v0_1, 24, ((long) this.bitrateLower));
        v0_1[28] = org.apache.tika.parser.ogg.IOUtils.fromInt(this.blocksizes);
        v0_1[29] = 1;
        this.setData(v0_1);
        return super.write();
    }
}
package org.apache.tika.parser.vorbis;
public class VorbisParser extends org.apache.tika.parser.AbstractParser {
    private static java.util.List TYPES;

    static VorbisParser()
    {
        java.util.List v0_1 = new org.apache.tika.mime.MediaType[3];
        v0_1[0] = org.apache.tika.parser.ogg.OggDetector.OGG_AUDIO;
        v0_1[1] = org.apache.tika.parser.ogg.OggDetector.OGG_VORBIS;
        v0_1[2] = org.apache.tika.parser.ogg.OggDetector.OGG_GENERAL;
        org.apache.tika.parser.vorbis.VorbisParser.TYPES = java.util.Arrays.asList(v0_1);
        return;
    }

    public VorbisParser()
    {
        return;
    }

    public static void extractChannelInfo(org.apache.tika.metadata.Metadata p2, int p3)
    {
        if (p3 != 1) {
            if (p3 != 2) {
                if (p3 != 5) {
                    if (p3 == 7) {
                        p2.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "7.1");
                    }
                } else {
                    p2.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "5.1");
                }
            } else {
                p2.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "Stereo");
            }
        } else {
            p2.set(org.apache.tika.metadata.XMPDM.AUDIO_CHANNEL_TYPE, "Mono");
        }
        return;
    }

    public static void extractComments(org.apache.tika.metadata.Metadata p5, org.apache.tika.sax.XHTMLContentHandler p6, org.apache.tika.parser.vorbis.VorbisComments p7)
    {
        p5.set("title", p7.getTitle());
        p5.set("Author", p7.getArtist());
        p5.set(org.apache.tika.metadata.XMPDM.ARTIST, p7.getArtist());
        p5.set(org.apache.tika.metadata.XMPDM.ALBUM, p7.getAlbum());
        p5.set(org.apache.tika.metadata.XMPDM.GENRE, p7.getGenre());
        p5.set(org.apache.tika.metadata.XMPDM.RELEASE_DATE, p7.getDate());
        p5.add("vendor", p7.getVendor());
        String v1_19 = p7.getComments("comment").iterator();
        while (v1_19.hasNext()) {
            p5.add(org.apache.tika.metadata.XMPDM.LOG_COMMENT.getName(), ((String) v1_19.next()));
        }
        String v0_21 = new String[8];
        v0_21[0] = "title";
        v0_21[1] = "artist";
        v0_21[2] = "album";
        v0_21[3] = "genre";
        v0_21[4] = "date";
        v0_21[5] = "tracknumber";
        v0_21[6] = "vendor";
        v0_21[7] = "comment";
        String v2_11 = java.util.Arrays.asList(v0_21);
        java.util.Iterator v3 = p7.getAllComments().keySet().iterator();
        while (v3.hasNext()) {
            String v0_11 = ((String) v3.next());
            if (!v2_11.contains(v0_11)) {
                java.util.Iterator v4 = ((java.util.List) p7.getAllComments().get(v0_11)).iterator();
                while (v4.hasNext()) {
                    p5.add(v0_11, ((String) v4.next()));
                }
            }
        }
        p6.element("h1", p7.getTitle());
        p6.element("p", p7.getArtist());
        if (p7.getTrackNumber() == null) {
            p6.element("p", p7.getAlbum());
        } else {
            p6.element("p", new StringBuilder().append(p7.getAlbum()).append(", track ").append(p7.getTrackNumber()).toString());
            p5.set(org.apache.tika.metadata.XMPDM.TRACK_NUMBER, p7.getTrackNumber());
        }
        p6.element("p", p7.getDate());
        String v1_5 = p7.getComments("comment").iterator();
        while (v1_5.hasNext()) {
            p6.element("p", ((String) v1_5.next()));
        }
        p6.element("p", p7.getGenre());
        return;
    }

    protected void extractInfo(org.apache.tika.metadata.Metadata p4, org.apache.tika.parser.vorbis.VorbisInfo p5)
    {
        p4.set(org.apache.tika.metadata.XMPDM.AUDIO_SAMPLE_RATE, ((int) p5.getRate()));
        p4.add("version", new StringBuilder().append("Vorbis ").append(p5.getVersion()).toString());
        org.apache.tika.parser.vorbis.VorbisParser.extractChannelInfo(p4, p5.getChannels());
        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext p3)
    {
        return new java.util.HashSet(org.apache.tika.parser.vorbis.VorbisParser.TYPES);
    }

    public void parse(java.io.InputStream p4, org.xml.sax.ContentHandler p5, org.apache.tika.metadata.Metadata p6, org.apache.tika.parser.ParseContext p7)
    {
        p6.set("Content-Type", org.apache.tika.parser.ogg.OggDetector.OGG_VORBIS.toString());
        p6.set(org.apache.tika.metadata.XMPDM.AUDIO_COMPRESSOR, "Vorbis");
        org.apache.tika.parser.vorbis.VorbisComments v1_2 = new org.apache.tika.parser.vorbis.VorbisFile(new org.apache.tika.parser.ogg.OggFile(p4));
        org.apache.tika.sax.XHTMLContentHandler v0_2 = new org.apache.tika.sax.XHTMLContentHandler(p5, p6);
        v0_2.startDocument();
        this.extractInfo(p6, v1_2.getInfo());
        org.apache.tika.parser.vorbis.VorbisParser.extractComments(p6, v0_2, v1_2.getComment());
        v0_2.endDocument();
        return;
    }
}
package org.apache.tika.parser.vorbis;
public class VorbisSetup extends org.apache.tika.parser.vorbis.VorbisPacket {

    public VorbisSetup()
    {
        return;
    }

    public VorbisSetup(org.apache.tika.parser.ogg.OggPacket p1)
    {
        super(p1);
        return;
    }

    protected int getHeaderSize()
    {
        return 7;
    }

    public int getNumberOfCodebooks()
    {
        byte[] v1 = this.getData();
        int v0_0 = -1;
        if ((v1 != null) && (v1.length >= 10)) {
            v0_0 = org.apache.tika.parser.ogg.IOUtils.toInt(v1[8]);
        }
        return (v0_0 + 1);
    }
}
package org.apache.tika.sax;
public class ContentHandlerDecorator extends org.xml.sax.helpers.DefaultHandler {
    static final synthetic boolean $assertionsDisabled;
    private org.xml.sax.ContentHandler handler;

    static ContentHandlerDecorator()
    {
        int v0_2;
        if (org.apache.tika.sax.ContentHandlerDecorator.desiredAssertionStatus()) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        org.apache.tika.sax.ContentHandlerDecorator.$assertionsDisabled = v0_2;
        return;
    }

    protected ContentHandlerDecorator()
    {
        this(new org.xml.sax.helpers.DefaultHandler());
        return;
    }

    public ContentHandlerDecorator(org.xml.sax.ContentHandler p2)
    {
        if ((org.apache.tika.sax.ContentHandlerDecorator.$assertionsDisabled) || (p2 != null)) {
            this.handler = p2;
            return;
        } else {
            throw new AssertionError();
        }
    }

    public void characters(char[] p2, int p3, int p4)
    {
        try {
            this.handler.characters(p2, p3, p4);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void endDocument()
    {
        try {
            this.handler.endDocument();
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void endElement(String p2, String p3, String p4)
    {
        try {
            this.handler.endElement(p2, p3, p4);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void endPrefixMapping(String p2)
    {
        try {
            this.handler.endPrefixMapping(p2);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    protected void handleException(org.xml.sax.SAXException p1)
    {
        throw p1;
    }

    public void ignorableWhitespace(char[] p2, int p3, int p4)
    {
        try {
            this.handler.ignorableWhitespace(p2, p3, p4);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void processingInstruction(String p2, String p3)
    {
        try {
            this.handler.processingInstruction(p2, p3);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    protected void setContentHandler(org.xml.sax.ContentHandler p2)
    {
        if ((org.apache.tika.sax.ContentHandlerDecorator.$assertionsDisabled) || (p2 != null)) {
            this.handler = p2;
            return;
        } else {
            throw new AssertionError();
        }
    }

    public void setDocumentLocator(org.xml.sax.Locator p2)
    {
        this.handler.setDocumentLocator(p2);
        return;
    }

    public void skippedEntity(String p2)
    {
        try {
            this.handler.skippedEntity(p2);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void startDocument()
    {
        try {
            this.handler.startDocument();
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void startElement(String p2, String p3, String p4, org.xml.sax.Attributes p5)
    {
        try {
            this.handler.startElement(p2, p3, p4, p5);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public void startPrefixMapping(String p2, String p3)
    {
        try {
            this.handler.startPrefixMapping(p2, p3);
        } catch (org.xml.sax.SAXException v0_1) {
            this.handleException(v0_1);
        }
        return;
    }

    public String toString()
    {
        return this.handler.toString();
    }
}
package org.apache.tika.sax;
public class BodyContentHandler extends org.apache.tika.sax.ContentHandlerDecorator {
    private static final org.apache.tika.sax.xpath.Matcher MATCHER;
    private static final org.apache.tika.sax.xpath.XPathParser PARSER;

    static BodyContentHandler()
    {
        org.apache.tika.sax.BodyContentHandler.PARSER = new org.apache.tika.sax.xpath.XPathParser("xhtml", "http://www.w3.org/1999/xhtml");
        org.apache.tika.sax.BodyContentHandler.MATCHER = org.apache.tika.sax.BodyContentHandler.PARSER.parse("/xhtml:html/xhtml:body/descendant:node()");
        return;
    }

    public BodyContentHandler()
    {
        this(new org.apache.tika.sax.WriteOutContentHandler());
        return;
    }

    public BodyContentHandler(int p2)
    {
        this(new org.apache.tika.sax.WriteOutContentHandler(p2));
        return;
    }

    public BodyContentHandler(java.io.OutputStream p2)
    {
        this(new org.apache.tika.sax.WriteOutContentHandler(p2));
        return;
    }

    public BodyContentHandler(java.io.Writer p2)
    {
        this(new org.apache.tika.sax.WriteOutContentHandler(p2));
        return;
    }

    public BodyContentHandler(org.xml.sax.ContentHandler p3)
    {
        super(new org.apache.tika.sax.xpath.MatchingContentHandler(p3, org.apache.tika.sax.BodyContentHandler.MATCHER));
        return;
    }
}
package org.apache.tika.sax;
public interface SafeContentHandler$Output {

    public abstract void write();
}
package org.apache.tika.sax;
 class SafeContentHandler$1 implements org.apache.tika.sax.SafeContentHandler$Output {
    final synthetic org.apache.tika.sax.SafeContentHandler this$0;

    SafeContentHandler$1(org.apache.tika.sax.SafeContentHandler p1)
    {
        this.this$0 = p1;
        return;
    }

    public void write(char[] p2, int p3, int p4)
    {
        org.apache.tika.sax.SafeContentHandler.access$001(this.this$0, p2, p3, p4);
        return;
    }
}
package org.apache.tika.sax;
 class SafeContentHandler$2 implements org.apache.tika.sax.SafeContentHandler$Output {
    final synthetic org.apache.tika.sax.SafeContentHandler this$0;

    SafeContentHandler$2(org.apache.tika.sax.SafeContentHandler p1)
    {
        this.this$0 = p1;
        return;
    }

    public void write(char[] p2, int p3, int p4)
    {
        org.apache.tika.sax.SafeContentHandler.access$101(this.this$0, p2, p3, p4);
        return;
    }
}
package org.apache.tika.sax;
public class SafeContentHandler extends org.apache.tika.sax.ContentHandlerDecorator {
    private static final char[] REPLACEMENT;
    private final org.apache.tika.sax.SafeContentHandler$Output charactersOutput;
    private final org.apache.tika.sax.SafeContentHandler$Output ignorableWhitespaceOutput;

    static SafeContentHandler()
    {
        char[] v0_1 = new char[1];
        v0_1[0] = 32;
        org.apache.tika.sax.SafeContentHandler.REPLACEMENT = v0_1;
        return;
    }

    public SafeContentHandler(org.xml.sax.ContentHandler p2)
    {
        super(p2);
        super.charactersOutput = new org.apache.tika.sax.SafeContentHandler$1(super);
        super.ignorableWhitespaceOutput = new org.apache.tika.sax.SafeContentHandler$2(super);
        return;
    }

    static synthetic void access$001(org.apache.tika.sax.SafeContentHandler p0, char[] p1, int p2, int p3)
    {
        super.characters(p1, p2, p3);
        return;
    }

    static synthetic void access$101(org.apache.tika.sax.SafeContentHandler p0, char[] p1, int p2, int p3)
    {
        super.ignorableWhitespace(p1, p2, p3);
        return;
    }

    private void filter(char[] p4, int p5, int p6, org.apache.tika.sax.SafeContentHandler$Output p7)
    {
        int v1_0 = (p5 + p6);
        int v0 = p5;
        while (p5 < v1_0) {
            if (this.isInvalid(p4[p5])) {
                if (p5 > v0) {
                    p7.write(p4, v0, (p5 - v0));
                }
                this.writeReplacement(p7);
                v0 = (p5 + 1);
            }
            p5++;
        }
        p7.write(p4, v0, (v1_0 - v0));
        return;
    }

    public void characters(char[] p2, int p3, int p4)
    {
        this.filter(p2, p3, p4, this.charactersOutput);
        return;
    }

    public void ignorableWhitespace(char[] p2, int p3, int p4)
    {
        this.filter(p2, p3, p4, this.ignorableWhitespaceOutput);
        return;
    }

    protected boolean isInvalid(char p4)
    {
        int v0 = 1;
        if (p4 >= 32) {
            if (p4 < 65534) {
                v0 = 0;
            }
        } else {
            if ((p4 == 9) || ((p4 == 10) || (p4 == 13))) {
                v0 = 0;
            }
        }
        return v0;
    }

    protected void writeReplacement(org.apache.tika.sax.SafeContentHandler$Output p4)
    {
        p4.write(org.apache.tika.sax.SafeContentHandler.REPLACEMENT, 0, org.apache.tika.sax.SafeContentHandler.REPLACEMENT.length);
        return;
    }
}
package org.apache.tika.sax;
 class WriteOutContentHandler$WriteLimitReachedException extends org.xml.sax.SAXException {
    final synthetic org.apache.tika.sax.WriteOutContentHandler this$0;

    public WriteOutContentHandler$WriteLimitReachedException(org.apache.tika.sax.WriteOutContentHandler p1, String p2)
    {
        this.this$0 = p1;
        super(p2);
        return;
    }

    public org.apache.tika.sax.WriteOutContentHandler getSource()
    {
        return this.this$0;
    }
}
package org.apache.tika.sax;
public class WriteOutContentHandler extends org.xml.sax.helpers.DefaultHandler {
    private int writeCount;
    private final int writeLimit;
    private final java.io.Writer writer;

    public WriteOutContentHandler()
    {
        this(100000);
        return;
    }

    public WriteOutContentHandler(int p2)
    {
        this(new java.io.StringWriter(), p2);
        return;
    }

    public WriteOutContentHandler(java.io.OutputStream p2)
    {
        this(new java.io.OutputStreamWriter(p2));
        return;
    }

    public WriteOutContentHandler(java.io.Writer p2)
    {
        this(p2, -1);
        return;
    }

    private WriteOutContentHandler(java.io.Writer p2, int p3)
    {
        this.writeCount = 0;
        this.writer = p2;
        this.writeLimit = p3;
        return;
    }

    public void characters(char[] p4, int p5, int p6)
    {
        try {
            if ((this.writeLimit != -1) && ((this.writeCount + p6) > this.writeLimit)) {
                this.writer.write(p4, p5, (this.writeLimit - this.writeCount));
                this.writeCount = this.writeLimit;
                throw new org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException(this, new StringBuilder().append("Your document contained more than ").append(this.writeLimit).append(" ").append("characters, and so your requested limit has been ").append("reached. To receive the full text of the document, ").append("increase your limit. ").append("(Text up to the limit is however available).").toString());
            } else {
                this.writer.write(p4, p5, p6);
                this.writeCount = (this.writeCount + p6);
                return;
            }
        } catch (org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException v0_9) {
            throw new org.xml.sax.SAXException("Error writing out character content", v0_9);
        }
    }

    public void endDocument()
    {
        try {
            this.writer.flush();
            return;
        } catch (java.io.IOException v0_1) {
            throw new org.xml.sax.SAXException("Error flushing character output", v0_1);
        }
    }

    public void ignorableWhitespace(char[] p1, int p2, int p3)
    {
        this.characters(p1, p2, p3);
        return;
    }

    public boolean isWriteLimitReached(Throwable p4)
    {
        int v0 = 1;
        if (!(p4 instanceof org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException)) {
            if ((p4.getCause() == null) || (!this.isWriteLimitReached(p4.getCause()))) {
                v0 = 0;
            }
        } else {
            if (this != ((org.apache.tika.sax.WriteOutContentHandler$WriteLimitReachedException) p4).getSource()) {
                v0 = 0;
            }
        }
        return v0;
    }

    public String toString()
    {
        return this.writer.toString();
    }
}
package org.apache.tika.sax;
public class XHTMLContentHandler extends org.apache.tika.sax.SafeContentHandler {
    private static final java.util.Set AUTO = None;
    private static final org.xml.sax.Attributes EMPTY_ATTRIBUTES = None;
    public static final java.util.Set ENDLINE = None;
    private static final java.util.Set HEAD = None;
    private static final java.util.Set INDENT = None;
    private static final char[] NL = None;
    private static final char[] TAB = None;
    public static final String XHTML = "http://www.w3.org/1999/xhtml";
    private boolean headEnded;
    private boolean headStarted;
    private final org.apache.tika.metadata.Metadata metadata;
    private boolean useFrameset;

    static XHTMLContentHandler()
    {
        org.xml.sax.helpers.AttributesImpl v0_9 = new char[1];
        v0_9[0] = 10;
        org.apache.tika.sax.XHTMLContentHandler.NL = v0_9;
        org.xml.sax.helpers.AttributesImpl v0_13 = new char[1];
        v0_13[0] = 9;
        org.apache.tika.sax.XHTMLContentHandler.TAB = v0_13;
        org.xml.sax.helpers.AttributesImpl v0_0 = new String[4];
        v0_0[0] = "title";
        v0_0[1] = "link";
        v0_0[2] = "base";
        v0_0[3] = "meta";
        org.apache.tika.sax.XHTMLContentHandler.HEAD = org.apache.tika.sax.XHTMLContentHandler.unmodifiableSet(v0_0);
        org.xml.sax.helpers.AttributesImpl v0_5 = new String[4];
        v0_5[0] = "html";
        v0_5[1] = "head";
        v0_5[2] = "body";
        v0_5[3] = "frameset";
        org.apache.tika.sax.XHTMLContentHandler.AUTO = org.apache.tika.sax.XHTMLContentHandler.unmodifiableSet(v0_5);
        org.xml.sax.helpers.AttributesImpl v0_8 = new String[6];
        v0_8[0] = "li";
        v0_8[1] = "dd";
        v0_8[2] = "dt";
        v0_8[3] = "td";
        v0_8[4] = "th";
        v0_8[5] = "frame";
        org.apache.tika.sax.XHTMLContentHandler.INDENT = org.apache.tika.sax.XHTMLContentHandler.unmodifiableSet(v0_8);
        org.xml.sax.helpers.AttributesImpl v0_12 = new String[27];
        v0_12[0] = "p";
        v0_12[1] = "h1";
        v0_12[2] = "h2";
        v0_12[3] = "h3";
        v0_12[4] = "h4";
        v0_12[5] = "h5";
        v0_12[6] = "h6";
        v0_12[7] = "div";
        v0_12[8] = "ul";
        v0_12[9] = "ol";
        v0_12[10] = "dl";
        v0_12[11] = "pre";
        v0_12[12] = "hr";
        v0_12[13] = "blockquote";
        v0_12[14] = "address";
        v0_12[15] = "fieldset";
        v0_12[16] = "table";
        v0_12[17] = "form";
        v0_12[18] = "noscript";
        v0_12[19] = "li";
        v0_12[20] = "dt";
        v0_12[21] = "dd";
        v0_12[22] = "noframes";
        v0_12[23] = "br";
        v0_12[24] = "tr";
        v0_12[25] = "select";
        v0_12[26] = "option";
        org.apache.tika.sax.XHTMLContentHandler.ENDLINE = org.apache.tika.sax.XHTMLContentHandler.unmodifiableSet(v0_12);
        org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES = new org.xml.sax.helpers.AttributesImpl();
        return;
    }

    public XHTMLContentHandler(org.xml.sax.ContentHandler p2, org.apache.tika.metadata.Metadata p3)
    {
        super(p2);
        super.headStarted = 0;
        super.headEnded = 0;
        super.useFrameset = 0;
        super.metadata = p3;
        return;
    }

    private void lazyEndHead(boolean p21)
    {
        void v20_1 = this.lazyStartHead();
        if (!v20_1.headEnded) {
            v20_1.headEnded = 1;
            v20_1.useFrameset = p21;
            String[] v16 = v20_1.metadata.names();
            int v17 = v16.length;
            int v15 = 0;
            while (v15 < v17) {
                String v7 = v16[v15];
                if (!v7.equals("title")) {
                    String[] v18 = v20_1.metadata.getValues(v7);
                    int v19 = v18.length;
                    int v14 = 0;
                    while (v14 < v19) {
                        String v13 = v18[v14];
                        if (v13 != null) {
                            int v2_21 = new org.xml.sax.helpers.AttributesImpl();
                            v2_21.addAttribute("", "name", "name", "CDATA", v7);
                            v2_21.addAttribute("", "content", "content", "CDATA", v13);
                            super.startElement("http://www.w3.org/1999/xhtml", "meta", "meta", v2_21);
                            super.endElement("http://www.w3.org/1999/xhtml", "meta", "meta");
                        }
                        v14++;
                    }
                }
                v15++;
            }
            super.startElement("http://www.w3.org/1999/xhtml", "title", "title", org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
            int v2_8 = v20_1.metadata.get("title");
            if ((v2_8 != 0) && (v2_8.length() > 0)) {
                int v2_9 = v2_8.toCharArray();
                super.characters(v2_9, 0, v2_9.length);
            }
            super.endElement("http://www.w3.org/1999/xhtml", "title", "title");
            super.endElement("http://www.w3.org/1999/xhtml", "head", "head");
            if (!v20_1.useFrameset) {
                super.startElement("http://www.w3.org/1999/xhtml", "body", "body", org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
            } else {
                super.startElement("http://www.w3.org/1999/xhtml", "frameset", "frameset", org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
            }
        }
        return;
    }

    private void lazyStartHead()
    {
        if (!this.headStarted) {
            this.headStarted = 1;
            super.startElement("http://www.w3.org/1999/xhtml", "html", "html", org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
            super.startElement("http://www.w3.org/1999/xhtml", "head", "head", org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
        }
        return;
    }

    private static varargs java.util.Set unmodifiableSet(String[] p2)
    {
        return java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(p2)));
    }

    public void characters(String p4)
    {
        this.characters(p4.toCharArray(), 0, p4.length());
        return;
    }

    public void characters(char[] p2, int p3, int p4)
    {
        this.lazyEndHead(this.useFrameset);
        super.characters(p2, p3, p4);
        return;
    }

    public void element(String p2, String p3)
    {
        if ((p3 != null) && (p3.length() > 0)) {
            this.startElement(p2);
            this.characters(p3);
            this.endElement(p2);
        }
        return;
    }

    public void endDocument()
    {
        this.lazyEndHead(this.useFrameset);
        if (!this.useFrameset) {
            super.endElement("http://www.w3.org/1999/xhtml", "body", "body");
        } else {
            super.endElement("http://www.w3.org/1999/xhtml", "frameset", "frameset");
        }
        super.endElement("http://www.w3.org/1999/xhtml", "html", "html");
        this.endPrefixMapping("");
        super.endDocument();
        return;
    }

    public void endElement(String p2)
    {
        this.endElement("http://www.w3.org/1999/xhtml", p2, p2);
        return;
    }

    public void endElement(String p2, String p3, String p4)
    {
        if (!org.apache.tika.sax.XHTMLContentHandler.AUTO.contains(p4)) {
            super.endElement(p2, p3, p4);
            if (("http://www.w3.org/1999/xhtml".equals(p2)) && (org.apache.tika.sax.XHTMLContentHandler.ENDLINE.contains(p4))) {
                this.newline();
            }
        }
        return;
    }

    public void newline()
    {
        this.ignorableWhitespace(org.apache.tika.sax.XHTMLContentHandler.NL, 0, org.apache.tika.sax.XHTMLContentHandler.NL.length);
        return;
    }

    public void startDocument()
    {
        super.startDocument();
        this.startPrefixMapping("", "http://www.w3.org/1999/xhtml");
        return;
    }

    public void startElement(String p3)
    {
        this.startElement("http://www.w3.org/1999/xhtml", p3, p3, org.apache.tika.sax.XHTMLContentHandler.EMPTY_ATTRIBUTES);
        return;
    }

    public void startElement(String p7, String p8, String p9)
    {
        org.xml.sax.helpers.AttributesImpl v0_1 = new org.xml.sax.helpers.AttributesImpl();
        v0_1.addAttribute("", p8, p8, "CDATA", p9);
        this.startElement("http://www.w3.org/1999/xhtml", p7, p7, v0_1);
        return;
    }

    public void startElement(String p4, String p5, String p6, org.xml.sax.Attributes p7)
    {
        if (!p6.equals("frameset")) {
            if (!org.apache.tika.sax.XHTMLContentHandler.AUTO.contains(p6)) {
                if (!org.apache.tika.sax.XHTMLContentHandler.HEAD.contains(p6)) {
                    this.lazyEndHead(0);
                } else {
                    this.lazyStartHead();
                }
                if (("http://www.w3.org/1999/xhtml".equals(p4)) && (org.apache.tika.sax.XHTMLContentHandler.INDENT.contains(p6))) {
                    this.ignorableWhitespace(org.apache.tika.sax.XHTMLContentHandler.TAB, 0, org.apache.tika.sax.XHTMLContentHandler.TAB.length);
                }
                super.startElement(p4, p5, p6, p7);
            }
        } else {
            this.lazyEndHead(1);
        }
        return;
    }

    public void startElement(String p2, org.xml.sax.helpers.AttributesImpl p3)
    {
        this.startElement("http://www.w3.org/1999/xhtml", p2, p2, p3);
        return;
    }
}
package org.apache.tika.sax.xpath;
public class Matcher {
    public static final org.apache.tika.sax.xpath.Matcher FAIL;

    static Matcher()
    {
        org.apache.tika.sax.xpath.Matcher.FAIL = new org.apache.tika.sax.xpath.Matcher();
        return;
    }

    public Matcher()
    {
        return;
    }

    public org.apache.tika.sax.xpath.Matcher descend(String p2, String p3)
    {
        return org.apache.tika.sax.xpath.Matcher.FAIL;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        return 0;
    }

    public boolean matchesElement()
    {
        return 0;
    }

    public boolean matchesText()
    {
        return 0;
    }
}
package org.apache.tika.sax.xpath;
public class AttributeMatcher extends org.apache.tika.sax.xpath.Matcher {
    public static final org.apache.tika.sax.xpath.Matcher INSTANCE;

    static AttributeMatcher()
    {
        org.apache.tika.sax.xpath.AttributeMatcher.INSTANCE = new org.apache.tika.sax.xpath.AttributeMatcher();
        return;
    }

    public AttributeMatcher()
    {
        return;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        return 1;
    }
}
package org.apache.tika.sax.xpath;
public class ChildMatcher extends org.apache.tika.sax.xpath.Matcher {
    private final org.apache.tika.sax.xpath.Matcher then;

    public ChildMatcher(org.apache.tika.sax.xpath.Matcher p1)
    {
        this.then = p1;
        return;
    }

    public org.apache.tika.sax.xpath.Matcher descend(String p2, String p3)
    {
        return this.then;
    }
}
package org.apache.tika.sax.xpath;
public class CompositeMatcher extends org.apache.tika.sax.xpath.Matcher {
    private final org.apache.tika.sax.xpath.Matcher a;
    private final org.apache.tika.sax.xpath.Matcher b;

    public CompositeMatcher(org.apache.tika.sax.xpath.Matcher p1, org.apache.tika.sax.xpath.Matcher p2)
    {
        this.a = p1;
        this.b = p2;
        return;
    }

    public org.apache.tika.sax.xpath.Matcher descend(String p4, String p5)
    {
        org.apache.tika.sax.xpath.Matcher v1 = this.a.descend(p4, p5);
        org.apache.tika.sax.xpath.Matcher v0_2 = this.b.descend(p4, p5);
        if (v1 != org.apache.tika.sax.xpath.CompositeMatcher.FAIL) {
            if (v0_2 != org.apache.tika.sax.xpath.CompositeMatcher.FAIL) {
                if ((this.a != v1) || (this.b != v0_2)) {
                    this = new org.apache.tika.sax.xpath.CompositeMatcher;
                    this(v1, v0_2);
                }
            } else {
                this = v1;
            }
        } else {
            this = v0_2;
        }
        return this;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        if ((!this.a.matchesAttribute(p2, p3)) && (!this.b.matchesAttribute(p2, p3))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public boolean matchesElement()
    {
        if ((!this.a.matchesElement()) && (!this.b.matchesElement())) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public boolean matchesText()
    {
        if ((!this.a.matchesText()) && (!this.b.matchesText())) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }
}
package org.apache.tika.sax.xpath;
public class ElementMatcher extends org.apache.tika.sax.xpath.Matcher {
    public static final org.apache.tika.sax.xpath.Matcher INSTANCE;

    static ElementMatcher()
    {
        org.apache.tika.sax.xpath.ElementMatcher.INSTANCE = new org.apache.tika.sax.xpath.ElementMatcher();
        return;
    }

    public ElementMatcher()
    {
        return;
    }

    public boolean matchesElement()
    {
        return 1;
    }
}
package org.apache.tika.sax.xpath;
public class MatchingContentHandler extends org.apache.tika.sax.ContentHandlerDecorator {
    private org.apache.tika.sax.xpath.Matcher matcher;
    private final java.util.LinkedList matchers;

    public MatchingContentHandler(org.xml.sax.ContentHandler p2, org.apache.tika.sax.xpath.Matcher p3)
    {
        super(p2);
        super.matchers = new java.util.LinkedList();
        super.matcher = p3;
        return;
    }

    public void characters(char[] p2, int p3, int p4)
    {
        if (this.matcher.matchesText()) {
            super.characters(p2, p3, p4);
        }
        return;
    }

    public void endElement(String p2, String p3, String p4)
    {
        if (this.matcher.matchesElement()) {
            super.endElement(p2, p3, p4);
        }
        if (!this.matchers.isEmpty()) {
            this.matcher = ((org.apache.tika.sax.xpath.Matcher) this.matchers.removeFirst());
        }
        return;
    }

    public void ignorableWhitespace(char[] p2, int p3, int p4)
    {
        if (this.matcher.matchesText()) {
            super.ignorableWhitespace(p2, p3, p4);
        }
        return;
    }

    public void processingInstruction(String p1, String p2)
    {
        return;
    }

    public void skippedEntity(String p2)
    {
        if (this.matcher.matchesText()) {
            super.skippedEntity(p2);
        }
        return;
    }

    public void startElement(String p8, String p9, String p10, org.xml.sax.Attributes p11)
    {
        this.matchers.addFirst(this.matcher);
        this.matcher = this.matcher.descend(p8, p9);
        org.apache.tika.sax.xpath.CompositeMatcher v0_8 = new org.xml.sax.helpers.AttributesImpl();
        int v6 = 0;
        while (v6 < p11.getLength()) {
            org.apache.tika.sax.xpath.Matcher v1_6 = p11.getURI(v6);
            org.apache.tika.sax.xpath.Matcher v2_1 = p11.getLocalName(v6);
            if (this.matcher.matchesAttribute(v1_6, v2_1)) {
                v0_8.addAttribute(v1_6, v2_1, p11.getQName(v6), p11.getType(v6), p11.getValue(v6));
            }
            v6++;
        }
        if ((this.matcher.matchesElement()) || (v0_8.getLength() > 0)) {
            super.startElement(p8, p9, p10, v0_8);
            if (!this.matcher.matchesElement()) {
                this.matcher = new org.apache.tika.sax.xpath.CompositeMatcher(this.matcher, org.apache.tika.sax.xpath.ElementMatcher.INSTANCE);
            }
        }
        return;
    }
}
package org.apache.tika.sax.xpath;
public class NamedAttributeMatcher extends org.apache.tika.sax.xpath.Matcher {
    private final String name;
    private final String namespace;

    public NamedAttributeMatcher(String p1, String p2)
    {
        this.namespace = p1;
        this.name = p2;
        return;
    }

    private static boolean equals(String p1, String p2)
    {
        int v0;
        if (p1 != null) {
            v0 = p1.equals(p2);
        } else {
            if (p2 != null) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        if ((!org.apache.tika.sax.xpath.NamedAttributeMatcher.equals(p2, this.namespace)) || (!p3.equals(this.name))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }
}
package org.apache.tika.sax.xpath;
public class NamedElementMatcher extends org.apache.tika.sax.xpath.ChildMatcher {
    private final String name;
    private final String namespace;

    protected NamedElementMatcher(String p1, String p2, org.apache.tika.sax.xpath.Matcher p3)
    {
        super(p3);
        super.namespace = p1;
        super.name = p2;
        return;
    }

    private static boolean equals(String p1, String p2)
    {
        int v0;
        if (p1 != null) {
            v0 = p1.equals(p2);
        } else {
            if (p2 != null) {
                v0 = 0;
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public org.apache.tika.sax.xpath.Matcher descend(String p2, String p3)
    {
        if ((!org.apache.tika.sax.xpath.NamedElementMatcher.equals(p2, this.namespace)) || (!p3.equals(this.name))) {
            org.apache.tika.sax.xpath.Matcher v0_1 = org.apache.tika.sax.xpath.NamedElementMatcher.FAIL;
        } else {
            v0_1 = super.descend(p2, p3);
        }
        return v0_1;
    }
}
package org.apache.tika.sax.xpath;
public class NodeMatcher extends org.apache.tika.sax.xpath.Matcher {
    public static final org.apache.tika.sax.xpath.Matcher INSTANCE;

    static NodeMatcher()
    {
        org.apache.tika.sax.xpath.NodeMatcher.INSTANCE = new org.apache.tika.sax.xpath.NodeMatcher();
        return;
    }

    public NodeMatcher()
    {
        return;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        return 1;
    }

    public boolean matchesElement()
    {
        return 1;
    }

    public boolean matchesText()
    {
        return 1;
    }
}
package org.apache.tika.sax.xpath;
public class SubtreeMatcher extends org.apache.tika.sax.xpath.Matcher {
    private final org.apache.tika.sax.xpath.Matcher then;

    public SubtreeMatcher(org.apache.tika.sax.xpath.Matcher p1)
    {
        this.then = p1;
        return;
    }

    public org.apache.tika.sax.xpath.Matcher descend(String p3, String p4)
    {
        org.apache.tika.sax.xpath.Matcher v1 = this.then.descend(p3, p4);
        if ((v1 != org.apache.tika.sax.xpath.SubtreeMatcher.FAIL) && (v1 != this.then)) {
            this = new org.apache.tika.sax.xpath.CompositeMatcher(v1, this);
        }
        return this;
    }

    public boolean matchesAttribute(String p2, String p3)
    {
        return this.then.matchesAttribute(p2, p3);
    }

    public boolean matchesElement()
    {
        return this.then.matchesElement();
    }

    public boolean matchesText()
    {
        return this.then.matchesText();
    }
}
package org.apache.tika.sax.xpath;
public class TextMatcher extends org.apache.tika.sax.xpath.Matcher {
    public static final org.apache.tika.sax.xpath.Matcher INSTANCE;

    static TextMatcher()
    {
        org.apache.tika.sax.xpath.TextMatcher.INSTANCE = new org.apache.tika.sax.xpath.TextMatcher();
        return;
    }

    public TextMatcher()
    {
        return;
    }

    public boolean matchesText()
    {
        return 1;
    }
}
package org.apache.tika.sax.xpath;
public class XPathParser {
    private final java.util.Map prefixes;

    public XPathParser()
    {
        this.prefixes = new java.util.HashMap();
        return;
    }

    public XPathParser(String p2, String p3)
    {
        this.prefixes = new java.util.HashMap();
        this.addPrefix(p2, p3);
        return;
    }

    public void addPrefix(String p2, String p3)
    {
        this.prefixes.put(p2, p3);
        return;
    }

    public org.apache.tika.sax.xpath.Matcher parse(String p7)
    {
        org.apache.tika.sax.xpath.Matcher v0_1;
        if (!p7.equals("/text()")) {
            if (!p7.equals("/node()")) {
                if (!p7.equals("/descendant:node()")) {
                    if (!p7.equals("/@*")) {
                        if (p7.length() != 0) {
                            if (!p7.startsWith("/@")) {
                                if (!p7.startsWith("/*")) {
                                    if (!p7.startsWith("///")) {
                                        if (!p7.startsWith("//")) {
                                            if (!p7.startsWith("/")) {
                                                v0_1 = org.apache.tika.sax.xpath.Matcher.FAIL;
                                            } else {
                                                org.apache.tika.sax.xpath.Matcher v1_3;
                                                org.apache.tika.sax.xpath.Matcher v0_22 = p7.indexOf(47, 1);
                                                if (v0_22 != -1) {
                                                    v1_3 = v0_22;
                                                } else {
                                                    v1_3 = p7.length();
                                                }
                                                String v2_8 = p7.substring(1, v1_3);
                                                org.apache.tika.sax.xpath.Matcher v0_25 = 0;
                                                org.apache.tika.sax.xpath.NamedElementMatcher v3_4 = v2_8.indexOf(58);
                                                if (v3_4 != -1) {
                                                    v0_25 = v2_8.substring(0, v3_4);
                                                    v2_8 = v2_8.substring((v3_4 + 1));
                                                }
                                                if (!this.prefixes.containsKey(v0_25)) {
                                                    v0_1 = org.apache.tika.sax.xpath.Matcher.FAIL;
                                                } else {
                                                    v0_1 = new org.apache.tika.sax.xpath.NamedElementMatcher(((String) this.prefixes.get(v0_25)), v2_8, this.parse(p7.substring(v1_3)));
                                                }
                                            }
                                        } else {
                                            v0_1 = new org.apache.tika.sax.xpath.SubtreeMatcher(this.parse(p7.substring(1)));
                                        }
                                    } else {
                                        v0_1 = org.apache.tika.sax.xpath.Matcher.FAIL;
                                    }
                                } else {
                                    v0_1 = new org.apache.tika.sax.xpath.ChildMatcher(this.parse(p7.substring(2)));
                                }
                            } else {
                                org.apache.tika.sax.xpath.Matcher v1_1 = p7.substring(2);
                                org.apache.tika.sax.xpath.Matcher v0_0 = 0;
                                String v2_9 = v1_1.indexOf(58);
                                if (v2_9 != -1) {
                                    v0_0 = v1_1.substring(0, v2_9);
                                    v1_1 = v1_1.substring((v2_9 + 1));
                                }
                                if (!this.prefixes.containsKey(v0_0)) {
                                    v0_1 = org.apache.tika.sax.xpath.Matcher.FAIL;
                                } else {
                                    v0_1 = new org.apache.tika.sax.xpath.NamedAttributeMatcher(((String) this.prefixes.get(v0_0)), v1_1);
                                }
                            }
                        } else {
                            v0_1 = org.apache.tika.sax.xpath.ElementMatcher.INSTANCE;
                        }
                    } else {
                        v0_1 = org.apache.tika.sax.xpath.AttributeMatcher.INSTANCE;
                    }
                } else {
                    v0_1 = new org.apache.tika.sax.xpath.CompositeMatcher(org.apache.tika.sax.xpath.TextMatcher.INSTANCE, new org.apache.tika.sax.xpath.ChildMatcher(new org.apache.tika.sax.xpath.SubtreeMatcher(org.apache.tika.sax.xpath.NodeMatcher.INSTANCE)));
                }
            } else {
                v0_1 = org.apache.tika.sax.xpath.NodeMatcher.INSTANCE;
            }
        } else {
            v0_1 = org.apache.tika.sax.xpath.TextMatcher.INSTANCE;
        }
        return v0_1;
    }
}
package org.jdom;
public class Attribute implements java.io.Serializable, java.lang.Cloneable {
    public static final int CDATA_TYPE = 1;
    private static final String CVS_ID = "@(#) $RCSfile: Attribute.java,v $ $Revision: 1.56 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    public static final int ENTITIES_TYPE = 6;
    public static final int ENTITY_TYPE = 5;
    public static final int ENUMERATED_TYPE = 10;
    public static final int IDREFS_TYPE = 4;
    public static final int IDREF_TYPE = 3;
    public static final int ID_TYPE = 2;
    public static final int NMTOKENS_TYPE = 8;
    public static final int NMTOKEN_TYPE = 7;
    public static final int NOTATION_TYPE = 9;
    public static final int UNDECLARED_TYPE;
    protected String name;
    protected transient org.jdom.Namespace namespace;
    protected org.jdom.Element parent;
    protected int type;
    protected String value;

    protected Attribute()
    {
        this.type = 0;
        return;
    }

    public Attribute(String p3, String p4)
    {
        this(p3, p4, 0, org.jdom.Namespace.NO_NAMESPACE);
        return;
    }

    public Attribute(String p2, String p3, int p4)
    {
        this(p2, p3, p4, org.jdom.Namespace.NO_NAMESPACE);
        return;
    }

    public Attribute(String p2, String p3, int p4, org.jdom.Namespace p5)
    {
        this.type = 0;
        this.setName(p2);
        this.setValue(p3);
        this.setAttributeType(p4);
        this.setNamespace(p5);
        return;
    }

    public Attribute(String p2, String p3, org.jdom.Namespace p4)
    {
        this(p2, p3, 0, p4);
        return;
    }

    private void readObject(java.io.ObjectInputStream p3)
    {
        p3.defaultReadObject();
        this.namespace = org.jdom.Namespace.getNamespace(((String) p3.readObject()), ((String) p3.readObject()));
        return;
    }

    private void writeObject(java.io.ObjectOutputStream p2)
    {
        p2.defaultWriteObject();
        p2.writeObject(this.namespace.getPrefix());
        p2.writeObject(this.namespace.getURI());
        return;
    }

    public Object clone()
    {
        try {
            org.jdom.Attribute v1 = ((org.jdom.Attribute) super.clone());
        } catch (int v2) {
        }
        v1.parent = 0;
        return v1;
    }

    public org.jdom.Attribute detach()
    {
        org.jdom.Element v0 = this.getParent();
        if (v0 != null) {
            v0.removeAttribute(this.getName(), this.getNamespace());
        }
        return this;
    }

    public final boolean equals(Object p2)
    {
        int v0;
        if (p2 != this) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }

    public int getAttributeType()
    {
        return this.type;
    }

    public boolean getBooleanValue()
    {
        org.jdom.DataConversionException v1_16;
        String v0 = this.value.trim();
        if ((!v0.equalsIgnoreCase("true")) && ((!v0.equalsIgnoreCase("on")) && ((!v0.equalsIgnoreCase("1")) && (!v0.equalsIgnoreCase("yes"))))) {
            if ((!v0.equalsIgnoreCase("false")) && ((!v0.equalsIgnoreCase("off")) && ((!v0.equalsIgnoreCase("0")) && (!v0.equalsIgnoreCase("no"))))) {
                throw new org.jdom.DataConversionException(this.name, "boolean");
            } else {
                v1_16 = 0;
            }
        } else {
            v1_16 = 1;
        }
        return v1_16;
    }

    public org.jdom.Document getDocument()
    {
        int v1;
        org.jdom.Element v0 = this.getParent();
        if (v0 == null) {
            v1 = 0;
        } else {
            v1 = v0.getDocument();
        }
        return v1;
    }

    public double getDoubleValue()
    {
        try {
            org.jdom.DataConversionException v2_8 = Double.valueOf(this.value.trim()).doubleValue();
        } catch (NumberFormatException v0) {
            String v1 = this.value.trim();
            if (!"INF".equals(v1)) {
                if (!"-INF".equals(v1)) {
                    throw new org.jdom.DataConversionException(this.name, "double");
                } else {
                    v2_8 = -inf;
                }
            } else {
                v2_8 = inf;
            }
        }
        return v2_8;
    }

    public float getFloatValue()
    {
        try {
            return Float.valueOf(this.value.trim()).floatValue();
        } catch (NumberFormatException v0) {
            throw new org.jdom.DataConversionException(this.name, "float");
        }
    }

    public int getIntValue()
    {
        try {
            return Integer.parseInt(this.value.trim());
        } catch (NumberFormatException v0) {
            throw new org.jdom.DataConversionException(this.name, "int");
        }
    }

    public long getLongValue()
    {
        try {
            return Long.parseLong(this.value.trim());
        } catch (NumberFormatException v0) {
            throw new org.jdom.DataConversionException(this.name, "long");
        }
    }

    public String getName()
    {
        return this.name;
    }

    public org.jdom.Namespace getNamespace()
    {
        return this.namespace;
    }

    public String getNamespacePrefix()
    {
        return this.namespace.getPrefix();
    }

    public String getNamespaceURI()
    {
        return this.namespace.getURI();
    }

    public org.jdom.Element getParent()
    {
        return this.parent;
    }

    public String getQualifiedName()
    {
        String v1_3;
        String v0 = this.namespace.getPrefix();
        if ((v0 != null) && (!"".equals(v0))) {
            v1_3 = new StringBuffer(v0).append(58).append(this.getName()).toString();
        } else {
            v1_3 = this.getName();
        }
        return v1_3;
    }

    public String getValue()
    {
        return this.value;
    }

    public final int hashCode()
    {
        return super.hashCode();
    }

    public org.jdom.Attribute setAttributeType(int p5)
    {
        if ((p5 >= 0) && (p5 <= 10)) {
            this.type = p5;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(String.valueOf(p5), "attribute", "Illegal attribute type");
        }
    }

    public org.jdom.Attribute setName(String p4)
    {
        String v0 = org.jdom.Verifier.checkAttributeName(p4);
        if (v0 == null) {
            this.name = p4;
            return this;
        } else {
            throw new org.jdom.IllegalNameException(p4, "attribute", v0);
        }
    }

    public org.jdom.Attribute setNamespace(org.jdom.Namespace p5)
    {
        if (p5 == null) {
            p5 = org.jdom.Namespace.NO_NAMESPACE;
        }
        if ((p5 == org.jdom.Namespace.NO_NAMESPACE) || (!"".equals(p5.getPrefix()))) {
            this.namespace = p5;
            return this;
        } else {
            throw new org.jdom.IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the NO_NAMESPACE namespace");
        }
    }

    protected org.jdom.Attribute setParent(org.jdom.Element p1)
    {
        this.parent = p1;
        return this;
    }

    public org.jdom.Attribute setValue(String p4)
    {
        String v0 = org.jdom.Verifier.checkCharacterData(p4);
        if (v0 == null) {
            this.value = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "attribute", v0);
        }
    }

    public String toString()
    {
        return new StringBuffer().append("[Attribute: ").append(this.getQualifiedName()).append("=\"").append(this.value).append("\"").append("]").toString();
    }
}
package org.jdom;
 class AttributeList extends java.util.AbstractList implements java.util.List, java.io.Serializable {
    private static final String CVS_ID = "@(#) $RCSfile: AttributeList.java,v $ $Revision: 1.24 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    private static final int INITIAL_ARRAY_SIZE = 5;
    private org.jdom.Attribute[] elementData;
    private org.jdom.Element parent;
    private int size;

    private AttributeList()
    {
        return;
    }

    AttributeList(org.jdom.Element p1)
    {
        this.parent = p1;
        return;
    }

    private void ensureCapacity(int p7)
    {
        if (this.elementData != null) {
            int v1 = this.elementData.length;
            if (p7 > v1) {
                org.jdom.Attribute[] v2 = this.elementData;
                int v0 = (((v1 * 3) / 2) + 1);
                if (v0 < p7) {
                    v0 = p7;
                }
                org.jdom.Attribute[] v3_1 = new org.jdom.Attribute[v0];
                this.elementData = v3_1;
                System.arraycopy(v2, 0, this.elementData, 0, this.size);
            }
        } else {
            org.jdom.Attribute[] v3_5 = new org.jdom.Attribute[Math.max(p7, 5)];
            this.elementData = v3_5;
        }
        return;
    }

    private int indexOfDuplicate(org.jdom.Attribute p4)
    {
        return this.indexOf(p4.getName(), p4.getNamespace());
    }

    public void add(int p6, Object p7)
    {
        if (!(p7 instanceof org.jdom.Attribute)) {
            if (p7 != null) {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Class ").append(p7.getClass().getName()).append(" is not an attribute").toString());
            } else {
                throw new org.jdom.IllegalAddException("Cannot add null attribute");
            }
        } else {
            if (this.indexOfDuplicate(((org.jdom.Attribute) p7)) < 0) {
                this.add(p6, ((org.jdom.Attribute) p7));
                this.modCount = (this.modCount + 1);
                return;
            } else {
                throw new org.jdom.IllegalAddException("Cannot add duplicate attribute");
            }
        }
    }

    void add(int p6, org.jdom.Attribute p7)
    {
        if (p7.getParent() == null) {
            String v0 = org.jdom.Verifier.checkNamespaceCollision(p7, this.parent);
            if (v0 == null) {
                if ((p6 >= 0) && (p6 <= this.size)) {
                    p7.setParent(this.parent);
                    this.ensureCapacity((this.size + 1));
                    if (p6 != this.size) {
                        System.arraycopy(this.elementData, p6, this.elementData, (p6 + 1), (this.size - p6));
                        this.elementData[p6] = p7;
                        this.size = (this.size + 1);
                    } else {
                        int v1_9 = this.elementData;
                        org.jdom.Attribute[] v2_1 = this.size;
                        this.size = (v2_1 + 1);
                        v1_9[v2_1] = p7;
                    }
                    this.modCount = (this.modCount + 1);
                    return;
                } else {
                    throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p6).append(" Size: ").append(this.size()).toString());
                }
            } else {
                throw new org.jdom.IllegalAddException(this.parent, p7, v0);
            }
        } else {
            throw new org.jdom.IllegalAddException(new StringBuffer().append("The attribute already has an existing parent \"").append(p7.getParent().getQualifiedName()).append("\"").toString());
        }
    }

    public boolean add(Object p6)
    {
        if (!(p6 instanceof org.jdom.Attribute)) {
            if (p6 != null) {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Class ").append(p6.getClass().getName()).append(" is not an attribute").toString());
            } else {
                throw new org.jdom.IllegalAddException("Cannot add null attribute");
            }
        } else {
            int v1 = this.indexOfDuplicate(((org.jdom.Attribute) p6));
            if (v1 >= 0) {
                this.set(v1, ((org.jdom.Attribute) p6));
            } else {
                this.add(this.size(), ((org.jdom.Attribute) p6));
            }
            return 1;
        }
    }

    public boolean addAll(int p8, java.util.Collection p9)
    {
        if ((p8 >= 0) && (p8 <= this.size)) {
            if ((p9 != null) && (p9.size() != 0)) {
                this.ensureCapacity((this.size() + p9.size()));
                int v0 = 0;
                try {
                    int v2_0 = p9.iterator();
                } catch (RuntimeException v1) {
                    int v2_1 = 0;
                }
                while (v2_0.hasNext()) {
                    this.add((p8 + v0), v2_0.next());
                    v0++;
                }
                int v4_3 = 1;
            } else {
                v4_3 = 0;
            }
            return v4_3;
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p8).append(" Size: ").append(this.size()).toString());
        }
    }

    public boolean addAll(java.util.Collection p2)
    {
        return this.addAll(this.size(), p2);
    }

    public void clear()
    {
        if (this.elementData != null) {
            int v1 = 0;
            while (v1 < this.size) {
                this.elementData[v1].setParent(0);
                v1++;
            }
            this.elementData = 0;
            this.size = 0;
        }
        this.modCount = (this.modCount + 1);
        return;
    }

    void clearAndSet(java.util.Collection p8)
    {
        org.jdom.Attribute[] v3 = this.elementData;
        int v4 = this.size;
        this.elementData = 0;
        this.size = 0;
        if ((p8 != null) && (p8.size() != 0)) {
            this.ensureCapacity(p8.size());
            try {
                this.addAll(0, p8);
            } catch (RuntimeException v1) {
                this.elementData = v3;
                this.size = v4;
                throw v1;
            }
        }
        if (v3 != null) {
            int v2 = 0;
            while (v2 < v4) {
                v3[v2].setParent(0);
                v2++;
            }
        }
        this.modCount = (this.modCount + 1);
        return;
    }

    public Object get(int p4)
    {
        if ((p4 >= 0) && (p4 < this.size)) {
            return this.elementData[p4];
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p4).append(" Size: ").append(this.size()).toString());
        }
    }

    Object get(String p3, org.jdom.Namespace p4)
    {
        org.jdom.Attribute v1_1;
        int v0 = this.indexOf(p3, p4);
        if (v0 >= 0) {
            v1_1 = this.elementData[v0];
        } else {
            v1_1 = 0;
        }
        return v1_1;
    }

    int indexOf(String p7, org.jdom.Namespace p8)
    {
        int v0;
        String v4 = p8.getURI();
        if (this.elementData == null) {
            v0 = -1;
        } else {
            v0 = 0;
            while (v0 < this.size) {
                org.jdom.Attribute v1 = this.elementData[v0];
                String v3 = v1.getNamespaceURI();
                String v2 = v1.getName();
                if ((!v3.equals(v4)) || (!v2.equals(p7))) {
                    v0++;
                }
            }
        }
        return v0;
    }

    public Object remove(int p7)
    {
        if ((p7 >= 0) && (p7 < this.size)) {
            org.jdom.Attribute v1 = this.elementData[p7];
            v1.setParent(0);
            int v0 = ((this.size - p7) - 1);
            if (v0 > 0) {
                System.arraycopy(this.elementData, (p7 + 1), this.elementData, p7, v0);
            }
            int v2_1 = this.elementData;
            int v3_2 = (this.size - 1);
            this.size = v3_2;
            v2_1[v3_2] = 0;
            this.modCount = (this.modCount + 1);
            return v1;
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p7).append(" Size: ").append(this.size()).toString());
        }
    }

    boolean remove(String p3, org.jdom.Namespace p4)
    {
        int v1;
        int v0 = this.indexOf(p3, p4);
        if (v0 >= 0) {
            this.remove(v0);
            v1 = 1;
        } else {
            v1 = 0;
        }
        return v1;
    }

    public Object set(int p6, Object p7)
    {
        if (!(p7 instanceof org.jdom.Attribute)) {
            if (p7 != null) {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Class ").append(p7.getClass().getName()).append(" is not an attribute").toString());
            } else {
                throw new org.jdom.IllegalAddException("Cannot add null attribute");
            }
        } else {
            int v1 = this.indexOfDuplicate(((org.jdom.Attribute) p7));
            if ((v1 < 0) || (v1 == p6)) {
                return this.set(p6, ((org.jdom.Attribute) p7));
            } else {
                throw new org.jdom.IllegalAddException("Cannot set duplicate attribute");
            }
        }
    }

    Object set(int p6, org.jdom.Attribute p7)
    {
        if ((p6 >= 0) && (p6 < this.size)) {
            if (p7.getParent() == null) {
                String v1 = org.jdom.Verifier.checkNamespaceCollision(p7, this.parent);
                if (v1 == null) {
                    org.jdom.Attribute v0 = this.elementData[p6];
                    v0.setParent(0);
                    this.elementData[p6] = p7;
                    p7.setParent(this.parent);
                    return v0;
                } else {
                    throw new org.jdom.IllegalAddException(this.parent, p7, v1);
                }
            } else {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("The attribute already has an existing parent \"").append(p7.getParent().getQualifiedName()).append("\"").toString());
            }
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p6).append(" Size: ").append(this.size()).toString());
        }
    }

    public int size()
    {
        return this.size;
    }

    public String toString()
    {
        return super.toString();
    }

    final void uncheckedAddAttribute(org.jdom.Attribute p4)
    {
        p4.parent = this.parent;
        this.ensureCapacity((this.size + 1));
        int v0_5 = this.elementData;
        int v1 = this.size;
        this.size = (v1 + 1);
        v0_5[v1] = p4;
        this.modCount = (this.modCount + 1);
        return;
    }
}
package org.jdom;
public abstract class Content implements java.lang.Cloneable, java.io.Serializable {
    protected org.jdom.Parent parent;

    protected Content()
    {
        this.parent = 0;
        return;
    }

    public Object clone()
    {
        try {
            int v0_1 = ((org.jdom.Content) super.clone());
            v0_1.parent = 0;
        } catch (CloneNotSupportedException v1) {
            v0_1 = 0;
        }
        return v0_1;
    }

    public org.jdom.Content detach()
    {
        if (this.parent != null) {
            this.parent.removeContent(this);
        }
        return this;
    }

    public final boolean equals(Object p2)
    {
        int v0;
        if (p2 != this) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }

    public org.jdom.Document getDocument()
    {
        org.jdom.Document v0_2;
        if (this.parent != null) {
            v0_2 = this.parent.getDocument();
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public org.jdom.Parent getParent()
    {
        return this.parent;
    }

    public org.jdom.Element getParentElement()
    {
        org.jdom.Element v1_1;
        org.jdom.Parent v0 = this.getParent();
        if (!(v0 instanceof org.jdom.Element)) {
            v1_1 = 0;
        } else {
            v1_1 = v0;
        }
        return ((org.jdom.Element) v1_1);
    }

    public abstract String getValue();

    public final int hashCode()
    {
        return super.hashCode();
    }

    protected org.jdom.Content setParent(org.jdom.Parent p1)
    {
        this.parent = p1;
        return this;
    }
}
package org.jdom;
public class Text extends org.jdom.Content {
    private static final String CVS_ID = "@(#) $RCSfile: Text.java,v $ $Revision: 1.25 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static final String EMPTY_STRING = "";
    protected String value;

    protected Text()
    {
        return;
    }

    public Text(String p1)
    {
        this.setText(p1);
        return;
    }

    public static String normalizeString(String p8)
    {
        int v6_1;
        if (p8 != null) {
            char[] v0 = p8.toCharArray();
            char[] v2 = new char[v0.length];
            int v5 = 1;
            int v3 = 0;
            int v1 = 0;
            while (v1 < v0.length) {
                if (" \t\n\r".indexOf(v0[v1]) == -1) {
                    int v4_0 = (v3 + 1);
                    v2[v3] = v0[v1];
                    v5 = 0;
                    v3 = v4_0;
                } else {
                    if (v5 == 0) {
                        int v4_1 = (v3 + 1);
                        v2[v3] = 32;
                        v5 = 1;
                        v3 = v4_1;
                    }
                }
                v1++;
            }
            if ((v5 != 0) && (v3 > 0)) {
                v3--;
            }
            v6_1 = new String(v2, 0, v3);
        } else {
            v6_1 = "";
        }
        return v6_1;
    }

    public void append(String p4)
    {
        if (p4 != null) {
            String v0 = org.jdom.Verifier.checkCharacterData(p4);
            if (v0 == null) {
                if (p4.length() > 0) {
                    this.value = new StringBuffer().append(this.value).append(p4).toString();
                }
            } else {
                throw new org.jdom.IllegalDataException(p4, "character content", v0);
            }
        }
        return;
    }

    public void append(org.jdom.Text p3)
    {
        if (p3 != null) {
            this.value = new StringBuffer().append(this.value).append(p3.getText()).toString();
        }
        return;
    }

    public Object clone()
    {
        org.jdom.Text v0_1 = ((org.jdom.Text) super.clone());
        v0_1.value = this.value;
        return v0_1;
    }

    public String getText()
    {
        return this.value;
    }

    public String getTextNormalize()
    {
        return org.jdom.Text.normalizeString(this.getText());
    }

    public String getTextTrim()
    {
        return this.getText().trim();
    }

    public String getValue()
    {
        return this.value;
    }

    public org.jdom.Text setText(String p4)
    {
        if (p4 != null) {
            String v0 = org.jdom.Verifier.checkCharacterData(p4);
            if (v0 == null) {
                this.value = p4;
            } else {
                throw new org.jdom.IllegalDataException(p4, "character content", v0);
            }
        } else {
            this.value = "";
        }
        return this;
    }

    public String toString()
    {
        return new StringBuffer(64).append("[Text: ").append(this.getText()).append("]").toString();
    }
}
package org.jdom;
public class CDATA extends org.jdom.Text {
    private static final String CVS_ID = "@(#) $RCSfile: CDATA.java,v $ $Revision: 1.32 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";

    protected CDATA()
    {
        return;
    }

    public CDATA(String p1)
    {
        this.setText(p1);
        return;
    }

    public void append(String p5)
    {
        if ((p5 != null) && (!"".equals(p5))) {
            String v1;
            if (this.value != "") {
                v1 = new StringBuffer().append(this.value).append(p5).toString();
            } else {
                v1 = p5;
            }
            String v0 = org.jdom.Verifier.checkCDATASection(v1);
            if (v0 == null) {
                this.value = v1;
            } else {
                throw new org.jdom.IllegalDataException(p5, "CDATA section", v0);
            }
        }
        return;
    }

    public void append(org.jdom.Text p2)
    {
        if (p2 != null) {
            this.append(p2.getText());
        }
        return;
    }

    public org.jdom.Text setText(String p4)
    {
        if ((p4 != null) && (!"".equals(p4))) {
            String v0 = org.jdom.Verifier.checkCDATASection(p4);
            if (v0 == null) {
                this.value = p4;
            } else {
                throw new org.jdom.IllegalDataException(p4, "CDATA section", v0);
            }
        } else {
            this.value = "";
        }
        return this;
    }

    public String toString()
    {
        return new StringBuffer(64).append("[CDATA: ").append(this.getText()).append("]").toString();
    }
}
package org.jdom;
public class Comment extends org.jdom.Content {
    private static final String CVS_ID = "@(#) $RCSfile: Comment.java,v $ $Revision: 1.33 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    protected String text;

    protected Comment()
    {
        return;
    }

    public Comment(String p1)
    {
        this.setText(p1);
        return;
    }

    public String getText()
    {
        return this.text;
    }

    public String getValue()
    {
        return this.text;
    }

    public org.jdom.Comment setText(String p4)
    {
        String v0 = org.jdom.Verifier.checkCommentData(p4);
        if (v0 == null) {
            this.text = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "comment", v0);
        }
    }

    public String toString()
    {
        return new StringBuffer().append("[Comment: ").append(new org.jdom.output.XMLOutputter().outputString(this)).append("]").toString();
    }
}
package org.jdom;
 class ContentList$FilterList extends java.util.AbstractList implements java.io.Serializable {
    int count;
    int expected;
    org.jdom.filter.Filter filter;
    private final org.jdom.ContentList this$0;

    ContentList$FilterList(org.jdom.ContentList p2, org.jdom.filter.Filter p3)
    {
        this.this$0 = p2;
        this.count = 0;
        this.expected = -1;
        this.filter = p3;
        return;
    }

    private final int getAdjustedIndex(int p5)
    {
        int v0 = 0;
        int v1 = 0;
        while (v1 < org.jdom.ContentList.access$200(this.this$0)) {
            if (this.filter.matches(org.jdom.ContentList.access$100(this.this$0)[v1])) {
                if (p5 != v0) {
                    v0++;
                } else {
                    return v1;
                }
            }
            v1++;
        }
        if (p5 != v0) {
            v1 = (org.jdom.ContentList.access$200(this.this$0) + 1);
        } else {
            v1 = org.jdom.ContentList.access$200(this.this$0);
        }
        return v1;
    }

    public void add(int p5, Object p6)
    {
        if (!this.filter.matches(p6)) {
            throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow the ").append(p6.getClass().getName()).append(" \'").append(p6).append("\' to be added to the list").toString());
        } else {
            this.this$0.add(this.getAdjustedIndex(p5), p6);
            this.expected = (this.expected + 1);
            this.count = (this.count + 1);
            return;
        }
    }

    public Object get(int p3)
    {
        return this.this$0.get(this.getAdjustedIndex(p3));
    }

    public java.util.Iterator iterator()
    {
        return new org.jdom.ContentList$FilterListIterator(this.this$0, this.filter, 0);
    }

    public java.util.ListIterator listIterator()
    {
        return new org.jdom.ContentList$FilterListIterator(this.this$0, this.filter, 0);
    }

    public java.util.ListIterator listIterator(int p4)
    {
        return new org.jdom.ContentList$FilterListIterator(this.this$0, this.filter, p4);
    }

    public Object remove(int p6)
    {
        int v0 = this.getAdjustedIndex(p6);
        Object v1_0 = this.this$0.get(v0);
        if (!this.filter.matches(v1_0)) {
            throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow the ").append(v1_0.getClass().getName()).append(" \'").append(v1_0).append("\' (index ").append(p6).append(") to be removed").toString());
        } else {
            Object v1_1 = this.this$0.remove(v0);
            this.expected = (this.expected + 1);
            this.count = (this.count - 1);
            return v1_1;
        }
    }

    public Object set(int p6, Object p7)
    {
        if (!this.filter.matches(p7)) {
            throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow index ").append(p6).append(" to be set to ").append(p7.getClass().getName()).toString());
        } else {
            int v0 = this.getAdjustedIndex(p6);
            Object v1_0 = this.this$0.get(v0);
            if (this.filter.matches(v1_0)) {
                Object v1_1 = this.this$0.set(v0, p7);
                this.expected = (this.expected + 2);
                return v1_1;
            } else {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow the ").append(v1_0.getClass().getName()).append(" \'").append(v1_0).append("\' (index ").append(p6).append(") to be removed").toString());
            }
        }
    }

    public int size()
    {
        int v2_4;
        if (this.expected != org.jdom.ContentList.access$000(this.this$0)) {
            this.count = 0;
            int v0 = 0;
            while (v0 < this.this$0.size()) {
                if (this.filter.matches(org.jdom.ContentList.access$100(this.this$0)[v0])) {
                    this.count = (this.count + 1);
                }
                v0++;
            }
            this.expected = org.jdom.ContentList.access$000(this.this$0);
            v2_4 = this.count;
        } else {
            v2_4 = this.count;
        }
        return v2_4;
    }
}
package org.jdom;
 class ContentList$FilterListIterator implements java.util.ListIterator {
    private boolean canremove;
    private boolean canset;
    private int cursor;
    private int expected;
    org.jdom.filter.Filter filter;
    private boolean forward;
    private int fsize;
    private int index;
    private final org.jdom.ContentList this$0;
    private int tmpcursor;

    ContentList$FilterListIterator(org.jdom.ContentList p5, org.jdom.filter.Filter p6, int p7)
    {
        this.this$0 = p5;
        this.forward = 0;
        this.canremove = 0;
        this.canset = 0;
        this.cursor = -1;
        this.tmpcursor = -1;
        this.index = -1;
        this.expected = -1;
        this.fsize = 0;
        this.filter = p6;
        this.expected = org.jdom.ContentList.access$000(p5);
        this.forward = 0;
        if (p7 >= 0) {
            this.fsize = 0;
            int v0 = 0;
            while (v0 < p5.size()) {
                if (p6.matches(p5.get(v0))) {
                    if (p7 == this.fsize) {
                        this.cursor = v0;
                        this.index = this.fsize;
                    }
                    this.fsize = (this.fsize + 1);
                }
                v0++;
            }
            if (p7 <= this.fsize) {
                if (this.cursor == -1) {
                    this.cursor = p5.size();
                    this.index = this.fsize;
                }
                return;
            } else {
                throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p7).append(" Size: ").append(this.fsize).toString());
            }
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p7).toString());
        }
    }

    private void checkConcurrentModification()
    {
        if (this.expected == org.jdom.ContentList.access$000(this.this$0)) {
            return;
        } else {
            throw new java.util.ConcurrentModificationException();
        }
    }

    public void add(Object p4)
    {
        if (this.filter.matches(p4)) {
            this.nextIndex();
            this.this$0.add(this.tmpcursor, p4);
            this.expected = org.jdom.ContentList.access$000(this.this$0);
            this.canset = 0;
            this.canremove = 0;
            if (!this.forward) {
                this.forward = 1;
            } else {
                this.index = (this.index + 1);
            }
            this.fsize = (this.fsize + 1);
            this.cursor = this.tmpcursor;
            return;
        } else {
            throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow the ").append(p4.getClass().getName()).append(" \'").append(p4).append("\' to be added to the list").toString());
        }
    }

    public boolean hasNext()
    {
        int v0_1;
        if (this.nextIndex() >= this.fsize) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean hasPrevious()
    {
        int v0_1;
        if (this.previousIndex() < 0) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public Object next()
    {
        if (this.hasNext()) {
            this.index = this.nextIndex();
            this.cursor = this.tmpcursor;
            this.forward = 1;
            this.canremove = 1;
            this.canset = 1;
            return this.this$0.get(this.cursor);
        } else {
            throw new java.util.NoSuchElementException("next() is beyond the end of the Iterator");
        }
    }

    public int nextIndex()
    {
        int v1_5;
        this.checkConcurrentModification();
        if (!this.forward) {
            this.tmpcursor = this.cursor;
            v1_5 = this.index;
        } else {
            int v0 = (this.cursor + 1);
            while (v0 < this.this$0.size()) {
                if (!this.filter.matches(this.this$0.get(v0))) {
                    v0++;
                } else {
                    this.tmpcursor = v0;
                    v1_5 = (this.index + 1);
                }
            }
            this.tmpcursor = this.this$0.size();
            v1_5 = (this.index + 1);
        }
        return v1_5;
    }

    public Object previous()
    {
        if (this.hasPrevious()) {
            this.index = this.previousIndex();
            this.cursor = this.tmpcursor;
            this.forward = 0;
            this.canremove = 1;
            this.canset = 1;
            return this.this$0.get(this.cursor);
        } else {
            throw new java.util.NoSuchElementException("previous() is before the start of the Iterator");
        }
    }

    public int previousIndex()
    {
        int v1_2;
        this.checkConcurrentModification();
        if (this.forward) {
            this.tmpcursor = this.cursor;
            v1_2 = this.index;
        } else {
            int v0 = (this.cursor - 1);
            while (v0 >= 0) {
                if (!this.filter.matches(this.this$0.get(v0))) {
                    v0--;
                } else {
                    this.tmpcursor = v0;
                    v1_2 = (this.index - 1);
                }
            }
            this.tmpcursor = -1;
            v1_2 = (this.index - 1);
        }
        return v1_2;
    }

    public void remove()
    {
        if (this.canremove) {
            boolean v0 = this.forward;
            this.forward = 1;
            try {
                this.nextIndex();
                this.this$0.remove(this.cursor);
                this.forward = v0;
                this.cursor = (this.tmpcursor - 1);
                this.expected = org.jdom.ContentList.access$000(this.this$0);
                this.forward = 0;
                this.canremove = 0;
                this.canset = 0;
                this.fsize = (this.fsize - 1);
                return;
            } catch (Throwable v1_7) {
                this.forward = v0;
                throw v1_7;
            }
        } else {
            throw new IllegalStateException("Can not remove an element unless either next() or previous() has been called since the last remove()");
        }
    }

    public void set(Object p4)
    {
        if (this.canset) {
            this.checkConcurrentModification();
            if (this.filter.matches(p4)) {
                this.this$0.set(this.cursor, p4);
                this.expected = org.jdom.ContentList.access$000(this.this$0);
                return;
            } else {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Filter won\'t allow index ").append(this.index).append(" to be set to ").append(p4.getClass().getName()).toString());
            }
        } else {
            throw new IllegalStateException("Can not set an element unless either next() or previous() has been called since the last remove() or set()");
        }
    }
}
package org.jdom;
final class ContentList extends java.util.AbstractList implements java.io.Serializable {
    private static final String CVS_ID = "@(#) $RCSfile: ContentList.java,v $ $Revision: 1.42 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    private static final int INITIAL_ARRAY_SIZE = 5;
    private static final long serialVersionUID = 1;
    private org.jdom.Content[] elementData;
    private org.jdom.Parent parent;
    private int size;

    ContentList(org.jdom.Parent p1)
    {
        this.parent = p1;
        return;
    }

    static int access$000(org.jdom.ContentList p1)
    {
        return p1.getModCount();
    }

    static org.jdom.Content[] access$100(org.jdom.ContentList p1)
    {
        return p1.elementData;
    }

    static int access$200(org.jdom.ContentList p1)
    {
        return p1.size;
    }

    private void documentCanContain(int p4, org.jdom.Content p5)
    {
        if ((p5 instanceof org.jdom.Element)) {
            if (this.indexOfFirstElement() < 0) {
                if (this.indexOfDocType() >= p4) {
                    throw new org.jdom.IllegalAddException("A root element cannot be added before the DocType");
                }
            } else {
                throw new org.jdom.IllegalAddException("Cannot add a second root element, only one is allowed");
            }
        }
        if ((p5 instanceof org.jdom.DocType)) {
            if (this.indexOfDocType() < 0) {
                int v0 = this.indexOfFirstElement();
                if ((v0 != -1) && (v0 < p4)) {
                    throw new org.jdom.IllegalAddException("A DocType cannot be added after the root element");
                }
            } else {
                throw new org.jdom.IllegalAddException("Cannot add a second doctype, only one is allowed");
            }
        }
        if (!(p5 instanceof org.jdom.CDATA)) {
            if (!(p5 instanceof org.jdom.Text)) {
                if (!(p5 instanceof org.jdom.EntityRef)) {
                    return;
                } else {
                    throw new org.jdom.IllegalAddException("An EntityRef is not allowed at the document root");
                }
            } else {
                throw new org.jdom.IllegalAddException("A Text is not allowed at the document root");
            }
        } else {
            throw new org.jdom.IllegalAddException("A CDATA is not allowed at the document root");
        }
    }

    private static void elementCanContain(int p2, org.jdom.Content p3)
    {
        if (!(p3 instanceof org.jdom.DocType)) {
            return;
        } else {
            throw new org.jdom.IllegalAddException("A DocType is not allowed except at the document level");
        }
    }

    private int getModCount()
    {
        return this.modCount;
    }

    private static void removeParent(org.jdom.Content p1)
    {
        p1.setParent(0);
        return;
    }

    public void add(int p5, Object p6)
    {
        if (p6 != null) {
            if ((p6 instanceof String)) {
                p6 = new org.jdom.Text(p6.toString());
            }
            if (!(p6 instanceof org.jdom.Content)) {
                throw new org.jdom.IllegalAddException(new StringBuffer().append("Class ").append(p6.getClass().getName()).append(" is of unrecognized type and cannot be added").toString());
            } else {
                this.add(p5, ((org.jdom.Content) p6));
                return;
            }
        } else {
            throw new org.jdom.IllegalAddException("Cannot add null object");
        }
    }

    void add(int p6, org.jdom.Content p7)
    {
        if (p7 != null) {
            if (!(this.parent instanceof org.jdom.Document)) {
                org.jdom.ContentList.elementCanContain(p6, p7);
            } else {
                this.documentCanContain(p6, p7);
            }
            if (p7.getParent() == null) {
                if (p7 != this.parent) {
                    if ((!(this.parent instanceof org.jdom.Element)) || ((!(p7 instanceof org.jdom.Element)) || (!((org.jdom.Element) p7).isAncestor(((org.jdom.Element) this.parent))))) {
                        if ((p6 >= 0) && (p6 <= this.size)) {
                            p7.setParent(this.parent);
                            this.ensureCapacity((this.size + 1));
                            if (p6 != this.size) {
                                System.arraycopy(this.elementData, p6, this.elementData, (p6 + 1), (this.size - p6));
                                this.elementData[p6] = p7;
                                this.size = (this.size + 1);
                            } else {
                                int v1_22 = this.elementData;
                                org.jdom.Content[] v2_5 = this.size;
                                this.size = (v2_5 + 1);
                                v1_22[v2_5] = p7;
                            }
                            this.modCount = (this.modCount + 1);
                            return;
                        } else {
                            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p6).append(" Size: ").append(this.size()).toString());
                        }
                    } else {
                        throw new org.jdom.IllegalAddException("The Element cannot be added as a descendent of itself");
                    }
                } else {
                    throw new org.jdom.IllegalAddException("The Element cannot be added to itself");
                }
            } else {
                org.jdom.Element v0_0 = p7.getParent();
                if (!(v0_0 instanceof org.jdom.Document)) {
                    throw new org.jdom.IllegalAddException(new StringBuffer().append("The Content already has an existing parent \"").append(((org.jdom.Element) v0_0).getQualifiedName()).append("\"").toString());
                } else {
                    throw new org.jdom.IllegalAddException(((org.jdom.Element) p7), "The Content already has an existing parent document");
                }
            }
        } else {
            throw new org.jdom.IllegalAddException("Cannot add null object");
        }
    }

    public boolean addAll(int p8, java.util.Collection p9)
    {
        if ((p8 >= 0) && (p8 <= this.size)) {
            if ((p9 != null) && (p9.size() != 0)) {
                this.ensureCapacity((this.size() + p9.size()));
                int v0 = 0;
                try {
                    int v2_0 = p9.iterator();
                } catch (RuntimeException v1) {
                    int v2_1 = 0;
                }
                while (v2_0.hasNext()) {
                    this.add((p8 + v0), v2_0.next());
                    v0++;
                }
                int v4_3 = 1;
            } else {
                v4_3 = 0;
            }
            return v4_3;
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p8).append(" Size: ").append(this.size()).toString());
        }
    }

    public boolean addAll(java.util.Collection p2)
    {
        return this.addAll(this.size(), p2);
    }

    public void clear()
    {
        if (this.elementData != null) {
            int v0 = 0;
            while (v0 < this.size) {
                org.jdom.ContentList.removeParent(this.elementData[v0]);
                v0++;
            }
            this.elementData = 0;
            this.size = 0;
        }
        this.modCount = (this.modCount + 1);
        return;
    }

    void clearAndSet(java.util.Collection p7)
    {
        org.jdom.Content[] v2 = this.elementData;
        int v3 = this.size;
        this.elementData = 0;
        this.size = 0;
        if ((p7 != null) && (p7.size() != 0)) {
            this.ensureCapacity(p7.size());
            try {
                this.addAll(0, p7);
            } catch (RuntimeException v0) {
                this.elementData = v2;
                this.size = v3;
                throw v0;
            }
        }
        if (v2 != null) {
            int v1 = 0;
            while (v1 < v3) {
                org.jdom.ContentList.removeParent(v2[v1]);
                v1++;
            }
        }
        this.modCount = (this.modCount + 1);
        return;
    }

    void ensureCapacity(int p7)
    {
        if (this.elementData != null) {
            int v1 = this.elementData.length;
            if (p7 > v1) {
                org.jdom.Content[] v2 = this.elementData;
                int v0 = (((v1 * 3) / 2) + 1);
                if (v0 < p7) {
                    v0 = p7;
                }
                org.jdom.Content[] v3_1 = new org.jdom.Content[v0];
                this.elementData = v3_1;
                System.arraycopy(v2, 0, this.elementData, 0, this.size);
            }
        } else {
            org.jdom.Content[] v3_5 = new org.jdom.Content[Math.max(p7, 5)];
            this.elementData = v3_5;
        }
        return;
    }

    public Object get(int p4)
    {
        if ((p4 >= 0) && (p4 < this.size)) {
            return this.elementData[p4];
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p4).append(" Size: ").append(this.size()).toString());
        }
    }

    java.util.List getView(org.jdom.filter.Filter p2)
    {
        return new org.jdom.ContentList$FilterList(this, p2);
    }

    int indexOfDocType()
    {
        int v0;
        if (this.elementData == null) {
            v0 = -1;
        } else {
            v0 = 0;
            while (v0 < this.size) {
                if (!(this.elementData[v0] instanceof org.jdom.DocType)) {
                    v0++;
                }
            }
        }
        return v0;
    }

    int indexOfFirstElement()
    {
        int v0;
        if (this.elementData == null) {
            v0 = -1;
        } else {
            v0 = 0;
            while (v0 < this.size) {
                if (!(this.elementData[v0] instanceof org.jdom.Element)) {
                    v0++;
                }
            }
        }
        return v0;
    }

    public Object remove(int p6)
    {
        if ((p6 >= 0) && (p6 < this.size)) {
            org.jdom.Content v1 = this.elementData[p6];
            org.jdom.ContentList.removeParent(v1);
            int v0 = ((this.size - p6) - 1);
            if (v0 > 0) {
                System.arraycopy(this.elementData, (p6 + 1), this.elementData, p6, v0);
            }
            int v2_2 = this.elementData;
            int v3_2 = (this.size - 1);
            this.size = v3_2;
            v2_2[v3_2] = 0;
            this.modCount = (this.modCount + 1);
            return v1;
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p6).append(" Size: ").append(this.size()).toString());
        }
    }

    public Object set(int p8, Object p9)
    {
        if ((p8 >= 0) && (p8 < this.size)) {
            if (((p9 instanceof org.jdom.Element)) && ((this.parent instanceof org.jdom.Document))) {
                int v3 = this.indexOfFirstElement();
                if ((v3 >= 0) && (v3 != p8)) {
                    throw new org.jdom.IllegalAddException("Cannot add a second root element, only one is allowed");
                }
            }
            if (((p9 instanceof org.jdom.DocType)) && ((this.parent instanceof org.jdom.Document))) {
                int v0 = this.indexOfDocType();
                if ((v0 >= 0) && (v0 != p8)) {
                    throw new org.jdom.IllegalAddException("Cannot add a second doctype, only one is allowed");
                }
            }
            Object v2 = this.remove(p8);
            try {
                this.add(p8, p9);
                return v2;
            } catch (RuntimeException v1) {
                this.add(p8, v2);
                throw v1;
            }
        } else {
            throw new IndexOutOfBoundsException(new StringBuffer().append("Index: ").append(p8).append(" Size: ").append(this.size()).toString());
        }
    }

    public int size()
    {
        return this.size;
    }

    public String toString()
    {
        return super.toString();
    }

    final void uncheckedAddContent(org.jdom.Content p4)
    {
        p4.parent = this.parent;
        this.ensureCapacity((this.size + 1));
        int v0_5 = this.elementData;
        int v1 = this.size;
        this.size = (v1 + 1);
        v0_5[v1] = p4;
        this.modCount = (this.modCount + 1);
        return;
    }
}
package org.jdom;
public class JDOMException extends java.lang.Exception {
    private static final String CVS_ID = "@(#) $RCSfile: JDOMException.java,v $ $Revision: 1.26 $ $Date: 2008/12/10 00:59:51 $ $Name:  $";
    private Throwable cause;

    public JDOMException()
    {
        super("Error occurred in JDOM application.");
        return;
    }

    public JDOMException(String p1)
    {
        super(p1);
        return;
    }

    public JDOMException(String p1, Throwable p2)
    {
        super(p1);
        super.cause = p2;
        return;
    }

    private static Throwable getNestedException(Throwable p3)
    {
        int v0;
        if (!(p3 instanceof org.jdom.JDOMException)) {
            if (!(p3 instanceof org.xml.sax.SAXException)) {
                if (!(p3 instanceof java.sql.SQLException)) {
                    if (!(p3 instanceof reflect.InvocationTargetException)) {
                        if (!(p3 instanceof ExceptionInInitializerError)) {
                            v0 = org.jdom.JDOMException.getNestedExceptionFromField(p3, "java.rmi.RemoteException", "detail");
                            if (v0 == 0) {
                                v0 = org.jdom.JDOMException.getNestedException(p3, "javax.naming.NamingException", "getRootCause");
                                if (v0 == 0) {
                                    v0 = org.jdom.JDOMException.getNestedException(p3, "javax.servlet.ServletException", "getRootCause");
                                    if (v0 == 0) {
                                        v0 = 0;
                                    }
                                }
                            }
                        } else {
                            v0 = ((ExceptionInInitializerError) p3).getException();
                        }
                    } else {
                        v0 = ((reflect.InvocationTargetException) p3).getTargetException();
                    }
                } else {
                    v0 = ((java.sql.SQLException) p3).getNextException();
                }
            } else {
                v0 = ((org.xml.sax.SAXException) p3).getException();
            }
        } else {
            v0 = ((org.jdom.JDOMException) p3).getCause();
        }
        return v0;
    }

    private static Throwable getNestedException(Throwable p6, String p7, String p8)
    {
        try {
            int v5_2;
            Class v4 = Class.forName(p7);
        } catch (int v5) {
            v5_2 = 0;
            return v5_2;
        }
        if (!v4.isAssignableFrom(p6.getClass())) {
        } else {
            Class[] v0 = new Class[0];
            Object[] v1 = new Object[0];
            v5_2 = ((Throwable) v4.getMethod(p8, v0).invoke(p6, v1));
            return v5_2;
        }
    }

    private static Throwable getNestedExceptionFromField(Throwable p5, String p6, String p7)
    {
        try {
            int v4_1;
            Class v3 = Class.forName(p6);
        } catch (int v4) {
            v4_1 = 0;
            return v4_1;
        }
        if (!v3.isAssignableFrom(p5.getClass())) {
        } else {
            v4_1 = ((Throwable) v3.getField(p7).get(p5));
            return v4_1;
        }
    }

    public Throwable getCause()
    {
        return this.cause;
    }

    public String getMessage()
    {
        String v2 = super.getMessage();
        Throwable v4 = this;
        while(true) {
            Throwable v0 = org.jdom.JDOMException.getNestedException(v4);
            if (v0 == null) {
                break;
            }
            int v3 = v0.getMessage();
            if ((v0 instanceof org.xml.sax.SAXException)) {
                Exception v1 = ((org.xml.sax.SAXException) v0).getException();
                if ((v1 != null) && ((v3 != 0) && (v3.equals(v1.getMessage())))) {
                    v3 = 0;
                }
            }
            if (v3 != 0) {
                if (v2 == null) {
                    v2 = v3;
                } else {
                    v2 = new StringBuffer().append(v2).append(": ").append(v3).toString();
                }
            }
            if ((v0 instanceof org.jdom.JDOMException)) {
                break;
            }
            v4 = v0;
        }
        return v2;
    }

    public Throwable initCause(Throwable p1)
    {
        this.cause = p1;
        return this;
    }

    public void printStackTrace()
    {
        super.printStackTrace();
        Throwable v1 = this;
        while(true) {
            Throwable v0 = org.jdom.JDOMException.getNestedException(v1);
            if (v0 == null) {
                break;
            }
            System.err.print("Caused by: ");
            v0.printStackTrace();
            if ((v0 instanceof org.jdom.JDOMException)) {
                break;
            }
            v1 = v0;
        }
        return;
    }

    public void printStackTrace(java.io.PrintStream p4)
    {
        super.printStackTrace(p4);
        Throwable v1 = this;
        while(true) {
            Throwable v0 = org.jdom.JDOMException.getNestedException(v1);
            if (v0 == null) {
                break;
            }
            p4.print("Caused by: ");
            v0.printStackTrace(p4);
            if ((v0 instanceof org.jdom.JDOMException)) {
                break;
            }
            v1 = v0;
        }
        return;
    }

    public void printStackTrace(java.io.PrintWriter p4)
    {
        super.printStackTrace(p4);
        Throwable v1 = this;
        while(true) {
            Throwable v0 = org.jdom.JDOMException.getNestedException(v1);
            if (v0 == null) {
                break;
            }
            p4.print("Caused by: ");
            v0.printStackTrace(p4);
            if ((v0 instanceof org.jdom.JDOMException)) {
                break;
            }
            v1 = v0;
        }
        return;
    }
}
package org.jdom;
public class DataConversionException extends org.jdom.JDOMException {
    private static final String CVS_ID = "@(#) $RCSfile: DataConversionException.java,v $ $Revision: 1.14 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";

    public DataConversionException(String p3, String p4)
    {
        super(new StringBuffer().append("The XML construct ").append(p3).append(" could not be converted to a ").append(p4).toString());
        return;
    }
}
package org.jdom;
public interface JDOMFactory {

    public abstract void addContent();

    public abstract void addNamespaceDeclaration();

    public abstract org.jdom.Attribute attribute();

    public abstract org.jdom.Attribute attribute();

    public abstract org.jdom.Attribute attribute();

    public abstract org.jdom.Attribute attribute();

    public abstract org.jdom.CDATA cdata();

    public abstract org.jdom.Comment comment();

    public abstract org.jdom.DocType docType();

    public abstract org.jdom.DocType docType();

    public abstract org.jdom.DocType docType();

    public abstract org.jdom.Document document();

    public abstract org.jdom.Document document();

    public abstract org.jdom.Document document();

    public abstract org.jdom.Element element();

    public abstract org.jdom.Element element();

    public abstract org.jdom.Element element();

    public abstract org.jdom.Element element();

    public abstract org.jdom.EntityRef entityRef();

    public abstract org.jdom.EntityRef entityRef();

    public abstract org.jdom.EntityRef entityRef();

    public abstract org.jdom.ProcessingInstruction processingInstruction();

    public abstract org.jdom.ProcessingInstruction processingInstruction();

    public abstract void setAttribute();

    public abstract org.jdom.Text text();
}
package org.jdom;
public class DefaultJDOMFactory implements org.jdom.JDOMFactory {
    private static final String CVS_ID = "@(#) $RCSfile: DefaultJDOMFactory.java,v $ $Revision: 1.7 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";

    public DefaultJDOMFactory()
    {
        return;
    }

    public void addContent(org.jdom.Parent p2, org.jdom.Content p3)
    {
        if (!(p2 instanceof org.jdom.Document)) {
            ((org.jdom.Element) p2).addContent(p3);
        } else {
            ((org.jdom.Document) p2).addContent(p3);
        }
        return;
    }

    public void addNamespaceDeclaration(org.jdom.Element p1, org.jdom.Namespace p2)
    {
        p1.addNamespaceDeclaration(p2);
        return;
    }

    public org.jdom.Attribute attribute(String p2, String p3)
    {
        return new org.jdom.Attribute(p2, p3);
    }

    public org.jdom.Attribute attribute(String p2, String p3, int p4)
    {
        return new org.jdom.Attribute(p2, p3, p4);
    }

    public org.jdom.Attribute attribute(String p2, String p3, int p4, org.jdom.Namespace p5)
    {
        return new org.jdom.Attribute(p2, p3, p4, p5);
    }

    public org.jdom.Attribute attribute(String p2, String p3, org.jdom.Namespace p4)
    {
        return new org.jdom.Attribute(p2, p3, p4);
    }

    public org.jdom.CDATA cdata(String p2)
    {
        return new org.jdom.CDATA(p2);
    }

    public org.jdom.Comment comment(String p2)
    {
        return new org.jdom.Comment(p2);
    }

    public org.jdom.DocType docType(String p2)
    {
        return new org.jdom.DocType(p2);
    }

    public org.jdom.DocType docType(String p2, String p3)
    {
        return new org.jdom.DocType(p2, p3);
    }

    public org.jdom.DocType docType(String p2, String p3, String p4)
    {
        return new org.jdom.DocType(p2, p3, p4);
    }

    public org.jdom.Document document(org.jdom.Element p2)
    {
        return new org.jdom.Document(p2);
    }

    public org.jdom.Document document(org.jdom.Element p2, org.jdom.DocType p3)
    {
        return new org.jdom.Document(p2, p3);
    }

    public org.jdom.Document document(org.jdom.Element p2, org.jdom.DocType p3, String p4)
    {
        return new org.jdom.Document(p2, p3, p4);
    }

    public org.jdom.Element element(String p2)
    {
        return new org.jdom.Element(p2);
    }

    public org.jdom.Element element(String p2, String p3)
    {
        return new org.jdom.Element(p2, p3);
    }

    public org.jdom.Element element(String p2, String p3, String p4)
    {
        return new org.jdom.Element(p2, p3, p4);
    }

    public org.jdom.Element element(String p2, org.jdom.Namespace p3)
    {
        return new org.jdom.Element(p2, p3);
    }

    public org.jdom.EntityRef entityRef(String p2)
    {
        return new org.jdom.EntityRef(p2);
    }

    public org.jdom.EntityRef entityRef(String p2, String p3)
    {
        return new org.jdom.EntityRef(p2, p3);
    }

    public org.jdom.EntityRef entityRef(String p2, String p3, String p4)
    {
        return new org.jdom.EntityRef(p2, p3, p4);
    }

    public org.jdom.ProcessingInstruction processingInstruction(String p2, String p3)
    {
        return new org.jdom.ProcessingInstruction(p2, p3);
    }

    public org.jdom.ProcessingInstruction processingInstruction(String p2, java.util.Map p3)
    {
        return new org.jdom.ProcessingInstruction(p2, p3);
    }

    public void setAttribute(org.jdom.Element p1, org.jdom.Attribute p2)
    {
        p1.setAttribute(p2);
        return;
    }

    public org.jdom.Text text(String p2)
    {
        return new org.jdom.Text(p2);
    }
}
package org.jdom;
 class DescendantIterator implements java.util.Iterator {
    private static final String CVS_ID = "@(#) $RCSfile: DescendantIterator.java,v $ $Revision: 1.6 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    private java.util.Iterator iterator;
    private java.util.Iterator nextIterator;
    private java.util.List stack;

    DescendantIterator(org.jdom.Parent p3)
    {
        this.stack = new java.util.ArrayList();
        if (p3 != null) {
            this.iterator = p3.getContent().iterator();
            return;
        } else {
            throw new IllegalArgumentException("parent parameter was null");
        }
    }

    private java.util.Iterator pop()
    {
        int v0 = this.stack.size();
        if (v0 != 0) {
            return ((java.util.Iterator) this.stack.remove((v0 - 1)));
        } else {
            throw new java.util.NoSuchElementException("empty stack");
        }
    }

    private void push(java.util.Iterator p2)
    {
        this.stack.add(p2);
        return;
    }

    private boolean stackHasAnyNext()
    {
        int v2 = this.stack.size();
        int v0 = 0;
        while (v0 < v2) {
            if (!((java.util.Iterator) this.stack.get(v0)).hasNext()) {
                v0++;
            } else {
                int v3_2 = 1;
            }
            return v3_2;
        }
        v3_2 = 0;
        return v3_2;
    }

    public boolean hasNext()
    {
        int v0 = 1;
        if (((this.iterator == null) || (!this.iterator.hasNext())) && (((this.nextIterator == null) || (!this.nextIterator.hasNext())) && (!this.stackHasAnyNext()))) {
            v0 = 0;
        }
        return v0;
    }

    public Object next()
    {
        if (this.hasNext()) {
            if (this.nextIterator != null) {
                this.push(this.iterator);
                this.iterator = this.nextIterator;
                this.nextIterator = 0;
            }
            while (!this.iterator.hasNext()) {
                if (this.stack.size() <= 0) {
                    throw new java.util.NoSuchElementException("Somehow we lost our iterator");
                } else {
                    this.iterator = this.pop();
                }
            }
            org.jdom.Content v0_1 = ((org.jdom.Content) this.iterator.next());
            if ((v0_1 instanceof org.jdom.Element)) {
                this.nextIterator = ((org.jdom.Element) v0_1).getContent().iterator();
            }
            return v0_1;
        } else {
            throw new java.util.NoSuchElementException();
        }
    }

    public void remove()
    {
        this.iterator.remove();
        return;
    }
}
package org.jdom;
public class DocType extends org.jdom.Content {
    private static final String CVS_ID = "@(#) $RCSfile: DocType.java,v $ $Revision: 1.32 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    protected String elementName;
    protected String internalSubset;
    protected String publicID;
    protected String systemID;

    protected DocType()
    {
        return;
    }

    public DocType(String p2)
    {
        this(p2, 0, 0);
        return;
    }

    public DocType(String p2, String p3)
    {
        this(p2, 0, p3);
        return;
    }

    public DocType(String p1, String p2, String p3)
    {
        this.setElementName(p1);
        this.setPublicID(p2);
        this.setSystemID(p3);
        return;
    }

    public String getElementName()
    {
        return this.elementName;
    }

    public String getInternalSubset()
    {
        return this.internalSubset;
    }

    public String getPublicID()
    {
        return this.publicID;
    }

    public String getSystemID()
    {
        return this.systemID;
    }

    public String getValue()
    {
        return "";
    }

    public org.jdom.DocType setElementName(String p4)
    {
        String v0 = org.jdom.Verifier.checkXMLName(p4);
        if (v0 == null) {
            this.elementName = p4;
            return this;
        } else {
            throw new org.jdom.IllegalNameException(p4, "DocType", v0);
        }
    }

    public void setInternalSubset(String p1)
    {
        this.internalSubset = p1;
        return;
    }

    public org.jdom.DocType setPublicID(String p4)
    {
        String v0 = org.jdom.Verifier.checkPublicID(p4);
        if (v0 == null) {
            this.publicID = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "DocType", v0);
        }
    }

    public org.jdom.DocType setSystemID(String p4)
    {
        String v0 = org.jdom.Verifier.checkSystemLiteral(p4);
        if (v0 == null) {
            this.systemID = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "DocType", v0);
        }
    }

    public String toString()
    {
        return new StringBuffer().append("[DocType: ").append(new org.jdom.output.XMLOutputter().outputString(this)).append("]").toString();
    }
}
package org.jdom;
public interface Parent implements java.lang.Cloneable, java.io.Serializable {

    public abstract Object clone();

    public abstract java.util.List cloneContent();

    public abstract java.util.List getContent();

    public abstract java.util.List getContent();

    public abstract org.jdom.Content getContent();

    public abstract int getContentSize();

    public abstract java.util.Iterator getDescendants();

    public abstract java.util.Iterator getDescendants();

    public abstract org.jdom.Document getDocument();

    public abstract org.jdom.Parent getParent();

    public abstract int indexOf();

    public abstract java.util.List removeContent();

    public abstract java.util.List removeContent();

    public abstract org.jdom.Content removeContent();

    public abstract boolean removeContent();
}
package org.jdom;
public class Document implements org.jdom.Parent {
    private static final String CVS_ID = "@(#) $RCSfile: Document.java,v $ $Revision: 1.85 $ $Date: 2007/11/10 05:28:58 $ $Name:  $";
    protected String baseURI;
    org.jdom.ContentList content;
    private java.util.HashMap propertyMap;

    public Document()
    {
        this.content = new org.jdom.ContentList(this);
        this.baseURI = 0;
        this.propertyMap = 0;
        return;
    }

    public Document(java.util.List p3)
    {
        this.content = new org.jdom.ContentList(this);
        this.baseURI = 0;
        this.propertyMap = 0;
        this.setContent(p3);
        return;
    }

    public Document(org.jdom.Element p2)
    {
        this(p2, 0, 0);
        return;
    }

    public Document(org.jdom.Element p2, org.jdom.DocType p3)
    {
        this(p2, p3, 0);
        return;
    }

    public Document(org.jdom.Element p3, org.jdom.DocType p4, String p5)
    {
        this.content = new org.jdom.ContentList(this);
        this.baseURI = 0;
        this.propertyMap = 0;
        if (p3 != null) {
            this.setRootElement(p3);
        }
        if (p4 != null) {
            this.setDocType(p4);
        }
        if (p5 != null) {
            this.setBaseURI(p5);
        }
        return;
    }

    public org.jdom.Document addContent(int p2, java.util.Collection p3)
    {
        this.content.addAll(p2, p3);
        return this;
    }

    public org.jdom.Document addContent(int p2, org.jdom.Content p3)
    {
        this.content.add(p2, p3);
        return this;
    }

    public org.jdom.Document addContent(java.util.Collection p2)
    {
        this.content.addAll(p2);
        return this;
    }

    public org.jdom.Document addContent(org.jdom.Content p2)
    {
        this.content.add(p2);
        return this;
    }

    public Object clone()
    {
        try {
            org.jdom.Document v2 = ((org.jdom.Document) super.clone());
        } catch (org.jdom.ContentList v8) {
        }
        v2.content = new org.jdom.ContentList(v2);
        int v5 = 0;
        while (v5 < this.content.size()) {
            org.jdom.DocType v6_0 = this.content.get(v5);
            if (!(v6_0 instanceof org.jdom.Element)) {
                if (!(v6_0 instanceof org.jdom.Comment)) {
                    if (!(v6_0 instanceof org.jdom.ProcessingInstruction)) {
                        if ((v6_0 instanceof org.jdom.DocType)) {
                            v2.content.add(((org.jdom.DocType) ((org.jdom.DocType) v6_0).clone()));
                        }
                    } else {
                        v2.content.add(((org.jdom.ProcessingInstruction) ((org.jdom.ProcessingInstruction) v6_0).clone()));
                    }
                } else {
                    v2.content.add(((org.jdom.Comment) ((org.jdom.Comment) v6_0).clone()));
                }
            } else {
                v2.content.add(((org.jdom.Element) ((org.jdom.Element) v6_0).clone()));
            }
            v5++;
        }
        return v2;
    }

    public java.util.List cloneContent()
    {
        int v3 = this.getContentSize();
        java.util.ArrayList v2_1 = new java.util.ArrayList(v3);
        int v1 = 0;
        while (v1 < v3) {
            v2_1.add(this.getContent(v1).clone());
            v1++;
        }
        return v2_1;
    }

    public org.jdom.Element detachRootElement()
    {
        org.jdom.Element v1_2;
        int v0 = this.content.indexOfFirstElement();
        if (v0 >= 0) {
            v1_2 = ((org.jdom.Element) this.removeContent(v0));
        } else {
            v1_2 = 0;
        }
        return v1_2;
    }

    public final boolean equals(Object p2)
    {
        int v0;
        if (p2 != this) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }

    public final String getBaseURI()
    {
        return this.baseURI;
    }

    public java.util.List getContent()
    {
        if (this.hasRootElement()) {
            return this.content;
        } else {
            throw new IllegalStateException("Root element not set");
        }
    }

    public java.util.List getContent(org.jdom.filter.Filter p3)
    {
        if (this.hasRootElement()) {
            return this.content.getView(p3);
        } else {
            throw new IllegalStateException("Root element not set");
        }
    }

    public org.jdom.Content getContent(int p2)
    {
        return ((org.jdom.Content) this.content.get(p2));
    }

    public int getContentSize()
    {
        return this.content.size();
    }

    public java.util.Iterator getDescendants()
    {
        return new org.jdom.DescendantIterator(this);
    }

    public java.util.Iterator getDescendants(org.jdom.filter.Filter p3)
    {
        return new org.jdom.FilterIterator(new org.jdom.DescendantIterator(this), p3);
    }

    public org.jdom.DocType getDocType()
    {
        org.jdom.DocType v1_3;
        int v0 = this.content.indexOfDocType();
        if (v0 >= 0) {
            v1_3 = ((org.jdom.DocType) this.content.get(v0));
        } else {
            v1_3 = 0;
        }
        return v1_3;
    }

    public org.jdom.Document getDocument()
    {
        return this;
    }

    public org.jdom.Parent getParent()
    {
        return 0;
    }

    public Object getProperty(String p2)
    {
        Object v0_2;
        if (this.propertyMap != null) {
            v0_2 = this.propertyMap.get(p2);
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public org.jdom.Element getRootElement()
    {
        int v0 = this.content.indexOfFirstElement();
        if (v0 >= 0) {
            return ((org.jdom.Element) this.content.get(v0));
        } else {
            throw new IllegalStateException("Root element not set");
        }
    }

    public boolean hasRootElement()
    {
        int v0_2;
        if (this.content.indexOfFirstElement() >= 0) {
            v0_2 = 1;
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public final int hashCode()
    {
        return super.hashCode();
    }

    public int indexOf(org.jdom.Content p2)
    {
        return this.content.indexOf(p2);
    }

    public java.util.List removeContent()
    {
        java.util.ArrayList v0_1 = new java.util.ArrayList(this.content);
        this.content.clear();
        return v0_1;
    }

    public java.util.List removeContent(org.jdom.filter.Filter p5)
    {
        java.util.ArrayList v2_1 = new java.util.ArrayList();
        java.util.Iterator v1 = this.content.getView(p5).iterator();
        while (v1.hasNext()) {
            v2_1.add(((org.jdom.Content) v1.next()));
            v1.remove();
        }
        return v2_1;
    }

    public org.jdom.Content removeContent(int p2)
    {
        return ((org.jdom.Content) this.content.remove(p2));
    }

    public boolean removeContent(org.jdom.Content p2)
    {
        return this.content.remove(p2);
    }

    public final void setBaseURI(String p1)
    {
        this.baseURI = p1;
        return;
    }

    public org.jdom.Document setContent(int p2, java.util.Collection p3)
    {
        this.content.remove(p2);
        this.content.addAll(p2, p3);
        return this;
    }

    public org.jdom.Document setContent(int p2, org.jdom.Content p3)
    {
        this.content.set(p2, p3);
        return this;
    }

    public org.jdom.Document setContent(java.util.Collection p2)
    {
        this.content.clearAndSet(p2);
        return this;
    }

    public org.jdom.Document setContent(org.jdom.Content p2)
    {
        this.content.clear();
        this.content.add(p2);
        return this;
    }

    public org.jdom.Document setDocType(org.jdom.DocType p4)
    {
        if (p4 != null) {
            if (p4.getParent() == null) {
                int v0_1 = this.content.indexOfDocType();
                if (v0_1 >= 0) {
                    this.content.set(v0_1, p4);
                } else {
                    this.content.add(0, p4);
                }
            } else {
                throw new org.jdom.IllegalAddException(p4, "The DocType already is attached to a document");
            }
        } else {
            int v0_0 = this.content.indexOfDocType();
            if (v0_0 >= 0) {
                this.content.remove(v0_0);
            }
        }
        return this;
    }

    public void setProperty(String p2, Object p3)
    {
        if (this.propertyMap == null) {
            this.propertyMap = new java.util.HashMap();
        }
        this.propertyMap.put(p2, p3);
        return;
    }

    public org.jdom.Document setRootElement(org.jdom.Element p3)
    {
        int v0 = this.content.indexOfFirstElement();
        if (v0 >= 0) {
            this.content.set(v0, p3);
        } else {
            this.content.add(p3);
        }
        return this;
    }

    public String toString()
    {
        StringBuffer v1 = new StringBuffer().append("[Document: ");
        org.jdom.DocType v0 = this.getDocType();
        if (v0 == null) {
            v1.append(" No DOCTYPE declaration, ");
        } else {
            v1.append(v0.toString()).append(", ");
        }
        if (!this.hasRootElement()) {
            v1.append(" No root element");
        } else {
            v1.append("Root is ").append(this.getRootElement().toString());
        }
        v1.append("]");
        return v1.toString();
    }
}
package org.jdom;
public class Element extends org.jdom.Content implements org.jdom.Parent {
    private static final String CVS_ID = "@(#) $RCSfile: Element.java,v $ $Revision: 1.159 $ $Date: 2007/11/14 05:02:08 $ $Name:  $";
    private static final int INITIAL_ARRAY_SIZE = 5;
    protected transient java.util.List additionalNamespaces;
    org.jdom.AttributeList attributes;
    org.jdom.ContentList content;
    protected String name;
    protected transient org.jdom.Namespace namespace;

    protected Element()
    {
        this.attributes = new org.jdom.AttributeList(this);
        this.content = new org.jdom.ContentList(this);
        return;
    }

    public Element(String p2)
    {
        this(p2, ((org.jdom.Namespace) 0));
        return;
    }

    public Element(String p2, String p3)
    {
        this(p2, org.jdom.Namespace.getNamespace("", p3));
        return;
    }

    public Element(String p2, String p3, String p4)
    {
        this(p2, org.jdom.Namespace.getNamespace(p3, p4));
        return;
    }

    public Element(String p2, org.jdom.Namespace p3)
    {
        this.attributes = new org.jdom.AttributeList(this);
        this.content = new org.jdom.ContentList(this);
        this.setName(p2);
        this.setNamespace(p3);
        return;
    }

    private void readObject(java.io.ObjectInputStream p6)
    {
        p6.defaultReadObject();
        this.namespace = org.jdom.Namespace.getNamespace(((String) p6.readObject()), ((String) p6.readObject()));
        int v2 = p6.read();
        if (v2 != 0) {
            this.additionalNamespaces = new java.util.ArrayList(v2);
            int v1 = 0;
            while (v1 < v2) {
                this.additionalNamespaces.add(org.jdom.Namespace.getNamespace(((String) p6.readObject()), ((String) p6.readObject())));
                v1++;
            }
        }
        return;
    }

    private void writeObject(java.io.ObjectOutputStream p5)
    {
        p5.defaultWriteObject();
        p5.writeObject(this.namespace.getPrefix());
        p5.writeObject(this.namespace.getURI());
        if (this.additionalNamespaces != null) {
            int v2 = this.additionalNamespaces.size();
            p5.write(v2);
            int v1 = 0;
            while (v1 < v2) {
                org.jdom.Namespace v0_1 = ((org.jdom.Namespace) this.additionalNamespaces.get(v1));
                p5.writeObject(v0_1.getPrefix());
                p5.writeObject(v0_1.getURI());
                v1++;
            }
        } else {
            p5.write(0);
        }
        return;
    }

    public org.jdom.Element addContent(int p2, java.util.Collection p3)
    {
        this.content.addAll(p2, p3);
        return this;
    }

    public org.jdom.Element addContent(int p2, org.jdom.Content p3)
    {
        this.content.add(p2, p3);
        return this;
    }

    public org.jdom.Element addContent(String p2)
    {
        return this.addContent(new org.jdom.Text(p2));
    }

    public org.jdom.Element addContent(java.util.Collection p2)
    {
        this.content.addAll(p2);
        return this;
    }

    public org.jdom.Element addContent(org.jdom.Content p2)
    {
        this.content.add(p2);
        return this;
    }

    public void addNamespaceDeclaration(org.jdom.Namespace p4)
    {
        String v0 = org.jdom.Verifier.checkNamespaceCollision(p4, this);
        if (v0 == null) {
            if (this.additionalNamespaces == null) {
                this.additionalNamespaces = new java.util.ArrayList(5);
            }
            this.additionalNamespaces.add(p4);
            return;
        } else {
            throw new org.jdom.IllegalAddException(this, p4, v0);
        }
    }

    public Object clone()
    {
        org.jdom.Element v2_1 = ((org.jdom.Element) super.clone());
        v2_1.content = new org.jdom.ContentList(v2_1);
        v2_1.attributes = new org.jdom.AttributeList(v2_1);
        if (this.attributes != null) {
            int v3_0 = 0;
            while (v3_0 < this.attributes.size()) {
                v2_1.attributes.add(((org.jdom.Attribute) this.attributes.get(v3_0)).clone());
                v3_0++;
            }
        }
        if (this.additionalNamespaces != null) {
            v2_1.additionalNamespaces = new java.util.ArrayList(this.additionalNamespaces);
        }
        if (this.content != null) {
            int v3_1 = 0;
            while (v3_1 < this.content.size()) {
                v2_1.content.add(((org.jdom.Content) this.content.get(v3_1)).clone());
                v3_1++;
            }
        }
        return v2_1;
    }

    public java.util.List cloneContent()
    {
        int v3 = this.getContentSize();
        java.util.ArrayList v2_1 = new java.util.ArrayList(v3);
        int v1 = 0;
        while (v1 < v3) {
            v2_1.add(this.getContent(v1).clone());
            v1++;
        }
        return v2_1;
    }

    public java.util.List getAdditionalNamespaces()
    {
        java.util.List v0_2;
        if (this.additionalNamespaces != null) {
            v0_2 = java.util.Collections.unmodifiableList(this.additionalNamespaces);
        } else {
            v0_2 = java.util.Collections.EMPTY_LIST;
        }
        return v0_2;
    }

    public org.jdom.Attribute getAttribute(String p2)
    {
        return this.getAttribute(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public org.jdom.Attribute getAttribute(String p2, org.jdom.Namespace p3)
    {
        return ((org.jdom.Attribute) this.attributes.get(p2, p3));
    }

    public String getAttributeValue(String p2)
    {
        return this.getAttributeValue(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public String getAttributeValue(String p2, String p3)
    {
        return this.getAttributeValue(p2, org.jdom.Namespace.NO_NAMESPACE, p3);
    }

    public String getAttributeValue(String p2, org.jdom.Namespace p3)
    {
        return this.getAttributeValue(p2, p3, 0);
    }

    public String getAttributeValue(String p3, org.jdom.Namespace p4, String p5)
    {
        org.jdom.Attribute v0_1 = ((org.jdom.Attribute) this.attributes.get(p3, p4));
        if (v0_1 != null) {
            p5 = v0_1.getValue();
        }
        return p5;
    }

    public java.util.List getAttributes()
    {
        return this.attributes;
    }

    public org.jdom.Element getChild(String p2)
    {
        return this.getChild(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public org.jdom.Element getChild(String p5, org.jdom.Namespace p6)
    {
        int v2_1;
        java.util.Iterator v1 = this.content.getView(new org.jdom.filter.ElementFilter(p5, p6)).iterator();
        if (!v1.hasNext()) {
            v2_1 = 0;
        } else {
            v2_1 = ((org.jdom.Element) v1.next());
        }
        return v2_1;
    }

    public String getChildText(String p3)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3);
        if (v0 != null) {
            v1 = v0.getText();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public String getChildText(String p3, org.jdom.Namespace p4)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3, p4);
        if (v0 != null) {
            v1 = v0.getText();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public String getChildTextNormalize(String p3)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3);
        if (v0 != null) {
            v1 = v0.getTextNormalize();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public String getChildTextNormalize(String p3, org.jdom.Namespace p4)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3, p4);
        if (v0 != null) {
            v1 = v0.getTextNormalize();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public String getChildTextTrim(String p3)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3);
        if (v0 != null) {
            v1 = v0.getTextTrim();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public String getChildTextTrim(String p3, org.jdom.Namespace p4)
    {
        String v1;
        org.jdom.Element v0 = this.getChild(p3, p4);
        if (v0 != null) {
            v1 = v0.getTextTrim();
        } else {
            v1 = 0;
        }
        return v1;
    }

    public java.util.List getChildren()
    {
        return this.content.getView(new org.jdom.filter.ElementFilter());
    }

    public java.util.List getChildren(String p2)
    {
        return this.getChildren(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public java.util.List getChildren(String p3, org.jdom.Namespace p4)
    {
        return this.content.getView(new org.jdom.filter.ElementFilter(p3, p4));
    }

    public java.util.List getContent()
    {
        return this.content;
    }

    public java.util.List getContent(org.jdom.filter.Filter p2)
    {
        return this.content.getView(p2);
    }

    public org.jdom.Content getContent(int p2)
    {
        return ((org.jdom.Content) this.content.get(p2));
    }

    public int getContentSize()
    {
        return this.content.size();
    }

    public java.util.Iterator getDescendants()
    {
        return new org.jdom.DescendantIterator(this);
    }

    public java.util.Iterator getDescendants(org.jdom.filter.Filter p3)
    {
        return new org.jdom.FilterIterator(new org.jdom.DescendantIterator(this), p3);
    }

    public String getName()
    {
        return this.name;
    }

    public org.jdom.Namespace getNamespace()
    {
        return this.namespace;
    }

    public org.jdom.Namespace getNamespace(String p7)
    {
        org.jdom.Namespace v3_0;
        if (p7 != null) {
            if (!"xml".equals(p7)) {
                if (!p7.equals(this.getNamespacePrefix())) {
                    if (this.additionalNamespaces != null) {
                        int v1 = 0;
                        while (v1 < this.additionalNamespaces.size()) {
                            v3_0 = ((org.jdom.Namespace) this.additionalNamespaces.get(v1));
                            if (p7.equals(v3_0.getPrefix())) {
                                return v3_0;
                            } else {
                                v1++;
                            }
                        }
                    }
                    if (this.attributes != null) {
                        java.util.Iterator v2 = this.attributes.iterator();
                        while (v2.hasNext()) {
                            org.jdom.Attribute v0_1 = ((org.jdom.Attribute) v2.next());
                            if (p7.equals(v0_1.getNamespacePrefix())) {
                                v3_0 = v0_1.getNamespace();
                                return v3_0;
                            }
                        }
                    }
                    if (!(this.parent instanceof org.jdom.Element)) {
                        v3_0 = 0;
                    } else {
                        v3_0 = ((org.jdom.Element) this.parent).getNamespace(p7);
                    }
                } else {
                    v3_0 = this.getNamespace();
                }
            } else {
                v3_0 = org.jdom.Namespace.XML_NAMESPACE;
            }
        } else {
            v3_0 = 0;
        }
        return v3_0;
    }

    public String getNamespacePrefix()
    {
        return this.namespace.getPrefix();
    }

    public String getNamespaceURI()
    {
        return this.namespace.getURI();
    }

    public String getQualifiedName()
    {
        String v0_4;
        if (!"".equals(this.namespace.getPrefix())) {
            v0_4 = new StringBuffer(this.namespace.getPrefix()).append(58).append(this.name).toString();
        } else {
            v0_4 = this.getName();
        }
        return v0_4;
    }

    public String getText()
    {
        String v4_3;
        if (this.content.size() != 0) {
            if (this.content.size() != 1) {
                StringBuffer v3_0 = new StringBuffer();
                int v0 = 0;
                int v1 = 0;
                while (v1 < this.content.size()) {
                    org.jdom.Text v2_0 = this.content.get(v1);
                    if ((v2_0 instanceof org.jdom.Text)) {
                        v3_0.append(((org.jdom.Text) v2_0).getText());
                        v0 = 1;
                    }
                    v1++;
                }
                if (v0 != 0) {
                    v4_3 = v3_0.toString();
                } else {
                    v4_3 = "";
                }
            } else {
                org.jdom.Text v2_2 = this.content.get(0);
                if (!(v2_2 instanceof org.jdom.Text)) {
                    v4_3 = "";
                } else {
                    v4_3 = ((org.jdom.Text) v2_2).getText();
                }
            }
        } else {
            v4_3 = "";
        }
        return v4_3;
    }

    public String getTextNormalize()
    {
        return org.jdom.Text.normalizeString(this.getText());
    }

    public String getTextTrim()
    {
        return this.getText().trim();
    }

    public String getValue()
    {
        StringBuffer v0_1 = new StringBuffer();
        java.util.Iterator v2 = this.getContent().iterator();
        while (v2.hasNext()) {
            org.jdom.Content v1_1 = ((org.jdom.Content) v2.next());
            if (((v1_1 instanceof org.jdom.Element)) || ((v1_1 instanceof org.jdom.Text))) {
                v0_1.append(v1_1.getValue());
            }
        }
        return v0_1.toString();
    }

    public int indexOf(org.jdom.Content p2)
    {
        return this.content.indexOf(p2);
    }

    public boolean isAncestor(org.jdom.Element p3)
    {
        org.jdom.Parent v0 = p3.getParent();
        while ((v0 instanceof org.jdom.Element)) {
            if (v0 != this) {
                v0 = v0.getParent();
            } else {
                int v1_1 = 1;
            }
            return v1_1;
        }
        v1_1 = 0;
        return v1_1;
    }

    public boolean isRootElement()
    {
        return (this.parent instanceof org.jdom.Document);
    }

    public boolean removeAttribute(String p2)
    {
        return this.removeAttribute(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public boolean removeAttribute(String p2, org.jdom.Namespace p3)
    {
        return this.attributes.remove(p2, p3);
    }

    public boolean removeAttribute(org.jdom.Attribute p2)
    {
        return this.attributes.remove(p2);
    }

    public boolean removeChild(String p2)
    {
        return this.removeChild(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public boolean removeChild(String p5, org.jdom.Namespace p6)
    {
        int v3_0;
        java.util.Iterator v1 = this.content.getView(new org.jdom.filter.ElementFilter(p5, p6)).iterator();
        if (!v1.hasNext()) {
            v3_0 = 0;
        } else {
            v1.next();
            v1.remove();
            v3_0 = 1;
        }
        return v3_0;
    }

    public boolean removeChildren(String p2)
    {
        return this.removeChildren(p2, org.jdom.Namespace.NO_NAMESPACE);
    }

    public boolean removeChildren(String p6, org.jdom.Namespace p7)
    {
        int v0 = 0;
        java.util.Iterator v2 = this.content.getView(new org.jdom.filter.ElementFilter(p6, p7)).iterator();
        while (v2.hasNext()) {
            v2.next();
            v2.remove();
            v0 = 1;
        }
        return v0;
    }

    public java.util.List removeContent()
    {
        java.util.ArrayList v0_1 = new java.util.ArrayList(this.content);
        this.content.clear();
        return v0_1;
    }

    public java.util.List removeContent(org.jdom.filter.Filter p5)
    {
        java.util.ArrayList v2_1 = new java.util.ArrayList();
        java.util.Iterator v1 = this.content.getView(p5).iterator();
        while (v1.hasNext()) {
            v2_1.add(((org.jdom.Content) v1.next()));
            v1.remove();
        }
        return v2_1;
    }

    public org.jdom.Content removeContent(int p2)
    {
        return ((org.jdom.Content) this.content.remove(p2));
    }

    public boolean removeContent(org.jdom.Content p2)
    {
        return this.content.remove(p2);
    }

    public void removeNamespaceDeclaration(org.jdom.Namespace p2)
    {
        if (this.additionalNamespaces != null) {
            this.additionalNamespaces.remove(p2);
        }
        return;
    }

    public org.jdom.Element setAttribute(String p3, String p4)
    {
        org.jdom.Attribute v0 = this.getAttribute(p3);
        if (v0 != null) {
            v0.setValue(p4);
        } else {
            this.setAttribute(new org.jdom.Attribute(p3, p4));
        }
        return this;
    }

    public org.jdom.Element setAttribute(String p3, String p4, org.jdom.Namespace p5)
    {
        org.jdom.Attribute v0 = this.getAttribute(p3, p5);
        if (v0 != null) {
            v0.setValue(p4);
        } else {
            this.setAttribute(new org.jdom.Attribute(p3, p4, p5));
        }
        return this;
    }

    public org.jdom.Element setAttribute(org.jdom.Attribute p2)
    {
        this.attributes.add(p2);
        return this;
    }

    public org.jdom.Element setAttributes(java.util.Collection p2)
    {
        this.attributes.clearAndSet(p2);
        return this;
    }

    public org.jdom.Element setAttributes(java.util.List p2)
    {
        return this.setAttributes(p2);
    }

    public org.jdom.Element setContent(int p2, org.jdom.Content p3)
    {
        this.content.set(p2, p3);
        return this;
    }

    public org.jdom.Element setContent(java.util.Collection p2)
    {
        this.content.clearAndSet(p2);
        return this;
    }

    public org.jdom.Element setContent(org.jdom.Content p2)
    {
        this.content.clear();
        this.content.add(p2);
        return this;
    }

    public org.jdom.Parent setContent(int p2, java.util.Collection p3)
    {
        this.content.remove(p2);
        this.content.addAll(p2, p3);
        return this;
    }

    public org.jdom.Element setName(String p4)
    {
        String v0 = org.jdom.Verifier.checkElementName(p4);
        if (v0 == null) {
            this.name = p4;
            return this;
        } else {
            throw new org.jdom.IllegalNameException(p4, "element", v0);
        }
    }

    public org.jdom.Element setNamespace(org.jdom.Namespace p5)
    {
        if (p5 == null) {
            p5 = org.jdom.Namespace.NO_NAMESPACE;
        }
        String v2_1 = org.jdom.Verifier.checkNamespaceCollision(p5, this.getAdditionalNamespaces());
        if (v2_1 == null) {
            java.util.Iterator v1 = this.getAttributes().iterator();
            while (v1.hasNext()) {
                String v2_0 = org.jdom.Verifier.checkNamespaceCollision(p5, ((org.jdom.Attribute) v1.next()));
                if (v2_0 != null) {
                    throw new org.jdom.IllegalAddException(this, p5, v2_0);
                }
            }
            this.namespace = p5;
            return this;
        } else {
            throw new org.jdom.IllegalAddException(this, p5, v2_1);
        }
    }

    public org.jdom.Element setText(String p2)
    {
        this.content.clear();
        if (p2 != null) {
            this.addContent(new org.jdom.Text(p2));
        }
        return this;
    }

    public String toString()
    {
        StringBuffer v1 = new StringBuffer(64).append("[Element: <").append(this.getQualifiedName());
        String v0 = this.getNamespaceURI();
        if (!"".equals(v0)) {
            v1.append(" [Namespace: ").append(v0).append("]");
        }
        v1.append("/>]");
        return v1.toString();
    }
}
package org.jdom;
public class EntityRef extends org.jdom.Content {
    private static final String CVS_ID = "@(#) $RCSfile: EntityRef.java,v $ $Revision: 1.22 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    protected String name;
    protected String publicID;
    protected String systemID;

    protected EntityRef()
    {
        return;
    }

    public EntityRef(String p2)
    {
        this(p2, 0, 0);
        return;
    }

    public EntityRef(String p2, String p3)
    {
        this(p2, 0, p3);
        return;
    }

    public EntityRef(String p1, String p2, String p3)
    {
        this.setName(p1);
        this.setPublicID(p2);
        this.setSystemID(p3);
        return;
    }

    public String getName()
    {
        return this.name;
    }

    public String getPublicID()
    {
        return this.publicID;
    }

    public String getSystemID()
    {
        return this.systemID;
    }

    public String getValue()
    {
        return "";
    }

    public org.jdom.EntityRef setName(String p4)
    {
        String v0 = org.jdom.Verifier.checkXMLName(p4);
        if (v0 == null) {
            this.name = p4;
            return this;
        } else {
            throw new org.jdom.IllegalNameException(p4, "EntityRef", v0);
        }
    }

    public org.jdom.EntityRef setPublicID(String p4)
    {
        String v0 = org.jdom.Verifier.checkPublicID(p4);
        if (v0 == null) {
            this.publicID = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "EntityRef", v0);
        }
    }

    public org.jdom.EntityRef setSystemID(String p4)
    {
        String v0 = org.jdom.Verifier.checkSystemLiteral(p4);
        if (v0 == null) {
            this.systemID = p4;
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p4, "EntityRef", v0);
        }
    }

    public String toString()
    {
        return new StringBuffer().append("[EntityRef: ").append("&").append(this.name).append(";").append("]").toString();
    }
}
package org.jdom;
 class FilterIterator implements java.util.Iterator {
    private static final String CVS_ID = "@(#) $RCSfile: FilterIterator.java,v $ $Revision: 1.6 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    private org.jdom.filter.Filter filter;
    private java.util.Iterator iterator;
    private Object nextObject;

    public FilterIterator(java.util.Iterator p3, org.jdom.filter.Filter p4)
    {
        if ((p3 != null) && (p4 != null)) {
            this.iterator = p3;
            this.filter = p4;
            return;
        } else {
            throw new IllegalArgumentException("null parameter");
        }
    }

    public boolean hasNext()
    {
        int v1 = 1;
        if (this.nextObject == null) {
            while (this.iterator.hasNext()) {
                Object v0 = this.iterator.next();
                if (this.filter.matches(v0)) {
                    this.nextObject = v0;
                }
            }
            v1 = 0;
        }
        return v1;
    }

    public Object next()
    {
        if (this.hasNext()) {
            Object v0 = this.nextObject;
            this.nextObject = 0;
            return v0;
        } else {
            throw new java.util.NoSuchElementException();
        }
    }

    public void remove()
    {
        this.iterator.remove();
        return;
    }
}
package org.jdom;
public class IllegalAddException extends java.lang.IllegalArgumentException {
    private static final String CVS_ID = "@(#) $RCSfile: IllegalAddException.java,v $ $Revision: 1.26 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";

    public IllegalAddException(String p1)
    {
        super(p1);
        return;
    }

    IllegalAddException(org.jdom.Comment p3, String p4)
    {
        super(new StringBuffer().append("The comment \"").append(p3.getText()).append("\" could not be added to the top level of the document: ").append(p4).toString());
        return;
    }

    IllegalAddException(org.jdom.DocType p3, String p4)
    {
        super(new StringBuffer().append("The DOCTYPE ").append(p3.toString()).append(" could not be added to the document: ").append(p4).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, String p4)
    {
        super(new StringBuffer().append("The element \"").append(p3.getQualifiedName()).append("\" could not be added as the root of the document: ").append(p4).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.Attribute p4, String p5)
    {
        super(new StringBuffer().append("The attribute \"").append(p4.getQualifiedName()).append("\" could not be added to the element \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.CDATA p4, String p5)
    {
        super(new StringBuffer().append("The CDATA \"").append(p4.getText()).append("\" could not be added as content to \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.Comment p4, String p5)
    {
        super(new StringBuffer().append("The comment \"").append(p4.getText()).append("\" could not be added as content to \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.Element p4, String p5)
    {
        super(new StringBuffer().append("The element \"").append(p4.getQualifiedName()).append("\" could not be added as a child of \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.EntityRef p4, String p5)
    {
        super(new StringBuffer().append("The entity reference\"").append(p4.getName()).append("\" could not be added as content to \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p4, org.jdom.Namespace p5, String p6)
    {
        String v0_8;
        String v1_4 = new StringBuffer().append("The namespace xmlns");
        if ((p5.getPrefix() != null) && (!p5.getPrefix().equals(""))) {
            v0_8 = new StringBuffer().append(":").append(p5.getPrefix()).append("=").toString();
        } else {
            v0_8 = "=";
        }
        super(v1_4.append(v0_8).append("\"").append(p5.getURI()).append("\" could not be added as a namespace to \"").append(p4.getQualifiedName()).append("\": ").append(p6).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.ProcessingInstruction p4, String p5)
    {
        super(new StringBuffer().append("The PI \"").append(p4.getTarget()).append("\" could not be added as content to \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.Element p3, org.jdom.Text p4, String p5)
    {
        super(new StringBuffer().append("The Text \"").append(p4.getText()).append("\" could not be added as content to \"").append(p3.getQualifiedName()).append("\": ").append(p5).toString());
        return;
    }

    IllegalAddException(org.jdom.ProcessingInstruction p3, String p4)
    {
        super(new StringBuffer().append("The PI \"").append(p3.getTarget()).append("\" could not be added to the top level of the document: ").append(p4).toString());
        return;
    }
}
package org.jdom;
public class IllegalDataException extends java.lang.IllegalArgumentException {
    private static final String CVS_ID = "@(#) $RCSfile: IllegalDataException.java,v $ $Revision: 1.14 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";

    public IllegalDataException(String p1)
    {
        super(p1);
        return;
    }

    IllegalDataException(String p3, String p4)
    {
        super(new StringBuffer().append("The data \"").append(p3).append("\" is not legal for a JDOM ").append(p4).append(".").toString());
        return;
    }

    IllegalDataException(String p3, String p4, String p5)
    {
        super(new StringBuffer().append("The data \"").append(p3).append("\" is not legal for a JDOM ").append(p4).append(": ").append(p5).append(".").toString());
        return;
    }
}
package org.jdom;
public class IllegalNameException extends java.lang.IllegalArgumentException {
    private static final String CVS_ID = "@(#) $RCSfile: IllegalNameException.java,v $ $Revision: 1.14 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";

    public IllegalNameException(String p1)
    {
        super(p1);
        return;
    }

    IllegalNameException(String p3, String p4)
    {
        super(new StringBuffer().append("The name \"").append(p3).append("\" is not legal for JDOM/XML ").append(p4).append("s.").toString());
        return;
    }

    IllegalNameException(String p3, String p4, String p5)
    {
        super(new StringBuffer().append("The name \"").append(p3).append("\" is not legal for JDOM/XML ").append(p4).append("s: ").append(p5).append(".").toString());
        return;
    }
}
package org.jdom;
public class IllegalTargetException extends java.lang.IllegalArgumentException {
    private static final String CVS_ID = "@(#) $RCSfile: IllegalTargetException.java,v $ $Revision: 1.15 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";

    public IllegalTargetException(String p1)
    {
        super(p1);
        return;
    }

    IllegalTargetException(String p3, String p4)
    {
        super(new StringBuffer().append("The target \"").append(p3).append("\" is not legal for JDOM/XML Processing Instructions: ").append(p4).append(".").toString());
        return;
    }
}
package org.jdom;
public final class Namespace {
    private static final String CVS_ID = "@(#) $RCSfile: Namespace.java,v $ $Revision: 1.44 $ $Date: 2008/12/17 23:22:48 $ $Name:  $";
    public static final org.jdom.Namespace NO_NAMESPACE;
    public static final org.jdom.Namespace XML_NAMESPACE;
    private static java.util.HashMap namespaces;
    private String prefix;
    private String uri;

    static Namespace()
    {
        org.jdom.Namespace.NO_NAMESPACE = new org.jdom.Namespace("", "");
        org.jdom.Namespace.XML_NAMESPACE = new org.jdom.Namespace("xml", "http://www.w3.org/XML/1998/namespace");
        org.jdom.Namespace.namespaces = new java.util.HashMap(16);
        org.jdom.Namespace.namespaces.put(new org.jdom.NamespaceKey(org.jdom.Namespace.NO_NAMESPACE), org.jdom.Namespace.NO_NAMESPACE);
        org.jdom.Namespace.namespaces.put(new org.jdom.NamespaceKey(org.jdom.Namespace.XML_NAMESPACE), org.jdom.Namespace.XML_NAMESPACE);
        return;
    }

    private Namespace(String p1, String p2)
    {
        this.prefix = p1;
        this.uri = p2;
        return;
    }

    public static org.jdom.Namespace getNamespace(String p1)
    {
        return org.jdom.Namespace.getNamespace("", p1);
    }

    public static org.jdom.Namespace getNamespace(String p8, String p9)
    {
        if ((p8 != null) && (!p8.trim().equals(""))) {
            if ((p9 != null) && (!p9.trim().equals(""))) {
                org.jdom.NamespaceKey v0_1 = new org.jdom.NamespaceKey(p8, p9);
                org.jdom.Namespace v2_1 = ((org.jdom.Namespace) org.jdom.Namespace.namespaces.get(v0_1));
                if (v2_1 == null) {
                    String v3_0 = org.jdom.Verifier.checkNamespacePrefix(p8);
                    if (v3_0 == null) {
                        String v3_1 = org.jdom.Verifier.checkNamespaceURI(p9);
                        if (v3_1 == null) {
                            if ((p8.equals("")) || (!p9.equals(""))) {
                                if (!p8.equals("xml")) {
                                    if (!p9.equals("http://www.w3.org/XML/1998/namespace")) {
                                        org.jdom.Namespace v1_1 = new org.jdom.Namespace(p8, p9);
                                        try {
                                            org.jdom.Namespace.namespaces.put(v0_1, v1_1);
                                            v2_1 = v1_1;
                                        } catch (Throwable v4_16) {
                                            throw v4_16;
                                        }
                                    } else {
                                        throw new org.jdom.IllegalNameException(p9, "Namespace URI", "The http://www.w3.org/XML/1998/namespace must be bound to the xml prefix.");
                                    }
                                } else {
                                    throw new org.jdom.IllegalNameException(p8, "Namespace prefix", "The xml prefix can only be bound to http://www.w3.org/XML/1998/namespace");
                                }
                            } else {
                                throw new org.jdom.IllegalNameException("", "namespace", "Namespace URIs must be non-null and non-empty Strings");
                            }
                        } else {
                            throw new org.jdom.IllegalNameException(p9, "Namespace URI", v3_1);
                        }
                    } else {
                        throw new org.jdom.IllegalNameException(p8, "Namespace prefix", v3_0);
                    }
                }
            } else {
                p9 = "";
            }
        } else {
            if ((p9 != null) && (!p9.trim().equals(""))) {
                p8 = "";
            } else {
                v2_1 = org.jdom.Namespace.NO_NAMESPACE;
            }
        }
        return v2_1;
    }

    public boolean equals(Object p3)
    {
        int v0_1;
        if (this != p3) {
            if (!(p3 instanceof org.jdom.Namespace)) {
                v0_1 = 0;
            } else {
                v0_1 = this.uri.equals(((org.jdom.Namespace) p3).uri);
            }
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public String getPrefix()
    {
        return this.prefix;
    }

    public String getURI()
    {
        return this.uri;
    }

    public int hashCode()
    {
        return this.uri.hashCode();
    }

    public String toString()
    {
        return new StringBuffer().append("[Namespace: prefix \"").append(this.prefix).append("\" is mapped to URI \"").append(this.uri).append("\"]").toString();
    }
}
package org.jdom;
final class NamespaceKey {
    private static final String CVS_ID = "@(#) $RCSfile: NamespaceKey.java,v $ $Revision: 1.2 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    private int hash;
    private String prefix;
    private String uri;

    public NamespaceKey(String p2, String p3)
    {
        this.prefix = p2;
        this.uri = p3;
        this.hash = p2.hashCode();
        return;
    }

    public NamespaceKey(org.jdom.Namespace p3)
    {
        this(p3.getPrefix(), p3.getURI());
        return;
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if (!(p6 instanceof org.jdom.NamespaceKey)) {
                v1 = 0;
            } else {
                if ((!this.prefix.equals(((org.jdom.NamespaceKey) p6).prefix)) || (!this.uri.equals(((org.jdom.NamespaceKey) p6).uri))) {
                    v1 = 0;
                }
            }
        }
        return v1;
    }

    public int hashCode()
    {
        return this.hash;
    }

    public String toString()
    {
        return new StringBuffer().append("[NamespaceKey: prefix \"").append(this.prefix).append("\" is mapped to URI \"").append(this.uri).append("\"]").toString();
    }
}
package org.jdom;
public class ProcessingInstruction extends org.jdom.Content {
    private static final String CVS_ID = "@(#) $RCSfile: ProcessingInstruction.java,v $ $Revision: 1.47 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    protected java.util.Map mapData;
    protected String rawData;
    protected String target;

    protected ProcessingInstruction()
    {
        return;
    }

    public ProcessingInstruction(String p1, String p2)
    {
        this.setTarget(p1);
        this.setData(p2);
        return;
    }

    public ProcessingInstruction(String p1, java.util.Map p2)
    {
        this.setTarget(p1);
        this.setData(p2);
        return;
    }

    private static int[] extractQuotedString(String p7)
    {
        int v1 = 0;
        char v3 = 34;
        int v4 = 0;
        int v2 = 0;
        while (v2 < p7.length()) {
            char v0 = p7.charAt(v2);
            if ((v0 == 34) || (v0 == 39)) {
                if (v1 != 0) {
                    if (v3 == v0) {
                        int[] v5_3 = new int[2];
                        v5_3[0] = v4;
                        v5_3[1] = v2;
                        return v5_3;
                    }
                } else {
                    v3 = v0;
                    v1 = 1;
                    v4 = (v2 + 1);
                }
            }
            v2++;
        }
        v5_3 = 0;
        return v5_3;
    }

    private java.util.Map parseData(String p13)
    {
        java.util.HashMap v2_1 = new java.util.HashMap();
        String v3 = p13.trim();
        while (!v3.trim().equals("")) {
            String v4 = "";
            String v8 = "";
            int v7 = 0;
            char v6 = v3.charAt(0);
            int v5 = 1;
            while (v5 < v3.length()) {
                char v1 = v3.charAt(v5);
                if (v1 != 61) {
                    if ((Character.isWhitespace(v6)) && (!Character.isWhitespace(v1))) {
                        v7 = v5;
                    }
                    v6 = v1;
                    v5++;
                } else {
                    v4 = v3.substring(v7, v5).trim();
                    int[] v0 = org.jdom.ProcessingInstruction.extractQuotedString(v3.substring((v5 + 1)));
                    if (v0 != null) {
                        v8 = v3.substring(((v0[0] + v5) + 1), ((v0[1] + v5) + 1));
                        v5 += (v0[1] + 1);
                        break;
                    } else {
                        v2_1 = new java.util.HashMap();
                        return v2_1;
                    }
                }
            }
            v3 = v3.substring(v5);
            if ((v4.length() > 0) && (v8 != null)) {
                v2_1.put(v4, v8);
            }
        }
        return v2_1;
    }

    private String toString(java.util.Map p7)
    {
        StringBuffer v2_1 = new StringBuffer();
        java.util.Iterator v0 = p7.keySet().iterator();
        while (v0.hasNext()) {
            String v1_1 = ((String) v0.next());
            v2_1.append(v1_1).append("=\"").append(((String) p7.get(v1_1))).append("\" ");
        }
        if (v2_1.length() > 0) {
            v2_1.setLength((v2_1.length() - 1));
        }
        return v2_1.toString();
    }

    public Object clone()
    {
        org.jdom.ProcessingInstruction v0_1 = ((org.jdom.ProcessingInstruction) super.clone());
        if (this.mapData != null) {
            v0_1.mapData = this.parseData(this.rawData);
        }
        return v0_1;
    }

    public String getData()
    {
        return this.rawData;
    }

    public java.util.List getPseudoAttributeNames()
    {
        java.util.Set v2 = this.mapData.entrySet();
        java.util.ArrayList v3_1 = new java.util.ArrayList();
        java.util.Iterator v1 = v2.iterator();
        while (v1.hasNext()) {
            String v4 = v1.next().toString();
            v3_1.add(v4.substring(0, v4.indexOf("=")));
        }
        return v3_1;
    }

    public String getPseudoAttributeValue(String p2)
    {
        return ((String) this.mapData.get(p2));
    }

    public String getTarget()
    {
        return this.target;
    }

    public String getValue()
    {
        return this.rawData;
    }

    public boolean removePseudoAttribute(String p2)
    {
        int v0_2;
        if (this.mapData.remove(p2) == null) {
            v0_2 = 0;
        } else {
            this.rawData = this.toString(this.mapData);
            v0_2 = 1;
        }
        return v0_2;
    }

    public org.jdom.ProcessingInstruction setData(String p3)
    {
        String v0 = org.jdom.Verifier.checkProcessingInstructionData(p3);
        if (v0 == null) {
            this.rawData = p3;
            this.mapData = this.parseData(p3);
            return this;
        } else {
            throw new org.jdom.IllegalDataException(p3, v0);
        }
    }

    public org.jdom.ProcessingInstruction setData(java.util.Map p4)
    {
        String v1 = this.toString(p4);
        String v0 = org.jdom.Verifier.checkProcessingInstructionData(v1);
        if (v0 == null) {
            this.rawData = v1;
            this.mapData = new java.util.HashMap(p4);
            return this;
        } else {
            throw new org.jdom.IllegalDataException(v1, v0);
        }
    }

    public org.jdom.ProcessingInstruction setPseudoAttribute(String p3, String p4)
    {
        String v0_0 = org.jdom.Verifier.checkProcessingInstructionData(p3);
        if (v0_0 == null) {
            String v0_1 = org.jdom.Verifier.checkProcessingInstructionData(p4);
            if (v0_1 == null) {
                this.mapData.put(p3, p4);
                this.rawData = this.toString(this.mapData);
                return this;
            } else {
                throw new org.jdom.IllegalDataException(p4, v0_1);
            }
        } else {
            throw new org.jdom.IllegalDataException(p3, v0_0);
        }
    }

    public org.jdom.ProcessingInstruction setTarget(String p3)
    {
        String v0 = org.jdom.Verifier.checkProcessingInstructionTarget(p3);
        if (v0 == null) {
            this.target = p3;
            return this;
        } else {
            throw new org.jdom.IllegalTargetException(p3, v0);
        }
    }

    public String toString()
    {
        return new StringBuffer().append("[ProcessingInstruction: ").append(new org.jdom.output.XMLOutputter().outputString(this)).append("]").toString();
    }
}
package org.jdom;
public class UncheckedJDOMFactory implements org.jdom.JDOMFactory {

    public UncheckedJDOMFactory()
    {
        return;
    }

    public void addContent(org.jdom.Parent p4, org.jdom.Content p5)
    {
        if (!(p4 instanceof org.jdom.Element)) {
            ((org.jdom.Document) p4).content.uncheckedAddContent(p5);
        } else {
            ((org.jdom.Element) p4).content.uncheckedAddContent(p5);
        }
        return;
    }

    public void addNamespaceDeclaration(org.jdom.Element p3, org.jdom.Namespace p4)
    {
        if (p3.additionalNamespaces == null) {
            p3.additionalNamespaces = new java.util.ArrayList(5);
        }
        p3.additionalNamespaces.add(p4);
        return;
    }

    public org.jdom.Attribute attribute(String p3, String p4)
    {
        org.jdom.Attribute v0_1 = new org.jdom.Attribute();
        v0_1.name = p3;
        v0_1.value = p4;
        v0_1.namespace = org.jdom.Namespace.NO_NAMESPACE;
        return v0_1;
    }

    public org.jdom.Attribute attribute(String p3, String p4, int p5)
    {
        org.jdom.Attribute v0_1 = new org.jdom.Attribute();
        v0_1.name = p3;
        v0_1.type = p5;
        v0_1.value = p4;
        v0_1.namespace = org.jdom.Namespace.NO_NAMESPACE;
        return v0_1;
    }

    public org.jdom.Attribute attribute(String p2, String p3, int p4, org.jdom.Namespace p5)
    {
        org.jdom.Attribute v0_1 = new org.jdom.Attribute();
        v0_1.name = p2;
        v0_1.type = p4;
        v0_1.value = p3;
        if (p5 == null) {
            p5 = org.jdom.Namespace.NO_NAMESPACE;
        }
        v0_1.namespace = p5;
        return v0_1;
    }

    public org.jdom.Attribute attribute(String p2, String p3, org.jdom.Namespace p4)
    {
        org.jdom.Attribute v0_1 = new org.jdom.Attribute();
        v0_1.name = p2;
        v0_1.value = p3;
        if (p4 == null) {
            p4 = org.jdom.Namespace.NO_NAMESPACE;
        }
        v0_1.namespace = p4;
        return v0_1;
    }

    public org.jdom.CDATA cdata(String p2)
    {
        org.jdom.CDATA v0_1 = new org.jdom.CDATA();
        v0_1.value = p2;
        return v0_1;
    }

    public org.jdom.Comment comment(String p2)
    {
        org.jdom.Comment v0_1 = new org.jdom.Comment();
        v0_1.text = p2;
        return v0_1;
    }

    public org.jdom.DocType docType(String p2)
    {
        return this.docType(p2, 0, 0);
    }

    public org.jdom.DocType docType(String p2, String p3)
    {
        return this.docType(p2, 0, p3);
    }

    public org.jdom.DocType docType(String p2, String p3, String p4)
    {
        org.jdom.DocType v0_1 = new org.jdom.DocType();
        v0_1.elementName = p2;
        v0_1.publicID = p3;
        v0_1.systemID = p4;
        return v0_1;
    }

    public org.jdom.Document document(org.jdom.Element p2)
    {
        return this.document(p2, 0, 0);
    }

    public org.jdom.Document document(org.jdom.Element p2, org.jdom.DocType p3)
    {
        return this.document(p2, p3, 0);
    }

    public org.jdom.Document document(org.jdom.Element p2, org.jdom.DocType p3, String p4)
    {
        org.jdom.Document v0_1 = new org.jdom.Document();
        if (p3 != null) {
            this.addContent(v0_1, p3);
        }
        if (p2 != null) {
            this.addContent(v0_1, p2);
        }
        if (p4 != null) {
            v0_1.baseURI = p4;
        }
        return v0_1;
    }

    public org.jdom.Element element(String p3)
    {
        org.jdom.Element v0_1 = new org.jdom.Element();
        v0_1.name = p3;
        v0_1.namespace = org.jdom.Namespace.NO_NAMESPACE;
        return v0_1;
    }

    public org.jdom.Element element(String p2, String p3)
    {
        return this.element(p2, org.jdom.Namespace.getNamespace("", p3));
    }

    public org.jdom.Element element(String p2, String p3, String p4)
    {
        return this.element(p2, org.jdom.Namespace.getNamespace(p3, p4));
    }

    public org.jdom.Element element(String p2, org.jdom.Namespace p3)
    {
        org.jdom.Element v0_1 = new org.jdom.Element();
        v0_1.name = p2;
        if (p3 == null) {
            p3 = org.jdom.Namespace.NO_NAMESPACE;
        }
        v0_1.namespace = p3;
        return v0_1;
    }

    public org.jdom.EntityRef entityRef(String p2)
    {
        org.jdom.EntityRef v0_1 = new org.jdom.EntityRef();
        v0_1.name = p2;
        return v0_1;
    }

    public org.jdom.EntityRef entityRef(String p2, String p3)
    {
        org.jdom.EntityRef v0_1 = new org.jdom.EntityRef();
        v0_1.name = p2;
        v0_1.systemID = p3;
        return v0_1;
    }

    public org.jdom.EntityRef entityRef(String p2, String p3, String p4)
    {
        org.jdom.EntityRef v0_1 = new org.jdom.EntityRef();
        v0_1.name = p2;
        v0_1.publicID = p3;
        v0_1.systemID = p4;
        return v0_1;
    }

    public org.jdom.ProcessingInstruction processingInstruction(String p2, String p3)
    {
        org.jdom.ProcessingInstruction v0_1 = new org.jdom.ProcessingInstruction();
        v0_1.target = p2;
        v0_1.setData(p3);
        return v0_1;
    }

    public org.jdom.ProcessingInstruction processingInstruction(String p2, java.util.Map p3)
    {
        org.jdom.ProcessingInstruction v0_1 = new org.jdom.ProcessingInstruction();
        v0_1.target = p2;
        v0_1.setData(p3);
        return v0_1;
    }

    public void setAttribute(org.jdom.Element p2, org.jdom.Attribute p3)
    {
        p2.attributes.uncheckedAddAttribute(p3);
        return;
    }

    public org.jdom.Text text(String p2)
    {
        org.jdom.Text v0_1 = new org.jdom.Text();
        v0_1.value = p2;
        return v0_1;
    }
}
package org.jdom;
public final class Verifier {
    private static final String CVS_ID = "@(#) $RCSfile: Verifier.java,v $ $Revision: 1.57 $ $Date: 2009/07/23 05:54:23 $ $Name:  $";

    private Verifier()
    {
        return;
    }

    public static String checkAttributeName(String p3)
    {
        int v0 = org.jdom.Verifier.checkXMLName(p3);
        if (v0 == 0) {
            if (p3.indexOf(":") == -1) {
                if (!p3.equals("xmlns")) {
                    v0 = 0;
                } else {
                    v0 = "An Attribute name may not be \"xmlns\"; use the Namespace class to manage namespaces";
                }
            } else {
                v0 = "Attribute names cannot contain colons";
            }
        }
        return v0;
    }

    public static String checkCDATASection(String p3)
    {
        int v0 = org.jdom.Verifier.checkCharacterData(p3);
        if (v0 == 0) {
            if (p3.indexOf("]]>") == -1) {
                v0 = 0;
            } else {
                v0 = "CDATA cannot internally contain a CDATA ending delimiter (]]>)";
            }
        }
        return v0;
    }

    public static String checkCharacterData(String p6)
    {
        char v4_1;
        if (p6 != null) {
            int v1 = 0;
            int v2 = p6.length();
            while (v1 < v2) {
                int v0 = p6.charAt(v1);
                if (org.jdom.Verifier.isHighSurrogate(((char) v0))) {
                    v1++;
                    if (v1 >= v2) {
                        v4_1 = "Surrogate Pair Truncated";
                        return v4_1;
                    } else {
                        char v3 = p6.charAt(v1);
                        if (org.jdom.Verifier.isLowSurrogate(v3)) {
                            v0 = org.jdom.Verifier.decodeSurrogatePair(((char) v0), v3);
                        } else {
                            v4_1 = "Illegal Surrogate Pair";
                            return v4_1;
                        }
                    }
                }
                if (org.jdom.Verifier.isXMLCharacter(v0)) {
                    v1++;
                } else {
                    v4_1 = new StringBuffer().append("0x").append(Integer.toHexString(v0)).append(" is not a legal XML character").toString();
                }
            }
            v4_1 = 0;
        } else {
            v4_1 = "A null is not a legal XML value";
        }
        return v4_1;
    }

    public static String checkCommentData(String p3)
    {
        int v0 = org.jdom.Verifier.checkCharacterData(p3);
        if (v0 == 0) {
            if (p3.indexOf("--") == -1) {
                if (!p3.endsWith("-")) {
                    v0 = 0;
                } else {
                    v0 = "Comment data cannot end with a hyphen.";
                }
            } else {
                v0 = "Comments cannot contain double hyphens (--)";
            }
        }
        return v0;
    }

    public static String checkElementName(String p3)
    {
        int v0 = org.jdom.Verifier.checkXMLName(p3);
        if (v0 == 0) {
            if (p3.indexOf(":") == -1) {
                v0 = 0;
            } else {
                v0 = "Element names cannot contain colons";
            }
        }
        return v0;
    }

    public static String checkNamespaceCollision(org.jdom.Attribute p3, org.jdom.Element p4)
    {
        String v2_0;
        org.jdom.Namespace v0 = p3.getNamespace();
        if (!"".equals(v0.getPrefix())) {
            v2_0 = org.jdom.Verifier.checkNamespaceCollision(v0, p4);
        } else {
            v2_0 = 0;
        }
        return v2_0;
    }

    public static String checkNamespaceCollision(org.jdom.Namespace p5, java.util.List p6)
    {
        String v2;
        if (p6 != null) {
            v2 = 0;
            java.util.Iterator v0 = p6.iterator();
            while ((v2 == null) && (v0.hasNext())) {
                org.jdom.Namespace v1_3 = v0.next();
                if (!(v1_3 instanceof org.jdom.Attribute)) {
                    if (!(v1_3 instanceof org.jdom.Element)) {
                        if ((v1_3 instanceof org.jdom.Namespace)) {
                            v2 = org.jdom.Verifier.checkNamespaceCollision(p5, ((org.jdom.Namespace) v1_3));
                            if (v2 != null) {
                                v2 = new StringBuffer().append(v2).append(" with an additional namespace declared by the element").toString();
                            }
                        }
                    } else {
                        v2 = org.jdom.Verifier.checkNamespaceCollision(p5, ((org.jdom.Element) v1_3));
                    }
                } else {
                    v2 = org.jdom.Verifier.checkNamespaceCollision(p5, ((org.jdom.Attribute) v1_3));
                }
            }
        } else {
            v2 = 0;
        }
        return v2;
    }

    public static String checkNamespaceCollision(org.jdom.Namespace p3, org.jdom.Attribute p4)
    {
        String v0 = 0;
        if (!p4.getNamespace().equals(org.jdom.Namespace.NO_NAMESPACE)) {
            v0 = org.jdom.Verifier.checkNamespaceCollision(p3, p4.getNamespace());
            if (v0 != null) {
                v0 = new StringBuffer().append(v0).append(" with an attribute namespace prefix on the element").toString();
            }
        }
        return v0;
    }

    public static String checkNamespaceCollision(org.jdom.Namespace p3, org.jdom.Element p4)
    {
        int v1_2;
        String v0_1 = org.jdom.Verifier.checkNamespaceCollision(p3, p4.getNamespace());
        if (v0_1 == null) {
            String v0_2 = org.jdom.Verifier.checkNamespaceCollision(p3, p4.getAdditionalNamespaces());
            if (v0_2 == null) {
                String v0_0 = org.jdom.Verifier.checkNamespaceCollision(p3, p4.getAttributes());
                if (v0_0 == null) {
                    v1_2 = 0;
                } else {
                    v1_2 = v0_0;
                }
            } else {
                v1_2 = v0_2;
            }
        } else {
            v1_2 = new StringBuffer().append(v0_1).append(" with the element namespace prefix").toString();
        }
        return v1_2;
    }

    public static String checkNamespaceCollision(org.jdom.Namespace p7, org.jdom.Namespace p8)
    {
        String v2 = 0;
        String v0 = p7.getPrefix();
        String v3 = p7.getURI();
        String v1 = p8.getPrefix();
        String v4 = p8.getURI();
        if ((v0.equals(v1)) && (!v3.equals(v4))) {
            v2 = new StringBuffer().append("The namespace prefix \"").append(v0).append("\" collides").toString();
        }
        return v2;
    }

    public static String checkNamespacePrefix(String p7)
    {
        String v4_0 = 0;
        if ((p7 != null) && (!p7.equals(""))) {
            char v1 = p7.charAt(0);
            if (!org.jdom.Verifier.isXMLDigit(v1)) {
                if (v1 != 36) {
                    if (v1 != 45) {
                        if (v1 != 46) {
                            if (!p7.toLowerCase().startsWith("xml")) {
                                int v2 = 0;
                                int v3 = p7.length();
                                while (v2 < v3) {
                                    char v0 = p7.charAt(v2);
                                    if (org.jdom.Verifier.isXMLNameCharacter(v0)) {
                                        v2++;
                                    } else {
                                        v4_0 = new StringBuffer().append("Namespace prefixes cannot contain the character \"").append(v0).append("\"").toString();
                                    }
                                }
                                if (p7.indexOf(":") != -1) {
                                    v4_0 = "Namespace prefixes cannot contain colons";
                                }
                            } else {
                                v4_0 = "Namespace prefixes cannot begin with \"xml\" in any combination of case";
                            }
                        } else {
                            v4_0 = "Namespace prefixes cannot begin with a period (.)";
                        }
                    } else {
                        v4_0 = "Namespace prefixes cannot begin with a hyphen (-)";
                    }
                } else {
                    v4_0 = "Namespace prefixes cannot begin with a dollar sign ($)";
                }
            } else {
                v4_0 = "Namespace prefixes cannot begin with a number";
            }
        }
        return v4_0;
    }

    public static String checkNamespaceURI(String p3)
    {
        String v1 = 0;
        if ((p3 != null) && (!p3.equals(""))) {
            char v0 = p3.charAt(0);
            if (!Character.isDigit(v0)) {
                if (v0 != 36) {
                    if (v0 == 45) {
                        v1 = "Namespace URIs cannot begin with a hyphen (-)";
                    }
                } else {
                    v1 = "Namespace URIs cannot begin with a dollar sign ($)";
                }
            } else {
                v1 = "Namespace URIs cannot begin with a number";
            }
        }
        return v1;
    }

    public static String checkProcessingInstructionData(String p2)
    {
        String v0 = org.jdom.Verifier.checkCharacterData(p2);
        if ((v0 == null) && (p2.indexOf("?>") >= 0)) {
            v0 = "Processing instructions cannot contain the string \"?>\"";
        }
        return v0;
    }

    public static String checkProcessingInstructionTarget(String p3)
    {
        int v0 = org.jdom.Verifier.checkXMLName(p3);
        if (v0 == 0) {
            if (p3.indexOf(":") == -1) {
                if (!p3.equalsIgnoreCase("xml")) {
                    v0 = 0;
                } else {
                    v0 = "Processing instructions cannot have a target of \"xml\" in any combination of case. (Note that the \"<?xml ... ?>\" declaration at the beginning of a document is not a processing instruction and should not be added as one; it is written automatically during output, e.g. by XMLOutputter.)";
                }
            } else {
                v0 = "Processing instruction targets cannot contain colons";
            }
        }
        return v0;
    }

    public static String checkPublicID(String p5)
    {
        StringBuffer v3_4;
        String v2 = 0;
        if (p5 != null) {
            int v1 = 0;
            while (v1 < p5.length()) {
                char v0 = p5.charAt(v1);
                if (org.jdom.Verifier.isXMLPublicIDCharacter(v0)) {
                    v1++;
                } else {
                    v2 = new StringBuffer().append(v0).append(" is not a legal character in public IDs").toString();
                    break;
                }
            }
            v3_4 = v2;
        } else {
            v3_4 = 0;
        }
        return v3_4;
    }

    public static String checkSystemLiteral(String p3)
    {
        String v1_0;
        if (p3 != null) {
            if ((p3.indexOf(39) == -1) || (p3.indexOf(34) == -1)) {
                String v0 = org.jdom.Verifier.checkCharacterData(p3);
            } else {
                v0 = "System literals cannot simultaneously contain both single and double quotes.";
            }
            v1_0 = v0;
        } else {
            v1_0 = 0;
        }
        return v1_0;
    }

    public static String checkURI(String p8)
    {
        String v6_0 = 0;
        if ((p8 != null) && (!p8.equals(""))) {
            int v2 = 0;
            while (v2 < p8.length()) {
                char v5 = p8.charAt(v2);
                if (org.jdom.Verifier.isURICharacter(v5)) {
                    if (v5 == 37) {
                        try {
                            char v1 = p8.charAt((v2 + 1));
                            char v4 = p8.charAt((v2 + 2));
                        } catch (StringIndexOutOfBoundsException v0) {
                            v6_0 = "Percent signs in URIs must be followed by exactly two hexadecimal digits.";
                            break;
                        }
                        if ((!org.jdom.Verifier.isHexDigit(v1)) || (!org.jdom.Verifier.isHexDigit(v4))) {
                            v6_0 = "Percent signs in URIs must be followed by exactly two hexadecimal digits.";
                            break;
                        }
                    }
                    v2++;
                } else {
                    String v3 = new StringBuffer().append("0x").append(Integer.toHexString(v5)).toString();
                    if (v5 <= 9) {
                        v3 = new StringBuffer().append("0x0").append(Integer.toHexString(v5)).toString();
                    }
                    v6_0 = new StringBuffer().append("URIs cannot contain ").append(v3).toString();
                    break;
                }
            }
        }
        return v6_0;
    }

    public static String checkXMLName(String p6)
    {
        if ((p6 != null) && ((p6.length() != 0) && (!p6.trim().equals("")))) {
            char v1 = p6.charAt(0);
            if (org.jdom.Verifier.isXMLNameStartCharacter(v1)) {
                int v2 = 1;
                int v3 = p6.length();
                while (v2 < v3) {
                    char v0 = p6.charAt(v2);
                    if (org.jdom.Verifier.isXMLNameCharacter(v0)) {
                        v2++;
                    } else {
                        String v4_3 = new StringBuffer().append("XML names cannot contain the character \"").append(v0).append("\"").toString();
                    }
                }
                v4_3 = 0;
            } else {
                v4_3 = new StringBuffer().append("XML names cannot begin with the character \"").append(v1).append("\"").toString();
            }
        } else {
            v4_3 = "XML names cannot be null or empty";
        }
        return v4_3;
    }

    public static int decodeSurrogatePair(char p2, char p3)
    {
        return ((65536 + ((p2 - 55296) * 1024)) + (p3 - 56320));
    }

    public static boolean isHexDigit(char p2)
    {
        int v0 = 1;
        if (((p2 < 48) || (p2 > 57)) && (((p2 < 65) || (p2 > 70)) && ((p2 < 97) || (p2 > 102)))) {
            v0 = 0;
        }
        return v0;
    }

    public static boolean isHighSurrogate(char p1)
    {
        if ((p1 < 55296) || (p1 > 56319)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static boolean isLowSurrogate(char p1)
    {
        if ((p1 < 56320) || (p1 > 57343)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static boolean isURICharacter(char p2)
    {
        int v0 = 1;
        if (((p2 < 97) || (p2 > 122)) && (((p2 < 65) || (p2 > 90)) && (((p2 < 48) || (p2 > 57)) && ((p2 != 47) && ((p2 != 45) && ((p2 != 46) && ((p2 != 63) && ((p2 != 58) && ((p2 != 64) && ((p2 != 38) && ((p2 != 61) && ((p2 != 43) && ((p2 != 36) && ((p2 != 44) && ((p2 != 37) && ((p2 != 95) && ((p2 != 33) && ((p2 != 126) && ((p2 != 42) && ((p2 != 39) && ((p2 != 40) && (p2 != 41)))))))))))))))))))))) {
            v0 = 0;
        }
        return v0;
    }

    public static boolean isXMLCharacter(int p3)
    {
        int v0 = 1;
        if ((p3 != 10) && ((p3 != 13) && (p3 != 9))) {
            if (p3 >= 32) {
                if (p3 > 55295) {
                    if (p3 >= 57344) {
                        if (p3 > 65533) {
                            if (p3 >= 65536) {
                                if (p3 > 1114111) {
                                    v0 = 0;
                                }
                            } else {
                                v0 = 0;
                            }
                        }
                    } else {
                        v0 = 0;
                    }
                }
            } else {
                v0 = 0;
            }
        }
        return v0;
    }

    public static boolean isXMLCombiningChar(char p3)
    {
        int v0 = 0;
        if (p3 >= 768) {
            if (p3 > 837) {
                if (p3 >= 864) {
                    if (p3 > 865) {
                        if (p3 >= 1155) {
                            if (p3 > 1158) {
                                if (p3 >= 1425) {
                                    if (p3 > 1441) {
                                        if (p3 >= 1443) {
                                            if (p3 > 1465) {
                                                if (p3 >= 1467) {
                                                    if (p3 > 1469) {
                                                        if (p3 != 1471) {
                                                            if (p3 >= 1473) {
                                                                if (p3 > 1474) {
                                                                    if (p3 != 1476) {
                                                                        if (p3 >= 1611) {
                                                                            if (p3 > 1618) {
                                                                                if (p3 != 1648) {
                                                                                    if (p3 >= 1750) {
                                                                                        if (p3 > 1756) {
                                                                                            if (p3 >= 1757) {
                                                                                                if (p3 > 1759) {
                                                                                                    if (p3 >= 1760) {
                                                                                                        if (p3 > 1764) {
                                                                                                            if (p3 >= 1767) {
                                                                                                                if (p3 > 1768) {
                                                                                                                    if (p3 >= 1770) {
                                                                                                                        if (p3 > 1773) {
                                                                                                                            if (p3 >= 2305) {
                                                                                                                                if (p3 > 2307) {
                                                                                                                                    if (p3 != 2364) {
                                                                                                                                        if (p3 >= 2366) {
                                                                                                                                            if (p3 > 2380) {
                                                                                                                                                if (p3 != 2381) {
                                                                                                                                                    if (p3 >= 2385) {
                                                                                                                                                        if (p3 > 2388) {
                                                                                                                                                            if (p3 >= 2402) {
                                                                                                                                                                if (p3 > 2403) {
                                                                                                                                                                    if (p3 >= 2433) {
                                                                                                                                                                        if (p3 > 2435) {
                                                                                                                                                                            if (p3 != 2492) {
                                                                                                                                                                                if (p3 != 2494) {
                                                                                                                                                                                    if (p3 != 2495) {
                                                                                                                                                                                        if (p3 >= 2496) {
                                                                                                                                                                                            if (p3 > 2500) {
                                                                                                                                                                                                if (p3 >= 2503) {
                                                                                                                                                                                                    if (p3 > 2504) {
                                                                                                                                                                                                        if (p3 >= 2507) {
                                                                                                                                                                                                            if (p3 > 2509) {
                                                                                                                                                                                                                if (p3 != 2519) {
                                                                                                                                                                                                                    if (p3 >= 2530) {
                                                                                                                                                                                                                        if (p3 > 2531) {
                                                                                                                                                                                                                            if (p3 != 2562) {
                                                                                                                                                                                                                                if (p3 != 2620) {
                                                                                                                                                                                                                                    if (p3 != 2622) {
                                                                                                                                                                                                                                        if (p3 != 2623) {
                                                                                                                                                                                                                                            if (p3 >= 2624) {
                                                                                                                                                                                                                                                if (p3 > 2626) {
                                                                                                                                                                                                                                                    if (p3 >= 2631) {
                                                                                                                                                                                                                                                        if (p3 > 2632) {
                                                                                                                                                                                                                                                            if (p3 >= 2635) {
                                                                                                                                                                                                                                                                if (p3 > 2637) {
                                                                                                                                                                                                                                                                    if (p3 >= 2672) {
                                                                                                                                                                                                                                                                        if (p3 > 2673) {
                                                                                                                                                                                                                                                                            if (p3 >= 2689) {
                                                                                                                                                                                                                                                                                if (p3 > 2691) {
                                                                                                                                                                                                                                                                                    if (p3 != 2748) {
                                                                                                                                                                                                                                                                                        if (p3 >= 2750) {
                                                                                                                                                                                                                                                                                            if (p3 > 2757) {
                                                                                                                                                                                                                                                                                                if (p3 >= 2759) {
                                                                                                                                                                                                                                                                                                    if (p3 > 2761) {
                                                                                                                                                                                                                                                                                                        if (p3 >= 2763) {
                                                                                                                                                                                                                                                                                                            if (p3 > 2765) {
                                                                                                                                                                                                                                                                                                                if (p3 >= 2817) {
                                                                                                                                                                                                                                                                                                                    if (p3 > 2819) {
                                                                                                                                                                                                                                                                                                                        if (p3 != 2876) {
                                                                                                                                                                                                                                                                                                                            if (p3 >= 2878) {
                                                                                                                                                                                                                                                                                                                                if (p3 > 2883) {
                                                                                                                                                                                                                                                                                                                                    if (p3 >= 2887) {
                                                                                                                                                                                                                                                                                                                                        if (p3 > 2888) {
                                                                                                                                                                                                                                                                                                                                            if (p3 >= 2891) {
                                                                                                                                                                                                                                                                                                                                                if (p3 > 2893) {
                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 2902) {
                                                                                                                                                                                                                                                                                                                                                        if (p3 > 2903) {
                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 2946) {
                                                                                                                                                                                                                                                                                                                                                                if (p3 > 2947) {
                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 3006) {
                                                                                                                                                                                                                                                                                                                                                                        if (p3 > 3010) {
                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 3014) {
                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 3016) {
                                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 3018) {
                                                                                                                                                                                                                                                                                                                                                                                        if (p3 > 3021) {
                                                                                                                                                                                                                                                                                                                                                                                            if (p3 != 3031) {
                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3073) {
                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3075) {
                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3134) {
                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3140) {
                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3142) {
                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3144) {
                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3146) {
                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3149) {
                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3157) {
                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3158) {
                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3202) {
                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3203) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3262) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3268) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3270) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3272) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3274) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3277) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3285) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3286) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3330) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3331) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3390) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3395) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3398) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3400) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3402) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3405) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 != 3415) {
if (p3 != 3633) {
if (p3 >= 3636) {
if (p3 > 3642) {
if (p3 >= 3655) {
if (p3 > 3662) {
if (p3 != 3761) {
if (p3 >= 3764) {
if (p3 > 3769) {
if (p3 >= 3771) {
if (p3 > 3772) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 3784) {
if (p3 > 3789) {
if (p3 >= 3864) {
if (p3 > 3865) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 != 3893) {
if (p3 != 3895) {
if (p3 != 3897) {
if (p3 != 3902) {
if (p3 != 3903) {
if (p3 >= 3953) {
if (p3 > 3972) {
if (p3 >= 3974) {
if (p3 > 3979) {
if (p3 >= 3984) {
if (p3 > 3989) {
if (p3 != 3991) {
if (p3 >= 3993) {
if (p3 > 4013) {
if (p3 >= 4017) {
if (p3 > 4023) {
if (p3 != 4025) {
if (p3 >= 8400) {
if (p3 > 8412) {
if (p3 != 8417) {
if (p3 >= 12330) {
if (p3 > 12335) {
if (p3 != 12441) {
if (p3 == 12442) {
v0 = 1;
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            } else {
                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    } else {
                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                    }
                                                                                                                                                                                } else {
                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                }
                                                                                                                                                                            } else {
                                                                                                                                                                                v0 = 1;
                                                                                                                                                                            }
                                                                                                                                                                        } else {
                                                                                                                                                                            v0 = 1;
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                } else {
                                                                                                                                                                    v0 = 1;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        } else {
                                                                                                                                                            v0 = 1;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                } else {
                                                                                                                                                    v0 = 1;
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                v0 = 1;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    } else {
                                                                                                                                        v0 = 1;
                                                                                                                                    }
                                                                                                                                } else {
                                                                                                                                    v0 = 1;
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } else {
                                                                                                                            v0 = 1;
                                                                                                                        }
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    v0 = 1;
                                                                                                                }
                                                                                                            }
                                                                                                        } else {
                                                                                                            v0 = 1;
                                                                                                        }
                                                                                                    }
                                                                                                } else {
                                                                                                    v0 = 1;
                                                                                                }
                                                                                            }
                                                                                        } else {
                                                                                            v0 = 1;
                                                                                        }
                                                                                    }
                                                                                } else {
                                                                                    v0 = 1;
                                                                                }
                                                                            } else {
                                                                                v0 = 1;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        v0 = 1;
                                                                    }
                                                                } else {
                                                                    v0 = 1;
                                                                }
                                                            }
                                                        } else {
                                                            v0 = 1;
                                                        }
                                                    } else {
                                                        v0 = 1;
                                                    }
                                                }
                                            } else {
                                                v0 = 1;
                                            }
                                        }
                                    } else {
                                        v0 = 1;
                                    }
                                }
                            } else {
                                v0 = 1;
                            }
                        }
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public static boolean isXMLDigit(char p3)
    {
        int v0 = 0;
        if (p3 >= 48) {
            if (p3 > 57) {
                if (p3 >= 1632) {
                    if (p3 > 1641) {
                        if (p3 >= 1776) {
                            if (p3 > 1785) {
                                if (p3 >= 2406) {
                                    if (p3 > 2415) {
                                        if (p3 >= 2534) {
                                            if (p3 > 2543) {
                                                if (p3 >= 2662) {
                                                    if (p3 > 2671) {
                                                        if (p3 >= 2790) {
                                                            if (p3 > 2799) {
                                                                if (p3 >= 2918) {
                                                                    if (p3 > 2927) {
                                                                        if (p3 >= 3047) {
                                                                            if (p3 > 3055) {
                                                                                if (p3 >= 3174) {
                                                                                    if (p3 > 3183) {
                                                                                        if (p3 >= 3302) {
                                                                                            if (p3 > 3311) {
                                                                                                if (p3 >= 3430) {
                                                                                                    if (p3 > 3439) {
                                                                                                        if (p3 >= 3664) {
                                                                                                            if (p3 > 3673) {
                                                                                                                if (p3 >= 3792) {
                                                                                                                    if (p3 > 3801) {
                                                                                                                        if ((p3 >= 3872) && (p3 <= 3881)) {
                                                                                                                            v0 = 1;
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        v0 = 1;
                                                                                                                    }
                                                                                                                }
                                                                                                            } else {
                                                                                                                v0 = 1;
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        v0 = 1;
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                v0 = 1;
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        v0 = 1;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                v0 = 1;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        v0 = 1;
                                                                    }
                                                                }
                                                            } else {
                                                                v0 = 1;
                                                            }
                                                        }
                                                    } else {
                                                        v0 = 1;
                                                    }
                                                }
                                            } else {
                                                v0 = 1;
                                            }
                                        }
                                    } else {
                                        v0 = 1;
                                    }
                                }
                            } else {
                                v0 = 1;
                            }
                        }
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public static boolean isXMLExtender(char p3)
    {
        int v0 = 0;
        if (p3 >= 182) {
            if (p3 != 183) {
                if (p3 != 720) {
                    if (p3 != 721) {
                        if (p3 != 903) {
                            if (p3 != 1600) {
                                if (p3 != 3654) {
                                    if (p3 != 3782) {
                                        if (p3 != 12293) {
                                            if (p3 >= 12337) {
                                                if (p3 > 12341) {
                                                    if (p3 >= 12445) {
                                                        if (p3 > 12446) {
                                                            if ((p3 >= 12540) && (p3 <= 12542)) {
                                                                v0 = 1;
                                                            }
                                                        } else {
                                                            v0 = 1;
                                                        }
                                                    }
                                                } else {
                                                    v0 = 1;
                                                }
                                            }
                                        } else {
                                            v0 = 1;
                                        }
                                    } else {
                                        v0 = 1;
                                    }
                                } else {
                                    v0 = 1;
                                }
                            } else {
                                v0 = 1;
                            }
                        } else {
                            v0 = 1;
                        }
                    } else {
                        v0 = 1;
                    }
                } else {
                    v0 = 1;
                }
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public static boolean isXMLLetter(char p3)
    {
        int v0 = 0;
        if (p3 >= 65) {
            if (p3 > 90) {
                if (p3 >= 97) {
                    if (p3 > 122) {
                        if (p3 >= 192) {
                            if (p3 > 214) {
                                if (p3 >= 216) {
                                    if (p3 > 246) {
                                        if (p3 >= 248) {
                                            if (p3 > 255) {
                                                if (p3 >= 256) {
                                                    if (p3 > 305) {
                                                        if (p3 >= 308) {
                                                            if (p3 > 318) {
                                                                if (p3 >= 321) {
                                                                    if (p3 > 328) {
                                                                        if (p3 >= 330) {
                                                                            if (p3 > 382) {
                                                                                if (p3 >= 384) {
                                                                                    if (p3 > 451) {
                                                                                        if (p3 >= 461) {
                                                                                            if (p3 > 496) {
                                                                                                if (p3 >= 500) {
                                                                                                    if (p3 > 501) {
                                                                                                        if (p3 >= 506) {
                                                                                                            if (p3 > 535) {
                                                                                                                if (p3 >= 592) {
                                                                                                                    if (p3 > 680) {
                                                                                                                        if (p3 >= 699) {
                                                                                                                            if (p3 > 705) {
                                                                                                                                if (p3 != 902) {
                                                                                                                                    if (p3 >= 904) {
                                                                                                                                        if (p3 > 906) {
                                                                                                                                            if (p3 != 908) {
                                                                                                                                                if (p3 >= 910) {
                                                                                                                                                    if (p3 > 929) {
                                                                                                                                                        if (p3 >= 931) {
                                                                                                                                                            if (p3 > 974) {
                                                                                                                                                                if (p3 >= 976) {
                                                                                                                                                                    if (p3 > 982) {
                                                                                                                                                                        if (p3 != 986) {
                                                                                                                                                                            if (p3 != 988) {
                                                                                                                                                                                if (p3 != 990) {
                                                                                                                                                                                    if (p3 != 992) {
                                                                                                                                                                                        if (p3 >= 994) {
                                                                                                                                                                                            if (p3 > 1011) {
                                                                                                                                                                                                if (p3 >= 1025) {
                                                                                                                                                                                                    if (p3 > 1036) {
                                                                                                                                                                                                        if (p3 >= 1038) {
                                                                                                                                                                                                            if (p3 > 1103) {
                                                                                                                                                                                                                if (p3 >= 1105) {
                                                                                                                                                                                                                    if (p3 > 1116) {
                                                                                                                                                                                                                        if (p3 >= 1118) {
                                                                                                                                                                                                                            if (p3 > 1153) {
                                                                                                                                                                                                                                if (p3 >= 1168) {
                                                                                                                                                                                                                                    if (p3 > 1220) {
                                                                                                                                                                                                                                        if (p3 >= 1223) {
                                                                                                                                                                                                                                            if (p3 > 1224) {
                                                                                                                                                                                                                                                if (p3 >= 1227) {
                                                                                                                                                                                                                                                    if (p3 > 1228) {
                                                                                                                                                                                                                                                        if (p3 >= 1232) {
                                                                                                                                                                                                                                                            if (p3 > 1259) {
                                                                                                                                                                                                                                                                if (p3 >= 1262) {
                                                                                                                                                                                                                                                                    if (p3 > 1269) {
                                                                                                                                                                                                                                                                        if (p3 >= 1272) {
                                                                                                                                                                                                                                                                            if (p3 > 1273) {
                                                                                                                                                                                                                                                                                if (p3 >= 1329) {
                                                                                                                                                                                                                                                                                    if (p3 > 1366) {
                                                                                                                                                                                                                                                                                        if (p3 != 1369) {
                                                                                                                                                                                                                                                                                            if (p3 >= 1377) {
                                                                                                                                                                                                                                                                                                if (p3 > 1414) {
                                                                                                                                                                                                                                                                                                    if (p3 >= 1488) {
                                                                                                                                                                                                                                                                                                        if (p3 > 1514) {
                                                                                                                                                                                                                                                                                                            if (p3 >= 1520) {
                                                                                                                                                                                                                                                                                                                if (p3 > 1522) {
                                                                                                                                                                                                                                                                                                                    if (p3 >= 1569) {
                                                                                                                                                                                                                                                                                                                        if (p3 > 1594) {
                                                                                                                                                                                                                                                                                                                            if (p3 >= 1601) {
                                                                                                                                                                                                                                                                                                                                if (p3 > 1610) {
                                                                                                                                                                                                                                                                                                                                    if (p3 >= 1649) {
                                                                                                                                                                                                                                                                                                                                        if (p3 > 1719) {
                                                                                                                                                                                                                                                                                                                                            if (p3 >= 1722) {
                                                                                                                                                                                                                                                                                                                                                if (p3 > 1726) {
                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 1728) {
                                                                                                                                                                                                                                                                                                                                                        if (p3 > 1742) {
                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 1744) {
                                                                                                                                                                                                                                                                                                                                                                if (p3 > 1747) {
                                                                                                                                                                                                                                                                                                                                                                    if (p3 != 1749) {
                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 1765) {
                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 1766) {
                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2309) {
                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2361) {
                                                                                                                                                                                                                                                                                                                                                                                        if (p3 != 2365) {
                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 2392) {
                                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 2401) {
                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 2437) {
                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 > 2444) {
                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 2447) {
                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 2448) {
                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 2451) {
                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 > 2472) {
                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 2474) {
                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 2480) {
                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 != 2482) {
                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2486) {
                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 2489) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2524) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2525) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2527) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 2529) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2544) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2545) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2565) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 2570) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2575) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2576) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2579) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 2600) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2602) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2608) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2610) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 2611) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2613) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2614) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2616) {
if (p3 > 2617) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 2649) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2652) {
if (p3 != 2654) {
if (p3 >= 2674) {
if (p3 > 2676) {
if (p3 >= 2693) {
if (p3 > 2699) {
if (p3 != 2701) {
if (p3 >= 2703) {
if (p3 > 2705) {
if (p3 >= 2707) {
if (p3 > 2728) {
if (p3 >= 2730) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 2736) {
if (p3 >= 2738) {
if (p3 > 2739) {
if (p3 >= 2741) {
if (p3 > 2745) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 != 2749) {
if (p3 != 2784) {
if (p3 >= 2821) {
if (p3 > 2828) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2831) {
if (p3 > 2832) {
if (p3 >= 2835) {
if (p3 > 2856) {
if (p3 >= 2858) {
if (p3 > 2864) {
if (p3 >= 2866) {
if (p3 > 2867) {
if (p3 >= 2870) {
if (p3 > 2873) {
if (p3 != 2877) {
if (p3 >= 2908) {
if (p3 > 2909) {
if (p3 >= 2911) {
if (p3 > 2913) {
if (p3 >= 2949) {
if (p3 > 2954) {
if (p3 >= 2958) {
if (p3 > 2960) {
if (p3 >= 2962) {
if (p3 > 2965) {
if (p3 >= 2969) {
if (p3 > 2970) {
if (p3 != 2972) {
if (p3 >= 2974) {
if (p3 > 2975) {
if (p3 >= 2979) {
if (p3 > 2980) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 2984) {
if (p3 > 2986) {
if (p3 >= 2990) {
if (p3 > 2997) {
if (p3 >= 2999) {
if (p3 > 3001) {
if (p3 >= 3077) {
if (p3 > 3084) {
if (p3 >= 3086) {
if (p3 > 3088) {
if (p3 >= 3090) {
if (p3 > 3112) {
if (p3 >= 3114) {
if (p3 > 3123) {
if (p3 >= 3125) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3129) {
if (p3 >= 3168) {
if (p3 > 3169) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 >= 3205) {
if (p3 > 3212) {
if (p3 >= 3214) {
if (p3 > 3216) {
if (p3 >= 3218) {
if (p3 > 3240) {
if (p3 >= 3242) {
if (p3 > 3251) {
if (p3 >= 3253) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 3257) {
if (p3 != 3294) {
if (p3 >= 3296) {
if (p3 > 3297) {
if (p3 >= 3333) {
if (p3 > 3340) {
if (p3 >= 3342) {
if (p3 > 3344) {
if (p3 >= 3346) {
if (p3 > 3368) {
if (p3 >= 3370) {
if (p3 > 3385) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 3424) {
if (p3 > 3425) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 3585) {
if (p3 > 3630) {
if (p3 != 3632) {
if (p3 >= 3634) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 > 3635) {
if (p3 >= 3648) {
if (p3 > 3653) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 3713) {
if (p3 > 3714) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 != 3716) {
if (p3 >= 3719) {
if (p3 > 3720) {
if (p3 != 3722) {
if (p3 != 3725) {
if (p3 >= 3732) {
if (p3 > 3735) {
if (p3 >= 3737) {
if (p3 > 3743) {
if (p3 >= 3745) {
if (p3 > 3747) {
if (p3 != 3749) {
if (p3 != 3751) {
if (p3 >= 3754) {
if (p3 > 3755) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 3757) {
if (p3 > 3758) {
if (p3 != 3760) {
if (p3 >= 3762) {
if (p3 > 3763) {
if (p3 != 3773) {
if (p3 >= 3776) {
if (p3 > 3780) {
if (p3 >= 3904) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 3911) {
if (p3 >= 3913) {
if (p3 > 3945) {
if (p3 >= 4256) {
if (p3 > 4293) {
if (p3 >= 4304) {
if (p3 > 4342) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 != 4352) {
if (p3 >= 4354) {
if (p3 > 4355) {
if (p3 >= 4357) {
if (p3 > 4359) {
if (p3 != 4361) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 >= 4363) {
if (p3 > 4364) {
if (p3 >= 4366) {
if (p3 > 4370) {
if (p3 != 4412) {
if (p3 != 4414) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 != 4416) {
if (p3 != 4428) {
if (p3 != 4430) {
if (p3 != 4432) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 4436) {
if (p3 > 4437) {
if (p3 != 4441) {
if (p3 >= 4447) {
if (p3 > 4449) {
if (p3 != 4451) {
if (p3 != 4453) {
if (p3 != 4455) {
if (p3 != 4457) {
if (p3 >= 4461) {
if (p3 > 4462) {
if (p3 >= 4466) {
if (p3 > 4467) {
if (p3 != 4469) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 != 4510) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 != 4520) {
if (p3 != 4523) {
if (p3 >= 4526) {
if (p3 > 4527) {
if (p3 >= 4535) {
if (p3 > 4536) {
if (p3 != 4538) {
if (p3 >= 4540) {
if (p3 > 4546) {
if (p3 != 4587) {
if (p3 != 4592) {
if (p3 != 4601) {
if (p3 >= 7680) {
if (p3 > 7835) {
if (p3 >= 7840) {
if (p3 > 7929) {
if (p3 >= 7936) {
if (p3 > 7957) {
if (p3 >= 7960) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 7965) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (p3 >= 7968) {
if (p3 > 8005) {
if (p3 >= 8008) {
if (p3 > 8013) {
if (p3 >= 8016) {
if (p3 > 8023) {
if (p3 != 8025) {
if (p3 != 8027) {
if (p3 != 8029) {
if (p3 >= 8031) {
if (p3 > 8061) {
if (p3 >= 8064) {
if (p3 > 8116) {
if (p3 >= 8118) {
if (p3 > 8124) {
if (p3 != 8126) {
if (p3 >= 8130) {
if (p3 > 8132) {
if (p3 >= 8134) {
if (p3 > 8140) {
if (p3 >= 8144) {
if (p3 > 8147) {
if (p3 >= 8150) {
if (p3 > 8155) {
if (p3 >= 8160) {
if (p3 > 8172) {
if (p3 >= 8178) {
if (p3 > 8180) {
if (p3 >= 8182) {
if (p3 > 8188) {
if (p3 != 8486) {
if (p3 >= 8490) {
if (p3 > 8491) {
if (p3 != 8494) {
if (p3 >= 8576) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (p3 > 8578) {
if (p3 != 12295) {
if (p3 >= 12321) {
if (p3 > 12329) {
if (p3 >= 12353) {
if (p3 > 12436) {
if (p3 >= 12449) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (p3 > 12538) {
if (p3 >= 12549) {
if (p3 > 12588) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (p3 >= 19968) {
if (p3 > 40869) {
if ((p3 >= 44032) && (p3 <= 55203)) {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
}
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        } else {
v0 = 1;
}
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        } else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
v0 = 1;
}
}
} else {
v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
} else {
v0 = 1;
}
}
} else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
}
}
} else {
v0 = 1;
}
} else {
v0 = 1;
}
}
} else {
v0 = 1;
}
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
v0 = 1;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                                                                                            v0 = 1;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            } else {
                                                                                                                                                                                                v0 = 1;
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    } else {
                                                                                                                                                                                        v0 = 1;
                                                                                                                                                                                    }
                                                                                                                                                                                } else {
                                                                                                                                                                                    v0 = 1;
                                                                                                                                                                                }
                                                                                                                                                                            } else {
                                                                                                                                                                                v0 = 1;
                                                                                                                                                                            }
                                                                                                                                                                        } else {
                                                                                                                                                                            v0 = 1;
                                                                                                                                                                        }
                                                                                                                                                                    } else {
                                                                                                                                                                        v0 = 1;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            } else {
                                                                                                                                                                v0 = 1;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    } else {
                                                                                                                                                        v0 = 1;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                v0 = 1;
                                                                                                                                            }
                                                                                                                                        } else {
                                                                                                                                            v0 = 1;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                } else {
                                                                                                                                    v0 = 1;
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                v0 = 1;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        v0 = 1;
                                                                                                                    }
                                                                                                                }
                                                                                                            } else {
                                                                                                                v0 = 1;
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        v0 = 1;
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                v0 = 1;
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        v0 = 1;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                v0 = 1;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        v0 = 1;
                                                                    }
                                                                }
                                                            } else {
                                                                v0 = 1;
                                                            }
                                                        }
                                                    } else {
                                                        v0 = 1;
                                                    }
                                                }
                                            } else {
                                                v0 = 1;
                                            }
                                        }
                                    } else {
                                        v0 = 1;
                                    }
                                }
                            } else {
                                v0 = 1;
                            }
                        }
                    } else {
                        v0 = 1;
                    }
                }
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    public static boolean isXMLLetterOrDigit(char p1)
    {
        if ((!org.jdom.Verifier.isXMLLetter(p1)) && (!org.jdom.Verifier.isXMLDigit(p1))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static boolean isXMLNameCharacter(char p1)
    {
        if ((!org.jdom.Verifier.isXMLLetter(p1)) && ((!org.jdom.Verifier.isXMLDigit(p1)) && ((p1 != 46) && ((p1 != 45) && ((p1 != 95) && ((p1 != 58) && ((!org.jdom.Verifier.isXMLCombiningChar(p1)) && (!org.jdom.Verifier.isXMLExtender(p1))))))))) {
            int v0_5 = 0;
        } else {
            v0_5 = 1;
        }
        return v0_5;
    }

    public static boolean isXMLNameStartCharacter(char p1)
    {
        if ((!org.jdom.Verifier.isXMLLetter(p1)) && ((p1 != 95) && (p1 != 58))) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }

    public static boolean isXMLPublicIDCharacter(char p2)
    {
        int v0 = 1;
        if (((p2 < 97) || (p2 > 122)) && (((p2 < 63) || (p2 > 90)) && (((p2 < 39) || (p2 > 59)) && ((p2 != 32) && ((p2 != 33) && ((p2 != 61) && ((p2 != 35) && ((p2 != 36) && ((p2 != 95) && ((p2 != 37) && ((p2 != 10) && ((p2 != 13) && (p2 != 9))))))))))))) {
            v0 = 0;
        }
        return v0;
    }

    public static boolean isXMLWhitespace(char p1)
    {
        if ((p1 != 32) && ((p1 != 10) && ((p1 != 9) && (p1 != 13)))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }
}
package org.jdom.adapters;
public interface DOMAdapter {

    public abstract org.w3c.dom.Document createDocument();

    public abstract org.w3c.dom.Document createDocument();

    public abstract org.w3c.dom.Document getDocument();

    public abstract org.w3c.dom.Document getDocument();
}
package org.jdom.adapters;
public abstract class AbstractDOMAdapter implements org.jdom.adapters.DOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: AbstractDOMAdapter.java,v $ $Revision: 1.21 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$java$lang$String;

    public AbstractDOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public abstract org.w3c.dom.Document createDocument();

    public org.w3c.dom.Document createDocument(org.jdom.DocType p6)
    {
        org.w3c.dom.Document v2_3;
        if (p6 != null) {
            org.w3c.dom.DOMImplementation v1 = this.createDocument().getImplementation();
            org.w3c.dom.DocumentType v0 = v1.createDocumentType(p6.getElementName(), p6.getPublicID(), p6.getSystemID());
            this.setInternalSubset(v0, p6.getInternalSubset());
            v2_3 = v1.createDocument("http://temporary", p6.getElementName(), v0);
        } else {
            v2_3 = this.createDocument();
        }
        return v2_3;
    }

    public org.w3c.dom.Document getDocument(java.io.File p2, boolean p3)
    {
        return this.getDocument(new java.io.FileInputStream(p2), p3);
    }

    public abstract org.w3c.dom.Document getDocument();

    protected void setInternalSubset(org.w3c.dom.DocumentType p7, String p8)
    {
        if ((p7 != null) && (p8 != null)) {
            Object[] v2_0;
            Class v0 = p7.getClass();
            Class[] v4 = new Class[1];
            if (org.jdom.adapters.AbstractDOMAdapter.class$java$lang$String != null) {
                v2_0 = org.jdom.adapters.AbstractDOMAdapter.class$java$lang$String;
            } else {
                v2_0 = org.jdom.adapters.AbstractDOMAdapter.class$("java.lang.String");
                org.jdom.adapters.AbstractDOMAdapter.class$java$lang$String = v2_0;
            }
            v4[0] = v2_0;
            reflect.Method v1 = v0.getMethod("setInternalSubset", v4);
            Object[] v2_3 = new Object[1];
            v2_3[0] = p8;
            v1.invoke(p7, v2_3);
        }
        return;
    }
}
package org.jdom.adapters;
public class CrimsonDOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: CrimsonDOMAdapter.java,v $ $Revision: 1.17 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";

    public CrimsonDOMAdapter()
    {
        return;
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            return ((org.w3c.dom.Document) Class.forName("org.apache.crimson.tree.XmlDocument").newInstance());
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v0.getClass().getName()).append(": ").append(v0.getMessage()).append(" when creating document").toString(), v0);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p13, boolean p14)
    {
        try {
            Class[] v5 = new Class[2];
            v5[0] = Class.forName("java.io.InputStream");
            v5[1] = Boolean.TYPE;
            Object[] v0 = new Object[2];
            v0[0] = p13;
            v0[1] = new Boolean(0);
            return ((org.w3c.dom.Document) Class.forName("org.apache.crimson.tree.XmlDocument").getMethod("createXmlDocument", v5).invoke(0, v0));
        } catch (Exception v3_0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v3_0.getClass().getName()).append(": ").append(v3_0.getMessage()).toString(), v3_0);
        } catch (Exception v3_1) {
            Throwable v8 = v3_1.getTargetException();
            if (!(v8 instanceof org.xml.sax.SAXParseException)) {
                if (!(v8 instanceof java.io.IOException)) {
                    throw new org.jdom.JDOMException(v8.getMessage(), v8);
                } else {
                    throw ((java.io.IOException) v8);
                }
            } else {
                org.xml.sax.SAXParseException v6_1 = ((org.xml.sax.SAXParseException) v8);
                throw new org.jdom.JDOMException(new StringBuffer().append("Error on line ").append(v6_1.getLineNumber()).append(" of XML document: ").append(v6_1.getMessage()).toString(), v6_1);
            }
        }
    }
}
package org.jdom.adapters;
public class JAXPDOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: JAXPDOMAdapter.java,v $ $Revision: 1.13 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$java$io$InputStream;
    static Class class$org$xml$sax$ErrorHandler;

    public JAXPDOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            Class.forName("javax.xml.transform.Transformer");
            Class v3 = Class.forName("javax.xml.parsers.DocumentBuilderFactory");
            Object v4 = v3.getMethod("newDocumentBuilder", 0).invoke(v3.getMethod("newInstance", 0).invoke(0, 0), 0);
            return ((org.w3c.dom.Document) v4.getClass().getMethod("newDocument", 0).invoke(v4, 0));
        } catch (Exception v1) {
            throw new org.jdom.JDOMException("Reflection failed while creating new JAXP document", v1);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p20, boolean p21)
    {
        try {
            Object[] v15_21;
            Class.forName("javax.xml.transform.Transformer");
            Class v5 = Class.forName("javax.xml.parsers.DocumentBuilderFactory");
            Object v4 = v5.getMethod("newInstance", 0).invoke(0, 0);
            String v0_4 = new Class[1];
            int v16_5 = v0_4;
            v16_5[0] = Boolean.TYPE;
            reflect.Method v13 = v5.getMethod("setValidating", v16_5);
            Object[] v15_12 = new Object[1];
            Class[] v17_1 = new Boolean;
            v17_1(p21);
            v15_12[0] = v17_1;
            v13.invoke(v4, v15_12);
            String v0_8 = new Class[1];
            int v16_8 = v0_8;
            v16_8[0] = Boolean.TYPE;
            reflect.Method v12 = v5.getMethod("setNamespaceAware", v16_8);
            Object[] v15_15 = new Object[1];
            v15_15[0] = Boolean.TRUE;
            v12.invoke(v4, v15_15);
            Object v6 = v5.getMethod("newDocumentBuilder", 0).invoke(v4, 0);
            Class v10 = v6.getClass();
            String v0_11 = new Class[1];
            Class[] v17_4 = v0_11;
        } catch (Exception v3_0) {
            throw new org.jdom.JDOMException("Reflection failed while parsing a document with JAXP", v3_0);
        } catch (Exception v3_1) {
            java.io.IOException v14_0 = v3_1.getTargetException();
            if (!(v14_0 instanceof java.io.IOException)) {
                throw new org.jdom.JDOMException(v14_0.getMessage(), v14_0);
            } else {
                throw ((java.io.IOException) v14_0);
            }
        }
        if (org.jdom.adapters.JAXPDOMAdapter.class$org$xml$sax$ErrorHandler != null) {
            v15_21 = org.jdom.adapters.JAXPDOMAdapter.class$org$xml$sax$ErrorHandler;
        } else {
            v15_21 = org.jdom.adapters.JAXPDOMAdapter.class$("org.xml.sax.ErrorHandler");
            org.jdom.adapters.JAXPDOMAdapter.class$org$xml$sax$ErrorHandler = v15_21;
        }
        Object[] v15_27;
        v17_4[0] = v15_21;
        reflect.Method v11 = v10.getMethod("setErrorHandler", v17_4);
        Object[] v15_24 = new Object[1];
        v15_24[0] = new org.jdom.input.BuilderErrorHandler();
        v11.invoke(v6, v15_24);
        String v0_14 = new Class[1];
        Class[] v17_7 = v0_14;
        if (org.jdom.adapters.JAXPDOMAdapter.class$java$io$InputStream != null) {
            v15_27 = org.jdom.adapters.JAXPDOMAdapter.class$java$io$InputStream;
        } else {
            v15_27 = org.jdom.adapters.JAXPDOMAdapter.class$("java.io.InputStream");
            org.jdom.adapters.JAXPDOMAdapter.class$java$io$InputStream = v15_27;
        }
        v17_7[0] = v15_27;
        reflect.Method v9 = v10.getMethod("parse", v17_7);
        Object[] v15_3 = new Object[1];
        v15_3[0] = p20;
        return ((org.w3c.dom.Document) v9.invoke(v6, v15_3));
    }
}
package org.jdom.adapters;
public class OracleV1DOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: OracleV1DOMAdapter.java,v $ $Revision: 1.20 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$org$xml$sax$InputSource;

    public OracleV1DOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            return ((org.w3c.dom.Document) Class.forName("oracle.xml.parser.XMLDocument").newInstance());
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v0.getClass().getName()).append(": ").append(v0.getMessage()).append(" when creating document").toString(), v0);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p14, boolean p15)
    {
        try {
            org.jdom.JDOMException v9_1;
            Class v7 = Class.forName("oracle.xml.parser.XMLParser");
            Object v6 = v7.newInstance();
            org.xml.sax.InputSource v11_6 = new Class[1];
        } catch (Exception v1_0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v1_0.getClass().getName()).append(": ").append(v1_0.getMessage()).toString(), v1_0);
        } catch (Exception v1_1) {
            Throwable v8 = v1_1.getTargetException();
            if (!(v8 instanceof org.xml.sax.SAXParseException)) {
                if (!(v8 instanceof java.io.IOException)) {
                    throw new org.jdom.JDOMException(v8.getMessage(), v8);
                } else {
                    throw ((java.io.IOException) v8);
                }
            } else {
                org.xml.sax.SAXParseException v5_1 = ((org.xml.sax.SAXParseException) v8);
                throw new org.jdom.JDOMException(new StringBuffer().append("Error on line ").append(v5_1.getLineNumber()).append(" of XML document: ").append(v5_1.getMessage()).toString(), v5_1);
            }
        }
        if (org.jdom.adapters.OracleV1DOMAdapter.class$org$xml$sax$InputSource != null) {
            v9_1 = org.jdom.adapters.OracleV1DOMAdapter.class$org$xml$sax$InputSource;
        } else {
            v9_1 = org.jdom.adapters.OracleV1DOMAdapter.class$("org.xml.sax.InputSource");
            org.jdom.adapters.OracleV1DOMAdapter.class$org$xml$sax$InputSource = v9_1;
        }
        v11_6[0] = v9_1;
        reflect.Method v4 = v7.getMethod("parse", v11_6);
        org.jdom.JDOMException v9_4 = new Object[1];
        v9_4[0] = new org.xml.sax.InputSource(p14);
        v4.invoke(v6, v9_4);
        return ((org.w3c.dom.Document) v7.getMethod("getDocument", 0).invoke(v6, 0));
    }
}
package org.jdom.adapters;
public class OracleV2DOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: OracleV2DOMAdapter.java,v $ $Revision: 1.19 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$org$xml$sax$InputSource;

    public OracleV2DOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            return ((org.w3c.dom.Document) Class.forName("oracle.xml.parser.v2.XMLDocument").newInstance());
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v0.getClass().getName()).append(": ").append(v0.getMessage()).append(" when creating document").toString(), v0);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p14, boolean p15)
    {
        try {
            org.jdom.JDOMException v9_1;
            Class v7 = Class.forName("oracle.xml.parser.v2.DOMParser");
            Object v6 = v7.newInstance();
            org.xml.sax.InputSource v11_6 = new Class[1];
        } catch (Exception v1_0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v1_0.getClass().getName()).append(": ").append(v1_0.getMessage()).toString(), v1_0);
        } catch (Exception v1_1) {
            Throwable v8 = v1_1.getTargetException();
            if (!(v8 instanceof org.xml.sax.SAXParseException)) {
                if (!(v8 instanceof java.io.IOException)) {
                    throw new org.jdom.JDOMException(v8.getMessage(), v8);
                } else {
                    throw ((java.io.IOException) v8);
                }
            } else {
                org.xml.sax.SAXParseException v5_1 = ((org.xml.sax.SAXParseException) v8);
                throw new org.jdom.JDOMException(new StringBuffer().append("Error on line ").append(v5_1.getLineNumber()).append(" of XML document: ").append(v5_1.getMessage()).toString(), v5_1);
            }
        }
        if (org.jdom.adapters.OracleV2DOMAdapter.class$org$xml$sax$InputSource != null) {
            v9_1 = org.jdom.adapters.OracleV2DOMAdapter.class$org$xml$sax$InputSource;
        } else {
            v9_1 = org.jdom.adapters.OracleV2DOMAdapter.class$("org.xml.sax.InputSource");
            org.jdom.adapters.OracleV2DOMAdapter.class$org$xml$sax$InputSource = v9_1;
        }
        v11_6[0] = v9_1;
        reflect.Method v4 = v7.getMethod("parse", v11_6);
        org.jdom.JDOMException v9_4 = new Object[1];
        v9_4[0] = new org.xml.sax.InputSource(p14);
        v4.invoke(v6, v9_4);
        return ((org.w3c.dom.Document) v7.getMethod("getDocument", 0).invoke(v6, 0));
    }
}
package org.jdom.adapters;
public class XML4JDOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: XML4JDOMAdapter.java,v $ $Revision: 1.18 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$java$lang$String;
    static Class class$org$xml$sax$ErrorHandler;
    static Class class$org$xml$sax$InputSource;

    public XML4JDOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            return ((org.w3c.dom.Document) Class.forName("org.apache.xerces.dom.DocumentImpl").newInstance());
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v0.getClass().getName()).append(": ").append(v0.getMessage()).append(" while creating document").toString(), v0);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p17, boolean p18)
    {
        try {
            int v12_1;
            Class v8 = Class.forName("org.apache.xerces.parsers.DOMParser");
            Object v7 = v8.newInstance();
            org.xml.sax.InputSource v14_18 = new Class[2];
        } catch (Exception v2_1) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v2_1.getClass().getName()).append(": ").append(v2_1.getMessage()).toString(), v2_1);
        } catch (Exception v2_0) {
            Throwable v11 = v2_0.getTargetException();
            if (!(v11 instanceof org.xml.sax.SAXParseException)) {
                if (!(v11 instanceof java.io.IOException)) {
                    throw new org.jdom.JDOMException(v11.getMessage(), v11);
                } else {
                    throw ((java.io.IOException) v11);
                }
            } else {
                org.xml.sax.SAXParseException v6_1 = ((org.xml.sax.SAXParseException) v11);
                throw new org.jdom.JDOMException(new StringBuffer().append("Error on line ").append(v6_1.getLineNumber()).append(" of XML document: ").append(v6_1.getMessage()).toString(), v6_1);
            }
        }
        if (org.jdom.adapters.XML4JDOMAdapter.class$java$lang$String != null) {
            v12_1 = org.jdom.adapters.XML4JDOMAdapter.class$java$lang$String;
        } else {
            v12_1 = org.jdom.adapters.XML4JDOMAdapter.class$("java.lang.String");
            org.jdom.adapters.XML4JDOMAdapter.class$java$lang$String = v12_1;
        }
        v14_18[0] = v12_1;
        v14_18[1] = Boolean.TYPE;
        reflect.Method v10 = v8.getMethod("setFeature", v14_18);
        int v12_12 = new Object[2];
        v12_12[0] = "http://xml.org/sax/features/validation";
        v12_12[1] = new Boolean(p18);
        v10.invoke(v7, v12_12);
        int v12_14 = new Object[2];
        v12_14[0] = "http://xml.org/sax/features/namespaces";
        v12_14[1] = new Boolean(0);
        v10.invoke(v7, v12_14);
        if (p18) {
            int v12_17;
            org.xml.sax.InputSource v14_14 = new Class[1];
            if (org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$ErrorHandler != null) {
                v12_17 = org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$ErrorHandler;
            } else {
                v12_17 = org.jdom.adapters.XML4JDOMAdapter.class$("org.xml.sax.ErrorHandler");
                org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$ErrorHandler = v12_17;
            }
            v14_14[0] = v12_17;
            reflect.Method v9 = v8.getMethod("setErrorHandler", v14_14);
            int v12_21 = new Object[1];
            v12_21[0] = new org.jdom.input.BuilderErrorHandler();
            v9.invoke(v7, v12_21);
        }
        int v12_24;
        org.xml.sax.InputSource v14_17 = new Class[1];
        if (org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$InputSource != null) {
            v12_24 = org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$InputSource;
        } else {
            v12_24 = org.jdom.adapters.XML4JDOMAdapter.class$("org.xml.sax.InputSource");
            org.jdom.adapters.XML4JDOMAdapter.class$org$xml$sax$InputSource = v12_24;
        }
        v14_17[0] = v12_24;
        reflect.Method v5 = v8.getMethod("parse", v14_17);
        int v12_27 = new Object[1];
        v12_27[0] = new org.xml.sax.InputSource(p17);
        v5.invoke(v7, v12_27);
        return ((org.w3c.dom.Document) v8.getMethod("getDocument", 0).invoke(v7, 0));
    }
}
package org.jdom.adapters;
public class XercesDOMAdapter extends org.jdom.adapters.AbstractDOMAdapter {
    private static final String CVS_ID = "@(#) $RCSfile: XercesDOMAdapter.java,v $ $Revision: 1.19 $ $Date: 2007/11/10 05:28:59 $ $Name:  $";
    static Class class$java$lang$String;
    static Class class$org$xml$sax$ErrorHandler;
    static Class class$org$xml$sax$InputSource;

    public XercesDOMAdapter()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public org.w3c.dom.Document createDocument()
    {
        try {
            return ((org.w3c.dom.Document) Class.forName("org.apache.xerces.dom.DocumentImpl").newInstance());
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v0.getClass().getName()).append(": ").append(v0.getMessage()).append(" when creating document").toString(), v0);
        }
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream p17, boolean p18)
    {
        try {
            int v12_1;
            Class v8 = Class.forName("org.apache.xerces.parsers.DOMParser");
            Object v7 = v8.newInstance();
            org.xml.sax.InputSource v14_18 = new Class[2];
        } catch (Exception v2_1) {
            throw new org.jdom.JDOMException(new StringBuffer().append(v2_1.getClass().getName()).append(": ").append(v2_1.getMessage()).toString(), v2_1);
        } catch (Exception v2_0) {
            Throwable v11 = v2_0.getTargetException();
            if (!(v11 instanceof org.xml.sax.SAXParseException)) {
                if (!(v11 instanceof java.io.IOException)) {
                    throw new org.jdom.JDOMException(v11.getMessage(), v2_0);
                } else {
                    throw ((java.io.IOException) v11);
                }
            } else {
                org.xml.sax.SAXParseException v6_1 = ((org.xml.sax.SAXParseException) v11);
                throw new org.jdom.JDOMException(new StringBuffer().append("Error on line ").append(v6_1.getLineNumber()).append(" of XML document: ").append(v6_1.getMessage()).toString(), v2_0);
            }
        }
        if (org.jdom.adapters.XercesDOMAdapter.class$java$lang$String != null) {
            v12_1 = org.jdom.adapters.XercesDOMAdapter.class$java$lang$String;
        } else {
            v12_1 = org.jdom.adapters.XercesDOMAdapter.class$("java.lang.String");
            org.jdom.adapters.XercesDOMAdapter.class$java$lang$String = v12_1;
        }
        v14_18[0] = v12_1;
        v14_18[1] = Boolean.TYPE;
        reflect.Method v10 = v8.getMethod("setFeature", v14_18);
        int v12_12 = new Object[2];
        v12_12[0] = "http://xml.org/sax/features/validation";
        v12_12[1] = new Boolean(p18);
        v10.invoke(v7, v12_12);
        int v12_14 = new Object[2];
        v12_14[0] = "http://xml.org/sax/features/namespaces";
        v12_14[1] = new Boolean(1);
        v10.invoke(v7, v12_14);
        if (p18) {
            int v12_17;
            org.xml.sax.InputSource v14_14 = new Class[1];
            if (org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$ErrorHandler != null) {
                v12_17 = org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$ErrorHandler;
            } else {
                v12_17 = org.jdom.adapters.XercesDOMAdapter.class$("org.xml.sax.ErrorHandler");
                org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$ErrorHandler = v12_17;
            }
            v14_14[0] = v12_17;
            reflect.Method v9 = v8.getMethod("setErrorHandler", v14_14);
            int v12_21 = new Object[1];
            v12_21[0] = new org.jdom.input.BuilderErrorHandler();
            v9.invoke(v7, v12_21);
        }
        int v12_24;
        org.xml.sax.InputSource v14_17 = new Class[1];
        if (org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$InputSource != null) {
            v12_24 = org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$InputSource;
        } else {
            v12_24 = org.jdom.adapters.XercesDOMAdapter.class$("org.xml.sax.InputSource");
            org.jdom.adapters.XercesDOMAdapter.class$org$xml$sax$InputSource = v12_24;
        }
        v14_17[0] = v12_24;
        reflect.Method v5 = v8.getMethod("parse", v14_17);
        int v12_27 = new Object[1];
        v12_27[0] = new org.xml.sax.InputSource(p17);
        v5.invoke(v7, v12_27);
        return ((org.w3c.dom.Document) v8.getMethod("getDocument", 0).invoke(v7, 0));
    }
}
package org.jdom.filter;
public interface Filter implements java.io.Serializable {

    public abstract boolean matches();
}
package org.jdom.filter;
public abstract class AbstractFilter implements org.jdom.filter.Filter {
    private static final String CVS_ID = "@(#) $RCSfile: AbstractFilter.java,v $ $Revision: 1.6 $ $Date: 2007/11/10 05:29:00 $";

    public AbstractFilter()
    {
        return;
    }

    public org.jdom.filter.Filter and(org.jdom.filter.Filter p2)
    {
        return new org.jdom.filter.AndFilter(this, p2);
    }

    public org.jdom.filter.Filter negate()
    {
        return new org.jdom.filter.NegateFilter(this);
    }

    public org.jdom.filter.Filter or(org.jdom.filter.Filter p2)
    {
        return new org.jdom.filter.OrFilter(this, p2);
    }
}
package org.jdom.filter;
final class AndFilter extends org.jdom.filter.AbstractFilter {
    private static final String CVS_ID = "@(#) $RCSfile: AndFilter.java,v $ $Revision: 1.4 $ $Date: 2007/11/10 05:29:00 $";
    private org.jdom.filter.Filter left;
    private org.jdom.filter.Filter right;

    public AndFilter(org.jdom.filter.Filter p3, org.jdom.filter.Filter p4)
    {
        if ((p3 != null) && (p4 != null)) {
            this.left = p3;
            this.right = p4;
            return;
        } else {
            throw new IllegalArgumentException("null filter not allowed");
        }
    }

    public boolean equals(Object p5)
    {
        int v1 = 1;
        if ((this != p5) && ((!(p5 instanceof org.jdom.filter.AndFilter)) || (((!this.left.equals(((org.jdom.filter.AndFilter) p5).left)) || (!this.right.equals(((org.jdom.filter.AndFilter) p5).right))) && ((!this.left.equals(((org.jdom.filter.AndFilter) p5).right)) || (!this.right.equals(((org.jdom.filter.AndFilter) p5).left)))))) {
            v1 = 0;
        }
        return v1;
    }

    public int hashCode()
    {
        return ((this.left.hashCode() * 31) + this.right.hashCode());
    }

    public boolean matches(Object p2)
    {
        if ((!this.left.matches(p2)) || (!this.right.matches(p2))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public String toString()
    {
        return new StringBuffer(64).append("[AndFilter: ").append(this.left.toString()).append(",\n").append("            ").append(this.right.toString()).append("]").toString();
    }
}
package org.jdom.filter;
public class ContentFilter extends org.jdom.filter.AbstractFilter {
    public static final int CDATA = 2;
    public static final int COMMENT = 8;
    private static final String CVS_ID = "@(#) $RCSfile: ContentFilter.java,v $ $Revision: 1.15 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    public static final int DOCTYPE = 128;
    public static final int DOCUMENT = 64;
    public static final int ELEMENT = 1;
    public static final int ENTITYREF = 32;
    public static final int PI = 16;
    public static final int TEXT = 4;
    private int filterMask;

    public ContentFilter()
    {
        this.setDefaultMask();
        return;
    }

    public ContentFilter(int p1)
    {
        this.setFilterMask(p1);
        return;
    }

    public ContentFilter(boolean p3)
    {
        if (!p3) {
            this.filterMask = (this.filterMask & (this.filterMask ^ -1));
        } else {
            this.setDefaultMask();
        }
        return;
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if ((p6 instanceof org.jdom.filter.ContentFilter)) {
                if (this.filterMask != ((org.jdom.filter.ContentFilter) p6).filterMask) {
                    v1 = 0;
                }
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public int getFilterMask()
    {
        return this.filterMask;
    }

    public int hashCode()
    {
        return this.filterMask;
    }

    public boolean matches(Object p4)
    {
        int v0 = 1;
        if (!(p4 instanceof org.jdom.Element)) {
            if (!(p4 instanceof org.jdom.CDATA)) {
                if (!(p4 instanceof org.jdom.Text)) {
                    if (!(p4 instanceof org.jdom.Comment)) {
                        if (!(p4 instanceof org.jdom.ProcessingInstruction)) {
                            if (!(p4 instanceof org.jdom.EntityRef)) {
                                if (!(p4 instanceof org.jdom.Document)) {
                                    if (!(p4 instanceof org.jdom.DocType)) {
                                        v0 = 0;
                                    } else {
                                        if ((this.filterMask & 128) == 0) {
                                            v0 = 0;
                                        }
                                    }
                                } else {
                                    if ((this.filterMask & 64) == 0) {
                                        v0 = 0;
                                    }
                                }
                            } else {
                                if ((this.filterMask & 32) == 0) {
                                    v0 = 0;
                                }
                            }
                        } else {
                            if ((this.filterMask & 16) == 0) {
                                v0 = 0;
                            }
                        }
                    } else {
                        if ((this.filterMask & 8) == 0) {
                            v0 = 0;
                        }
                    }
                } else {
                    if ((this.filterMask & 4) == 0) {
                        v0 = 0;
                    }
                }
            } else {
                if ((this.filterMask & 2) == 0) {
                    v0 = 0;
                }
            }
        } else {
            if ((this.filterMask & 1) == 0) {
                v0 = 0;
            }
        }
        return v0;
    }

    public void setCDATAVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -3);
        } else {
            this.filterMask = (this.filterMask | 2);
        }
        return;
    }

    public void setCommentVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -9);
        } else {
            this.filterMask = (this.filterMask | 8);
        }
        return;
    }

    public void setDefaultMask()
    {
        this.filterMask = 255;
        return;
    }

    public void setDocTypeVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -129);
        } else {
            this.filterMask = (this.filterMask | 128);
        }
        return;
    }

    public void setDocumentContent()
    {
        this.filterMask = 153;
        return;
    }

    public void setElementContent()
    {
        this.filterMask = 63;
        return;
    }

    public void setElementVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -2);
        } else {
            this.filterMask = (this.filterMask | 1);
        }
        return;
    }

    public void setEntityRefVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -33);
        } else {
            this.filterMask = (this.filterMask | 32);
        }
        return;
    }

    public void setFilterMask(int p2)
    {
        this.setDefaultMask();
        this.filterMask = (this.filterMask & p2);
        return;
    }

    public void setPIVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -17);
        } else {
            this.filterMask = (this.filterMask | 16);
        }
        return;
    }

    public void setTextVisible(boolean p2)
    {
        if (!p2) {
            this.filterMask = (this.filterMask & -5);
        } else {
            this.filterMask = (this.filterMask | 4);
        }
        return;
    }
}
package org.jdom.filter;
public class ElementFilter extends org.jdom.filter.AbstractFilter {
    private static final String CVS_ID = "@(#) $RCSfile: ElementFilter.java,v $ $Revision: 1.20 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private String name;
    private transient org.jdom.Namespace namespace;

    public ElementFilter()
    {
        return;
    }

    public ElementFilter(String p1)
    {
        this.name = p1;
        return;
    }

    public ElementFilter(String p1, org.jdom.Namespace p2)
    {
        this.name = p1;
        this.namespace = p2;
        return;
    }

    public ElementFilter(org.jdom.Namespace p1)
    {
        this.namespace = p1;
        return;
    }

    private void readObject(java.io.ObjectInputStream p4)
    {
        p4.defaultReadObject();
        String v0_0 = p4.readObject();
        String v1_0 = p4.readObject();
        if (v0_0 != null) {
            this.namespace = org.jdom.Namespace.getNamespace(((String) v0_0), ((String) v1_0));
        }
        return;
    }

    private void writeObject(java.io.ObjectOutputStream p3)
    {
        p3.defaultWriteObject();
        if (this.namespace == null) {
            p3.writeObject(0);
            p3.writeObject(0);
        } else {
            p3.writeObject(this.namespace.getPrefix());
            p3.writeObject(this.namespace.getURI());
        }
        return;
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if ((p6 instanceof org.jdom.filter.ElementFilter)) {
                if (this.name == null) {
                    if (((org.jdom.filter.ElementFilter) p6).name == null) {
                        if (this.namespace == null) {
                            if (((org.jdom.filter.ElementFilter) p6).namespace == null) {
                                return v1;
                            }
                        } else {
                            if (this.namespace.equals(((org.jdom.filter.ElementFilter) p6).namespace)) {
                                return v1;
                            }
                        }
                        v1 = 0;
                        return v1;
                    }
                } else {
                    if (this.name.equals(((org.jdom.filter.ElementFilter) p6).name)) {
                    }
                }
                v1 = 0;
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public int hashCode()
    {
        int v0_1;
        int v1_0 = 0;
        if (this.name == null) {
            v0_1 = 0;
        } else {
            v0_1 = this.name.hashCode();
        }
        int v2_2 = (v0_1 * 29);
        if (this.namespace != null) {
            v1_0 = this.namespace.hashCode();
        }
        return (v2_2 + v1_0);
    }

    public boolean matches(Object p5)
    {
        int v1 = 0;
        if ((((p5 instanceof org.jdom.Element)) && ((this.name == null) || (this.name.equals(((org.jdom.Element) p5).getName())))) && ((this.namespace == null) || (this.namespace.equals(((org.jdom.Element) p5).getNamespace())))) {
            v1 = 1;
        }
        return v1;
    }
}
package org.jdom.filter;
final class NegateFilter extends org.jdom.filter.AbstractFilter {
    private static final String CVS_ID = "@(#) $RCSfile: NegateFilter.java,v $ $Revision: 1.4 $ $Date: 2007/11/10 05:29:00 $";
    private org.jdom.filter.Filter filter;

    public NegateFilter(org.jdom.filter.Filter p1)
    {
        this.filter = p1;
        return;
    }

    public boolean equals(Object p3)
    {
        int v0_1;
        if (this != p3) {
            if (!(p3 instanceof org.jdom.filter.NegateFilter)) {
                v0_1 = 0;
            } else {
                v0_1 = this.filter.equals(((org.jdom.filter.NegateFilter) p3).filter);
            }
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public int hashCode()
    {
        return (this.filter.hashCode() ^ -1);
    }

    public boolean matches(Object p2)
    {
        int v0_2;
        if (this.filter.matches(p2)) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public org.jdom.filter.Filter negate()
    {
        return this.filter;
    }

    public String toString()
    {
        return new StringBuffer(64).append("[NegateFilter: ").append(this.filter.toString()).append("]").toString();
    }
}
package org.jdom.filter;
final class OrFilter extends org.jdom.filter.AbstractFilter {
    private static final String CVS_ID = "@(#) $RCSfile: OrFilter.java,v $ $Revision: 1.5 $ $Date: 2007/11/10 05:29:00 $";
    private org.jdom.filter.Filter left;
    private org.jdom.filter.Filter right;

    public OrFilter(org.jdom.filter.Filter p3, org.jdom.filter.Filter p4)
    {
        if ((p3 != null) && (p4 != null)) {
            this.left = p3;
            this.right = p4;
            return;
        } else {
            throw new IllegalArgumentException("null filter not allowed");
        }
    }

    public boolean equals(Object p5)
    {
        int v1 = 1;
        if ((this != p5) && ((!(p5 instanceof org.jdom.filter.OrFilter)) || (((!this.left.equals(((org.jdom.filter.OrFilter) p5).left)) || (!this.right.equals(((org.jdom.filter.OrFilter) p5).right))) && ((!this.left.equals(((org.jdom.filter.OrFilter) p5).right)) || (!this.right.equals(((org.jdom.filter.OrFilter) p5).left)))))) {
            v1 = 0;
        }
        return v1;
    }

    public int hashCode()
    {
        return ((this.left.hashCode() * 31) + this.right.hashCode());
    }

    public boolean matches(Object p2)
    {
        if ((!this.left.matches(p2)) && (!this.right.matches(p2))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public String toString()
    {
        return new StringBuffer(64).append("[OrFilter: ").append(this.left.toString()).append(",\n").append("           ").append(this.right.toString()).append("]").toString();
    }
}
package org.jdom.input;
public class BuilderErrorHandler implements org.xml.sax.ErrorHandler {
    private static final String CVS_ID = "@(#) $RCSfile: BuilderErrorHandler.java,v $ $Revision: 1.13 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";

    public BuilderErrorHandler()
    {
        return;
    }

    public void error(org.xml.sax.SAXParseException p1)
    {
        throw p1;
    }

    public void fatalError(org.xml.sax.SAXParseException p1)
    {
        throw p1;
    }

    public void warning(org.xml.sax.SAXParseException p1)
    {
        return;
    }
}
package org.jdom.input;
public class DOMBuilder {
    private static final String CVS_ID = "@(#) $RCSfile: DOMBuilder.java,v $ $Revision: 1.60 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private String adapterClass;
    private org.jdom.JDOMFactory factory;

    public DOMBuilder()
    {
        this.factory = new org.jdom.DefaultJDOMFactory();
        return;
    }

    public DOMBuilder(String p2)
    {
        this.factory = new org.jdom.DefaultJDOMFactory();
        this.adapterClass = p2;
        return;
    }

    private void buildTree(org.w3c.dom.Node p48, org.jdom.Document p49, org.jdom.Element p50, boolean p51)
    {
        switch (p48.getNodeType()) {
            case 1:
                String v31 = p48.getNodeName();
                String v37 = "";
                String v30 = v31;
                int v19_0 = v31.indexOf(58);
                if (v19_0 >= 0) {
                    v37 = v31.substring(0, v19_0);
                    v30 = v31.substring((v19_0 + 1));
                }
                org.jdom.Namespace v33;
                String v42 = p48.getNamespaceURI();
                if (v42 != null) {
                    v33 = org.jdom.Namespace.getNamespace(v37, v42);
                } else {
                    if (p50 != null) {
                        v33 = p50.getNamespace(v37);
                    } else {
                        v33 = org.jdom.Namespace.NO_NAMESPACE;
                    }
                }
                org.jdom.Element v24 = this.factory.element(v30, v33);
                if (!p51) {
                    this.factory.addContent(p50, v24);
                } else {
                    p49.setRootElement(v24);
                }
                org.w3c.dom.NamedNodeMap v12 = p48.getAttributes();
                int v13 = v12.getLength();
                int v26_0 = 0;
                while (v26_0 < v13) {
                    org.w3c.dom.Attr v5_3 = ((org.w3c.dom.Attr) v12.item(v26_0));
                    String v10_1 = v5_3.getName();
                    if (v10_1.startsWith("xmlns")) {
                        String v8_1 = "";
                        int v19_2 = v10_1.indexOf(58);
                        if (v19_2 >= 0) {
                            v8_1 = v10_1.substring((v19_2 + 1));
                        }
                        org.jdom.Namespace v21 = org.jdom.Namespace.getNamespace(v8_1, v5_3.getValue());
                        if (!v37.equals(v8_1)) {
                            this.factory.addNamespaceDeclaration(v24, v21);
                        } else {
                            v24.setNamespace(v21);
                        }
                    }
                    v26_0++;
                }
                int v26_1 = 0;
                while (v26_1 < v13) {
                    org.w3c.dom.Attr v5_1 = ((org.w3c.dom.Attr) v12.item(v26_1));
                    String v10_0 = v5_1.getName();
                    if (!v10_0.startsWith("xmlns")) {
                        String v8_0 = "";
                        String v6 = v10_0;
                        int v19_1 = v10_0.indexOf(58);
                        if (v19_1 >= 0) {
                            v8_0 = v10_0.substring(0, v19_1);
                            v6 = v10_0.substring((v19_1 + 1));
                        }
                        String v14_0 = v5_1.getValue();
                        org.jdom.Namespace v7 = 0;
                        String v9 = v5_1.getNamespaceURI();
                        if ((v9 != null) && (!"".equals(v9))) {
                            if (v8_0.length() <= 0) {
                                java.util.HashSet v34_1 = new java.util.HashSet();
                                org.jdom.Element v35 = v24;
                                while ((!v35.getNamespace().getURI().equals(v9)) || ((v34_1.contains(v35.getNamespacePrefix())) || ("".equals(v24.getNamespace().getPrefix())))) {
                                    v34_1.add(v35.getNamespacePrefix());
                                    java.util.Iterator v28 = v35.getAdditionalNamespaces().iterator();
                                    while (v28.hasNext()) {
                                        org.jdom.Namespace v41_1 = ((org.jdom.Namespace) v28.next());
                                        if ((v34_1.contains(v41_1.getPrefix())) || (!v9.equals(v41_1.getURI()))) {
                                            v34_1.add(v41_1.getPrefix());
                                        } else {
                                            v7 = v41_1;
                                        }
                                        if (v7 == null) {
                                            int v18 = 0;
                                            String v36 = new StringBuffer().append("attns").append(0).toString();
                                            while (v34_1.contains(v36)) {
                                                v18++;
                                                v36 = new StringBuffer().append("attns").append(v18).toString();
                                            }
                                            v7 = org.jdom.Namespace.getNamespace(v36, v9);
                                        }
                                    }
                                    v35 = v35.getParentElement();
                                    if (v35 == null) {
                                    }
                                }
                                v7 = v35.getNamespace();
                            } else {
                                v7 = org.jdom.Namespace.getNamespace(v8_0, v9);
                            }
                        } else {
                            v7 = org.jdom.Namespace.NO_NAMESPACE;
                        }
                        this.factory.setAttribute(v24, this.factory.attribute(v6, v14_0, v7));
                    }
                    v26_1++;
                }
                org.w3c.dom.NodeList v17 = p48.getChildNodes();
                if (v17 == null) {
                } else {
                    int v39_0 = v17.getLength();
                    int v26_2 = 0;
                    while (v26_2 < v39_0) {
                        org.w3c.dom.Node v29 = v17.item(v26_2);
                        if (v29 != null) {
                            this.buildTree(v29, p49, v24, 0);
                        }
                        v26_2++;
                    }
                }
                break;
            case 2:
            case 6:
            default:
                break;
            case 3:
                this.factory.addContent(p50, this.factory.text(p48.getNodeValue()));
                break;
            case 4:
                this.factory.addContent(p50, this.factory.cdata(p48.getNodeValue()));
                break;
            case 5:
                this.factory.addContent(p50, this.factory.entityRef(p48.getNodeName()));
            case 2:
            case 6:
                break;
            case 7:
                if (!p51) {
                    this.factory.addContent(p50, this.factory.processingInstruction(p48.getNodeName(), p48.getNodeValue()));
                } else {
                    this.factory.addContent(p49, this.factory.processingInstruction(p48.getNodeName(), p48.getNodeValue()));
                }
                break;
            case 8:
                if (!p51) {
                    this.factory.addContent(p50, this.factory.comment(p48.getNodeValue()));
                } else {
                    this.factory.addContent(p49, this.factory.comment(p48.getNodeValue()));
                }
                break;
            case 9:
                org.w3c.dom.NodeList v32 = p48.getChildNodes();
                int v26_3 = 0;
                int v39_1 = v32.getLength();
                while (v26_3 < v39_1) {
                    this.buildTree(v32.item(v26_3), p49, p50, 1);
                    v26_3++;
                }
                break;
            case 10:
                String v38 = ((org.w3c.dom.DocumentType) p48).getPublicId();
                String v40 = ((org.w3c.dom.DocumentType) p48).getSystemId();
                String v27 = ((org.w3c.dom.DocumentType) p48).getInternalSubset();
                org.jdom.DocType v22 = this.factory.docType(((org.w3c.dom.DocumentType) p48).getName());
                v22.setPublicID(v38);
                v22.setSystemID(v40);
                v22.setInternalSubset(v27);
                this.factory.addContent(p49, v22);
                break;
        }
        return;
    }

    public org.jdom.Document build(org.w3c.dom.Document p4)
    {
        org.jdom.Document v0 = this.factory.document(0);
        this.buildTree(p4, v0, 0, 1);
        return v0;
    }

    public org.jdom.Element build(org.w3c.dom.Element p4)
    {
        org.jdom.Document v0 = this.factory.document(0);
        this.buildTree(p4, v0, 0, 1);
        return v0.getRootElement();
    }

    public org.jdom.JDOMFactory getFactory()
    {
        return this.factory;
    }

    public void setFactory(org.jdom.JDOMFactory p1)
    {
        this.factory = p1;
        return;
    }
}
package org.jdom.input;
 class JAXPParserFactory {
    private static final String CVS_ID = "@(#) $RCSfile: JAXPParserFactory.java,v $ $Revision: 1.6 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private static final String JAXP_SCHEMA_LANGUAGE_PROPERTY = "http://java.sun.com/xml/jaxp/properties/schemaLanguage";
    private static final String JAXP_SCHEMA_LOCATION_PROPERTY = "http://java.sun.com/xml/jaxp/properties/schemaSource";

    private JAXPParserFactory()
    {
        return;
    }

    public static org.xml.sax.XMLReader createParser(boolean p5, java.util.Map p6, java.util.Map p7)
    {
        try {
            javax.xml.parsers.SAXParserFactory v1 = javax.xml.parsers.SAXParserFactory.newInstance();
            v1.setValidating(p5);
            v1.setNamespaceAware(1);
        } catch (javax.xml.parsers.ParserConfigurationException v0_0) {
            throw new org.jdom.JDOMException("Could not allocate JAXP SAX Parser", v0_0);
        }
        javax.xml.parsers.SAXParser v2 = v1.newSAXParser();
        org.jdom.input.JAXPParserFactory.setProperty(v2, p7, "http://java.sun.com/xml/jaxp/properties/schemaLanguage");
        org.jdom.input.JAXPParserFactory.setProperty(v2, p7, "http://java.sun.com/xml/jaxp/properties/schemaSource");
        return v2.getXMLReader();
    }

    private static void setProperty(javax.xml.parsers.SAXParser p4, java.util.Map p5, String p6)
    {
        try {
            if (p5.containsKey(p6)) {
                p4.setProperty(p6, p5.get(p6));
            }
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p6).append(" property not supported for JAXP parser ").append(p4.getClass().getName()).toString());
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p6).append(" property not recognized for JAXP parser ").append(p4.getClass().getName()).toString());
        }
        return;
    }
}
package org.jdom.input;
public class JDOMParseException extends org.jdom.JDOMException {
    private static final String CVS_ID = "@(#) $RCSfile: JDOMParseException.java,v $ $Revision: 1.8 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private final org.jdom.Document partialDocument;

    public JDOMParseException(String p2, Throwable p3)
    {
        this(p2, p3, 0);
        return;
    }

    public JDOMParseException(String p1, Throwable p2, org.jdom.Document p3)
    {
        super(p1, p2);
        super.partialDocument = p3;
        return;
    }

    public int getColumnNumber()
    {
        int v0_2;
        if (!(this.getCause() instanceof org.xml.sax.SAXParseException)) {
            v0_2 = -1;
        } else {
            v0_2 = ((org.xml.sax.SAXParseException) this.getCause()).getColumnNumber();
        }
        return v0_2;
    }

    public int getLineNumber()
    {
        int v0_2;
        if (!(this.getCause() instanceof org.xml.sax.SAXParseException)) {
            v0_2 = -1;
        } else {
            v0_2 = ((org.xml.sax.SAXParseException) this.getCause()).getLineNumber();
        }
        return v0_2;
    }

    public org.jdom.Document getPartialDocument()
    {
        return this.partialDocument;
    }

    public String getPublicId()
    {
        int v0_2;
        if (!(this.getCause() instanceof org.xml.sax.SAXParseException)) {
            v0_2 = 0;
        } else {
            v0_2 = ((org.xml.sax.SAXParseException) this.getCause()).getPublicId();
        }
        return v0_2;
    }

    public String getSystemId()
    {
        int v0_2;
        if (!(this.getCause() instanceof org.xml.sax.SAXParseException)) {
            v0_2 = 0;
        } else {
            v0_2 = ((org.xml.sax.SAXParseException) this.getCause()).getSystemId();
        }
        return v0_2;
    }
}
package org.jdom.input;
public class SAXBuilder {
    private static final String CVS_ID = "@(#) $RCSfile: SAXBuilder.java,v $ $Revision: 1.93 $ $Date: 2009/07/23 06:26:26 $ $Name:  $";
    private static final String DEFAULT_SAX_DRIVER = "org.apache.xerces.parsers.SAXParser";
    static Class class$java$util$Map;
    private boolean expand;
    private org.jdom.JDOMFactory factory;
    private boolean fastReconfigure;
    private java.util.HashMap features;
    private boolean ignoringBoundaryWhite;
    private boolean ignoringWhite;
    private java.util.HashMap properties;
    private boolean reuseParser;
    private org.xml.sax.DTDHandler saxDTDHandler;
    private String saxDriverClass;
    private org.xml.sax.EntityResolver saxEntityResolver;
    private org.xml.sax.ErrorHandler saxErrorHandler;
    private org.xml.sax.XMLReader saxParser;
    private org.xml.sax.XMLFilter saxXMLFilter;
    private boolean skipNextEntityExpandConfig;
    private boolean skipNextLexicalReportingConfig;
    private boolean validate;

    public SAXBuilder()
    {
        this(0);
        return;
    }

    public SAXBuilder(String p2)
    {
        this(p2, 0);
        return;
    }

    public SAXBuilder(String p6, boolean p7)
    {
        this.expand = 1;
        this.saxErrorHandler = 0;
        this.saxEntityResolver = 0;
        this.saxDTDHandler = 0;
        this.saxXMLFilter = 0;
        this.factory = new org.jdom.DefaultJDOMFactory();
        this.ignoringWhite = 0;
        this.ignoringBoundaryWhite = 0;
        this.features = new java.util.HashMap(5);
        this.properties = new java.util.HashMap(5);
        this.fastReconfigure = 0;
        this.skipNextLexicalReportingConfig = 0;
        this.skipNextEntityExpandConfig = 0;
        this.reuseParser = 1;
        this.saxParser = 0;
        this.saxDriverClass = p6;
        this.validate = p7;
        return;
    }

    public SAXBuilder(boolean p6)
    {
        this.expand = 1;
        this.saxErrorHandler = 0;
        this.saxEntityResolver = 0;
        this.saxDTDHandler = 0;
        this.saxXMLFilter = 0;
        this.factory = new org.jdom.DefaultJDOMFactory();
        this.ignoringWhite = 0;
        this.ignoringBoundaryWhite = 0;
        this.features = new java.util.HashMap(5);
        this.properties = new java.util.HashMap(5);
        this.fastReconfigure = 0;
        this.skipNextLexicalReportingConfig = 0;
        this.skipNextEntityExpandConfig = 0;
        this.reuseParser = 1;
        this.saxParser = 0;
        this.validate = p6;
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    private static java.net.URL fileToURL(java.io.File p9)
    {
        StringBuffer v0_1 = new StringBuffer();
        String v4 = p9.getAbsolutePath();
        if (java.io.File.separatorChar != 47) {
            v4 = v4.replace(java.io.File.separatorChar, 47);
        }
        if (!v4.startsWith("/")) {
            v0_1.append(47);
        }
        int v3 = v4.length();
        int v2 = 0;
        while (v2 < v3) {
            char v1 = v4.charAt(v2);
            if (v1 != 32) {
                if (v1 != 35) {
                    if (v1 != 37) {
                        if (v1 != 38) {
                            if (v1 != 59) {
                                if (v1 != 60) {
                                    if (v1 != 61) {
                                        if (v1 != 62) {
                                            if (v1 != 63) {
                                                if (v1 != 126) {
                                                    v0_1.append(v1);
                                                } else {
                                                    v0_1.append("%7E");
                                                }
                                            } else {
                                                v0_1.append("%3F");
                                            }
                                        } else {
                                            v0_1.append("%3E");
                                        }
                                    } else {
                                        v0_1.append("%3D");
                                    }
                                } else {
                                    v0_1.append("%3C");
                                }
                            } else {
                                v0_1.append("%3B");
                            }
                        } else {
                            v0_1.append("%26");
                        }
                    } else {
                        v0_1.append("%25");
                    }
                } else {
                    v0_1.append("%23");
                }
            } else {
                v0_1.append("%20");
            }
            v2++;
        }
        if ((!v4.endsWith("/")) && (p9.isDirectory())) {
            v0_1.append(47);
        }
        return new java.net.URL("file", "", v0_1.toString());
    }

    private void internalSetFeature(org.xml.sax.XMLReader p5, String p6, boolean p7, String p8)
    {
        try {
            p5.setFeature(p6, p7);
            return;
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p8).append(" feature not supported for SAX driver ").append(p5.getClass().getName()).toString());
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p8).append(" feature not recognized for SAX driver ").append(p5.getClass().getName()).toString());
        }
    }

    private void internalSetProperty(org.xml.sax.XMLReader p5, String p6, Object p7, String p8)
    {
        try {
            p5.setProperty(p6, p7);
            return;
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p8).append(" property not supported for SAX driver ").append(p5.getClass().getName()).toString());
        } catch (org.xml.sax.SAXNotRecognizedException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append(p8).append(" property not recognized for SAX driver ").append(p5.getClass().getName()).toString());
        }
    }

    private void setFeaturesAndProperties(org.xml.sax.XMLReader p9, boolean p10)
    {
        java.util.Iterator v1_1 = this.features.keySet().iterator();
        while (v1_1.hasNext()) {
            String v2_3 = ((String) v1_1.next());
            this.internalSetFeature(p9, v2_3, ((Boolean) this.features.get(v2_3)).booleanValue(), v2_3);
        }
        java.util.Iterator v1_0 = this.properties.keySet().iterator();
        while (v1_0.hasNext()) {
            String v2_1 = ((String) v1_0.next());
            this.internalSetProperty(p9, v2_1, this.properties.get(v2_1), v2_1);
        }
        if (p10) {
            try {
                this.internalSetFeature(p9, "http://xml.org/sax/features/validation", this.validate, "Validation");
            } catch (org.jdom.JDOMException v0) {
                if (!this.validate) {
                } else {
                    throw v0;
                }
            }
            this.internalSetFeature(p9, "http://xml.org/sax/features/namespaces", 1, "Namespaces");
            this.internalSetFeature(p9, "http://xml.org/sax/features/namespace-prefixes", 1, "Namespace prefixes");
        }
        try {
            if (p9.getFeature("http://xml.org/sax/features/external-general-entities") != this.expand) {
                p9.setFeature("http://xml.org/sax/features/external-general-entities", this.expand);
            }
        } catch (String v4) {
        } catch (String v4) {
        }
        return;
    }

    public org.jdom.Document build(java.io.File p5)
    {
        try {
            return this.build(org.jdom.input.SAXBuilder.fileToURL(p5));
        } catch (java.net.MalformedURLException v0) {
            throw new org.jdom.JDOMException("Error in building", v0);
        }
    }

    public org.jdom.Document build(java.io.InputStream p2)
    {
        return this.build(new org.xml.sax.InputSource(p2));
    }

    public org.jdom.Document build(java.io.InputStream p3, String p4)
    {
        org.xml.sax.InputSource v0_1 = new org.xml.sax.InputSource(p3);
        v0_1.setSystemId(p4);
        return this.build(v0_1);
    }

    public org.jdom.Document build(java.io.Reader p2)
    {
        return this.build(new org.xml.sax.InputSource(p2));
    }

    public org.jdom.Document build(java.io.Reader p3, String p4)
    {
        org.xml.sax.InputSource v0_1 = new org.xml.sax.InputSource(p3);
        v0_1.setSystemId(p4);
        return this.build(v0_1);
    }

    public org.jdom.Document build(String p2)
    {
        return this.build(new org.xml.sax.InputSource(p2));
    }

    public org.jdom.Document build(java.net.URL p3)
    {
        return this.build(new org.xml.sax.InputSource(p3.toExternalForm()));
    }

    public org.jdom.Document build(org.xml.sax.InputSource p10)
    {
        try {
            int v0 = this.createContentHandler();
            this.configureContentHandler(v0);
            org.xml.sax.XMLFilter v3 = this.saxParser;
        } catch (org.jdom.input.JDOMParseException v6_12) {
            throw v6_12;
        } catch (org.xml.sax.SAXException v2_1) {
            int v1 = v0.getDocument();
            if (!v1.hasRootElement()) {
                v1 = 0;
            }
            String v5 = v2_1.getSystemId();
            if (v5 == null) {
                throw new org.jdom.input.JDOMParseException(new StringBuffer().append("Error on line ").append(v2_1.getLineNumber()).toString(), v2_1, v1);
            } else {
                throw new org.jdom.input.JDOMParseException(new StringBuffer().append("Error on line ").append(v2_1.getLineNumber()).append(" of document ").append(v5).toString(), v2_1, v1);
            }
        }
        if (v3 != null) {
            this.configureParser(v3, v0);
        } else {
            v3 = this.createParser();
            if (this.saxXMLFilter != null) {
                org.xml.sax.XMLFilter v4_0 = this.saxXMLFilter;
                while ((v4_0.getParent() instanceof org.xml.sax.XMLFilter)) {
                    v4_0 = ((org.xml.sax.XMLFilter) v4_0.getParent());
                }
                v4_0.setParent(v3);
                v3 = this.saxXMLFilter;
            }
            this.configureParser(v3, v0);
            if (this.reuseParser) {
                this.saxParser = v3;
            }
        }
        v3.parse(p10);
        org.jdom.input.JDOMParseException v6_3 = v0.getDocument();
        v0 = 0;
        return v6_3;
    }

    protected void configureContentHandler(org.jdom.input.SAXHandler p2)
    {
        p2.setExpandEntities(this.expand);
        p2.setIgnoringElementContentWhitespace(this.ignoringWhite);
        p2.setIgnoringBoundaryWhitespace(this.ignoringBoundaryWhite);
        return;
    }

    protected void configureParser(org.xml.sax.XMLReader p4, org.jdom.input.SAXHandler p5)
    {
        p4.setContentHandler(p5);
        if (this.saxEntityResolver != null) {
            p4.setEntityResolver(this.saxEntityResolver);
        }
        if (this.saxDTDHandler == null) {
            p4.setDTDHandler(p5);
        } else {
            p4.setDTDHandler(this.saxDTDHandler);
        }
        if (this.saxErrorHandler == null) {
            p4.setErrorHandler(new org.jdom.input.BuilderErrorHandler());
        } else {
            p4.setErrorHandler(this.saxErrorHandler);
        }
        if (!this.skipNextLexicalReportingConfig) {
            try {
                p4.setProperty("http://xml.org/sax/handlers/LexicalHandler", p5);
                int v0_0 = 1;
            } catch (boolean v1) {
            } catch (boolean v1) {
            }
            if (1 == 0) {
                try {
                    p4.setProperty("http://xml.org/sax/properties/lexical-handler", p5);
                    v0_0 = 1;
                } catch (boolean v1) {
                } catch (boolean v1) {
                }
            }
            if ((v0_0 == 0) && (this.fastReconfigure)) {
                this.skipNextLexicalReportingConfig = 1;
            }
        }
        if (!this.skipNextEntityExpandConfig) {
            int v0_1 = 0;
            if (!this.expand) {
                try {
                    p4.setProperty("http://xml.org/sax/properties/declaration-handler", p5);
                    v0_1 = 1;
                } catch (boolean v1) {
                } catch (boolean v1) {
                }
            }
            if ((v0_1 == 0) && (this.fastReconfigure)) {
                this.skipNextEntityExpandConfig = 1;
            }
        }
        return;
    }

    protected org.jdom.input.SAXHandler createContentHandler()
    {
        return new org.jdom.input.SAXHandler(this.factory);
    }

    protected org.xml.sax.XMLReader createParser()
    {
        org.xml.sax.XMLReader v4 = 0;
        if (this.saxDriverClass == null) {
            try {
                int v5_2;
                Class v3 = Class.forName("org.jdom.input.JAXPParserFactory");
                Object[] v7_3 = new Class[3];
                v7_3[0] = Boolean.TYPE;
            } catch (org.xml.sax.SAXException v2_0) {
                throw v2_0;
            } catch (int v5) {
            } catch (int v5) {
            }
            if (org.jdom.input.SAXBuilder.class$java$util$Map != null) {
                v5_2 = org.jdom.input.SAXBuilder.class$java$util$Map;
            } else {
                v5_2 = org.jdom.input.SAXBuilder.class$("java.util.Map");
                org.jdom.input.SAXBuilder.class$java$util$Map = v5_2;
            }
            int v5_5;
            v7_3[1] = v5_2;
            if (org.jdom.input.SAXBuilder.class$java$util$Map != null) {
                v5_5 = org.jdom.input.SAXBuilder.class$java$util$Map;
            } else {
                v5_5 = org.jdom.input.SAXBuilder.class$("java.util.Map");
                org.jdom.input.SAXBuilder.class$java$util$Map = v5_5;
            }
            int v5_10;
            v7_3[2] = v5_5;
            reflect.Method v1 = v3.getMethod("createParser", v7_3);
            Object[] v7_0 = new Object[3];
            if (!this.validate) {
                v5_10 = Boolean.FALSE;
            } else {
                v5_10 = Boolean.TRUE;
            }
            v7_0[0] = v5_10;
            v7_0[1] = this.features;
            v7_0[2] = this.properties;
            v4 = ((org.xml.sax.XMLReader) v1.invoke(0, v7_0));
            this.setFeaturesAndProperties(v4, 0);
        } else {
            try {
                v4 = org.xml.sax.helpers.XMLReaderFactory.createXMLReader(this.saxDriverClass);
                this.setFeaturesAndProperties(v4, 1);
            } catch (org.xml.sax.SAXException v2_1) {
                throw new org.jdom.JDOMException(new StringBuffer().append("Could not load ").append(this.saxDriverClass).toString(), v2_1);
            }
        }
        if (v4 == null) {
            try {
                v4 = org.xml.sax.helpers.XMLReaderFactory.createXMLReader("org.apache.xerces.parsers.SAXParser");
                this.saxDriverClass = v4.getClass().getName();
                this.setFeaturesAndProperties(v4, 1);
            } catch (org.xml.sax.SAXException v2_2) {
                throw new org.jdom.JDOMException("Could not load default SAX parser: org.apache.xerces.parsers.SAXParser", v2_2);
            }
        }
        return v4;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        return this.saxDTDHandler;
    }

    public String getDriverClass()
    {
        return this.saxDriverClass;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        return this.saxEntityResolver;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        return this.saxErrorHandler;
    }

    public boolean getExpandEntities()
    {
        return this.expand;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        return this.factory;
    }

    public boolean getIgnoringBoundaryWhitespace()
    {
        return this.ignoringBoundaryWhite;
    }

    public boolean getIgnoringElementContentWhitespace()
    {
        return this.ignoringWhite;
    }

    public boolean getReuseParser()
    {
        return this.reuseParser;
    }

    public boolean getValidation()
    {
        return this.validate;
    }

    public org.xml.sax.XMLFilter getXMLFilter()
    {
        return this.saxXMLFilter;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler p1)
    {
        this.saxDTDHandler = p1;
        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver p1)
    {
        this.saxEntityResolver = p1;
        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler p1)
    {
        this.saxErrorHandler = p1;
        return;
    }

    public void setExpandEntities(boolean p1)
    {
        this.expand = p1;
        return;
    }

    public void setFactory(org.jdom.JDOMFactory p1)
    {
        this.factory = p1;
        return;
    }

    public void setFastReconfigure(boolean p2)
    {
        if (this.reuseParser) {
            this.fastReconfigure = p2;
        }
        return;
    }

    public void setFeature(String p3, boolean p4)
    {
        Boolean v0;
        if (!p4) {
            v0 = Boolean.FALSE;
        } else {
            v0 = Boolean.TRUE;
        }
        this.features.put(p3, v0);
        return;
    }

    public void setIgnoringBoundaryWhitespace(boolean p1)
    {
        this.ignoringBoundaryWhite = p1;
        return;
    }

    public void setIgnoringElementContentWhitespace(boolean p1)
    {
        this.ignoringWhite = p1;
        return;
    }

    public void setProperty(String p2, Object p3)
    {
        this.properties.put(p2, p3);
        return;
    }

    public void setReuseParser(boolean p2)
    {
        this.reuseParser = p2;
        this.saxParser = 0;
        return;
    }

    public void setValidation(boolean p1)
    {
        this.validate = p1;
        return;
    }

    public void setXMLFilter(org.xml.sax.XMLFilter p1)
    {
        this.saxXMLFilter = p1;
        return;
    }
}
package org.jdom.input;
public class SAXHandler extends org.xml.sax.helpers.DefaultHandler implements org.xml.sax.ext.LexicalHandler, org.xml.sax.ext.DeclHandler, org.xml.sax.DTDHandler {
    private static final String CVS_ID = "@(#) $RCSfile: SAXHandler.java,v $ $Revision: 1.73 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private static final java.util.Map attrNameToTypeMap;
    private boolean atRoot;
    private org.jdom.Element currentElement;
    private java.util.List declaredNamespaces;
    private org.jdom.Document document;
    private int entityDepth;
    private boolean expand;
    private java.util.Map externalEntities;
    private org.jdom.JDOMFactory factory;
    private boolean ignoringBoundaryWhite;
    private boolean ignoringWhite;
    private boolean inCDATA;
    private boolean inDTD;
    private boolean inInternalSubset;
    private StringBuffer internalSubset;
    private org.xml.sax.Locator locator;
    private boolean previousCDATA;
    private boolean suppress;
    private org.jdom.input.TextBuffer textBuffer;

    static SAXHandler()
    {
        org.jdom.input.SAXHandler.attrNameToTypeMap = new java.util.HashMap(13);
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("CDATA", new Integer(1));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("ID", new Integer(2));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("IDREF", new Integer(3));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("IDREFS", new Integer(4));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("ENTITY", new Integer(5));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("ENTITIES", new Integer(6));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("NMTOKEN", new Integer(7));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("NMTOKENS", new Integer(8));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("NOTATION", new Integer(9));
        org.jdom.input.SAXHandler.attrNameToTypeMap.put("ENUMERATION", new Integer(10));
        return;
    }

    public SAXHandler()
    {
        this(0);
        return;
    }

    public SAXHandler(org.jdom.JDOMFactory p4)
    {
        this.inDTD = 0;
        this.inInternalSubset = 0;
        this.previousCDATA = 0;
        this.inCDATA = 0;
        this.expand = 1;
        this.suppress = 0;
        this.entityDepth = 0;
        this.internalSubset = new StringBuffer();
        this.textBuffer = new org.jdom.input.TextBuffer();
        this.ignoringWhite = 0;
        this.ignoringBoundaryWhite = 0;
        if (p4 == null) {
            this.factory = new org.jdom.DefaultJDOMFactory();
        } else {
            this.factory = p4;
        }
        this.atRoot = 1;
        this.declaredNamespaces = new java.util.ArrayList();
        this.externalEntities = new java.util.HashMap();
        this.document = this.factory.document(0);
        return;
    }

    private void appendExternalId(String p4, String p5)
    {
        if (p4 != null) {
            this.internalSubset.append(" PUBLIC \"").append(p4).append(34);
        }
        if (p5 != null) {
            if (p4 != null) {
                this.internalSubset.append(32);
            } else {
                this.internalSubset.append(" SYSTEM ");
            }
            this.internalSubset.append(34).append(p5).append(34);
        }
        return;
    }

    private static int getAttributeType(String p4)
    {
        int v1_3;
        Integer v0_1 = ((Integer) ((Integer) org.jdom.input.SAXHandler.attrNameToTypeMap.get(p4)));
        if (v0_1 != null) {
            v1_3 = v0_1.intValue();
        } else {
            if ((p4 == null) || ((p4.length() <= 0) || (p4.charAt(0) != 40))) {
                v1_3 = 0;
            } else {
                v1_3 = 10;
            }
        }
        return v1_3;
    }

    private void transferNamespaces(org.jdom.Element p4)
    {
        java.util.Iterator v0 = this.declaredNamespaces.iterator();
        while (v0.hasNext()) {
            org.jdom.Namespace v1_1 = ((org.jdom.Namespace) v0.next());
            if (v1_1 != p4.getNamespace()) {
                p4.addNamespaceDeclaration(v1_1);
            }
        }
        this.declaredNamespaces.clear();
        return;
    }

    public void attributeDecl(String p5, String p6, String p7, String p8, String p9)
    {
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!ATTLIST ").append(p5).append(32).append(p6).append(32).append(p7).append(32);
            if (p8 == null) {
                this.internalSubset.append(34).append(p9).append(34);
            } else {
                this.internalSubset.append(p8);
            }
            if ((p8 != null) && (p8.equals("#FIXED"))) {
                this.internalSubset.append(" \"").append(p9).append(34);
            }
            this.internalSubset.append(">\n");
        }
        return;
    }

    public void characters(char[] p3, int p4, int p5)
    {
        if ((!this.suppress) && (p5 != 0)) {
            if (this.previousCDATA != this.inCDATA) {
                this.flushCharacters();
            }
            this.textBuffer.append(p3, p4, p5);
        }
        return;
    }

    public void comment(char[] p5, int p6, int p7)
    {
        if (!this.suppress) {
            this.flushCharacters();
            String v0_1 = new String(p5, p6, p7);
            if ((!this.inDTD) || ((!this.inInternalSubset) || (this.expand))) {
                if ((!this.inDTD) && (!v0_1.equals(""))) {
                    if (!this.atRoot) {
                        this.factory.addContent(this.getCurrentElement(), this.factory.comment(v0_1));
                    } else {
                        this.factory.addContent(this.document, this.factory.comment(v0_1));
                    }
                }
            } else {
                this.internalSubset.append("  <!--").append(v0_1).append("-->\n");
            }
        }
        return;
    }

    public void elementDecl(String p3, String p4)
    {
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!ELEMENT ").append(p3).append(32).append(p4).append(">\n");
        }
        return;
    }

    public void endCDATA()
    {
        if (!this.suppress) {
            this.previousCDATA = 1;
            this.inCDATA = 0;
        }
        return;
    }

    public void endDTD()
    {
        this.document.getDocType().setInternalSubset(this.internalSubset.toString());
        this.inDTD = 0;
        this.inInternalSubset = 0;
        return;
    }

    public void endElement(String p5, String p6, String p7)
    {
        if (!this.suppress) {
            this.flushCharacters();
            if (this.atRoot) {
                throw new org.xml.sax.SAXException(new StringBuffer().append("Ill-formed XML document (missing opening tag for ").append(p6).append(")").toString());
            } else {
                org.jdom.Element v0_0 = this.currentElement.getParent();
                if (!(v0_0 instanceof org.jdom.Document)) {
                    this.currentElement = ((org.jdom.Element) v0_0);
                } else {
                    this.atRoot = 1;
                }
            }
        }
        return;
    }

    public void endEntity(String p2)
    {
        this.entityDepth = (this.entityDepth - 1);
        if (this.entityDepth == 0) {
            this.suppress = 0;
        }
        if (p2.equals("[dtd]")) {
            this.inInternalSubset = 1;
        }
        return;
    }

    public void externalEntityDecl(String p4, String p5, String p6)
    {
        StringBuffer v0_0 = this.externalEntities;
        String v1_3 = new String[2];
        v1_3[0] = p5;
        v1_3[1] = p6;
        v0_0.put(p4, v1_3);
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!ENTITY ").append(p4);
            this.appendExternalId(p5, p6);
            this.internalSubset.append(">\n");
        }
        return;
    }

    protected void flushCharacters()
    {
        if (!this.ignoringBoundaryWhite) {
            this.flushCharacters(this.textBuffer.toString());
        } else {
            if (!this.textBuffer.isAllWhitespace()) {
                this.flushCharacters(this.textBuffer.toString());
            }
        }
        this.textBuffer.clear();
        return;
    }

    protected void flushCharacters(String p4)
    {
        if (p4.length() != 0) {
            if (!this.previousCDATA) {
                this.factory.addContent(this.getCurrentElement(), this.factory.text(p4));
            } else {
                this.factory.addContent(this.getCurrentElement(), this.factory.cdata(p4));
            }
            this.previousCDATA = this.inCDATA;
        } else {
            this.previousCDATA = this.inCDATA;
        }
        return;
    }

    public org.jdom.Element getCurrentElement()
    {
        if (this.currentElement != null) {
            return this.currentElement;
        } else {
            throw new org.xml.sax.SAXException("Ill-formed XML document (multiple root elements detected)");
        }
    }

    public org.jdom.Document getDocument()
    {
        return this.document;
    }

    public org.xml.sax.Locator getDocumentLocator()
    {
        return this.locator;
    }

    public boolean getExpandEntities()
    {
        return this.expand;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        return this.factory;
    }

    public boolean getIgnoringBoundaryWhitespace()
    {
        return this.ignoringBoundaryWhite;
    }

    public boolean getIgnoringElementContentWhitespace()
    {
        return this.ignoringWhite;
    }

    public void ignorableWhitespace(char[] p2, int p3, int p4)
    {
        if (!this.ignoringWhite) {
            this.characters(p2, p3, p4);
        }
        return;
    }

    public void internalEntityDecl(String p3, String p4)
    {
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!ENTITY ");
            if (!p3.startsWith("%")) {
                this.internalSubset.append(p3);
            } else {
                this.internalSubset.append("% ").append(p3.substring(1));
            }
            this.internalSubset.append(" \"").append(p4).append("\">\n");
        }
        return;
    }

    public void notationDecl(String p3, String p4, String p5)
    {
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!NOTATION ").append(p3);
            this.appendExternalId(p4, p5);
            this.internalSubset.append(">\n");
        }
        return;
    }

    public void processingInstruction(String p4, String p5)
    {
        if (!this.suppress) {
            this.flushCharacters();
            if (!this.atRoot) {
                this.factory.addContent(this.getCurrentElement(), this.factory.processingInstruction(p4, p5));
            } else {
                this.factory.addContent(this.document, this.factory.processingInstruction(p4, p5));
            }
        }
        return;
    }

    protected void pushElement(org.jdom.Element p3)
    {
        if (!this.atRoot) {
            this.factory.addContent(this.currentElement, p3);
        } else {
            this.document.setRootElement(p3);
            this.atRoot = 0;
        }
        this.currentElement = p3;
        return;
    }

    public void setDocumentLocator(org.xml.sax.Locator p1)
    {
        this.locator = p1;
        return;
    }

    public void setExpandEntities(boolean p1)
    {
        this.expand = p1;
        return;
    }

    public void setIgnoringBoundaryWhitespace(boolean p1)
    {
        this.ignoringBoundaryWhite = p1;
        return;
    }

    public void setIgnoringElementContentWhitespace(boolean p1)
    {
        this.ignoringWhite = p1;
        return;
    }

    public void skippedEntity(String p4)
    {
        if (!p4.startsWith("%")) {
            this.flushCharacters();
            this.factory.addContent(this.getCurrentElement(), this.factory.entityRef(p4));
        }
        return;
    }

    public void startCDATA()
    {
        if (!this.suppress) {
            this.inCDATA = 1;
        }
        return;
    }

    public void startDTD(String p5, String p6, String p7)
    {
        this.flushCharacters();
        this.factory.addContent(this.document, this.factory.docType(p5, p6, p7));
        this.inDTD = 1;
        this.inInternalSubset = 1;
        return;
    }

    public void startDocument()
    {
        if (this.locator != null) {
            this.document.setBaseURI(this.locator.getSystemId());
        }
        return;
    }

    public void startElement(String p28, String p29, String p30, org.xml.sax.Attributes p31)
    {
        if (!this.suppress) {
            String v24 = "";
            if (!"".equals(p30)) {
                int v14 = p30.indexOf(58);
                if (v14 > 0) {
                    v24 = p30.substring(0, v14);
                }
                if ((p29 == null) || (p29.equals(""))) {
                    p29 = p30.substring((v14 + 1));
                }
            }
            org.jdom.Element v15 = this.factory.element(p29, org.jdom.Namespace.getNamespace(v24, p28));
            if (this.declaredNamespaces.size() > 0) {
                this.transferNamespaces(v15);
            }
            this.flushCharacters();
            if (!this.atRoot) {
                this.factory.addContent(this.getCurrentElement(), v15);
            } else {
                this.document.setRootElement(v15);
                this.atRoot = 0;
            }
            this.currentElement = v15;
            int v16 = 0;
            int v18 = p31.getLength();
            while (v16 < v18) {
                String v6 = "";
                String v4 = p31.getLocalName(v16);
                String v7 = p31.getQName(v16);
                if (v7.equals("")) {
                    int v8 = org.jdom.input.SAXHandler.getAttributeType(p31.getType(v16));
                    String v10 = p31.getValue(v16);
                    String v9 = p31.getURI(v16);
                    if ((!"xmlns".equals(v4)) && ((!"xmlns".equals(v6)) && (!"http://www.w3.org/2000/xmlns/".equals(v9)))) {
                        if ((!"".equals(v9)) && ("".equals(v6))) {
                            org.jdom.Element v22 = v15;
                            java.util.HashSet v21_1 = new java.util.HashSet();
                            while ((!v22.getNamespace().getURI().equals(v9)) || ((v21_1.contains(v22.getNamespacePrefix())) || ("".equals(v15.getNamespace().getPrefix())))) {
                                v21_1.add(v22.getNamespacePrefix());
                                java.util.Iterator v17_0 = v22.getAdditionalNamespaces().iterator();
                                while (v17_0.hasNext()) {
                                    org.jdom.Namespace v20_2 = ((org.jdom.Namespace) v17_0.next());
                                    if ((v21_1.contains(v20_2.getPrefix())) || (!v9.equals(v20_2.getURI()))) {
                                        v21_1.add(v20_2.getPrefix());
                                    } else {
                                        v6 = v20_2.getPrefix();
                                    }
                                    if ("".equals(v6)) {
                                        int v13 = 0;
                                        String v23 = new StringBuffer().append("attns").append(0).toString();
                                        while (v21_1.contains(v23)) {
                                            v13++;
                                            v23 = new StringBuffer().append("attns").append(v13).toString();
                                        }
                                        v6 = v23;
                                    }
                                }
                                java.util.Iterator v17_1 = v22.getAttributes().iterator();
                                while (v17_1.hasNext()) {
                                    org.jdom.Namespace v20_0 = ((org.jdom.Attribute) v17_1.next()).getNamespace();
                                    if ((v21_1.contains(v20_0.getPrefix())) || (!v9.equals(v20_0.getURI()))) {
                                        v21_1.add(v20_0.getPrefix());
                                    } else {
                                        v6 = v20_0.getPrefix();
                                    }
                                }
                                v22 = v22.getParentElement();
                                if (v22 == null) {
                                }
                            }
                            v6 = v22.getNamespacePrefix();
                        }
                        this.factory.setAttribute(v15, this.factory.attribute(v4, v10, v8, org.jdom.Namespace.getNamespace(v6, v9)));
                    }
                } else {
                    if ((!v7.startsWith("xmlns:")) && (!v7.equals("xmlns"))) {
                        int v3 = v7.indexOf(58);
                        if (v3 > 0) {
                            v6 = v7.substring(0, v3);
                        }
                        if (!"".equals(v4)) {
                        } else {
                            v4 = v7.substring((v3 + 1));
                        }
                    }
                }
                v16++;
            }
        }
        return;
    }

    public void startEntity(String p8)
    {
        this.entityDepth = (this.entityDepth + 1);
        if ((!this.expand) && (this.entityDepth <= 1)) {
            if (!p8.equals("[dtd]")) {
                if ((!this.inDTD) && ((!p8.equals("amp")) && ((!p8.equals("lt")) && ((!p8.equals("gt")) && ((!p8.equals("apos")) && ((!p8.equals("quot")) && (!this.expand))))))) {
                    String v2 = 0;
                    String v3 = 0;
                    String[] v1_1 = ((String[]) ((String[]) this.externalEntities.get(p8)));
                    if (v1_1 != null) {
                        v2 = v1_1[0];
                        v3 = v1_1[1];
                    }
                    if (!this.atRoot) {
                        this.flushCharacters();
                        this.factory.addContent(this.getCurrentElement(), this.factory.entityRef(p8, v2, v3));
                    }
                    this.suppress = 1;
                }
            } else {
                this.inInternalSubset = 0;
            }
        }
        return;
    }

    public void startPrefixMapping(String p3, String p4)
    {
        if (!this.suppress) {
            this.declaredNamespaces.add(org.jdom.Namespace.getNamespace(p3, p4));
        }
        return;
    }

    public void unparsedEntityDecl(String p3, String p4, String p5, String p6)
    {
        if (this.inInternalSubset) {
            this.internalSubset.append("  <!ENTITY ").append(p3);
            this.appendExternalId(p4, p5);
            this.internalSubset.append(" NDATA ").append(p6);
            this.internalSubset.append(">\n");
        }
        return;
    }
}
package org.jdom.input;
 class TextBuffer {
    private static final String CVS_ID = "@(#) $RCSfile: TextBuffer.java,v $ $Revision: 1.10 $ $Date: 2007/11/10 05:29:00 $ $Name:  $";
    private char[] array;
    private int arraySize;
    private String prefixString;

    TextBuffer()
    {
        int v0_1 = new char[4096];
        this.array = v0_1;
        this.arraySize = 0;
        return;
    }

    private void ensureCapacity(int p7)
    {
        int v0 = this.array.length;
        if (p7 > v0) {
            char[] v2 = this.array;
            int v1 = v0;
            while (p7 > v1) {
                v1 += (v0 / 2);
            }
            char[] v3_2 = new char[v1];
            this.array = v3_2;
            System.arraycopy(v2, 0, this.array, 0, this.arraySize);
        }
        return;
    }

    void append(char[] p3, int p4, int p5)
    {
        if (this.prefixString != null) {
            this.ensureCapacity((this.arraySize + p5));
            System.arraycopy(p3, p4, this.array, this.arraySize, p5);
            this.arraySize = (this.arraySize + p5);
        } else {
            this.prefixString = new String(p3, p4, p5);
        }
        return;
    }

    void clear()
    {
        this.arraySize = 0;
        this.prefixString = 0;
        return;
    }

    boolean isAllWhitespace()
    {
        int v2 = 0;
        if ((this.prefixString != null) && (this.prefixString.length() != 0)) {
            int v1 = this.prefixString.length();
            int v0_0 = 0;
            while (v0_0 < v1) {
                if (org.jdom.Verifier.isXMLWhitespace(this.prefixString.charAt(v0_0))) {
                    v0_0++;
                }
            }
            int v0_1 = 0;
            while (v0_1 < this.arraySize) {
                if (org.jdom.Verifier.isXMLWhitespace(this.array[v0_1])) {
                    v0_1++;
                }
            }
            v2 = 1;
        } else {
            v2 = 1;
        }
        return v2;
    }

    int size()
    {
        int v0_3;
        if (this.prefixString != null) {
            v0_3 = (this.prefixString.length() + this.arraySize);
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    public String toString()
    {
        String v0;
        if (this.prefixString != null) {
            if (this.arraySize != 0) {
                v0 = new StringBuffer((this.prefixString.length() + this.arraySize)).append(this.prefixString).append(this.array, 0, this.arraySize).toString();
            } else {
                v0 = this.prefixString;
            }
        } else {
            v0 = "";
        }
        return v0;
    }
}
package org.jdom.output;
public class DOMOutputter {
    private static final String CVS_ID = "@(#) $RCSfile: DOMOutputter.java,v $ $Revision: 1.43 $ $Date: 2007/11/10 05:29:01 $ $Name:  $";
    private static final String DEFAULT_ADAPTER_CLASS = "org.jdom.adapters.XercesDOMAdapter";
    private String adapterClass;
    private boolean forceNamespaceAware;

    public DOMOutputter()
    {
        return;
    }

    public DOMOutputter(String p1)
    {
        this.adapterClass = p1;
        return;
    }

    private org.w3c.dom.Document createDOMDocument(org.jdom.DocType p4)
    {
        org.jdom.JDOMException v1_4;
        if (this.adapterClass == null) {
            try {
                v1_4 = ((org.jdom.adapters.DOMAdapter) Class.forName("org.jdom.adapters.JAXPDOMAdapter").newInstance()).createDocument(p4);
            } catch (org.jdom.JDOMException v1) {
                try {
                    v1_4 = ((org.jdom.adapters.DOMAdapter) Class.forName("org.jdom.adapters.XercesDOMAdapter").newInstance()).createDocument(p4);
                } catch (org.jdom.JDOMException v1) {
                    throw new org.jdom.JDOMException("No JAXP or default parser available");
                } catch (org.jdom.JDOMException v1) {
                } catch (org.jdom.JDOMException v1) {
                }
            } catch (org.jdom.JDOMException v1) {
            } catch (org.jdom.JDOMException v1) {
            }
        } else {
            try {
                v1_4 = ((org.jdom.adapters.DOMAdapter) Class.forName(this.adapterClass).newInstance()).createDocument(p4);
            } catch (org.jdom.JDOMException v1) {
            } catch (org.jdom.JDOMException v1) {
            } catch (org.jdom.JDOMException v1) {
            }
        }
        return v1_4;
    }

    private static String getXmlnsTagFor(org.jdom.Namespace p3)
    {
        String v0_0 = "xmlns";
        if (!p3.getPrefix().equals("")) {
            v0_0 = new StringBuffer().append(new StringBuffer().append("xmlns").append(":").toString()).append(p3.getPrefix()).toString();
        }
        return v0_0;
    }

    private org.w3c.dom.Attr output(org.jdom.Attribute p6, org.w3c.dom.Document p7)
    {
        try {
            org.w3c.dom.Attr v0;
            if (p6.getNamespace() != org.jdom.Namespace.NO_NAMESPACE) {
                v0 = p7.createAttributeNS(p6.getNamespaceURI(), p6.getQualifiedName());
            } else {
                if (!this.forceNamespaceAware) {
                    v0 = p7.createAttribute(p6.getQualifiedName());
                } else {
                    v0 = p7.createAttributeNS(0, p6.getQualifiedName());
                }
            }
        } catch (Exception v1) {
            throw new org.jdom.JDOMException(new StringBuffer().append("Exception outputting Attribute ").append(p6.getQualifiedName()).toString(), v1);
        }
        v0.setValue(p6.getValue());
        return v0;
    }

    private org.w3c.dom.Element output(org.jdom.Element p31, org.w3c.dom.Document p32, org.jdom.output.NamespaceStack p33)
    {
        try {
            org.w3c.dom.Element v10;
            int v23 = p33.size();
        } catch (org.jdom.Element v15_1) {
            org.jdom.JDOMException v27_31 = new org.jdom.JDOMException;
            v27_31(new StringBuffer().append("Exception outputting Element ").append(p31.getQualifiedName()).toString(), v15_1);
            throw v27_31;
        }
        if (p31.getNamespace() != org.jdom.Namespace.NO_NAMESPACE) {
            v10 = p32.createElementNS(p31.getNamespaceURI(), p31.getQualifiedName());
        } else {
            if (!this.forceNamespaceAware) {
                v10 = p32.createElement(p31.getQualifiedName());
            } else {
                v10 = p32.createElementNS(0, p31.getQualifiedName());
            }
        }
        org.jdom.Namespace v19 = p31.getNamespace();
        if (((v19 != org.jdom.Namespace.XML_NAMESPACE) && ((v19 != org.jdom.Namespace.NO_NAMESPACE) || (p33.getURI("") != null))) && (!v19.getURI().equals(p33.getURI(v19.getPrefix())))) {
            p33.push(v19);
            v10.setAttribute(org.jdom.output.DOMOutputter.getXmlnsTagFor(v19), v19.getURI());
        }
        java.util.Iterator v17_0 = p31.getAdditionalNamespaces().iterator();
        while (v17_0.hasNext()) {
            org.jdom.Namespace v3_1 = ((org.jdom.Namespace) v17_0.next());
            if (!v3_1.getURI().equals(p33.getURI(v3_1.getPrefix()))) {
                v10.setAttribute(org.jdom.output.DOMOutputter.getXmlnsTagFor(v3_1), v3_1.getURI());
                p33.push(v3_1);
            }
        }
        java.util.Iterator v17_1 = p31.getAttributes().iterator();
        while (v17_1.hasNext()) {
            org.jdom.Attribute v5_1 = ((org.jdom.Attribute) v17_1.next());
            v10.setAttributeNode(this.output(v5_1, p32));
            org.jdom.Namespace v20 = v5_1.getNamespace();
            if ((v20 != org.jdom.Namespace.NO_NAMESPACE) && ((v20 != org.jdom.Namespace.XML_NAMESPACE) && (!v20.getURI().equals(p33.getURI(v20.getPrefix()))))) {
                v10.setAttribute(org.jdom.output.DOMOutputter.getXmlnsTagFor(v20), v20.getURI());
                p33.push(v20);
            }
            if (v5_1.getNamespace() != org.jdom.Namespace.NO_NAMESPACE) {
                v10.setAttributeNS(v5_1.getNamespaceURI(), v5_1.getQualifiedName(), v5_1.getValue());
            } else {
                if (!this.forceNamespaceAware) {
                    v10.setAttribute(v5_1.getQualifiedName(), v5_1.getValue());
                } else {
                    v10.setAttributeNS(0, v5_1.getQualifiedName(), v5_1.getValue());
                }
            }
        }
        java.util.Iterator v17_2 = p31.getContent().iterator();
        while (v17_2.hasNext()) {
            Object v18 = v17_2.next();
            if (!(v18 instanceof org.jdom.Element)) {
                if (!(v18 instanceof String)) {
                    if (!(v18 instanceof org.jdom.CDATA)) {
                        if (!(v18 instanceof org.jdom.Text)) {
                            if (!(v18 instanceof org.jdom.Comment)) {
                                if (!(v18 instanceof org.jdom.ProcessingInstruction)) {
                                    if (!(v18 instanceof org.jdom.EntityRef)) {
                                        throw new org.jdom.JDOMException(new StringBuffer().append("Element contained content with type:").append(v18.getClass().getName()).toString());
                                    } else {
                                        v10.appendChild(p32.createEntityReference(((org.jdom.EntityRef) v18).getName()));
                                    }
                                } else {
                                    org.jdom.ProcessingInstruction v21 = ((org.jdom.ProcessingInstruction) v18);
                                    v10.appendChild(p32.createProcessingInstruction(v21.getTarget(), v21.getData()));
                                }
                            } else {
                                v10.appendChild(p32.createComment(((org.jdom.Comment) v18).getText()));
                            }
                        } else {
                            v10.appendChild(p32.createTextNode(((org.jdom.Text) v18).getText()));
                        }
                    } else {
                        v10.appendChild(p32.createCDATASection(((org.jdom.CDATA) v18).getText()));
                    }
                } else {
                    v10.appendChild(p32.createTextNode(((String) v18)));
                }
            } else {
                v10.appendChild(this.output(((org.jdom.Element) v18), p32, p33));
            }
        }
        while (p33.size() > v23) {
            p33.pop();
        }
        return v10;
    }

    public boolean getForceNamespaceAware()
    {
        return this.forceNamespaceAware;
    }

    public org.w3c.dom.Document output(org.jdom.Document p17)
    {
        org.jdom.output.NamespaceStack v10_1 = new org.jdom.output.NamespaceStack();
        try {
            org.w3c.dom.Document v4 = this.createDOMDocument(p17.getDocType());
            org.w3c.dom.Element v1 = v4.getDocumentElement();
        } catch (Throwable v8) {
            throw new org.jdom.JDOMException("Exception outputting Document", v8);
        }
        if (v1 != null) {
            v4.removeChild(v1);
        }
        java.util.Iterator v9 = p17.getContent().iterator();
        while (v9.hasNext()) {
            org.jdom.Element v11_0 = v9.next();
            if (!(v11_0 instanceof org.jdom.Element)) {
                if (!(v11_0 instanceof org.jdom.Comment)) {
                    if (!(v11_0 instanceof org.jdom.ProcessingInstruction)) {
                        if (!(v11_0 instanceof org.jdom.DocType)) {
                            throw new org.jdom.JDOMException(new StringBuffer().append("Document contained top-level content with type:").append(v11_0.getClass().getName()).toString());
                        }
                    } else {
                        org.jdom.ProcessingInstruction v12 = ((org.jdom.ProcessingInstruction) v11_0);
                        v4.appendChild(v4.createProcessingInstruction(v12.getTarget(), v12.getData()));
                    }
                } else {
                    v4.appendChild(v4.createComment(((org.jdom.Comment) v11_0).getText()));
                }
            } else {
                v4.appendChild(this.output(((org.jdom.Element) v11_0), v4, v10_1));
            }
        }
        return v4;
    }

    public void setForceNamespaceAware(boolean p1)
    {
        this.forceNamespaceAware = p1;
        return;
    }
}
package org.jdom.output;
public interface EscapeStrategy {

    public abstract boolean shouldEscape();
}
package org.jdom.output;
 class Format$DefaultEscapeStrategy implements org.jdom.output.EscapeStrategy {
    private int bits;
    reflect.Method canEncode;
    Object encoder;
    private final org.jdom.output.Format this$0;

    public Format$DefaultEscapeStrategy(org.jdom.output.Format p10, String p11)
    {
        this.this$0 = p10;
        if ((!"UTF-8".equalsIgnoreCase(p11)) && (!"UTF-16".equalsIgnoreCase(p11))) {
            if ((!"ISO-8859-1".equalsIgnoreCase(p11)) && (!"Latin1".equalsIgnoreCase(p11))) {
                if ((!"US-ASCII".equalsIgnoreCase(p11)) && (!"ASCII".equalsIgnoreCase(p11))) {
                    this.bits = 0;
                    reflect.Method v5_13;
                    Class v0 = Class.forName("java.nio.charset.Charset");
                    Class v2 = Class.forName("java.nio.charset.CharsetEncoder");
                    int v7_0 = new Class[1];
                    if (org.jdom.output.Format.class$java$lang$String != null) {
                        v5_13 = org.jdom.output.Format.class$java$lang$String;
                    } else {
                        v5_13 = org.jdom.output.Format.class$("java.lang.String");
                        org.jdom.output.Format.class$java$lang$String = v5_13;
                    }
                    v7_0[0] = v5_13;
                    reflect.Method v3 = v0.getMethod("forName", v7_0);
                    Class[] v6_3 = new Object[1];
                    v6_3[0] = p11;
                    this.encoder = v0.getMethod("newEncoder", 0).invoke(v3.invoke(0, v6_3), 0);
                    Class[] v6_6 = new Class[1];
                    v6_6[0] = Character.TYPE;
                    this.canEncode = v2.getMethod("canEncode", v6_6);
                } else {
                    this.bits = 7;
                }
            } else {
                this.bits = 8;
            }
        } else {
            this.bits = 16;
        }
        return;
    }

    public boolean shouldEscape(char p9)
    {
        int v1 = 1;
        if (this.bits != 16) {
            if (this.bits != 8) {
                if (this.bits != 7) {
                    if (!org.jdom.Verifier.isHighSurrogate(p9)) {
                        if ((this.canEncode != null) && (this.encoder != null)) {
                            try {
                                boolean v3_3 = this.canEncode;
                                Object v4_0 = this.encoder;
                                Object[] v5_1 = new Object[1];
                                v5_1[0] = new Character(p9);
                            } catch (int v1) {
                            }
                            if (((Boolean) v3_3.invoke(v4_0, v5_1)).booleanValue()) {
                                v1 = 0;
                            }
                            return v1;
                        }
                        v1 = 0;
                    }
                } else {
                    if (p9 <= 127) {
                        v1 = 0;
                    }
                }
            } else {
                if (p9 <= 255) {
                    v1 = 0;
                }
            }
        } else {
            if (!org.jdom.Verifier.isHighSurrogate(p9)) {
                v1 = 0;
            }
        }
        return v1;
    }
}
package org.jdom.output;
public class Format$TextMode {
    public static final org.jdom.output.Format$TextMode NORMALIZE;
    public static final org.jdom.output.Format$TextMode PRESERVE;
    public static final org.jdom.output.Format$TextMode TRIM;
    public static final org.jdom.output.Format$TextMode TRIM_FULL_WHITE;
    private final String name;

    static Format$TextMode()
    {
        org.jdom.output.Format$TextMode.PRESERVE = new org.jdom.output.Format$TextMode("PRESERVE");
        org.jdom.output.Format$TextMode.TRIM = new org.jdom.output.Format$TextMode("TRIM");
        org.jdom.output.Format$TextMode.NORMALIZE = new org.jdom.output.Format$TextMode("NORMALIZE");
        org.jdom.output.Format$TextMode.TRIM_FULL_WHITE = new org.jdom.output.Format$TextMode("TRIM_FULL_WHITE");
        return;
    }

    private Format$TextMode(String p1)
    {
        this.name = p1;
        return;
    }

    public String toString()
    {
        return this.name;
    }
}
package org.jdom.output;
public class Format implements java.lang.Cloneable {
    private static final String CVS_ID = "@(#) $RCSfile: Format.java,v $ $Revision: 1.14 $ $Date: 2009/07/23 05:54:23 $ $Name:  $";
    private static final String STANDARD_ENCODING = "UTF-8";
    private static final String STANDARD_INDENT = "  ";
    private static final String STANDARD_LINE_SEPARATOR = "\r\n";
    static Class class$java$lang$String;
    String encoding;
    org.jdom.output.EscapeStrategy escapeStrategy;
    boolean expandEmptyElements;
    boolean ignoreTrAXEscapingPIs;
    String indent;
    String lineSeparator;
    org.jdom.output.Format$TextMode mode;
    boolean omitDeclaration;
    boolean omitEncoding;

    private Format()
    {
        this.indent = 0;
        this.lineSeparator = "\r\n";
        this.encoding = "UTF-8";
        this.omitDeclaration = 0;
        this.omitEncoding = 0;
        this.expandEmptyElements = 0;
        this.ignoreTrAXEscapingPIs = 0;
        this.mode = org.jdom.output.Format$TextMode.PRESERVE;
        this.escapeStrategy = new org.jdom.output.Format$DefaultEscapeStrategy(this, this.encoding);
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public static org.jdom.output.Format getCompactFormat()
    {
        org.jdom.output.Format v0_1 = new org.jdom.output.Format();
        v0_1.setTextMode(org.jdom.output.Format$TextMode.NORMALIZE);
        return v0_1;
    }

    public static org.jdom.output.Format getPrettyFormat()
    {
        org.jdom.output.Format v0_1 = new org.jdom.output.Format();
        v0_1.setIndent("  ");
        v0_1.setTextMode(org.jdom.output.Format$TextMode.TRIM);
        return v0_1;
    }

    public static org.jdom.output.Format getRawFormat()
    {
        return new org.jdom.output.Format();
    }

    public Object clone()
    {
        try {
        } catch (CloneNotSupportedException v2) {
        }
        return ((org.jdom.output.Format) super.clone());
    }

    public String getEncoding()
    {
        return this.encoding;
    }

    public org.jdom.output.EscapeStrategy getEscapeStrategy()
    {
        return this.escapeStrategy;
    }

    public boolean getExpandEmptyElements()
    {
        return this.expandEmptyElements;
    }

    public boolean getIgnoreTrAXEscapingPIs()
    {
        return this.ignoreTrAXEscapingPIs;
    }

    public String getIndent()
    {
        return this.indent;
    }

    public String getLineSeparator()
    {
        return this.lineSeparator;
    }

    public boolean getOmitDeclaration()
    {
        return this.omitDeclaration;
    }

    public boolean getOmitEncoding()
    {
        return this.omitEncoding;
    }

    public org.jdom.output.Format$TextMode getTextMode()
    {
        return this.mode;
    }

    public org.jdom.output.Format setEncoding(String p2)
    {
        this.encoding = p2;
        this.escapeStrategy = new org.jdom.output.Format$DefaultEscapeStrategy(this, p2);
        return this;
    }

    public org.jdom.output.Format setEscapeStrategy(org.jdom.output.EscapeStrategy p1)
    {
        this.escapeStrategy = p1;
        return this;
    }

    public org.jdom.output.Format setExpandEmptyElements(boolean p1)
    {
        this.expandEmptyElements = p1;
        return this;
    }

    public void setIgnoreTrAXEscapingPIs(boolean p1)
    {
        this.ignoreTrAXEscapingPIs = p1;
        return;
    }

    public org.jdom.output.Format setIndent(String p1)
    {
        this.indent = p1;
        return this;
    }

    public org.jdom.output.Format setLineSeparator(String p1)
    {
        this.lineSeparator = p1;
        return this;
    }

    public org.jdom.output.Format setOmitDeclaration(boolean p1)
    {
        this.omitDeclaration = p1;
        return this;
    }

    public org.jdom.output.Format setOmitEncoding(boolean p1)
    {
        this.omitEncoding = p1;
        return this;
    }

    public org.jdom.output.Format setTextMode(org.jdom.output.Format$TextMode p1)
    {
        this.mode = p1;
        return this;
    }
}
package org.jdom.output;
public class JDOMLocator extends org.xml.sax.helpers.LocatorImpl {
    private static final String CVS_ID = "@(#) $RCSfile: JDOMLocator.java,v $ $Revision: 1.4 $ $Date: 2007/11/10 05:29:01 $ $Name:  $";
    private Object node;

    JDOMLocator()
    {
        return;
    }

    JDOMLocator(org.xml.sax.Locator p2)
    {
        super(p2);
        if ((p2 instanceof org.jdom.output.JDOMLocator)) {
            super.setNode(((org.jdom.output.JDOMLocator) p2).getNode());
        }
        return;
    }

    public Object getNode()
    {
        return this.node;
    }

    void setNode(Object p1)
    {
        this.node = p1;
        return;
    }
}
package org.jdom.output;
 class NamespaceStack {
    private static final String CVS_ID = "@(#) $RCSfile: NamespaceStack.java,v $ $Revision: 1.14 $ $Date: 2007/11/10 05:29:01 $ $Name:  $";
    private java.util.Stack prefixes;
    private java.util.Stack uris;

    NamespaceStack()
    {
        this.prefixes = new java.util.Stack();
        this.uris = new java.util.Stack();
        return;
    }

    public String getURI(String p4)
    {
        String v1_1;
        int v0 = this.prefixes.lastIndexOf(p4);
        if (v0 != -1) {
            v1_1 = ((String) this.uris.elementAt(v0));
        } else {
            v1_1 = 0;
        }
        return v1_1;
    }

    public String pop()
    {
        String v0_1 = ((String) this.prefixes.pop());
        this.uris.pop();
        return v0_1;
    }

    public void push(org.jdom.Namespace p3)
    {
        this.prefixes.push(p3.getPrefix());
        this.uris.push(p3.getURI());
        return;
    }

    public int size()
    {
        return this.prefixes.size();
    }

    public String toString()
    {
        StringBuffer v0_1 = new StringBuffer();
        String v2 = System.getProperty("line.separator");
        v0_1.append(new StringBuffer().append("Stack: ").append(this.prefixes.size()).append(v2).toString());
        int v1 = 0;
        while (v1 < this.prefixes.size()) {
            v0_1.append(new StringBuffer().append(this.prefixes.elementAt(v1)).append("&").append(this.uris.elementAt(v1)).append(v2).toString());
            v1++;
        }
        return v0_1.toString();
    }
}
package org.jdom.output;
public class SAXOutputter {
    private static final String CVS_ID = "@(#) $RCSfile: SAXOutputter.java,v $ $Revision: 1.40 $ $Date: 2007/11/10 05:29:01 $ $Name:  $";
    private static final String DECL_HANDLER_ALT_PROPERTY = "http://xml.org/sax/handlers/DeclHandler";
    private static final String DECL_HANDLER_SAX_PROPERTY = "http://xml.org/sax/properties/declaration-handler";
    private static final String LEXICAL_HANDLER_ALT_PROPERTY = "http://xml.org/sax/handlers/LexicalHandler";
    private static final String LEXICAL_HANDLER_SAX_PROPERTY = "http://xml.org/sax/properties/lexical-handler";
    private static final String NAMESPACES_SAX_FEATURE = "http://xml.org/sax/features/namespaces";
    private static final String NS_PREFIXES_SAX_FEATURE = "http://xml.org/sax/features/namespace-prefixes";
    private static final String VALIDATION_SAX_FEATURE = "http://xml.org/sax/features/validation";
    private static final String[] attrTypeToNameMap;
    private org.xml.sax.ContentHandler contentHandler;
    private org.xml.sax.ext.DeclHandler declHandler;
    private boolean declareNamespaces;
    private org.xml.sax.DTDHandler dtdHandler;
    private org.xml.sax.EntityResolver entityResolver;
    private org.xml.sax.ErrorHandler errorHandler;
    private org.xml.sax.ext.LexicalHandler lexicalHandler;
    private org.jdom.output.JDOMLocator locator;
    private boolean reportDtdEvents;

    static SAXOutputter()
    {
        String[] v0_1 = new String[11];
        v0_1[0] = "CDATA";
        v0_1[1] = "CDATA";
        v0_1[2] = "ID";
        v0_1[3] = "IDREF";
        v0_1[4] = "IDREFS";
        v0_1[5] = "ENTITY";
        v0_1[6] = "ENTITIES";
        v0_1[7] = "NMTOKEN";
        v0_1[8] = "NMTOKENS";
        v0_1[9] = "NOTATION";
        v0_1[10] = "NMTOKEN";
        org.jdom.output.SAXOutputter.attrTypeToNameMap = v0_1;
        return;
    }

    public SAXOutputter()
    {
        this.declareNamespaces = 0;
        this.reportDtdEvents = 1;
        this.locator = 0;
        return;
    }

    public SAXOutputter(org.xml.sax.ContentHandler p7)
    {
        this(p7, 0, 0, 0, 0);
        return;
    }

    public SAXOutputter(org.xml.sax.ContentHandler p7, org.xml.sax.ErrorHandler p8, org.xml.sax.DTDHandler p9, org.xml.sax.EntityResolver p10)
    {
        this(p7, p8, p9, p10, 0);
        return;
    }

    public SAXOutputter(org.xml.sax.ContentHandler p2, org.xml.sax.ErrorHandler p3, org.xml.sax.DTDHandler p4, org.xml.sax.EntityResolver p5, org.xml.sax.ext.LexicalHandler p6)
    {
        this.declareNamespaces = 0;
        this.reportDtdEvents = 1;
        this.locator = 0;
        this.contentHandler = p2;
        this.errorHandler = p3;
        this.dtdHandler = p4;
        this.entityResolver = p5;
        this.lexicalHandler = p6;
        return;
    }

    private org.xml.sax.helpers.AttributesImpl addNsAttribute(org.xml.sax.helpers.AttributesImpl p8, org.jdom.Namespace p9)
    {
        if (this.declareNamespaces) {
            if (p8 == null) {
                p8 = new org.xml.sax.helpers.AttributesImpl();
            }
            if (!p9.getPrefix().equals("")) {
                p8.addAttribute("", "", new StringBuffer().append("xmlns:").append(p9.getPrefix()).toString(), "CDATA", p9.getURI());
            } else {
                p8.addAttribute("", "", "xmlns", "CDATA", p9.getURI());
            }
        }
        return p8;
    }

    private void cdata(String p4)
    {
        try {
            if (this.lexicalHandler == null) {
                this.characters(p4);
            } else {
                this.lexicalHandler.startCDATA();
                this.characters(p4);
                this.lexicalHandler.endCDATA();
            }
        } catch (org.xml.sax.SAXException v0) {
            throw new org.jdom.JDOMException("Exception in CDATA", v0);
        }
        return;
    }

    private void characters(String p6)
    {
        char[] v0 = p6.toCharArray();
        try {
            this.contentHandler.characters(v0, 0, v0.length);
            return;
        } catch (org.xml.sax.SAXException v1) {
            throw new org.jdom.JDOMException("Exception in characters", v1);
        }
    }

    private void comment(String p6)
    {
        if (this.lexicalHandler != null) {
            char[] v0 = p6.toCharArray();
            try {
                this.lexicalHandler.comment(v0, 0, v0.length);
            } catch (org.xml.sax.SAXException v1) {
                throw new org.jdom.JDOMException("Exception in comment", v1);
            }
        }
        return;
    }

    private org.xml.sax.XMLReader createDTDParser()
    {
        try {
            org.xml.sax.XMLReader v1 = this.createParser();
        } catch (org.xml.sax.SAXException v0) {
            throw new org.jdom.JDOMException("Error in SAX parser allocation", v0);
        }
        if (this.getDTDHandler() != null) {
            v1.setDTDHandler(this.getDTDHandler());
        }
        if (this.getEntityResolver() != null) {
            v1.setEntityResolver(this.getEntityResolver());
        }
        if (this.getLexicalHandler() != null) {
            try {
                v1.setProperty("http://xml.org/sax/properties/lexical-handler", this.getLexicalHandler());
            } catch (org.xml.sax.SAXException v0) {
                try {
                    v1.setProperty("http://xml.org/sax/handlers/LexicalHandler", this.getLexicalHandler());
                } catch (org.xml.sax.SAXException v2) {
                }
            }
        }
        if (this.getDeclHandler() != null) {
            try {
                v1.setProperty("http://xml.org/sax/properties/declaration-handler", this.getDeclHandler());
            } catch (org.xml.sax.SAXException v0) {
                try {
                    v1.setProperty("http://xml.org/sax/handlers/DeclHandler", this.getDeclHandler());
                } catch (org.xml.sax.SAXException v2) {
                }
            }
        }
        v1.setErrorHandler(new org.xml.sax.helpers.DefaultHandler());
        return v1;
    }

    private void documentLocator(org.jdom.Document p6)
    {
        this.locator = new org.jdom.output.JDOMLocator();
        String v1 = 0;
        String v2 = 0;
        if (p6 != null) {
            org.jdom.DocType v0 = p6.getDocType();
            if (v0 != null) {
                v1 = v0.getPublicID();
                v2 = v0.getSystemID();
            }
        }
        this.locator.setPublicId(v1);
        this.locator.setSystemId(v2);
        this.locator.setLineNumber(-1);
        this.locator.setColumnNumber(-1);
        this.contentHandler.setDocumentLocator(this.locator);
        return;
    }

    private void dtdEvents(org.jdom.Document p7)
    {
        org.jdom.DocType v0 = p7.getDocType();
        if ((v0 != null) && ((this.dtdHandler != null) || (this.declHandler != null))) {
            try {
                this.createDTDParser().parse(new org.xml.sax.InputSource(new java.io.StringReader(new org.jdom.output.XMLOutputter().outputString(v0))));
            } catch (org.jdom.JDOMException v3) {
            } catch (java.io.IOException v2_1) {
                throw new org.jdom.JDOMException("DTD parsing error", v2_1);
            } catch (java.io.IOException v2_0) {
                throw new org.jdom.JDOMException("DTD parsing error", v2_0);
            }
        }
        return;
    }

    private void element(org.jdom.Element p4, org.jdom.output.NamespaceStack p5)
    {
        int v1 = p5.size();
        this.startElement(p4, this.startPrefixMapping(p4, p5));
        this.elementContent(p4.getContent(), p5);
        if (this.locator != null) {
            this.locator.setNode(p4);
        }
        this.endElement(p4);
        this.endPrefixMapping(p5, v1);
        return;
    }

    private void elementContent(java.util.List p6, org.jdom.output.NamespaceStack p7)
    {
        java.util.Iterator v0 = p6.iterator();
        while (v0.hasNext()) {
            org.jdom.Content v1_1 = v0.next();
            if (!(v1_1 instanceof org.jdom.Content)) {
                this.handleError(new org.jdom.JDOMException(new StringBuffer().append("Invalid element content: ").append(v1_1).toString()));
            } else {
                this.elementContent(((org.jdom.Content) v1_1), p7);
            }
        }
        return;
    }

    private void elementContent(org.jdom.Content p4, org.jdom.output.NamespaceStack p5)
    {
        if (this.locator != null) {
            this.locator.setNode(p4);
        }
        if (!(p4 instanceof org.jdom.Element)) {
            if (!(p4 instanceof org.jdom.CDATA)) {
                if (!(p4 instanceof org.jdom.Text)) {
                    if (!(p4 instanceof org.jdom.ProcessingInstruction)) {
                        if (!(p4 instanceof org.jdom.Comment)) {
                            if (!(p4 instanceof org.jdom.EntityRef)) {
                                this.handleError(new org.jdom.JDOMException(new StringBuffer().append("Invalid element content: ").append(p4).toString()));
                            } else {
                                this.entityRef(((org.jdom.EntityRef) p4));
                            }
                        } else {
                            this.comment(((org.jdom.Comment) p4).getText());
                        }
                    } else {
                        this.processingInstruction(((org.jdom.ProcessingInstruction) p4));
                    }
                } else {
                    this.characters(((org.jdom.Text) p4).getText());
                }
            } else {
                this.cdata(((org.jdom.CDATA) p4).getText());
            }
        } else {
            this.element(((org.jdom.Element) p4), p5);
        }
        return;
    }

    private void endDocument()
    {
        try {
            this.contentHandler.endDocument();
            this.locator = 0;
            return;
        } catch (org.xml.sax.SAXException v0) {
            throw new org.jdom.JDOMException("Exception in endDocument", v0);
        }
    }

    private void endElement(org.jdom.Element p7)
    {
        try {
            this.contentHandler.endElement(p7.getNamespaceURI(), p7.getName(), p7.getQualifiedName());
            return;
        } catch (org.xml.sax.SAXException v3) {
            throw new org.jdom.JDOMException("Exception in endElement", v3);
        }
    }

    private void endPrefixMapping(org.jdom.output.NamespaceStack p5, int p6)
    {
        while (p5.size() > p6) {
            try {
                this.contentHandler.endPrefixMapping(p5.pop());
            } catch (org.xml.sax.SAXException v1) {
                throw new org.jdom.JDOMException("Exception in endPrefixMapping", v1);
            }
        }
        return;
    }

    private void entityRef(org.jdom.EntityRef p4)
    {
        if (p4 != null) {
            try {
                this.contentHandler.skippedEntity(p4.getName());
            } catch (org.xml.sax.SAXException v0) {
                throw new org.jdom.JDOMException("Exception in entityRef", v0);
            }
        }
        return;
    }

    private static String getAttributeTypeName(int p1)
    {
        if ((p1 < 0) || (p1 >= org.jdom.output.SAXOutputter.attrTypeToNameMap.length)) {
            p1 = 0;
        }
        return org.jdom.output.SAXOutputter.attrTypeToNameMap[p1];
    }

    private void handleError(org.jdom.JDOMException p6)
    {
        if (this.errorHandler == null) {
            throw p6;
        } else {
            try {
                this.errorHandler.error(new org.xml.sax.SAXParseException(p6.getMessage(), 0, p6));
                return;
            } catch (org.xml.sax.SAXException v0) {
                if (!(v0.getException() instanceof org.jdom.JDOMException)) {
                    throw new org.jdom.JDOMException(v0.getMessage(), v0);
                } else {
                    throw ((org.jdom.JDOMException) ((org.jdom.JDOMException) v0.getException()));
                }
            }
        }
    }

    private void processingInstruction(org.jdom.ProcessingInstruction p6)
    {
        if (p6 != null) {
            try {
                this.contentHandler.processingInstruction(p6.getTarget(), p6.getData());
            } catch (org.xml.sax.SAXException v1) {
                throw new org.jdom.JDOMException("Exception in processingInstruction", v1);
            }
        }
        return;
    }

    private void startDocument()
    {
        try {
            this.contentHandler.startDocument();
            return;
        } catch (org.xml.sax.SAXException v0) {
            throw new org.jdom.JDOMException("Exception in startDocument", v0);
        }
    }

    private void startElement(org.jdom.Element p14, org.xml.sax.Attributes p15)
    {
        org.xml.sax.helpers.AttributesImpl v0_0;
        String v10 = p14.getNamespaceURI();
        String v9 = p14.getName();
        String v11 = p14.getQualifiedName();
        if (p15 == null) {
            v0_0 = new org.xml.sax.helpers.AttributesImpl();
        } else {
            v0_0 = new org.xml.sax.helpers.AttributesImpl(p15);
        }
        java.util.Iterator v8 = p14.getAttributes().iterator();
        while (v8.hasNext()) {
            org.jdom.Attribute v6_1 = ((org.jdom.Attribute) v8.next());
            v0_0.addAttribute(v6_1.getNamespaceURI(), v6_1.getName(), v6_1.getQualifiedName(), org.jdom.output.SAXOutputter.getAttributeTypeName(v6_1.getAttributeType()), v6_1.getValue());
        }
        try {
            this.contentHandler.startElement(v10, v9, v11, v0_0);
            return;
        } catch (org.xml.sax.SAXException v12) {
            throw new org.jdom.JDOMException("Exception in startElement", v12);
        }
    }

    private org.xml.sax.Attributes startPrefixMapping(org.jdom.Element p12, org.jdom.output.NamespaceStack p13)
    {
        org.xml.sax.helpers.AttributesImpl v5 = 0;
        org.jdom.Namespace v4_0 = p12.getNamespace();
        if (v4_0 != org.jdom.Namespace.XML_NAMESPACE) {
            String v6_1 = v4_0.getPrefix();
            if (!v4_0.getURI().equals(p13.getURI(v6_1))) {
                p13.push(v4_0);
                v5 = this.addNsAttribute(0, v4_0);
                try {
                    this.contentHandler.startPrefixMapping(v6_1, v4_0.getURI());
                } catch (org.xml.sax.SAXException v7_0) {
                    throw new org.jdom.JDOMException("Exception in startPrefixMapping", v7_0);
                }
            }
        }
        java.util.List v0 = p12.getAdditionalNamespaces();
        if (v0 != null) {
            java.util.Iterator v3_0 = v0.iterator();
            while (v3_0.hasNext()) {
                org.jdom.Namespace v4_3 = ((org.jdom.Namespace) v3_0.next());
                String v6_2 = v4_3.getPrefix();
                if (!v4_3.getURI().equals(p13.getURI(v6_2))) {
                    p13.push(v4_3);
                    v5 = this.addNsAttribute(v5, v4_3);
                    try {
                        this.contentHandler.startPrefixMapping(v6_2, v4_3.getURI());
                    } catch (org.xml.sax.SAXException v7_2) {
                        throw new org.jdom.JDOMException("Exception in startPrefixMapping", v7_2);
                    }
                }
            }
        }
        java.util.List v2 = p12.getAttributes();
        if (v2 != null) {
            java.util.Iterator v3_1 = v2.iterator();
            while (v3_1.hasNext()) {
                org.jdom.Namespace v4_1 = ((org.jdom.Attribute) v3_1.next()).getNamespace();
                String v6_0 = v4_1.getPrefix();
                if (!v4_1.getURI().equals(p13.getURI(v6_0))) {
                    p13.push(v4_1);
                    v5 = this.addNsAttribute(v5, v4_1);
                    try {
                        this.contentHandler.startPrefixMapping(v6_0, v4_1.getURI());
                    } catch (org.xml.sax.SAXException v7_1) {
                        throw new org.jdom.JDOMException("Exception in startPrefixMapping", v7_1);
                    }
                }
            }
        }
        return v5;
    }

    protected org.xml.sax.XMLReader createParser()
    {
        try {
            Class v2 = Class.forName("javax.xml.parsers.SAXParserFactory");
            Object v4 = v2.getMethod("newSAXParser", 0).invoke(v2.getMethod("newInstance", 0).invoke(0, 0), 0);
            org.xml.sax.XMLReader v7 = ((org.xml.sax.XMLReader) v4.getClass().getMethod("getXMLReader", 0).invoke(v4, 0));
        } catch (String v9) {
        } catch (String v9) {
        } catch (String v9) {
        } catch (String v9) {
        }
        if (v7 == null) {
            v7 = org.xml.sax.helpers.XMLReaderFactory.createXMLReader("org.apache.xerces.parsers.SAXParser");
        }
        return v7;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        return this.contentHandler;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        return this.dtdHandler;
    }

    public org.xml.sax.ext.DeclHandler getDeclHandler()
    {
        return this.declHandler;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        return this.entityResolver;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        return this.errorHandler;
    }

    public boolean getFeature(String p2)
    {
        org.xml.sax.SAXNotRecognizedException v0_4;
        if (!"http://xml.org/sax/features/namespace-prefixes".equals(p2)) {
            if (!"http://xml.org/sax/features/namespaces".equals(p2)) {
                if (!"http://xml.org/sax/features/validation".equals(p2)) {
                    throw new org.xml.sax.SAXNotRecognizedException(p2);
                } else {
                    v0_4 = this.reportDtdEvents;
                }
            } else {
                v0_4 = 1;
            }
        } else {
            v0_4 = this.declareNamespaces;
        }
        return v0_4;
    }

    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        return this.lexicalHandler;
    }

    public org.jdom.output.JDOMLocator getLocator()
    {
        int v0_1;
        if (this.locator == null) {
            v0_1 = 0;
        } else {
            v0_1 = new org.jdom.output.JDOMLocator(this.locator);
        }
        return v0_1;
    }

    public Object getProperty(String p2)
    {
        if ((!"http://xml.org/sax/properties/lexical-handler".equals(p2)) && (!"http://xml.org/sax/handlers/LexicalHandler".equals(p2))) {
            if ((!"http://xml.org/sax/properties/declaration-handler".equals(p2)) && (!"http://xml.org/sax/handlers/DeclHandler".equals(p2))) {
                throw new org.xml.sax.SAXNotRecognizedException(p2);
            } else {
                org.xml.sax.SAXNotRecognizedException v0_7 = this.getDeclHandler();
            }
        } else {
            v0_7 = this.getLexicalHandler();
        }
        return v0_7;
    }

    public boolean getReportDTDEvents()
    {
        return this.reportDtdEvents;
    }

    public boolean getReportNamespaceDeclarations()
    {
        return this.declareNamespaces;
    }

    public void output(java.util.List p2)
    {
        if ((p2 != null) && (p2.size() != 0)) {
            this.documentLocator(0);
            this.startDocument();
            this.elementContent(p2, new org.jdom.output.NamespaceStack());
            this.endDocument();
        }
        return;
    }

    public void output(org.jdom.Document p5)
    {
        if (p5 != null) {
            this.documentLocator(p5);
            this.startDocument();
            if (this.reportDtdEvents) {
                this.dtdEvents(p5);
            }
            java.util.Iterator v0 = p5.getContent().iterator();
            while (v0.hasNext()) {
                org.jdom.Comment v1_0 = v0.next();
                this.locator.setNode(v1_0);
                if (!(v1_0 instanceof org.jdom.Element)) {
                    if (!(v1_0 instanceof org.jdom.ProcessingInstruction)) {
                        if ((v1_0 instanceof org.jdom.Comment)) {
                            this.comment(((org.jdom.Comment) v1_0).getText());
                        }
                    } else {
                        this.processingInstruction(((org.jdom.ProcessingInstruction) v1_0));
                    }
                } else {
                    this.element(p5.getRootElement(), new org.jdom.output.NamespaceStack());
                }
            }
            this.endDocument();
        }
        return;
    }

    public void output(org.jdom.Element p2)
    {
        if (p2 != null) {
            this.documentLocator(0);
            this.startDocument();
            this.elementContent(p2, new org.jdom.output.NamespaceStack());
            this.endDocument();
        }
        return;
    }

    public void outputFragment(java.util.List p2)
    {
        if ((p2 != null) && (p2.size() != 0)) {
            this.elementContent(p2, new org.jdom.output.NamespaceStack());
        }
        return;
    }

    public void outputFragment(org.jdom.Content p2)
    {
        if (p2 != null) {
            this.elementContent(p2, new org.jdom.output.NamespaceStack());
        }
        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler p1)
    {
        this.contentHandler = p1;
        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler p1)
    {
        this.dtdHandler = p1;
        return;
    }

    public void setDeclHandler(org.xml.sax.ext.DeclHandler p1)
    {
        this.declHandler = p1;
        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver p1)
    {
        this.entityResolver = p1;
        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler p1)
    {
        this.errorHandler = p1;
        return;
    }

    public void setFeature(String p2, boolean p3)
    {
        if (!"http://xml.org/sax/features/namespace-prefixes".equals(p2)) {
            if (!"http://xml.org/sax/features/namespaces".equals(p2)) {
                if (!"http://xml.org/sax/features/validation".equals(p2)) {
                    throw new org.xml.sax.SAXNotRecognizedException(p2);
                } else {
                    this.setReportDTDEvents(p3);
                }
            } else {
                if (p3 != 1) {
                    throw new org.xml.sax.SAXNotSupportedException(p2);
                }
            }
        } else {
            this.setReportNamespaceDeclarations(p3);
        }
        return;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler p1)
    {
        this.lexicalHandler = p1;
        return;
    }

    public void setProperty(String p2, Object p3)
    {
        if ((!"http://xml.org/sax/properties/lexical-handler".equals(p2)) && (!"http://xml.org/sax/handlers/LexicalHandler".equals(p2))) {
            if ((!"http://xml.org/sax/properties/declaration-handler".equals(p2)) && (!"http://xml.org/sax/handlers/DeclHandler".equals(p2))) {
                throw new org.xml.sax.SAXNotRecognizedException(p2);
            } else {
                this.setDeclHandler(((org.xml.sax.ext.DeclHandler) p3));
            }
        } else {
            this.setLexicalHandler(((org.xml.sax.ext.LexicalHandler) p3));
        }
        return;
    }

    public void setReportDTDEvents(boolean p1)
    {
        this.reportDtdEvents = p1;
        return;
    }

    public void setReportNamespaceDeclarations(boolean p1)
    {
        this.declareNamespaces = p1;
        return;
    }
}
package org.jdom.output;
public class XMLOutputter$NamespaceStack extends org.jdom.output.NamespaceStack {
    private final org.jdom.output.XMLOutputter this$0;

    protected XMLOutputter$NamespaceStack(org.jdom.output.XMLOutputter p1)
    {
        this.this$0 = p1;
        return;
    }
}
package org.jdom.output;
public class XMLOutputter implements java.lang.Cloneable {
    private static final String CVS_ID = "@(#) $RCSfile: XMLOutputter.java,v $ $Revision: 1.117 $ $Date: 2009/07/23 05:54:23 $ $Name:  $";
    protected static final org.jdom.output.Format preserveFormat;
    protected org.jdom.output.Format currentFormat;
    private boolean escapeOutput;
    private org.jdom.output.Format userFormat;

    static XMLOutputter()
    {
        org.jdom.output.XMLOutputter.preserveFormat = org.jdom.output.Format.getRawFormat();
        return;
    }

    public XMLOutputter()
    {
        this.userFormat = org.jdom.output.Format.getRawFormat();
        this.currentFormat = this.userFormat;
        this.escapeOutput = 1;
        return;
    }

    public XMLOutputter(org.jdom.output.Format p2)
    {
        this.userFormat = org.jdom.output.Format.getRawFormat();
        this.currentFormat = this.userFormat;
        this.escapeOutput = 1;
        this.userFormat = ((org.jdom.output.Format) p2.clone());
        this.currentFormat = this.userFormat;
        return;
    }

    public XMLOutputter(org.jdom.output.XMLOutputter p2)
    {
        this.userFormat = org.jdom.output.Format.getRawFormat();
        this.currentFormat = this.userFormat;
        this.escapeOutput = 1;
        this.userFormat = ((org.jdom.output.Format) p2.userFormat.clone());
        this.currentFormat = this.userFormat;
        return;
    }

    private org.jdom.output.XMLOutputter$NamespaceStack createNamespaceStack()
    {
        return new org.jdom.output.XMLOutputter$NamespaceStack(this);
    }

    private boolean endsWithWhite(String p2)
    {
        if ((p2 == null) || ((p2.length() <= 0) || (!org.jdom.Verifier.isXMLWhitespace(p2.charAt((p2.length() - 1)))))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    private void indent(java.io.Writer p4, int p5)
    {
        if ((this.currentFormat.indent != null) && (!this.currentFormat.indent.equals(""))) {
            int v0 = 0;
            while (v0 < p5) {
                p4.write(this.currentFormat.indent);
                v0++;
            }
        }
        return;
    }

    private boolean isAllWhitespace(Object p5)
    {
        String v1_0;
        int v2 = 0;
        if (!(p5 instanceof String)) {
            if (!(p5 instanceof org.jdom.Text)) {
                // Both branches of the condition point to the same code.
                // if (!(p5 instanceof org.jdom.EntityRef)) {
                // }
            } else {
                v1_0 = ((org.jdom.Text) p5).getText();
                int v0 = 0;
                while (v0 < v1_0.length()) {
                    if (org.jdom.Verifier.isXMLWhitespace(v1_0.charAt(v0))) {
                        v0++;
                    }
                }
                v2 = 1;
            }
        } else {
            v1_0 = ((String) p5);
        }
        return v2;
    }

    private java.io.Writer makeWriter(java.io.OutputStream p2)
    {
        return org.jdom.output.XMLOutputter.makeWriter(p2, this.userFormat.encoding);
    }

    private static java.io.Writer makeWriter(java.io.OutputStream p3, String p4)
    {
        if ("UTF-8".equals(p4)) {
            p4 = "UTF8";
        }
        return new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.BufferedOutputStream(p3), p4));
    }

    private void newline(java.io.Writer p2)
    {
        if (this.currentFormat.indent != null) {
            p2.write(this.currentFormat.lineSeparator);
        }
        return;
    }

    private static int nextNonText(java.util.List p4, int p5)
    {
        if (p5 < 0) {
            p5 = 0;
        }
        int v0 = p5;
        int v2 = p4.size();
        while (v0 < v2) {
            Object v1 = p4.get(v0);
            if (((v1 instanceof org.jdom.Text)) || ((v1 instanceof org.jdom.EntityRef))) {
                v0++;
            }
            return v0;
        }
        v0 = v2;
        return v0;
    }

    private void printAdditionalNamespaces(java.io.Writer p5, org.jdom.Element p6, org.jdom.output.XMLOutputter$NamespaceStack p7)
    {
        java.util.List v2 = p6.getAdditionalNamespaces();
        if (v2 != null) {
            int v1 = 0;
            while (v1 < v2.size()) {
                this.printNamespace(p5, ((org.jdom.Namespace) v2.get(v1)), p7);
                v1++;
            }
        }
        return;
    }

    private void printContentRange(java.io.Writer p6, java.util.List p7, int p8, int p9, int p10, org.jdom.output.XMLOutputter$NamespaceStack p11)
    {
        int v2 = p8;
        while (v2 < p9) {
            int v1;
            if (v2 != p8) {
                v1 = 0;
            } else {
                v1 = 1;
            }
            org.jdom.ProcessingInstruction v3_3 = p7.get(v2);
            if ((!(v3_3 instanceof org.jdom.Text)) && (!(v3_3 instanceof org.jdom.EntityRef))) {
                if (v1 == 0) {
                    this.newline(p6);
                }
                this.indent(p6, p10);
                if (!(v3_3 instanceof org.jdom.Comment)) {
                    if (!(v3_3 instanceof org.jdom.Element)) {
                        if ((v3_3 instanceof org.jdom.ProcessingInstruction)) {
                            this.printProcessingInstruction(p6, ((org.jdom.ProcessingInstruction) v3_3));
                        }
                    } else {
                        this.printElement(p6, ((org.jdom.Element) v3_3), p10, p11);
                    }
                } else {
                    this.printComment(p6, ((org.jdom.Comment) v3_3));
                }
                v2++;
            } else {
                int v0 = this.skipLeadingWhite(p7, v2);
                v2 = org.jdom.output.XMLOutputter.nextNonText(p7, v0);
                if (v0 < v2) {
                    if (v1 == 0) {
                        this.newline(p6);
                    }
                    this.indent(p6, p10);
                    this.printTextRange(p6, p7, v0, v2);
                }
            }
        }
        return;
    }

    private void printElementNamespace(java.io.Writer p3, org.jdom.Element p4, org.jdom.output.XMLOutputter$NamespaceStack p5)
    {
        org.jdom.Namespace v0 = p4.getNamespace();
        if ((v0 != org.jdom.Namespace.XML_NAMESPACE) && ((v0 != org.jdom.Namespace.NO_NAMESPACE) || (p5.getURI("") != null))) {
            this.printNamespace(p3, v0, p5);
        }
        return;
    }

    private void printNamespace(java.io.Writer p4, org.jdom.Namespace p5, org.jdom.output.XMLOutputter$NamespaceStack p6)
    {
        String v0 = p5.getPrefix();
        String v1 = p5.getURI();
        if (!v1.equals(p6.getURI(v0))) {
            p4.write(" xmlns");
            if (!v0.equals("")) {
                p4.write(":");
                p4.write(v0);
            }
            p4.write("=\"");
            p4.write(this.escapeAttributeEntities(v1));
            p4.write("\"");
            p6.push(p5);
        }
        return;
    }

    private void printQualifiedName(java.io.Writer p3, org.jdom.Attribute p4)
    {
        String v0 = p4.getNamespace().getPrefix();
        if ((v0 == null) || (v0.equals(""))) {
            p3.write(p4.getName());
        } else {
            p3.write(v0);
            p3.write(58);
            p3.write(p4.getName());
        }
        return;
    }

    private void printQualifiedName(java.io.Writer p2, org.jdom.Element p3)
    {
        if (p3.getNamespace().getPrefix().length() != 0) {
            p2.write(p3.getNamespace().getPrefix());
            p2.write(58);
            p2.write(p3.getName());
        } else {
            p2.write(p3.getName());
        }
        return;
    }

    private void printString(java.io.Writer p3, String p4)
    {
        if (this.currentFormat.mode != org.jdom.output.Format$TextMode.NORMALIZE) {
            if (this.currentFormat.mode == org.jdom.output.Format$TextMode.TRIM) {
                p4 = p4.trim();
            }
        } else {
            p4 = org.jdom.Text.normalizeString(p4);
        }
        p3.write(this.escapeElementEntities(p4));
        return;
    }

    private void printTextRange(java.io.Writer p8, java.util.List p9, int p10, int p11)
    {
        String v3 = 0;
        int v10_1 = this.skipLeadingWhite(p9, p10);
        if (v10_1 < p9.size()) {
            int v11_1 = this.skipTrailingWhite(p9, p11);
            int v0 = v10_1;
            while (v0 < v11_1) {
                String v1;
                org.jdom.EntityRef v2_0 = p9.get(v0);
                if (!(v2_0 instanceof org.jdom.Text)) {
                    if (!(v2_0 instanceof org.jdom.EntityRef)) {
                        throw new IllegalStateException("Should see only CDATA, Text, or EntityRef");
                    } else {
                        v1 = new StringBuffer().append("&").append(((org.jdom.EntityRef) v2_0).getValue()).append(";").toString();
                    }
                } else {
                    v1 = ((org.jdom.Text) v2_0).getText();
                }
                if ((v1 != null) && (!"".equals(v1))) {
                    if (((v3 != null) && ((this.currentFormat.mode == org.jdom.output.Format$TextMode.NORMALIZE) || (this.currentFormat.mode == org.jdom.output.Format$TextMode.TRIM))) && ((this.endsWithWhite(v3)) || (this.startsWithWhite(v1)))) {
                        p8.write(" ");
                    }
                    if (!(v2_0 instanceof org.jdom.CDATA)) {
                        if (!(v2_0 instanceof org.jdom.EntityRef)) {
                            this.printString(p8, v1);
                        } else {
                            this.printEntityRef(p8, ((org.jdom.EntityRef) v2_0));
                        }
                    } else {
                        this.printCDATA(p8, ((org.jdom.CDATA) v2_0));
                    }
                    v3 = v1;
                }
                v0++;
            }
        }
        return;
    }

    private int skipLeadingWhite(java.util.List p6, int p7)
    {
        if (p7 < 0) {
            p7 = 0;
        }
        int v1;
        int v0 = p7;
        int v2 = p6.size();
        if ((this.currentFormat.mode != org.jdom.output.Format$TextMode.TRIM_FULL_WHITE) && ((this.currentFormat.mode != org.jdom.output.Format$TextMode.NORMALIZE) && (this.currentFormat.mode != org.jdom.output.Format$TextMode.TRIM))) {
            v1 = v0;
        } else {
            while (v0 < v2) {
                if (this.isAllWhitespace(p6.get(v0))) {
                    v0++;
                } else {
                    v1 = v0;
                }
            }
        }
        return v1;
    }

    private int skipTrailingWhite(java.util.List p5, int p6)
    {
        int v1 = p5.size();
        if (p6 > v1) {
            p6 = v1;
        }
        int v0 = p6;
        if ((this.currentFormat.mode == org.jdom.output.Format$TextMode.TRIM_FULL_WHITE) || ((this.currentFormat.mode == org.jdom.output.Format$TextMode.NORMALIZE) || (this.currentFormat.mode == org.jdom.output.Format$TextMode.TRIM))) {
            while ((v0 >= 0) && (this.isAllWhitespace(p5.get((v0 - 1))))) {
                v0--;
            }
        }
        return v0;
    }

    private boolean startsWithWhite(String p3)
    {
        int v0 = 0;
        if ((p3 != null) && ((p3.length() > 0) && (org.jdom.Verifier.isXMLWhitespace(p3.charAt(0))))) {
            v0 = 1;
        }
        return v0;
    }

    public Object clone()
    {
        try {
            return super.clone();
        } catch (CloneNotSupportedException v0) {
            throw new RuntimeException(v0.toString());
        }
    }

    public String escapeAttributeEntities(String p11)
    {
        org.jdom.output.EscapeStrategy v6 = this.currentFormat.escapeStrategy;
        StringBuffer v0_0 = 0;
        int v3 = 0;
        while (v3 < p11.length()) {
            String v2;
            int v1 = p11.charAt(v3);
            int v5 = v3;
            switch (v1) {
                case 9:
                    v2 = "&#x9;";
                    break;
                case 10:
                    v2 = "&#xA;";
                    break;
                case 13:
                    v2 = "&#xD;";
                    break;
                case 34:
                    v2 = "&quot;";
                    break;
                case 38:
                    v2 = "&amp;";
                    break;
                case 60:
                    v2 = "&lt;";
                    break;
                case 62:
                    v2 = "&gt;";
                    break;
                default:
                    if (!v6.shouldEscape(((char) v1))) {
                        v2 = 0;
                    } else {
                        if (org.jdom.Verifier.isHighSurrogate(((char) v1))) {
                            v3++;
                            if (v3 >= p11.length()) {
                                throw new org.jdom.IllegalDataException(new StringBuffer().append("Surrogate pair 0x").append(Integer.toHexString(v1)).append(" truncated").toString());
                            } else {
                                char v4 = p11.charAt(v3);
                                if (org.jdom.Verifier.isLowSurrogate(v4)) {
                                    v1 = org.jdom.Verifier.decodeSurrogatePair(((char) v1), v4);
                                } else {
                                    throw new org.jdom.IllegalDataException(new StringBuffer().append("Could not decode surrogate pair 0x").append(Integer.toHexString(v1)).append(" / 0x").append(Integer.toHexString(v4)).toString());
                                }
                            }
                        }
                        v2 = new StringBuffer().append("&#x").append(Integer.toHexString(v1)).append(";").toString();
                    }
            }
            if (v0_0 != null) {
                if (v2 != null) {
                    v0_0.append(v2);
                } else {
                    v0_0.append(((char) v1));
                }
            } else {
                if (v2 != null) {
                    v0_0 = new StringBuffer((p11.length() + 20));
                    v0_0.append(p11.substring(0, v5));
                    v0_0.append(v2);
                }
            }
            v3++;
        }
        if (v0_0 != null) {
            p11 = v0_0.toString();
        }
        return p11;
    }

    public String escapeElementEntities(String p11)
    {
        if (this.escapeOutput) {
            org.jdom.output.EscapeStrategy v6 = this.currentFormat.escapeStrategy;
            StringBuffer v0_0 = 0;
            int v3 = 0;
            while (v3 < p11.length()) {
                String v2;
                int v1 = p11.charAt(v3);
                int v5 = v3;
                switch (v1) {
                    case 10:
                        v2 = this.currentFormat.lineSeparator;
                        break;
                    case 13:
                        v2 = "&#xD;";
                        break;
                    case 38:
                        v2 = "&amp;";
                        break;
                    case 60:
                        v2 = "&lt;";
                        break;
                    case 62:
                        v2 = "&gt;";
                        break;
                    default:
                        if (!v6.shouldEscape(((char) v1))) {
                            v2 = 0;
                        } else {
                            if (org.jdom.Verifier.isHighSurrogate(((char) v1))) {
                                v3++;
                                if (v3 >= p11.length()) {
                                    throw new org.jdom.IllegalDataException(new StringBuffer().append("Surrogate pair 0x").append(Integer.toHexString(v1)).append(" truncated").toString());
                                } else {
                                    char v4 = p11.charAt(v3);
                                    if (org.jdom.Verifier.isLowSurrogate(v4)) {
                                        v1 = org.jdom.Verifier.decodeSurrogatePair(((char) v1), v4);
                                    } else {
                                        throw new org.jdom.IllegalDataException(new StringBuffer().append("Could not decode surrogate pair 0x").append(Integer.toHexString(v1)).append(" / 0x").append(Integer.toHexString(v4)).toString());
                                    }
                                }
                            }
                            v2 = new StringBuffer().append("&#x").append(Integer.toHexString(v1)).append(";").toString();
                        }
                }
                if (v0_0 != null) {
                    if (v2 != null) {
                        v0_0.append(v2);
                    } else {
                        v0_0.append(((char) v1));
                    }
                } else {
                    if (v2 != null) {
                        v0_0 = new StringBuffer((p11.length() + 20));
                        v0_0.append(p11.substring(0, v5));
                        v0_0.append(v2);
                    }
                }
                v3++;
            }
            if (v0_0 != null) {
                p11 = v0_0.toString();
            }
        }
        return p11;
    }

    public org.jdom.output.Format getFormat()
    {
        return ((org.jdom.output.Format) this.userFormat.clone());
    }

    public void output(java.util.List p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(java.util.List p8, java.io.Writer p9)
    {
        this.printContentRange(p9, p8, 0, p8.size(), 0, this.createNamespaceStack());
        p9.flush();
        return;
    }

    public void output(org.jdom.CDATA p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.CDATA p1, java.io.Writer p2)
    {
        this.printCDATA(p2, p1);
        p2.flush();
        return;
    }

    public void output(org.jdom.Comment p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.Comment p1, java.io.Writer p2)
    {
        this.printComment(p2, p1);
        p2.flush();
        return;
    }

    public void output(org.jdom.DocType p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.DocType p1, java.io.Writer p2)
    {
        this.printDocType(p2, p1);
        p2.flush();
        return;
    }

    public void output(org.jdom.Document p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.Document p8, java.io.Writer p9)
    {
        this.printDeclaration(p9, p8, this.userFormat.encoding);
        java.util.List v0 = p8.getContent();
        int v3 = v0.size();
        int v1 = 0;
        while (v1 < v3) {
            org.jdom.ProcessingInstruction v2_0 = v0.get(v1);
            if (!(v2_0 instanceof org.jdom.Element)) {
                if (!(v2_0 instanceof org.jdom.Comment)) {
                    if (!(v2_0 instanceof org.jdom.ProcessingInstruction)) {
                        if ((v2_0 instanceof org.jdom.DocType)) {
                            this.printDocType(p9, p8.getDocType());
                            p9.write(this.currentFormat.lineSeparator);
                        }
                    } else {
                        this.printProcessingInstruction(p9, ((org.jdom.ProcessingInstruction) v2_0));
                    }
                } else {
                    this.printComment(p9, ((org.jdom.Comment) v2_0));
                }
            } else {
                this.printElement(p9, p8.getRootElement(), 0, this.createNamespaceStack());
            }
            this.newline(p9);
            this.indent(p9, 0);
            v1++;
        }
        p9.write(this.currentFormat.lineSeparator);
        p9.flush();
        return;
    }

    public void output(org.jdom.Element p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.Element p3, java.io.Writer p4)
    {
        this.printElement(p4, p3, 0, this.createNamespaceStack());
        p4.flush();
        return;
    }

    public void output(org.jdom.EntityRef p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.EntityRef p1, java.io.Writer p2)
    {
        this.printEntityRef(p2, p1);
        p2.flush();
        return;
    }

    public void output(org.jdom.ProcessingInstruction p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.ProcessingInstruction p4, java.io.Writer p5)
    {
        boolean v0 = this.currentFormat.ignoreTrAXEscapingPIs;
        this.currentFormat.setIgnoreTrAXEscapingPIs(1);
        this.printProcessingInstruction(p5, p4);
        this.currentFormat.setIgnoreTrAXEscapingPIs(v0);
        p5.flush();
        return;
    }

    public void output(org.jdom.Text p2, java.io.OutputStream p3)
    {
        this.output(p2, this.makeWriter(p3));
        return;
    }

    public void output(org.jdom.Text p1, java.io.Writer p2)
    {
        this.printText(p2, p1);
        p2.flush();
        return;
    }

    public void outputElementContent(org.jdom.Element p2, java.io.OutputStream p3)
    {
        this.outputElementContent(p2, this.makeWriter(p3));
        return;
    }

    public void outputElementContent(org.jdom.Element p8, java.io.Writer p9)
    {
        java.util.List v2 = p8.getContent();
        this.printContentRange(p9, v2, 0, v2.size(), 0, this.createNamespaceStack());
        p9.flush();
        return;
    }

    public String outputString(java.util.List p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.CDATA p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.Comment p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.DocType p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.Document p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.Element p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.EntityRef p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.ProcessingInstruction p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    public String outputString(org.jdom.Text p3)
    {
        java.io.StringWriter v0_1 = new java.io.StringWriter();
        try {
            this.output(p3, v0_1);
        } catch (String v1) {
        }
        return v0_1.toString();
    }

    protected void printAttributes(java.io.Writer p5, java.util.List p6, org.jdom.Element p7, org.jdom.output.XMLOutputter$NamespaceStack p8)
    {
        int v1 = 0;
        while (v1 < p6.size()) {
            org.jdom.Attribute v0_1 = ((org.jdom.Attribute) p6.get(v1));
            org.jdom.Namespace v2 = v0_1.getNamespace();
            if ((v2 != org.jdom.Namespace.NO_NAMESPACE) && (v2 != org.jdom.Namespace.XML_NAMESPACE)) {
                this.printNamespace(p5, v2, p8);
            }
            p5.write(" ");
            this.printQualifiedName(p5, v0_1);
            p5.write("=");
            p5.write("\"");
            p5.write(this.escapeAttributeEntities(v0_1.getValue()));
            p5.write("\"");
            v1++;
        }
        return;
    }

    protected void printCDATA(java.io.Writer p4, org.jdom.CDATA p5)
    {
        String v0;
        if (this.currentFormat.mode != org.jdom.output.Format$TextMode.NORMALIZE) {
            if (this.currentFormat.mode != org.jdom.output.Format$TextMode.TRIM) {
                v0 = p5.getText();
            } else {
                v0 = p5.getText().trim();
            }
        } else {
            v0 = p5.getTextNormalize();
        }
        p4.write("<![CDATA[");
        p4.write(v0);
        p4.write("]]>");
        return;
    }

    protected void printComment(java.io.Writer p2, org.jdom.Comment p3)
    {
        p2.write("<!--");
        p2.write(p3.getText());
        p2.write("-->");
        return;
    }

    protected void printDeclaration(java.io.Writer p3, org.jdom.Document p4, String p5)
    {
        if (!this.userFormat.omitDeclaration) {
            p3.write("<?xml version=\"1.0\"");
            if (!this.userFormat.omitEncoding) {
                p3.write(new StringBuffer().append(" encoding=\"").append(p5).append("\"").toString());
            }
            p3.write("?>");
            p3.write(this.currentFormat.lineSeparator);
        }
        return;
    }

    protected void printDocType(java.io.Writer p6, org.jdom.DocType p7)
    {
        String v2 = p7.getPublicID();
        String v3 = p7.getSystemID();
        String v1 = p7.getInternalSubset();
        int v0 = 0;
        p6.write("<!DOCTYPE ");
        p6.write(p7.getElementName());
        if (v2 != null) {
            p6.write(" PUBLIC \"");
            p6.write(v2);
            p6.write("\"");
            v0 = 1;
        }
        if (v3 != null) {
            if (v0 == 0) {
                p6.write(" SYSTEM");
            }
            p6.write(" \"");
            p6.write(v3);
            p6.write("\"");
        }
        if ((v1 != null) && (!v1.equals(""))) {
            p6.write(" [");
            p6.write(this.currentFormat.lineSeparator);
            p6.write(p7.getInternalSubset());
            p6.write("]");
        }
        p6.write(">");
        return;
    }

    protected void printElement(java.io.Writer p12, org.jdom.Element p13, int p14, org.jdom.output.XMLOutputter$NamespaceStack p15)
    {
        java.util.List v7 = p13.getAttributes();
        java.util.List v2 = p13.getContent();
        String v10 = 0;
        if (v7 != null) {
            v10 = p13.getAttributeValue("space", org.jdom.Namespace.XML_NAMESPACE);
        }
        org.jdom.output.Format v8 = this.currentFormat;
        if (!"default".equals(v10)) {
            if ("preserve".equals(v10)) {
                this.currentFormat = org.jdom.output.XMLOutputter.preserveFormat;
            }
        } else {
            this.currentFormat = this.userFormat;
        }
        p12.write("<");
        this.printQualifiedName(p12, p13);
        int v9 = p15.size();
        this.printElementNamespace(p12, p13, p15);
        this.printAdditionalNamespaces(p12, p13, p15);
        if (v7 != null) {
            this.printAttributes(p12, v7, p13, p15);
        }
        int v3 = this.skipLeadingWhite(v2, 0);
        int v4 = v2.size();
        if (v3 < v4) {
            p12.write(">");
            if (org.jdom.output.XMLOutputter.nextNonText(v2, v3) >= v4) {
                this.printTextRange(p12, v2, v3, v4);
            } else {
                this.newline(p12);
                this.printContentRange(p12, v2, v3, v4, (p14 + 1), p15);
                this.newline(p12);
                this.indent(p12, p14);
            }
            p12.write("</");
            this.printQualifiedName(p12, p13);
            p12.write(">");
        } else {
            if (!this.currentFormat.expandEmptyElements) {
                p12.write(" />");
            } else {
                p12.write("></");
                this.printQualifiedName(p12, p13);
                p12.write(">");
            }
        }
        while (p15.size() > v9) {
            p15.pop();
        }
        this.currentFormat = v8;
        return;
    }

    protected void printEntityRef(java.io.Writer p2, org.jdom.EntityRef p3)
    {
        p2.write("&");
        p2.write(p3.getName());
        p2.write(";");
        return;
    }

    protected void printProcessingInstruction(java.io.Writer p5, org.jdom.ProcessingInstruction p6)
    {
        String v2 = p6.getTarget();
        int v0 = 0;
        if (!this.currentFormat.ignoreTrAXEscapingPIs) {
            if (!v2.equals("javax.xml.transform.disable-output-escaping")) {
                if (v2.equals("javax.xml.transform.enable-output-escaping")) {
                    this.escapeOutput = 1;
                    v0 = 1;
                }
            } else {
                this.escapeOutput = 0;
                v0 = 1;
            }
        }
        if (v0 == 0) {
            String v1 = p6.getData();
            if ("".equals(v1)) {
                p5.write("<?");
                p5.write(v2);
                p5.write("?>");
            } else {
                p5.write("<?");
                p5.write(v2);
                p5.write(" ");
                p5.write(v1);
                p5.write("?>");
            }
        }
        return;
    }

    protected void printText(java.io.Writer p4, org.jdom.Text p5)
    {
        String v0;
        if (this.currentFormat.mode != org.jdom.output.Format$TextMode.NORMALIZE) {
            if (this.currentFormat.mode != org.jdom.output.Format$TextMode.TRIM) {
                v0 = p5.getText();
            } else {
                v0 = p5.getText().trim();
            }
        } else {
            v0 = p5.getTextNormalize();
        }
        p4.write(this.escapeElementEntities(v0));
        return;
    }

    public void setFormat(org.jdom.output.Format p2)
    {
        this.userFormat = ((org.jdom.output.Format) p2.clone());
        this.currentFormat = this.userFormat;
        return;
    }

    public String toString()
    {
        StringBuffer v0_1 = new StringBuffer();
        int v2 = 0;
        while (v2 < this.userFormat.lineSeparator.length()) {
            char v1 = this.userFormat.lineSeparator.charAt(v2);
            switch (v1) {
                case 9:
                    v0_1.append("\\t");
                    break;
                case 10:
                    v0_1.append("\\n");
                    break;
                case 11:
                case 12:
                default:
                    v0_1.append(new StringBuffer().append("[").append(v1).append("]").toString());
                    break;
                case 13:
                    v0_1.append("\\r");
                    break;
            }
            v2++;
        }
        return new StringBuffer().append("XMLOutputter[omitDeclaration = ").append(this.userFormat.omitDeclaration).append(", ").append("encoding = ").append(this.userFormat.encoding).append(", ").append("omitEncoding = ").append(this.userFormat.omitEncoding).append(", ").append("indent = \'").append(this.userFormat.indent).append("\'").append(", ").append("expandEmptyElements = ").append(this.userFormat.expandEmptyElements).append(", ").append("lineSeparator = \'").append(v0_1.toString()).append("\', ").append("textMode = ").append(this.userFormat.mode).append("]").toString();
    }
}
package org.jdom.transform;
 class JDOMResult$DocumentBuilder extends org.xml.sax.helpers.XMLFilterImpl implements org.xml.sax.ext.LexicalHandler {
    private org.jdom.transform.JDOMResult$FragmentHandler saxHandler;
    private boolean startDocumentReceived;
    private final org.jdom.transform.JDOMResult this$0;

    public JDOMResult$DocumentBuilder(org.jdom.transform.JDOMResult p2)
    {
        this.this$0 = p2;
        this.saxHandler = 0;
        this.startDocumentReceived = 0;
        return;
    }

    private void ensureInitialization()
    {
        if (!this.startDocumentReceived) {
            this.startDocument();
        }
        return;
    }

    public void characters(char[] p1, int p2, int p3)
    {
        this.ensureInitialization();
        super.characters(p1, p2, p3);
        return;
    }

    public void comment(char[] p2, int p3, int p4)
    {
        this.ensureInitialization();
        this.saxHandler.comment(p2, p3, p4);
        return;
    }

    public void endCDATA()
    {
        this.saxHandler.endCDATA();
        return;
    }

    public void endDTD()
    {
        this.saxHandler.endDTD();
        return;
    }

    public void endEntity(String p2)
    {
        this.saxHandler.endEntity(p2);
        return;
    }

    public java.util.List getResult()
    {
        java.util.List v0 = 0;
        if (this.saxHandler != null) {
            v0 = this.saxHandler.getResult();
            this.saxHandler = 0;
            this.startDocumentReceived = 0;
        }
        return v0;
    }

    public void ignorableWhitespace(char[] p1, int p2, int p3)
    {
        this.ensureInitialization();
        super.ignorableWhitespace(p1, p2, p3);
        return;
    }

    public void processingInstruction(String p1, String p2)
    {
        this.ensureInitialization();
        super.processingInstruction(p1, p2);
        return;
    }

    public void skippedEntity(String p1)
    {
        this.ensureInitialization();
        super.skippedEntity(p1);
        return;
    }

    public void startCDATA()
    {
        this.ensureInitialization();
        this.saxHandler.startCDATA();
        return;
    }

    public void startDTD(String p2, String p3, String p4)
    {
        this.ensureInitialization();
        this.saxHandler.startDTD(p2, p3, p4);
        return;
    }

    public void startDocument()
    {
        this.startDocumentReceived = 1;
        this.this$0.setResult(0);
        this.saxHandler = new org.jdom.transform.JDOMResult$FragmentHandler(this.this$0.getFactory());
        super.setContentHandler(this.saxHandler);
        super.startDocument();
        return;
    }

    public void startElement(String p1, String p2, String p3, org.xml.sax.Attributes p4)
    {
        this.ensureInitialization();
        super.startElement(p1, p2, p3, p4);
        return;
    }

    public void startEntity(String p2)
    {
        this.ensureInitialization();
        this.saxHandler.startEntity(p2);
        return;
    }

    public void startPrefixMapping(String p1, String p2)
    {
        this.ensureInitialization();
        super.startPrefixMapping(p1, p2);
        return;
    }
}
package org.jdom.transform;
 class JDOMResult$FragmentHandler extends org.jdom.input.SAXHandler {
    private org.jdom.Element dummyRoot;

    public JDOMResult$FragmentHandler(org.jdom.JDOMFactory p4)
    {
        super(p4);
        super.dummyRoot = new org.jdom.Element("root", 0, 0);
        super.pushElement(super.dummyRoot);
        return;
    }

    private java.util.List getDetachedContent(org.jdom.Element p5)
    {
        java.util.List v0 = p5.getContent();
        java.util.ArrayList v1_1 = new java.util.ArrayList(v0.size());
        while (v0.size() != 0) {
            v1_1.add(v0.remove(0));
        }
        return v1_1;
    }

    public java.util.List getResult()
    {
        try {
            this.flushCharacters();
        } catch (java.util.List v0) {
        }
        return this.getDetachedContent(this.dummyRoot);
    }
}
package org.jdom.transform;
public class JDOMResult extends javax.xml.transform.sax.SAXResult {
    private static final String CVS_ID = "@(#) $RCSfile: JDOMResult.java,v $ $Revision: 1.24 $ $Date: 2007/11/10 05:29:02 $ $Name:  $";
    public static final String JDOM_FEATURE = "http://org.jdom.transform.JDOMResult/feature";
    private org.jdom.JDOMFactory factory;
    private boolean queried;
    private Object result;

    public JDOMResult()
    {
        this.result = 0;
        this.queried = 0;
        this.factory = 0;
        org.jdom.transform.JDOMResult$DocumentBuilder v0_1 = new org.jdom.transform.JDOMResult$DocumentBuilder(this);
        super.setHandler(v0_1);
        super.setLexicalHandler(v0_1);
        return;
    }

    private void retrieveResult()
    {
        if (this.result == null) {
            this.setResult(((org.jdom.transform.JDOMResult$DocumentBuilder) this.getHandler()).getResult());
        }
        return;
    }

    public org.jdom.Document getDocument()
    {
        org.jdom.Document v0_0 = 0;
        this.retrieveResult();
        if (!(this.result instanceof org.jdom.Document)) {
            if ((!(this.result instanceof java.util.List)) || (this.queried)) {
                this.queried = 1;
                java.util.List v3_0 = v0_0;
            } else {
                try {
                    org.jdom.DefaultJDOMFactory v2_0 = this.getFactory();
                } catch (RuntimeException v1) {
                    v3_0 = 0;
                }
                if (v2_0 == null) {
                    v2_0 = new org.jdom.DefaultJDOMFactory();
                }
                v0_0 = v2_0.document(0);
                v0_0.setContent(((java.util.List) this.result));
                this.result = v0_0;
            }
        } else {
            v0_0 = ((org.jdom.Document) this.result);
        }
        return v3_0;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        return this.factory;
    }

    public java.util.List getResult()
    {
        java.util.ArrayList v1_0 = java.util.Collections.EMPTY_LIST;
        this.retrieveResult();
        if (!(this.result instanceof java.util.List)) {
            if (((this.result instanceof org.jdom.Document)) && (!this.queried)) {
                java.util.List v0 = ((org.jdom.Document) this.result).getContent();
                v1_0 = new java.util.ArrayList(v0.size());
                while (v0.size() != 0) {
                    v1_0.add(v0.remove(0));
                }
                this.result = v1_0;
            }
        } else {
            v1_0 = ((java.util.List) this.result);
        }
        this.queried = 1;
        return v1_0;
    }

    public void setDocument(org.jdom.Document p2)
    {
        this.result = p2;
        this.queried = 0;
        return;
    }

    public void setFactory(org.jdom.JDOMFactory p1)
    {
        this.factory = p1;
        return;
    }

    public void setHandler(org.xml.sax.ContentHandler p1)
    {
        return;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler p1)
    {
        return;
    }

    public void setResult(java.util.List p2)
    {
        this.result = p2;
        this.queried = 0;
        return;
    }
}
package org.jdom.transform;
 class JDOMSource$DocumentReader extends org.jdom.output.SAXOutputter implements org.xml.sax.XMLReader {

    public JDOMSource$DocumentReader()
    {
        return;
    }

    public void parse(String p3)
    {
        throw new org.xml.sax.SAXNotSupportedException("Only JDOM Documents are supported as input");
    }

    public void parse(org.xml.sax.InputSource p5)
    {
        if (!(p5 instanceof org.jdom.transform.JDOMSource$JDOMInputSource)) {
            throw new org.xml.sax.SAXNotSupportedException("Only JDOM Documents are supported as input");
        } else {
            try {
                java.util.List v1_2 = ((org.jdom.transform.JDOMSource$JDOMInputSource) p5).getSource();
            } catch (org.jdom.JDOMException v0) {
                throw new org.xml.sax.SAXException(v0.getMessage(), v0);
            }
            if (!(v1_2 instanceof org.jdom.Document)) {
                this.output(((java.util.List) v1_2));
            } else {
                this.output(((org.jdom.Document) v1_2));
            }
            return;
        }
    }
}
package org.jdom.transform;
 class JDOMSource$JDOMInputSource extends org.xml.sax.InputSource {
    private Object source;

    public JDOMSource$JDOMInputSource(java.util.List p2)
    {
        this.source = 0;
        this.source = p2;
        return;
    }

    public JDOMSource$JDOMInputSource(org.jdom.Document p2)
    {
        this.source = 0;
        this.source = p2;
        return;
    }

    public java.io.Reader getCharacterStream()
    {
        java.util.List v1_0 = this.getSource();
        java.io.StringReader v0_0 = 0;
        if (!(v1_0 instanceof org.jdom.Document)) {
            if ((v1_0 instanceof java.util.List)) {
                v0_0 = new java.io.StringReader(new org.jdom.output.XMLOutputter().outputString(((java.util.List) v1_0)));
            }
        } else {
            v0_0 = new java.io.StringReader(new org.jdom.output.XMLOutputter().outputString(((org.jdom.Document) v1_0)));
        }
        return v0_0;
    }

    public Object getSource()
    {
        return this.source;
    }

    public void setByteStream(java.io.InputStream p2)
    {
        throw new UnsupportedOperationException();
    }

    public void setCharacterStream(java.io.Reader p2)
    {
        throw new UnsupportedOperationException();
    }
}
package org.jdom.transform;
public class JDOMSource extends javax.xml.transform.sax.SAXSource {
    private static final String CVS_ID = "@(#) $RCSfile: JDOMSource.java,v $ $Revision: 1.20 $ $Date: 2007/11/10 05:29:02 $ $Name:  $";
    public static final String JDOM_FEATURE = "http://org.jdom.transform.JDOMSource/feature";
    private org.xml.sax.EntityResolver resolver;
    private org.xml.sax.XMLReader xmlReader;

    public JDOMSource(java.util.List p2)
    {
        this.xmlReader = 0;
        this.resolver = 0;
        this.setNodes(p2);
        return;
    }

    public JDOMSource(org.jdom.Document p2)
    {
        this.xmlReader = 0;
        this.resolver = 0;
        this.setDocument(p2);
        return;
    }

    public JDOMSource(org.jdom.Document p2, org.xml.sax.EntityResolver p3)
    {
        this.xmlReader = 0;
        this.resolver = 0;
        this.setDocument(p2);
        this.resolver = p3;
        return;
    }

    public JDOMSource(org.jdom.Element p3)
    {
        this.xmlReader = 0;
        this.resolver = 0;
        java.util.ArrayList v0_1 = new java.util.ArrayList();
        v0_1.add(p3);
        this.setNodes(v0_1);
        return;
    }

    private org.xml.sax.XMLReader buildDocumentReader()
    {
        org.jdom.transform.JDOMSource$DocumentReader v0_1 = new org.jdom.transform.JDOMSource$DocumentReader();
        if (this.resolver != null) {
            v0_1.setEntityResolver(this.resolver);
        }
        return v0_1;
    }

    public org.jdom.Document getDocument()
    {
        Object v1 = ((org.jdom.transform.JDOMSource$JDOMInputSource) this.getInputSource()).getSource();
        org.jdom.Document v0_0 = 0;
        if ((v1 instanceof org.jdom.Document)) {
            v0_0 = ((org.jdom.Document) v1);
        }
        return v0_0;
    }

    public java.util.List getNodes()
    {
        Object v1 = ((org.jdom.transform.JDOMSource$JDOMInputSource) this.getInputSource()).getSource();
        java.util.List v0_0 = 0;
        if ((v1 instanceof java.util.List)) {
            v0_0 = ((java.util.List) v1);
        }
        return v0_0;
    }

    public org.xml.sax.XMLReader getXMLReader()
    {
        if (this.xmlReader == null) {
            this.xmlReader = this.buildDocumentReader();
        }
        return this.xmlReader;
    }

    public void setDocument(org.jdom.Document p2)
    {
        super.setInputSource(new org.jdom.transform.JDOMSource$JDOMInputSource(p2));
        return;
    }

    public void setInputSource(org.xml.sax.InputSource p2)
    {
        throw new UnsupportedOperationException();
    }

    public void setNodes(java.util.List p2)
    {
        super.setInputSource(new org.jdom.transform.JDOMSource$JDOMInputSource(p2));
        return;
    }

    public void setXMLReader(org.xml.sax.XMLReader p3)
    {
        if (!(p3 instanceof org.xml.sax.XMLFilter)) {
            throw new UnsupportedOperationException();
        } else {
            org.xml.sax.XMLFilter v0_1 = ((org.xml.sax.XMLFilter) p3);
            while ((v0_1.getParent() instanceof org.xml.sax.XMLFilter)) {
                v0_1 = ((org.xml.sax.XMLFilter) ((org.xml.sax.XMLFilter) v0_1.getParent()));
            }
            v0_1.setParent(this.buildDocumentReader());
            this.xmlReader = p3;
            return;
        }
    }
}
package org.jdom.transform;
public class XSLTransformException extends org.jdom.JDOMException {
    private static final String CVS_ID = "@(#) $RCSfile: XSLTransformException.java,v $ $Revision: 1.4 $ $Date: 2007/11/10 05:29:02 $ $Name:  $";

    public XSLTransformException()
    {
        return;
    }

    public XSLTransformException(String p1)
    {
        super(p1);
        return;
    }

    public XSLTransformException(String p1, Exception p2)
    {
        super(p1, p2);
        return;
    }
}
package org.jdom.transform;
public class XSLTransformer {
    private static final String CVS_ID = "@(#) $RCSfile: XSLTransformer.java,v $ $Revision: 1.5 $ $Date: 2007/11/14 04:36:54 $ $Name:  $";
    private org.jdom.JDOMFactory factory;
    private javax.xml.transform.Templates templates;

    public XSLTransformer(java.io.File p2)
    {
        this(new javax.xml.transform.stream.StreamSource(p2));
        return;
    }

    public XSLTransformer(java.io.InputStream p2)
    {
        this(new javax.xml.transform.stream.StreamSource(p2));
        return;
    }

    public XSLTransformer(java.io.Reader p2)
    {
        this(new javax.xml.transform.stream.StreamSource(p2));
        return;
    }

    public XSLTransformer(String p2)
    {
        this(new javax.xml.transform.stream.StreamSource(p2));
        return;
    }

    private XSLTransformer(javax.xml.transform.Source p4)
    {
        this.factory = 0;
        try {
            this.templates = javax.xml.transform.TransformerFactory.newInstance().newTemplates(p4);
            return;
        } catch (javax.xml.transform.TransformerException v0) {
            throw new org.jdom.transform.XSLTransformException("Could not construct XSLTransformer", v0);
        }
    }

    public XSLTransformer(org.jdom.Document p2)
    {
        this(new org.jdom.transform.JDOMSource(p2));
        return;
    }

    public org.jdom.JDOMFactory getFactory()
    {
        return this.factory;
    }

    public void setFactory(org.jdom.JDOMFactory p1)
    {
        this.factory = p1;
        return;
    }

    public java.util.List transform(java.util.List p6)
    {
        org.jdom.transform.JDOMSource v2_1 = new org.jdom.transform.JDOMSource(p6);
        org.jdom.transform.JDOMResult v1_1 = new org.jdom.transform.JDOMResult();
        v1_1.setFactory(this.factory);
        try {
            this.templates.newTransformer().transform(v2_1, v1_1);
            return v1_1.getResult();
        } catch (javax.xml.transform.TransformerException v0) {
            throw new org.jdom.transform.XSLTransformException("Could not perform transformation", v0);
        }
    }

    public org.jdom.Document transform(org.jdom.Document p2)
    {
        return this.transform(p2, 0);
    }

    public org.jdom.Document transform(org.jdom.Document p6, org.xml.sax.EntityResolver p7)
    {
        org.jdom.transform.JDOMSource v2_1 = new org.jdom.transform.JDOMSource(p6, p7);
        org.jdom.transform.JDOMResult v1_1 = new org.jdom.transform.JDOMResult();
        v1_1.setFactory(this.factory);
        try {
            this.templates.newTransformer().transform(v2_1, v1_1);
            return v1_1.getDocument();
        } catch (javax.xml.transform.TransformerException v0) {
            throw new org.jdom.transform.XSLTransformException("Could not perform transformation", v0);
        }
    }
}
package org.jdom.xpath;
 class JaxenXPath$NSContext extends org.jaxen.SimpleNamespaceContext {
    private final org.jdom.xpath.JaxenXPath this$0;

    public JaxenXPath$NSContext(org.jdom.xpath.JaxenXPath p1)
    {
        this.this$0 = p1;
        return;
    }

    public String translateNamespacePrefixToUri(String p6)
    {
        if ((p6 != null) && (p6.length() != 0)) {
            String v3 = super.translateNamespacePrefixToUri(p6);
            if (v3 == null) {
                org.jdom.Document v0_3 = org.jdom.xpath.JaxenXPath.access$000(this.this$0);
                if (v0_3 != null) {
                    org.jdom.Element v1_0 = 0;
                    if (!(v0_3 instanceof org.jdom.Element)) {
                        if (!(v0_3 instanceof org.jdom.Attribute)) {
                            if (!(v0_3 instanceof org.jdom.Content)) {
                                if ((v0_3 instanceof org.jdom.Document)) {
                                    v1_0 = ((org.jdom.Document) v0_3).getRootElement();
                                }
                            } else {
                                v1_0 = ((org.jdom.Content) v0_3).getParentElement();
                            }
                        } else {
                            v1_0 = ((org.jdom.Attribute) v0_3).getParent();
                        }
                    } else {
                        v1_0 = ((org.jdom.Element) v0_3);
                    }
                    if (v1_0 != null) {
                        org.jdom.Namespace v2 = v1_0.getNamespace(p6);
                        if (v2 != null) {
                            v3 = v2.getURI();
                        }
                    }
                }
            }
        } else {
            v3 = 0;
        }
        return v3;
    }
}
package org.jdom.xpath;
public abstract class XPath implements java.io.Serializable {
    private static final String CVS_ID = "@(#) $RCSfile: XPath.java,v $ $Revision: 1.17 $ $Date: 2007/11/10 05:29:02 $ $Name:  $";
    private static final String DEFAULT_XPATH_CLASS = "org.jdom.xpath.JaxenXPath";
    public static final String JDOM_OBJECT_MODEL_URI = "http://jdom.org/jaxp/xpath/jdom";
    private static final String XPATH_CLASS_PROPERTY = "org.jdom.xpath.class";
    static Class class$java$lang$String;
    static Class class$org$jdom$xpath$XPath;
    private static reflect.Constructor constructor;

    static XPath()
    {
        org.jdom.xpath.XPath.constructor = 0;
        return;
    }

    public XPath()
    {
        return;
    }

    static Class class$(String p3)
    {
        try {
            return Class.forName(p3);
        } catch (ClassNotFoundException v0) {
            throw new NoClassDefFoundError(v0.getMessage());
        }
    }

    public static org.jdom.xpath.XPath newInstance(String p8)
    {
        try {
            if (org.jdom.xpath.XPath.constructor == null) {
                try {
                    String v0 = System.getProperty("org.jdom.xpath.class", "org.jdom.xpath.JaxenXPath");
                } catch (SecurityException v1) {
                    v0 = "org.jdom.xpath.JaxenXPath";
                }
                org.jdom.xpath.XPath.setXPathClass(Class.forName(v0));
            }
        } catch (SecurityException v1) {
            throw v1;
        } catch (Exception v3) {
            throw new org.jdom.JDOMException(v3.toString(), v3);
        } catch (reflect.InvocationTargetException v2) {
            org.jdom.JDOMException v4_0 = v2.getTargetException();
            if (!(v4_0 instanceof org.jdom.JDOMException)) {
                org.jdom.JDOMException v4_1 = new org.jdom.JDOMException(v4_0.toString(), v4_0);
            } else {
                v4_1 = ((org.jdom.JDOMException) v4_0);
            }
            throw v4_1;
        }
        String v6_1 = new Object[1];
        v6_1[0] = p8;
        return ((org.jdom.xpath.XPath) org.jdom.xpath.XPath.constructor.newInstance(v6_1));
    }

    public static java.util.List selectNodes(Object p1, String p2)
    {
        return org.jdom.xpath.XPath.newInstance(p2).selectNodes(p1);
    }

    public static Object selectSingleNode(Object p1, String p2)
    {
        return org.jdom.xpath.XPath.newInstance(p2).selectSingleNode(p1);
    }

    public static void setXPathClass(Class p5)
    {
        if (p5 != null) {
            try {
                reflect.Constructor v2_5;
                if (org.jdom.xpath.XPath.class$org$jdom$xpath$XPath != null) {
                    v2_5 = org.jdom.xpath.XPath.class$org$jdom$xpath$XPath;
                } else {
                    v2_5 = org.jdom.xpath.XPath.class$("org.jdom.xpath.XPath");
                    org.jdom.xpath.XPath.class$org$jdom$xpath$XPath = v2_5;
                }
            } catch (org.jdom.JDOMException v0) {
                throw v0;
            } catch (Exception v1) {
                throw new org.jdom.JDOMException(v1.toString(), v1);
            }
            if ((!v2_5.isAssignableFrom(p5)) || (reflect.Modifier.isAbstract(p5.getModifiers()))) {
                throw new org.jdom.JDOMException(new StringBuffer().append(p5.getName()).append(" is not a concrete JDOM XPath implementation").toString());
            } else {
                reflect.Constructor v2_8;
                Class[] v3_5 = new Class[1];
                if (org.jdom.xpath.XPath.class$java$lang$String != null) {
                    v2_8 = org.jdom.xpath.XPath.class$java$lang$String;
                } else {
                    v2_8 = org.jdom.xpath.XPath.class$("java.lang.String");
                    org.jdom.xpath.XPath.class$java$lang$String = v2_8;
                }
                v3_5[0] = v2_8;
                org.jdom.xpath.XPath.constructor = p5.getConstructor(v3_5);
                return;
            }
        } else {
            throw new IllegalArgumentException("aClass");
        }
    }

    public void addNamespace(String p2, String p3)
    {
        this.addNamespace(org.jdom.Namespace.getNamespace(p2, p3));
        return;
    }

    public abstract void addNamespace();

    public abstract String getXPath();

    public abstract Number numberValueOf();

    public abstract java.util.List selectNodes();

    public abstract Object selectSingleNode();

    public abstract void setVariable();

    public abstract String valueOf();

    protected final Object writeReplace()
    {
        return new org.jdom.xpath.XPath$XPathString(this.getXPath());
    }
}
package org.jdom.xpath;
 class JaxenXPath extends org.jdom.xpath.XPath {
    private static final String CVS_ID = "@(#) $RCSfile: JaxenXPath.java,v $ $Revision: 1.20 $ $Date: 2007/11/10 05:29:02 $ $Name:  $";
    private Object currentContext;
    private transient org.jaxen.jdom.JDOMXPath xPath;

    public JaxenXPath(String p1)
    {
        this.setXPath(p1);
        return;
    }

    static Object access$000(org.jdom.xpath.JaxenXPath p1)
    {
        return p1.currentContext;
    }

    private void setXPath(String p5)
    {
        try {
            this.xPath = new org.jaxen.jdom.JDOMXPath(p5);
            this.xPath.setNamespaceContext(new org.jdom.xpath.JaxenXPath$NSContext(this));
            return;
        } catch (Exception v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append("Invalid XPath expression: \"").append(p5).append("\"").toString(), v0);
        }
    }

    public void addNamespace(org.jdom.Namespace p4)
    {
        try {
            this.xPath.addNamespace(p4.getPrefix(), p4.getURI());
        } catch (org.jaxen.JaxenException v0) {
        }
        return;
    }

    public boolean equals(Object p5)
    {
        int v1 = 0;
        if (((p5 instanceof org.jdom.xpath.JaxenXPath)) && ((super.equals(p5)) && (this.xPath.toString().equals(((org.jdom.xpath.JaxenXPath) p5).xPath.toString())))) {
            v1 = 1;
        }
        return v1;
    }

    public String getXPath()
    {
        return this.xPath.toString();
    }

    public int hashCode()
    {
        return this.xPath.hashCode();
    }

    public Number numberValueOf(Object p6)
    {
        try {
            this.currentContext = p6;
            org.jdom.JDOMException v1_3 = this.xPath.numberValueOf(p6);
            this.currentContext = 0;
            return v1_3;
        } catch (org.jdom.JDOMException v1_2) {
            this.currentContext = 0;
            throw v1_2;
        } catch (org.jaxen.JaxenException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append("XPath error while evaluating \"").append(this.xPath.toString()).append("\": ").append(v0.getMessage()).toString(), v0);
        }
    }

    public java.util.List selectNodes(Object p6)
    {
        try {
            this.currentContext = p6;
            org.jdom.JDOMException v1_3 = this.xPath.selectNodes(p6);
            this.currentContext = 0;
            return v1_3;
        } catch (org.jdom.JDOMException v1_2) {
            this.currentContext = 0;
            throw v1_2;
        } catch (org.jaxen.JaxenException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append("XPath error while evaluating \"").append(this.xPath.toString()).append("\": ").append(v0.getMessage()).toString(), v0);
        }
    }

    public Object selectSingleNode(Object p6)
    {
        try {
            this.currentContext = p6;
            org.jdom.JDOMException v1_3 = this.xPath.selectSingleNode(p6);
            this.currentContext = 0;
            return v1_3;
        } catch (org.jdom.JDOMException v1_2) {
            this.currentContext = 0;
            throw v1_2;
        } catch (org.jaxen.JaxenException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append("XPath error while evaluating \"").append(this.xPath.toString()).append("\": ").append(v0.getMessage()).toString(), v0);
        }
    }

    public void setVariable(String p3, Object p4)
    {
        org.jaxen.SimpleVariableContext v0_0 = this.xPath.getVariableContext();
        if ((v0_0 instanceof org.jaxen.SimpleVariableContext)) {
            ((org.jaxen.SimpleVariableContext) v0_0).setVariableValue(0, p3, p4);
        }
        return;
    }

    public String toString()
    {
        return this.xPath.toString();
    }

    public String valueOf(Object p6)
    {
        try {
            this.currentContext = p6;
            org.jdom.JDOMException v1_3 = this.xPath.stringValueOf(p6);
            this.currentContext = 0;
            return v1_3;
        } catch (org.jdom.JDOMException v1_2) {
            this.currentContext = 0;
            throw v1_2;
        } catch (org.jaxen.JaxenException v0) {
            throw new org.jdom.JDOMException(new StringBuffer().append("XPath error while evaluating \"").append(this.xPath.toString()).append("\": ").append(v0.getMessage()).toString(), v0);
        }
    }
}
package org.jdom.xpath;
final class XPath$XPathString implements java.io.Serializable {
    private String xPath;

    public XPath$XPathString(String p2)
    {
        this.xPath = 0;
        this.xPath = p2;
        return;
    }

    private Object readResolve()
    {
        try {
            return org.jdom.xpath.XPath.newInstance(this.xPath);
        } catch (org.jdom.JDOMException v0) {
            throw new java.io.InvalidObjectException(new StringBuffer().append("Can\'t create XPath object for expression \"").append(this.xPath).append("\": ").append(v0.toString()).toString());
        }
    }
}
package org.jsoup;
public interface Connection$Base {

    public abstract String cookie();

    public abstract org.jsoup.Connection$Base cookie();

    public abstract java.util.Map cookies();

    public abstract boolean hasCookie();

    public abstract boolean hasHeader();

    public abstract String header();

    public abstract org.jsoup.Connection$Base header();

    public abstract java.util.Map headers();

    public abstract org.jsoup.Connection$Base method();

    public abstract org.jsoup.Connection$Method method();

    public abstract org.jsoup.Connection$Base removeCookie();

    public abstract org.jsoup.Connection$Base removeHeader();

    public abstract java.net.URL url();

    public abstract org.jsoup.Connection$Base url();
}
package org.jsoup;
public interface Connection$KeyVal {

    public abstract String key();

    public abstract org.jsoup.Connection$KeyVal key();

    public abstract String value();

    public abstract org.jsoup.Connection$KeyVal value();
}
package org.jsoup;
public final enum class Connection$Method extends java.lang.Enum {
    private static final synthetic org.jsoup.Connection$Method[] $VALUES;
    public static final enum org.jsoup.Connection$Method GET;
    public static final enum org.jsoup.Connection$Method POST;

    static Connection$Method()
    {
        org.jsoup.Connection$Method.GET = new org.jsoup.Connection$Method("GET", 0);
        org.jsoup.Connection$Method.POST = new org.jsoup.Connection$Method("POST", 1);
        org.jsoup.Connection$Method[] v0_1 = new org.jsoup.Connection$Method[2];
        v0_1[0] = org.jsoup.Connection$Method.GET;
        v0_1[1] = org.jsoup.Connection$Method.POST;
        org.jsoup.Connection$Method.$VALUES = v0_1;
        return;
    }

    private Connection$Method(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    public static org.jsoup.Connection$Method valueOf(String p1)
    {
        return ((org.jsoup.Connection$Method) Enum.valueOf(org.jsoup.Connection$Method, p1));
    }

    public static org.jsoup.Connection$Method[] values()
    {
        return ((org.jsoup.Connection$Method[]) org.jsoup.Connection$Method.$VALUES.clone());
    }
}
package org.jsoup;
public interface Connection$Request implements org.jsoup.Connection$Base {

    public abstract java.util.Collection data();

    public abstract org.jsoup.Connection$Request data();

    public abstract org.jsoup.Connection$Request followRedirects();

    public abstract boolean followRedirects();

    public abstract void ignoreContentType();

    public abstract boolean ignoreContentType();

    public abstract void ignoreHttpErrors();

    public abstract boolean ignoreHttpErrors();

    public abstract int timeout();

    public abstract org.jsoup.Connection$Request timeout();
}
package org.jsoup;
public interface Connection$Response implements org.jsoup.Connection$Base {

    public abstract String body();

    public abstract byte[] bodyAsBytes();

    public abstract String charset();

    public abstract String contentType();

    public abstract org.jsoup.nodes.Document parse();

    public abstract int statusCode();

    public abstract String statusMessage();
}
package org.jsoup;
public interface Connection {

    public abstract org.jsoup.Connection cookie();

    public abstract org.jsoup.Connection data();

    public abstract org.jsoup.Connection data();

    public abstract varargs org.jsoup.Connection data();

    public abstract org.jsoup.Connection$Response execute();

    public abstract org.jsoup.Connection followRedirects();

    public abstract org.jsoup.nodes.Document get();

    public abstract org.jsoup.Connection header();

    public abstract org.jsoup.Connection ignoreContentType();

    public abstract org.jsoup.Connection ignoreHttpErrors();

    public abstract org.jsoup.Connection method();

    public abstract org.jsoup.nodes.Document post();

    public abstract org.jsoup.Connection referrer();

    public abstract org.jsoup.Connection$Request request();

    public abstract org.jsoup.Connection request();

    public abstract org.jsoup.Connection$Response response();

    public abstract org.jsoup.Connection response();

    public abstract org.jsoup.Connection timeout();

    public abstract org.jsoup.Connection url();

    public abstract org.jsoup.Connection url();

    public abstract org.jsoup.Connection userAgent();
}
package org.jsoup;
public class Jsoup {

    private Jsoup()
    {
        return;
    }

    public static String clean(String p4, String p5, org.jsoup.safety.Whitelist p6)
    {
        return new org.jsoup.safety.Cleaner(p6).clean(org.jsoup.Jsoup.parseBodyFragment(p4, p5)).body().html();
    }

    public static String clean(String p1, org.jsoup.safety.Whitelist p2)
    {
        return org.jsoup.Jsoup.clean(p1, "", p2);
    }

    public static org.jsoup.Connection connect(String p1)
    {
        return org.jsoup.helper.HttpConnection.connect(p1);
    }

    public static boolean isValid(String p3, org.jsoup.safety.Whitelist p4)
    {
        return new org.jsoup.safety.Cleaner(p4).isValid(org.jsoup.Jsoup.parseBodyFragment(p3, ""));
    }

    public static org.jsoup.nodes.Document parse(java.io.File p1, String p2)
    {
        return org.jsoup.helper.DataUtil.load(p1, p2, p1.getAbsolutePath());
    }

    public static org.jsoup.nodes.Document parse(java.io.File p1, String p2, String p3)
    {
        return org.jsoup.helper.DataUtil.load(p1, p2, p3);
    }

    public static org.jsoup.nodes.Document parse(java.io.InputStream p1, String p2, String p3)
    {
        return org.jsoup.helper.DataUtil.load(p1, p2, p3);
    }

    public static org.jsoup.nodes.Document parse(String p1)
    {
        return org.jsoup.parser.Parser.parse(p1, "");
    }

    public static org.jsoup.nodes.Document parse(String p1, String p2)
    {
        return org.jsoup.parser.Parser.parse(p1, p2);
    }

    public static org.jsoup.nodes.Document parse(java.net.URL p2, int p3)
    {
        org.jsoup.Connection v0 = org.jsoup.helper.HttpConnection.connect(p2);
        v0.timeout(p3);
        return v0.get();
    }

    public static org.jsoup.nodes.Document parseBodyFragment(String p1)
    {
        return org.jsoup.parser.Parser.parseBodyFragment(p1, "");
    }

    public static org.jsoup.nodes.Document parseBodyFragment(String p1, String p2)
    {
        return org.jsoup.parser.Parser.parseBodyFragment(p1, p2);
    }
}
package org.jsoup.examples;
public class ListLinks {

    public ListLinks()
    {
        return;
    }

    public static void main(String[] p13)
    {
        String v8_10;
        if (p13.length != 1) {
            v8_10 = 0;
        } else {
            v8_10 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v8_10, "usage: supply url to fetch");
        String v7 = p13[0];
        Object[] v9_2 = new Object[1];
        v9_2[0] = v7;
        org.jsoup.examples.ListLinks.print("Fetching %s...", v9_2);
        org.jsoup.nodes.Document v0 = org.jsoup.Jsoup.connect(v7).get();
        org.jsoup.select.Elements v4 = v0.select("a[href]");
        org.jsoup.select.Elements v5 = v0.select("[src]");
        org.jsoup.select.Elements v2 = v0.select("link[href]");
        Object[] v9_9 = new Object[1];
        v9_9[0] = Integer.valueOf(v5.size());
        org.jsoup.examples.ListLinks.print("\nMedia: (%d)", v9_9);
        java.util.Iterator v1_0 = v5.iterator();
        while (v1_0.hasNext()) {
            org.jsoup.nodes.Element v6_1 = ((org.jsoup.nodes.Element) v1_0.next());
            if (!v6_1.tagName().equals("img")) {
                Object[] v9_5 = new Object[2];
                v9_5[0] = v6_1.tagName();
                v9_5[1] = v6_1.attr("abs:src");
                org.jsoup.examples.ListLinks.print(" * %s: <%s>", v9_5);
            } else {
                Object[] v9_7 = new Object[5];
                v9_7[0] = v6_1.tagName();
                v9_7[1] = v6_1.attr("abs:src");
                v9_7[2] = v6_1.attr("width");
                v9_7[3] = v6_1.attr("height");
                v9_7[4] = org.jsoup.examples.ListLinks.trim(v6_1.attr("alt"), 20);
                org.jsoup.examples.ListLinks.print(" * %s: <%s> %sx%s (%s)", v9_7);
            }
        }
        Object[] v9_11 = new Object[1];
        v9_11[0] = Integer.valueOf(v2.size());
        org.jsoup.examples.ListLinks.print("\nImports: (%d)", v9_11);
        java.util.Iterator v1_1 = v2.iterator();
        while (v1_1.hasNext()) {
            org.jsoup.nodes.Element v3_3 = ((org.jsoup.nodes.Element) v1_1.next());
            Object[] v9_18 = new Object[3];
            v9_18[0] = v3_3.tagName();
            v9_18[1] = v3_3.attr("abs:href");
            v9_18[2] = v3_3.attr("rel");
            org.jsoup.examples.ListLinks.print(" * %s <%s> (%s)", v9_18);
        }
        Object[] v9_14 = new Object[1];
        v9_14[0] = Integer.valueOf(v4.size());
        org.jsoup.examples.ListLinks.print("\nLinks: (%d)", v9_14);
        java.util.Iterator v1_2 = v4.iterator();
        while (v1_2.hasNext()) {
            org.jsoup.nodes.Element v3_1 = ((org.jsoup.nodes.Element) v1_2.next());
            Object[] v9_16 = new Object[2];
            v9_16[0] = v3_1.attr("abs:href");
            v9_16[1] = org.jsoup.examples.ListLinks.trim(v3_1.text(), 35);
            org.jsoup.examples.ListLinks.print(" * a: <%s>  (%s)", v9_16);
        }
        return;
    }

    private static varargs void print(String p2, Object[] p3)
    {
        System.out.println(String.format(p2, p3));
        return;
    }

    private static String trim(String p3, int p4)
    {
        if (p3.length() > p4) {
            p3 = new StringBuilder().append(p3.substring(0, (p4 - 1))).append(".").toString();
        }
        return p3;
    }
}
package org.jsoup.helper;
public class DataUtil {
    private static final int bufferSize = 131072;
    private static final java.util.regex.Pattern charsetPattern = None;
    static final String defaultCharset = "UTF-8";

    static DataUtil()
    {
        org.jsoup.helper.DataUtil.charsetPattern = java.util.regex.Pattern.compile("(?i)\\bcharset=\\s*\"?([^\\s;\"]*)");
        return;
    }

    private DataUtil()
    {
        return;
    }

    static String getCharsetFromContentType(String p3)
    {
        String v1_0 = 0;
        if (p3 != null) {
            java.util.regex.Matcher v0 = org.jsoup.helper.DataUtil.charsetPattern.matcher(p3);
            if (v0.find()) {
                v1_0 = v0.group(1).trim().toUpperCase();
            }
        }
        return v1_0;
    }

    public static org.jsoup.nodes.Document load(java.io.File p4, String p5, String p6)
    {
        java.io.FileInputStream v1 = 0;
        try {
            java.io.FileInputStream v2_1 = new java.io.FileInputStream(p4);
            try {
                Throwable v3_1 = org.jsoup.helper.DataUtil.parseByteData(org.jsoup.helper.DataUtil.readToByteBuffer(v2_1), p5, p6);
            } catch (Throwable v3_0) {
                v1 = v2_1;
                if (v1 != null) {
                    v1.close();
                }
                throw v3_0;
            }
            if (v2_1 != null) {
                v2_1.close();
            }
            return v3_1;
        } catch (Throwable v3_0) {
        }
    }

    public static org.jsoup.nodes.Document load(java.io.InputStream p2, String p3, String p4)
    {
        return org.jsoup.helper.DataUtil.parseByteData(org.jsoup.helper.DataUtil.readToByteBuffer(p2), p3, p4);
    }

    static org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer p5, String p6, String p7)
    {
        String v1;
        int v0 = 0;
        if (p6 != null) {
            org.jsoup.helper.Validate.notEmpty(p6, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
            v1 = java.nio.charset.Charset.forName(p6).decode(p5).toString();
        } else {
            v1 = java.nio.charset.Charset.forName("UTF-8").decode(p5).toString();
            v0 = org.jsoup.Jsoup.parse(v1, p7);
            org.jsoup.nodes.Element v3 = v0.select("meta[http-equiv=content-type], meta[charset]").first();
            if (v3 != null) {
                String v2;
                if (!v3.hasAttr("http-equiv")) {
                    v2 = v3.attr("charset");
                } else {
                    v2 = org.jsoup.helper.DataUtil.getCharsetFromContentType(v3.attr("content"));
                }
                if ((v2 != null) && ((v2.length() != 0) && (!v2.equals("UTF-8")))) {
                    p6 = v2;
                    p5.rewind();
                    v1 = java.nio.charset.Charset.forName(v2).decode(p5).toString();
                    v0 = 0;
                }
            }
        }
        if (v0 == 0) {
            v0 = org.jsoup.Jsoup.parse(v1, p7);
            v0.outputSettings().charset(p6);
        }
        return v0;
    }

    static java.nio.ByteBuffer readToByteBuffer(java.io.InputStream p5)
    {
        byte[] v0 = new byte[131072];
        java.io.ByteArrayOutputStream v2_1 = new java.io.ByteArrayOutputStream(131072);
        while(true) {
            int v3 = p5.read(v0);
            if (v3 == -1) {
                break;
            }
            v2_1.write(v0, 0, v3);
        }
        return java.nio.ByteBuffer.wrap(v2_1.toByteArray());
    }
}
package org.jsoup.helper;
synthetic class DescendableLinkedList$1 {
}
package org.jsoup.helper;
 class DescendableLinkedList$DescendingIterator implements java.util.Iterator {
    private final java.util.ListIterator iter;
    final synthetic org.jsoup.helper.DescendableLinkedList this$0;

    private DescendableLinkedList$DescendingIterator(org.jsoup.helper.DescendableLinkedList p2, int p3)
    {
        this.this$0 = p2;
        this.iter = p2.listIterator(p3);
        return;
    }

    synthetic DescendableLinkedList$DescendingIterator(org.jsoup.helper.DescendableLinkedList p1, int p2, org.jsoup.helper.DescendableLinkedList$1 p3)
    {
        this(p1, p2);
        return;
    }

    public boolean hasNext()
    {
        return this.iter.hasPrevious();
    }

    public Object next()
    {
        return this.iter.previous();
    }

    public void remove()
    {
        this.iter.remove();
        return;
    }
}
package org.jsoup.helper;
public class DescendableLinkedList extends java.util.LinkedList {

    public DescendableLinkedList()
    {
        return;
    }

    public java.util.Iterator descendingIterator()
    {
        return new org.jsoup.helper.DescendableLinkedList$DescendingIterator(this, this.size(), 0);
    }

    public Object peekLast()
    {
        Object v0_1;
        if (this.size() != 0) {
            v0_1 = this.getLast();
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    public Object pollLast()
    {
        Object v0_1;
        if (this.size() != 0) {
            v0_1 = this.removeLast();
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    public void push(Object p1)
    {
        this.addFirst(p1);
        return;
    }
}
package org.jsoup.helper;
synthetic class HttpConnection$1 {
}
package org.jsoup.helper;
abstract class HttpConnection$Base implements org.jsoup.Connection$Base {
    java.util.Map cookies;
    java.util.Map headers;
    org.jsoup.Connection$Method method;
    java.net.URL url;

    private HttpConnection$Base()
    {
        this.headers = new java.util.LinkedHashMap();
        this.cookies = new java.util.LinkedHashMap();
        return;
    }

    synthetic HttpConnection$Base(org.jsoup.helper.HttpConnection$1 p1)
    {
        return;
    }

    private String getHeaderCaseInsensitive(String p5)
    {
        org.jsoup.helper.Validate.notNull(p5, "Header name must not be null");
        String v1_1 = ((String) this.headers.get(p5));
        if (v1_1 == null) {
            v1_1 = ((String) this.headers.get(p5.toLowerCase()));
        }
        if (v1_1 == null) {
            java.util.Map$Entry v0 = this.scanHeaders(p5);
            if (v0 != null) {
                v1_1 = ((String) v0.getValue());
            }
        }
        return v1_1;
    }

    private java.util.Map$Entry scanHeaders(String p5)
    {
        String v2 = p5.toLowerCase();
        java.util.Iterator v1 = this.headers.entrySet().iterator();
        while (v1.hasNext()) {
            int v0_0 = ((java.util.Map$Entry) v1.next());
            if (((String) v0_0.getKey()).toLowerCase().equals(v2)) {
            }
            return v0_0;
        }
        v0_0 = 0;
        return v0_0;
    }

    public String cookie(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "Cookie name must not be null");
        return ((String) this.cookies.get(p2));
    }

    public org.jsoup.Connection$Base cookie(String p2, String p3)
    {
        org.jsoup.helper.Validate.notEmpty(p2, "Cookie name must not be empty");
        org.jsoup.helper.Validate.notNull(p3, "Cookie value must not be null");
        this.cookies.put(p2, p3);
        return this;
    }

    public java.util.Map cookies()
    {
        return this.cookies;
    }

    public boolean hasCookie(String p2)
    {
        org.jsoup.helper.Validate.notEmpty("Cookie name must not be empty");
        return this.cookies.containsKey(p2);
    }

    public boolean hasHeader(String p2)
    {
        int v0_2;
        org.jsoup.helper.Validate.notEmpty(p2, "Header name must not be empty");
        if (this.getHeaderCaseInsensitive(p2) == null) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String header(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "Header name must not be null");
        return this.getHeaderCaseInsensitive(p2);
    }

    public org.jsoup.Connection$Base header(String p2, String p3)
    {
        org.jsoup.helper.Validate.notEmpty(p2, "Header name must not be empty");
        org.jsoup.helper.Validate.notNull(p3, "Header value must not be null");
        this.removeHeader(p2);
        this.headers.put(p2, p3);
        return this;
    }

    public java.util.Map headers()
    {
        return this.headers;
    }

    public org.jsoup.Connection$Base method(org.jsoup.Connection$Method p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "Method must not be null");
        this.method = p2;
        return this;
    }

    public org.jsoup.Connection$Method method()
    {
        return this.method;
    }

    public org.jsoup.Connection$Base removeCookie(String p2)
    {
        org.jsoup.helper.Validate.notEmpty("Cookie name must not be empty");
        this.cookies.remove(p2);
        return this;
    }

    public org.jsoup.Connection$Base removeHeader(String p4)
    {
        org.jsoup.helper.Validate.notEmpty(p4, "Header name must not be empty");
        java.util.Map$Entry v0 = this.scanHeaders(p4);
        if (v0 != null) {
            this.headers.remove(v0.getKey());
        }
        return this;
    }

    public java.net.URL url()
    {
        return this.url;
    }

    public org.jsoup.Connection$Base url(java.net.URL p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "URL must not be null");
        this.url = p2;
        return this;
    }
}
package org.jsoup.helper;
public class HttpConnection$KeyVal implements org.jsoup.Connection$KeyVal {
    private String key;
    private String value;

    private HttpConnection$KeyVal(String p1, String p2)
    {
        this.key = p1;
        this.value = p2;
        return;
    }

    public static org.jsoup.helper.HttpConnection$KeyVal create(String p1, String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p1, "Data key must not be empty");
        org.jsoup.helper.Validate.notNull(p2, "Data value must not be null");
        return new org.jsoup.helper.HttpConnection$KeyVal(p1, p2);
    }

    public String key()
    {
        return this.key;
    }

    public bridge synthetic org.jsoup.Connection$KeyVal key(String p2)
    {
        return this.key(p2);
    }

    public org.jsoup.helper.HttpConnection$KeyVal key(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2, "Data key must not be empty");
        this.key = p2;
        return this;
    }

    public String toString()
    {
        return new StringBuilder().append(this.key).append("=").append(this.value).toString();
    }

    public String value()
    {
        return this.value;
    }

    public bridge synthetic org.jsoup.Connection$KeyVal value(String p2)
    {
        return this.value(p2);
    }

    public org.jsoup.helper.HttpConnection$KeyVal value(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "Data value must not be null");
        this.value = p2;
        return this;
    }
}
package org.jsoup.helper;
public class HttpConnection$Request extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Request {
    private java.util.Collection data;
    private boolean followRedirects;
    private boolean ignoreContentType;
    private boolean ignoreHttpErrors;
    private int timeoutMilliseconds;

    private HttpConnection$Request()
    {
        super(0);
        super.ignoreHttpErrors = 0;
        super.ignoreContentType = 0;
        super.timeoutMilliseconds = 3000;
        super.followRedirects = 1;
        super.data = new java.util.ArrayList();
        super.method = org.jsoup.Connection$Method.GET;
        super.headers.put("Accept-Encoding", "gzip");
        return;
    }

    synthetic HttpConnection$Request(org.jsoup.helper.HttpConnection$1 p1)
    {
        return;
    }

    public bridge synthetic String cookie(String p2)
    {
        return super.cookie(p2);
    }

    public bridge synthetic java.util.Map cookies()
    {
        return super.cookies();
    }

    public java.util.Collection data()
    {
        return this.data;
    }

    public bridge synthetic org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal p2)
    {
        return this.data(p2);
    }

    public org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal p2)
    {
        org.jsoup.helper.Validate.notNull(p2, "Key val must not be null");
        this.data.add(p2);
        return this;
    }

    public org.jsoup.Connection$Request followRedirects(boolean p1)
    {
        this.followRedirects = p1;
        return this;
    }

    public boolean followRedirects()
    {
        return this.followRedirects;
    }

    public bridge synthetic boolean hasCookie(String p2)
    {
        return super.hasCookie(p2);
    }

    public bridge synthetic boolean hasHeader(String p2)
    {
        return super.hasHeader(p2);
    }

    public bridge synthetic String header(String p2)
    {
        return super.header(p2);
    }

    public bridge synthetic java.util.Map headers()
    {
        return super.headers();
    }

    public void ignoreContentType(boolean p1)
    {
        this.ignoreContentType = p1;
        return;
    }

    public boolean ignoreContentType()
    {
        return this.ignoreContentType;
    }

    public void ignoreHttpErrors(boolean p1)
    {
        this.ignoreHttpErrors = p1;
        return;
    }

    public boolean ignoreHttpErrors()
    {
        return this.ignoreHttpErrors;
    }

    public bridge synthetic org.jsoup.Connection$Method method()
    {
        return super.method();
    }

    public int timeout()
    {
        return this.timeoutMilliseconds;
    }

    public bridge synthetic org.jsoup.Connection$Request timeout(int p2)
    {
        return this.timeout(p2);
    }

    public org.jsoup.helper.HttpConnection$Request timeout(int p3)
    {
        int v0;
        if (p3 < 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v0, "Timeout milliseconds must be 0 (infinite) or greater");
        this.timeoutMilliseconds = p3;
        return this;
    }

    public bridge synthetic java.net.URL url()
    {
        return super.url();
    }
}
package org.jsoup.helper;
public class HttpConnection$Response extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Response {
    private static final int MAX_REDIRECTS = 20;
    private java.nio.ByteBuffer byteData;
    private String charset;
    private String contentType;
    private boolean executed;
    private int numRedirects;
    private org.jsoup.Connection$Request req;
    private int statusCode;
    private String statusMessage;

    HttpConnection$Response()
    {
        super(0);
        super.executed = 0;
        super.numRedirects = 0;
        return;
    }

    private HttpConnection$Response(org.jsoup.helper.HttpConnection$Response p6)
    {
        super(0);
        super.executed = 0;
        super.numRedirects = 0;
        if (p6 != null) {
            super.numRedirects = (p6.numRedirects + 1);
            if (super.numRedirects >= 20) {
                Object[] v2_1 = new Object[1];
                v2_1[0] = p6.url();
                throw new java.io.IOException(String.format("Too many redirects occurred trying to load URL %s", v2_1));
            }
        }
        return;
    }

    private static java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request p5)
    {
        java.net.HttpURLConnection v0_1 = ((java.net.HttpURLConnection) p5.url().openConnection());
        v0_1.setRequestMethod(p5.method().name());
        v0_1.setInstanceFollowRedirects(0);
        v0_1.setConnectTimeout(p5.timeout());
        v0_1.setReadTimeout(p5.timeout());
        if (p5.method() == org.jsoup.Connection$Method.POST) {
            v0_1.setDoOutput(1);
        }
        if (p5.cookies().size() > 0) {
            v0_1.addRequestProperty("Cookie", org.jsoup.helper.HttpConnection$Response.getRequestCookieString(p5));
        }
        java.util.Iterator v2 = p5.headers().entrySet().iterator();
        while (v2.hasNext()) {
            java.util.Map$Entry v1_1 = ((java.util.Map$Entry) v2.next());
            v0_1.addRequestProperty(((String) v1_1.getKey()), ((String) v1_1.getValue()));
        }
        return v0_1;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request p1)
    {
        return org.jsoup.helper.HttpConnection$Response.execute(p1, 0);
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request p12, org.jsoup.helper.HttpConnection$Response p13)
    {
        String v9_17;
        org.jsoup.helper.Validate.notNull(p12, "Request must not be null");
        String v6 = p12.url().getProtocol();
        if ((!v6.equals("http")) && (!v6.equals("https"))) {
            v9_17 = 0;
        } else {
            v9_17 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v9_17, "Only http & https protocols supported");
        if ((p12.method() == org.jsoup.Connection$Method.GET) && (p12.data().size() > 0)) {
            org.jsoup.helper.HttpConnection$Response.serialiseRequestUrl(p12);
        }
        java.net.HttpURLConnection v1 = org.jsoup.helper.HttpConnection$Response.createConnection(p12);
        v1.connect();
        if (p12.method() == org.jsoup.Connection$Method.POST) {
            org.jsoup.helper.HttpConnection$Response.writePost(p12.data(), v1.getOutputStream());
        }
        int v8 = v1.getResponseCode();
        int v5 = 0;
        if (v8 != 200) {
            if ((v8 != 302) && ((v8 != 301) && (v8 != 303))) {
                if (!p12.ignoreHttpErrors()) {
                    throw new java.io.IOException(new StringBuilder().append(v8).append(" error loading URL ").append(p12.url().toString()).toString());
                }
            } else {
                v5 = 1;
            }
        }
        org.jsoup.helper.HttpConnection$Response v7_0 = new org.jsoup.helper.HttpConnection$Response(p13).setupFromConnection(v1, p13);
        if ((v5 == 0) || (!p12.followRedirects())) {
            v7_0.req = p12;
            java.io.BufferedInputStream v0 = 0;
            java.io.InputStream v3 = 0;
            try {
                if (v1.getErrorStream() == null) {
                    v3 = v1.getInputStream();
                } else {
                    v3 = v1.getErrorStream();
                }
            } catch (String v9_7) {
                if (v0 != null) {
                    v0.close();
                }
                if (v3 != null) {
                    v3.close();
                }
                throw v9_7;
            }
            if ((!v7_0.hasHeader("Content-Encoding")) || (!v7_0.header("Content-Encoding").equalsIgnoreCase("gzip"))) {
                v0 = new java.io.BufferedInputStream(v3);
            } else {
                v0 = new java.io.BufferedInputStream(new java.util.zip.GZIPInputStream(v3));
            }
            v7_0.byteData = org.jsoup.helper.DataUtil.readToByteBuffer(v0);
            v7_0.charset = org.jsoup.helper.DataUtil.getCharsetFromContentType(v7_0.contentType);
            if (v0 != null) {
                v0.close();
            }
            if (v3 != null) {
                v3.close();
            }
            v7_0.executed = 1;
        } else {
            p12.url(new java.net.URL(p12.url(), v7_0.header("Location")));
            java.util.Iterator v4 = v7_0.cookies.entrySet().iterator();
            while (v4.hasNext()) {
                java.util.Map$Entry v2_1 = ((java.util.Map$Entry) v4.next());
                p12.cookie(((String) v2_1.getKey()), ((String) v2_1.getValue()));
            }
            v7_0 = org.jsoup.helper.HttpConnection$Response.execute(p12, v7_0);
        }
        return v7_0;
    }

    private static String getRequestCookieString(org.jsoup.Connection$Request p6)
    {
        StringBuilder v3_1 = new StringBuilder();
        int v1 = 1;
        java.util.Iterator v2 = p6.cookies().entrySet().iterator();
        while (v2.hasNext()) {
            java.util.Map$Entry v0_1 = ((java.util.Map$Entry) v2.next());
            if (v1 != 0) {
                v1 = 0;
            } else {
                v3_1.append("; ");
            }
            v3_1.append(((String) v0_1.getKey())).append(61).append(((String) v0_1.getValue()));
        }
        return v3_1.toString();
    }

    private static void serialiseRequestUrl(org.jsoup.Connection$Request p8)
    {
        java.net.URL v2 = p8.url();
        StringBuilder v4_1 = new StringBuilder();
        int v0 = 1;
        v4_1.append(v2.getProtocol()).append("://").append(v2.getAuthority()).append(v2.getPath()).append("?");
        if (v2.getQuery() != null) {
            v4_1.append(v2.getQuery());
            v0 = 0;
        }
        java.util.Iterator v1 = p8.data().iterator();
        while (v1.hasNext()) {
            org.jsoup.Connection$KeyVal v3_1 = ((org.jsoup.Connection$KeyVal) v1.next());
            if (v0 != 0) {
                v0 = 0;
            } else {
                v4_1.append(38);
            }
            v4_1.append(java.net.URLEncoder.encode(v3_1.key(), "UTF-8")).append(61).append(java.net.URLEncoder.encode(v3_1.value(), "UTF-8"));
        }
        p8.url(new java.net.URL(v4_1.toString()));
        p8.data().clear();
        return;
    }

    private void setupFromConnection(java.net.HttpURLConnection p6, org.jsoup.Connection$Response p7)
    {
        this.method = org.jsoup.Connection$Method.valueOf(p6.getRequestMethod());
        this.url = p6.getURL();
        this.statusCode = p6.getResponseCode();
        this.statusMessage = p6.getResponseMessage();
        this.contentType = p6.getContentType();
        this.processResponseHeaders(p6.getHeaderFields());
        if (p7 != null) {
            java.util.Iterator v0 = p7.cookies().entrySet().iterator();
            while (v0.hasNext()) {
                java.util.Map$Entry v1_1 = ((java.util.Map$Entry) v0.next());
                if (!this.hasCookie(((String) v1_1.getKey()))) {
                    this.cookie(((String) v1_1.getKey()), ((String) v1_1.getValue()));
                }
            }
        }
        return;
    }

    private static void writePost(java.util.Collection p6, java.io.OutputStream p7)
    {
        java.io.OutputStreamWriter v3_1 = new java.io.OutputStreamWriter(p7, "UTF-8");
        int v0 = 1;
        java.util.Iterator v1 = p6.iterator();
        while (v1.hasNext()) {
            org.jsoup.Connection$KeyVal v2_1 = ((org.jsoup.Connection$KeyVal) v1.next());
            if (v0 != 0) {
                v0 = 0;
            } else {
                v3_1.append(38);
            }
            v3_1.write(java.net.URLEncoder.encode(v2_1.key(), "UTF-8"));
            v3_1.write(61);
            v3_1.write(java.net.URLEncoder.encode(v2_1.value(), "UTF-8"));
        }
        v3_1.close();
        return;
    }

    public String body()
    {
        String v0;
        org.jsoup.helper.Validate.isTrue(this.executed, "Request must be executed (with .execute(), .get(), or .post() before getting response body");
        if (this.charset != null) {
            v0 = java.nio.charset.Charset.forName(this.charset).decode(this.byteData).toString();
        } else {
            v0 = java.nio.charset.Charset.forName("UTF-8").decode(this.byteData).toString();
        }
        this.byteData.rewind();
        return v0;
    }

    public byte[] bodyAsBytes()
    {
        org.jsoup.helper.Validate.isTrue(this.executed, "Request must be executed (with .execute(), .get(), or .post() before getting response body");
        return this.byteData.array();
    }

    public String charset()
    {
        return this.charset;
    }

    public String contentType()
    {
        return this.contentType;
    }

    public bridge synthetic String cookie(String p2)
    {
        return super.cookie(p2);
    }

    public bridge synthetic java.util.Map cookies()
    {
        return super.cookies();
    }

    public bridge synthetic boolean hasCookie(String p2)
    {
        return super.hasCookie(p2);
    }

    public bridge synthetic boolean hasHeader(String p2)
    {
        return super.hasHeader(p2);
    }

    public bridge synthetic String header(String p2)
    {
        return super.header(p2);
    }

    public bridge synthetic java.util.Map headers()
    {
        return super.headers();
    }

    public bridge synthetic org.jsoup.Connection$Method method()
    {
        return super.method();
    }

    public org.jsoup.nodes.Document parse()
    {
        org.jsoup.helper.Validate.isTrue(this.executed, "Request must be executed (with .execute(), .get(), or .post() before parsing response");
        if ((this.req.ignoreContentType()) || ((this.contentType != null) && ((this.contentType.startsWith("text/")) || ((this.contentType.startsWith("application/xml")) || (this.contentType.startsWith("application/xhtml+xml")))))) {
            org.jsoup.nodes.Document v0 = org.jsoup.helper.DataUtil.parseByteData(this.byteData, this.charset, this.url.toExternalForm());
            this.byteData.rewind();
            this.charset = v0.outputSettings().charset().name();
            return v0;
        } else {
            Object[] v3_3 = new Object[2];
            v3_3[0] = this.contentType;
            v3_3[1] = this.url.toString();
            throw new java.io.IOException(String.format("Unhandled content type \"%s\" on URL %s. Must be text/*, application/xml, or application/xhtml+xml", v3_3));
        }
    }

    void processResponseHeaders(java.util.Map p11)
    {
        java.util.Iterator v4 = p11.entrySet().iterator();
        while (v4.hasNext()) {
            java.util.Map$Entry v3_0 = ((java.util.Map$Entry) v4.next());
            String v6_1 = ((String) v3_0.getKey());
            if (v6_1 != null) {
                java.util.List v8_1 = ((java.util.List) v3_0.getValue());
                if (!v6_1.equalsIgnoreCase("Set-Cookie")) {
                    if (v8_1.isEmpty()) {
                    } else {
                        this.header(v6_1, ((String) v8_1.get(0)));
                    }
                } else {
                    java.util.Iterator v5 = v8_1.iterator();
                    while (v5.hasNext()) {
                        String v7_1 = ((String) v5.next());
                        if (v7_1 != null) {
                            org.jsoup.parser.TokenQueue v0_1 = new org.jsoup.parser.TokenQueue(v7_1);
                            String v1 = v0_1.chompTo("=").trim();
                            String v2 = v0_1.consumeTo(";").trim();
                            if (v2 == null) {
                                v2 = "";
                            }
                            if ((v1 != null) && (v1.length() > 0)) {
                                this.cookie(v1, v2);
                            }
                        }
                    }
                }
            }
        }
        return;
    }

    public int statusCode()
    {
        return this.statusCode;
    }

    public String statusMessage()
    {
        return this.statusMessage;
    }

    public bridge synthetic java.net.URL url()
    {
        return super.url();
    }
}
package org.jsoup.helper;
public class HttpConnection implements org.jsoup.Connection {
    private org.jsoup.Connection$Request req;
    private org.jsoup.Connection$Response res;

    private HttpConnection()
    {
        this.req = new org.jsoup.helper.HttpConnection$Request(0);
        this.res = new org.jsoup.helper.HttpConnection$Response();
        return;
    }

    public static org.jsoup.Connection connect(String p1)
    {
        org.jsoup.helper.HttpConnection v0_1 = new org.jsoup.helper.HttpConnection();
        v0_1.url(p1);
        return v0_1;
    }

    public static org.jsoup.Connection connect(java.net.URL p1)
    {
        org.jsoup.helper.HttpConnection v0_1 = new org.jsoup.helper.HttpConnection();
        v0_1.url(p1);
        return v0_1;
    }

    public org.jsoup.Connection cookie(String p2, String p3)
    {
        this.req.cookie(p2, p3);
        return this;
    }

    public org.jsoup.Connection data(String p3, String p4)
    {
        this.req.data(org.jsoup.helper.HttpConnection$KeyVal.create(p3, p4));
        return this;
    }

    public org.jsoup.Connection data(java.util.Map p6)
    {
        org.jsoup.helper.Validate.notNull(p6, "Data map must not be null");
        java.util.Iterator v1 = p6.entrySet().iterator();
        while (v1.hasNext()) {
            java.util.Map$Entry v0_1 = ((java.util.Map$Entry) v1.next());
            this.req.data(org.jsoup.helper.HttpConnection$KeyVal.create(((String) v0_1.getKey()), ((String) v0_1.getValue())));
        }
        return this;
    }

    public varargs org.jsoup.Connection data(String[] p6)
    {
        org.jsoup.Connection$Request v3_8;
        org.jsoup.helper.Validate.notNull(p6, "Data key value pairs must not be null");
        if ((p6.length % 2) != 0) {
            v3_8 = 0;
        } else {
            v3_8 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v3_8, "Must supply an even number of key value pairs");
        int v0 = 0;
        while (v0 < p6.length) {
            String v1 = p6[v0];
            String v2 = p6[(v0 + 1)];
            org.jsoup.helper.Validate.notEmpty(v1, "Data key must not be empty");
            org.jsoup.helper.Validate.notNull(v2, "Data value must not be null");
            this.req.data(org.jsoup.helper.HttpConnection$KeyVal.create(v1, v2));
            v0 += 2;
        }
        return this;
    }

    public org.jsoup.Connection$Response execute()
    {
        this.res = org.jsoup.helper.HttpConnection$Response.execute(this.req);
        return this.res;
    }

    public org.jsoup.Connection followRedirects(boolean p2)
    {
        this.req.followRedirects(p2);
        return this;
    }

    public org.jsoup.nodes.Document get()
    {
        this.req.method(org.jsoup.Connection$Method.GET);
        this.execute();
        return this.res.parse();
    }

    public org.jsoup.Connection header(String p2, String p3)
    {
        this.req.header(p2, p3);
        return this;
    }

    public org.jsoup.Connection ignoreContentType(boolean p2)
    {
        this.req.ignoreContentType(p2);
        return this;
    }

    public org.jsoup.Connection ignoreHttpErrors(boolean p2)
    {
        this.req.ignoreHttpErrors(p2);
        return this;
    }

    public org.jsoup.Connection method(org.jsoup.Connection$Method p2)
    {
        this.req.method(p2);
        return this;
    }

    public org.jsoup.nodes.Document post()
    {
        this.req.method(org.jsoup.Connection$Method.POST);
        this.execute();
        return this.res.parse();
    }

    public org.jsoup.Connection referrer(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3, "Referrer must not be null");
        this.req.header("Referer", p3);
        return this;
    }

    public org.jsoup.Connection$Request request()
    {
        return this.req;
    }

    public org.jsoup.Connection request(org.jsoup.Connection$Request p1)
    {
        this.req = p1;
        return this;
    }

    public org.jsoup.Connection$Response response()
    {
        return this.res;
    }

    public org.jsoup.Connection response(org.jsoup.Connection$Response p1)
    {
        this.res = p1;
        return this;
    }

    public org.jsoup.Connection timeout(int p2)
    {
        this.req.timeout(p2);
        return this;
    }

    public org.jsoup.Connection url(String p5)
    {
        org.jsoup.helper.Validate.notEmpty(p5, "Must supply a valid URL");
        try {
            this.req.url(new java.net.URL(p5));
            return this;
        } catch (java.net.MalformedURLException v0) {
            throw new IllegalArgumentException(new StringBuilder().append("Malformed URL: ").append(p5).toString(), v0);
        }
    }

    public org.jsoup.Connection url(java.net.URL p2)
    {
        this.req.url(p2);
        return this;
    }

    public org.jsoup.Connection userAgent(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3, "User agent must not be null");
        this.req.header("User-Agent", p3);
        return this;
    }
}
package org.jsoup.helper;
public final class StringUtil {
    private static final String[] padding;

    static StringUtil()
    {
        String[] v0_1 = new String[11];
        v0_1[0] = "";
        v0_1[1] = " ";
        v0_1[2] = "  ";
        v0_1[3] = "   ";
        v0_1[4] = "    ";
        v0_1[5] = "     ";
        v0_1[6] = "      ";
        v0_1[7] = "       ";
        v0_1[8] = "        ";
        v0_1[9] = "         ";
        v0_1[10] = "          ";
        org.jsoup.helper.StringUtil.padding = v0_1;
        return;
    }

    public StringUtil()
    {
        return;
    }

    public static varargs boolean in(String p5, String[] p6)
    {
        int v2 = 0;
        while (v2 < p6.length) {
            if (!p6[v2].equals(p5)) {
                v2++;
            } else {
                int v4_0 = 1;
            }
            return v4_0;
        }
        v4_0 = 0;
        return v4_0;
    }

    public static boolean isBlank(String p4)
    {
        int v2 = 1;
        if ((p4 != null) && (p4.length() != 0)) {
            int v1 = p4.length();
            int v0 = 0;
            while (v0 < v1) {
                if (Character.isWhitespace(p4.codePointAt(v0))) {
                    v0++;
                } else {
                    v2 = 0;
                    break;
                }
            }
        }
        return v2;
    }

    public static boolean isNumeric(String p4)
    {
        int v2 = 0;
        if ((p4 != null) && (p4.length() != 0)) {
            int v1 = p4.length();
            int v0 = 0;
            while (v0 < v1) {
                if (Character.isDigit(p4.codePointAt(v0))) {
                    v0++;
                }
            }
            v2 = 1;
        }
        return v2;
    }

    public static String join(java.util.Collection p1, String p2)
    {
        return org.jsoup.helper.StringUtil.join(p1.iterator(), p2);
    }

    public static String join(java.util.Iterator p4, String p5)
    {
        String v1;
        if (p4.hasNext()) {
            v1 = p4.next().toString();
            if (p4.hasNext()) {
                StringBuilder v0 = new StringBuilder(64).append(v1);
                while (p4.hasNext()) {
                    v0.append(p5);
                    v0.append(p4.next());
                }
                v1 = v0.toString();
            }
        } else {
            v1 = "";
        }
        return v1;
    }

    public static String normaliseWhitespace(String p8)
    {
        StringBuilder v5_1 = new StringBuilder(p8.length());
        int v3 = 0;
        int v4 = 0;
        int v2 = p8.length();
        int v1 = 0;
        while (v1 < v2) {
            int v0 = p8.codePointAt(v1);
            if (!Character.isWhitespace(v0)) {
                v5_1.appendCodePoint(v0);
                v3 = 0;
            } else {
                if (v3 == 0) {
                    if (v0 != 32) {
                        v4 = 1;
                    }
                    v5_1.append(32);
                    v3 = 1;
                } else {
                    v4 = 1;
                }
            }
            v1++;
        }
        if (v4 != 0) {
            p8 = v5_1.toString();
        }
        return p8;
    }

    public static String padding(int p4)
    {
        if (p4 >= 0) {
            String v2_2;
            if (p4 >= org.jsoup.helper.StringUtil.padding.length) {
                char[] v1 = new char[p4];
                int v0 = 0;
                while (v0 < p4) {
                    v1[v0] = 32;
                    v0++;
                }
                v2_2 = String.valueOf(v1);
            } else {
                v2_2 = org.jsoup.helper.StringUtil.padding[p4];
            }
            return v2_2;
        } else {
            throw new IllegalArgumentException("width must be > 0");
        }
    }
}
package org.jsoup.helper;
public final class Validate {

    private Validate()
    {
        return;
    }

    public static void fail(String p1)
    {
        throw new IllegalArgumentException(p1);
    }

    public static void isFalse(boolean p2)
    {
        if (!p2) {
            return;
        } else {
            throw new IllegalArgumentException("Must be false");
        }
    }

    public static void isFalse(boolean p1, String p2)
    {
        if (!p1) {
            return;
        } else {
            throw new IllegalArgumentException(p2);
        }
    }

    public static void isTrue(boolean p2)
    {
        if (p2) {
            return;
        } else {
            throw new IllegalArgumentException("Must be true");
        }
    }

    public static void isTrue(boolean p1, String p2)
    {
        if (p1) {
            return;
        } else {
            throw new IllegalArgumentException(p2);
        }
    }

    public static void noNullElements(Object[] p1)
    {
        org.jsoup.helper.Validate.noNullElements(p1, "Array must not contain any null objects");
        return;
    }

    public static void noNullElements(Object[] p5, String p6)
    {
        int v1 = 0;
        while (v1 < p5.length) {
            if (p5[v1] != null) {
                v1++;
            } else {
                throw new IllegalArgumentException(p6);
            }
        }
        return;
    }

    public static void notEmpty(String p2)
    {
        if ((p2 != null) && (p2.length() != 0)) {
            return;
        } else {
            throw new IllegalArgumentException("String must not be empty");
        }
    }

    public static void notEmpty(String p1, String p2)
    {
        if ((p1 != null) && (p1.length() != 0)) {
            return;
        } else {
            throw new IllegalArgumentException(p2);
        }
    }

    public static void notNull(Object p2)
    {
        if (p2 != null) {
            return;
        } else {
            throw new IllegalArgumentException("Object must not be null");
        }
    }

    public static void notNull(Object p1, String p2)
    {
        if (p1 != null) {
            return;
        } else {
            throw new IllegalArgumentException(p2);
        }
    }
}
package org.jsoup.nodes;
public class Attribute implements java.util.Map$Entry, java.lang.Cloneable {
    private String key;
    private String value;

    public Attribute(String p2, String p3)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        org.jsoup.helper.Validate.notNull(p3);
        this.key = p2.trim().toLowerCase();
        this.value = p3;
        return;
    }

    public static org.jsoup.nodes.Attribute createFromEncoded(String p2, String p3)
    {
        return new org.jsoup.nodes.Attribute(p2, org.jsoup.nodes.Entities.unescape(p3, 1));
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Attribute clone()
    {
        try {
            return ((org.jsoup.nodes.Attribute) super.clone());
        } catch (CloneNotSupportedException v0) {
            throw new RuntimeException(v0);
        }
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if ((p6 instanceof org.jsoup.nodes.Attribute)) {
                if (this.key == null) {
                    if (((org.jsoup.nodes.Attribute) p6).key == null) {
                        if (this.value == null) {
                            if (((org.jsoup.nodes.Attribute) p6).value == null) {
                                return v1;
                            }
                        } else {
                            if (this.value.equals(((org.jsoup.nodes.Attribute) p6).value)) {
                                return v1;
                            }
                        }
                        v1 = 0;
                        return v1;
                    }
                } else {
                    if (this.key.equals(((org.jsoup.nodes.Attribute) p6).key)) {
                    }
                }
                v1 = 0;
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public bridge synthetic Object getKey()
    {
        return this.getKey();
    }

    public String getKey()
    {
        return this.key;
    }

    public bridge synthetic Object getValue()
    {
        return this.getValue();
    }

    public String getValue()
    {
        return this.value;
    }

    public int hashCode()
    {
        int v0_1;
        int v1_0 = 0;
        if (this.key == null) {
            v0_1 = 0;
        } else {
            v0_1 = this.key.hashCode();
        }
        int v2_2 = (v0_1 * 31);
        if (this.value != null) {
            v1_0 = this.value.hashCode();
        }
        return (v2_2 + v1_0);
    }

    public String html()
    {
        return new StringBuilder().append(this.key).append("=\"").append(org.jsoup.nodes.Entities.escape(this.value, new org.jsoup.nodes.Document("").outputSettings())).append("\"").toString();
    }

    protected void html(StringBuilder p3, org.jsoup.nodes.Document$OutputSettings p4)
    {
        p3.append(this.key).append("=\"").append(org.jsoup.nodes.Entities.escape(this.value, p4)).append("\"");
        return;
    }

    protected boolean isDataAttribute()
    {
        if ((!this.key.startsWith("data-")) || (this.key.length() <= "data-".length())) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public void setKey(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        this.key = p2.trim().toLowerCase();
        return;
    }

    public bridge synthetic Object setValue(Object p2)
    {
        return this.setValue(((String) p2));
    }

    public String setValue(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2);
        String v0 = this.value;
        this.value = p2;
        return v0;
    }

    public String toString()
    {
        return this.html();
    }
}
package org.jsoup.nodes;
synthetic class Attributes$1 {
}
package org.jsoup.nodes;
 class Attributes$Dataset$DatasetIterator implements java.util.Iterator {
    private org.jsoup.nodes.Attribute attr;
    private java.util.Iterator attrIter;
    final synthetic org.jsoup.nodes.Attributes$Dataset this$1;

    private Attributes$Dataset$DatasetIterator(org.jsoup.nodes.Attributes$Dataset p2)
    {
        this.this$1 = p2;
        this.attrIter = org.jsoup.nodes.Attributes.access$100(this.this$1.this$0).values().iterator();
        return;
    }

    synthetic Attributes$Dataset$DatasetIterator(org.jsoup.nodes.Attributes$Dataset p1, org.jsoup.nodes.Attributes$1 p2)
    {
        this(p1);
        return;
    }

    public boolean hasNext()
    {
        while (this.attrIter.hasNext()) {
            this.attr = ((org.jsoup.nodes.Attribute) this.attrIter.next());
            if (this.attr.isDataAttribute()) {
                int v0_3 = 1;
            }
            return v0_3;
        }
        v0_3 = 0;
        return v0_3;
    }

    public bridge synthetic Object next()
    {
        return this.next();
    }

    public java.util.Map$Entry next()
    {
        return new org.jsoup.nodes.Attribute(this.attr.getKey().substring("data-".length()), this.attr.getValue());
    }

    public void remove()
    {
        org.jsoup.nodes.Attributes.access$100(this.this$1.this$0).remove(this.attr.getKey());
        return;
    }
}
package org.jsoup.nodes;
 class Attributes$Dataset$EntrySet extends java.util.AbstractSet {
    final synthetic org.jsoup.nodes.Attributes$Dataset this$1;

    private Attributes$Dataset$EntrySet(org.jsoup.nodes.Attributes$Dataset p1)
    {
        this.this$1 = p1;
        return;
    }

    synthetic Attributes$Dataset$EntrySet(org.jsoup.nodes.Attributes$Dataset p1, org.jsoup.nodes.Attributes$1 p2)
    {
        this(p1);
        return;
    }

    public java.util.Iterator iterator()
    {
        return new org.jsoup.nodes.Attributes$Dataset$DatasetIterator(this.this$1, 0);
    }

    public int size()
    {
        int v0 = 0;
        while (new org.jsoup.nodes.Attributes$Dataset$DatasetIterator(this.this$1, 0).hasNext()) {
            v0++;
        }
        return v0;
    }
}
package org.jsoup.nodes;
 class Attributes$Dataset extends java.util.AbstractMap {
    final synthetic org.jsoup.nodes.Attributes this$0;

    private Attributes$Dataset(org.jsoup.nodes.Attributes p3)
    {
        this.this$0 = p3;
        if (org.jsoup.nodes.Attributes.access$100(p3) == null) {
            org.jsoup.nodes.Attributes.access$102(p3, new java.util.LinkedHashMap(2));
        }
        return;
    }

    synthetic Attributes$Dataset(org.jsoup.nodes.Attributes p1, org.jsoup.nodes.Attributes$1 p2)
    {
        this(p1);
        return;
    }

    public java.util.Set entrySet()
    {
        return new org.jsoup.nodes.Attributes$Dataset$EntrySet(this, 0);
    }

    public bridge synthetic Object put(Object p2, Object p3)
    {
        return this.put(((String) p2), ((String) p3));
    }

    public String put(String p5, String p6)
    {
        int v2;
        String v1 = org.jsoup.nodes.Attributes.access$300(p5);
        if (!this.this$0.hasKey(v1)) {
            v2 = 0;
        } else {
            v2 = ((org.jsoup.nodes.Attribute) org.jsoup.nodes.Attributes.access$100(this.this$0).get(v1)).getValue();
        }
        org.jsoup.nodes.Attributes.access$100(this.this$0).put(v1, new org.jsoup.nodes.Attribute(v1, p6));
        return v2;
    }
}
package org.jsoup.nodes;
public class Attributes implements java.lang.Iterable, java.lang.Cloneable {
    protected static final String dataPrefix = "data-";
    private java.util.LinkedHashMap attributes;

    public Attributes()
    {
        this.attributes = 0;
        return;
    }

    static synthetic java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes p1)
    {
        return p1.attributes;
    }

    static synthetic java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes p0, java.util.LinkedHashMap p1)
    {
        p0.attributes = p1;
        return p1;
    }

    static synthetic String access$300(String p1)
    {
        return org.jsoup.nodes.Attributes.dataKey(p1);
    }

    private static String dataKey(String p2)
    {
        return new StringBuilder().append("data-").append(p2).toString();
    }

    public void addAll(org.jsoup.nodes.Attributes p3)
    {
        if (p3.size() != 0) {
            if (this.attributes == null) {
                this.attributes = new java.util.LinkedHashMap(p3.size());
            }
            this.attributes.putAll(p3.attributes);
        }
        return;
    }

    public java.util.List asList()
    {
        java.util.List v3_2;
        if (this.attributes != null) {
            java.util.ArrayList v2_1 = new java.util.ArrayList(this.attributes.size());
            java.util.Iterator v1 = this.attributes.entrySet().iterator();
            while (v1.hasNext()) {
                v2_1.add(((java.util.Map$Entry) v1.next()).getValue());
            }
            v3_2 = java.util.Collections.unmodifiableList(v2_1);
        } else {
            v3_2 = java.util.Collections.emptyList();
        }
        return v3_2;
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Attributes clone()
    {
        org.jsoup.nodes.Attributes v1_2;
        if (this.attributes != null) {
            try {
                v1_2 = ((org.jsoup.nodes.Attributes) super.clone());
                v1_2.attributes = new java.util.LinkedHashMap(this.attributes.size());
                java.util.Iterator v3 = this.iterator();
            } catch (CloneNotSupportedException v2) {
                throw new RuntimeException(v2);
            }
            while (v3.hasNext()) {
                org.jsoup.nodes.Attribute v0_1 = ((org.jsoup.nodes.Attribute) v3.next());
                v1_2.attributes.put(v0_1.getKey(), v0_1.clone());
            }
        } else {
            v1_2 = new org.jsoup.nodes.Attributes();
        }
        return v1_2;
    }

    public java.util.Map dataset()
    {
        return new org.jsoup.nodes.Attributes$Dataset(this, 0);
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if ((p6 instanceof org.jsoup.nodes.Attributes)) {
                if (this.attributes == null) {
                    if (((org.jsoup.nodes.Attributes) p6).attributes == null) {
                        return v1;
                    }
                } else {
                    if (this.attributes.equals(((org.jsoup.nodes.Attributes) p6).attributes)) {
                        return v1;
                    }
                }
                v1 = 0;
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public String get(String p4)
    {
        String v1_1;
        org.jsoup.helper.Validate.notEmpty(p4);
        if (this.attributes != null) {
            org.jsoup.nodes.Attribute v0_1 = ((org.jsoup.nodes.Attribute) this.attributes.get(p4.toLowerCase()));
            if (v0_1 == null) {
                v1_1 = "";
            } else {
                v1_1 = v0_1.getValue();
            }
        } else {
            v1_1 = "";
        }
        return v1_1;
    }

    public boolean hasKey(String p3)
    {
        if ((this.attributes == null) || (!this.attributes.containsKey(p3.toLowerCase()))) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }

    public int hashCode()
    {
        int v0_1;
        if (this.attributes == null) {
            v0_1 = 0;
        } else {
            v0_1 = this.attributes.hashCode();
        }
        return v0_1;
    }

    public String html()
    {
        StringBuilder v0_1 = new StringBuilder();
        this.html(v0_1, new org.jsoup.nodes.Document("").outputSettings());
        return v0_1.toString();
    }

    void html(StringBuilder p5, org.jsoup.nodes.Document$OutputSettings p6)
    {
        if (this.attributes != null) {
            java.util.Iterator v2 = this.attributes.entrySet().iterator();
            while (v2.hasNext()) {
                org.jsoup.nodes.Attribute v0_1 = ((org.jsoup.nodes.Attribute) ((java.util.Map$Entry) v2.next()).getValue());
                p5.append(" ");
                v0_1.html(p5, p6);
            }
        }
        return;
    }

    public java.util.Iterator iterator()
    {
        return this.asList().iterator();
    }

    public void put(String p2, String p3)
    {
        this.put(new org.jsoup.nodes.Attribute(p2, p3));
        return;
    }

    public void put(org.jsoup.nodes.Attribute p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        if (this.attributes == null) {
            this.attributes = new java.util.LinkedHashMap(2);
        }
        this.attributes.put(p3.getKey(), p3);
        return;
    }

    public void remove(String p3)
    {
        org.jsoup.helper.Validate.notEmpty(p3);
        if (this.attributes != null) {
            this.attributes.remove(p3.toLowerCase());
        }
        return;
    }

    public int size()
    {
        int v0_2;
        if (this.attributes != null) {
            v0_2 = this.attributes.size();
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public String toString()
    {
        return this.html();
    }
}
package org.jsoup.nodes;
public abstract class Node implements java.lang.Cloneable {
    org.jsoup.nodes.Attributes attributes;
    String baseUri;
    java.util.List childNodes;
    org.jsoup.nodes.Node parentNode;
    int siblingIndex;

    protected Node()
    {
        this.childNodes = java.util.Collections.emptyList();
        this.attributes = 0;
        return;
    }

    protected Node(String p2)
    {
        this(p2, new org.jsoup.nodes.Attributes());
        return;
    }

    protected Node(String p3, org.jsoup.nodes.Attributes p4)
    {
        org.jsoup.helper.Validate.notNull(p3);
        org.jsoup.helper.Validate.notNull(p4);
        this.childNodes = new java.util.ArrayList(4);
        this.baseUri = p3.trim();
        this.attributes = p4;
        return;
    }

    private void addSiblingHtml(int p5, String p6)
    {
        int v0;
        org.jsoup.helper.Validate.notNull(p6);
        org.jsoup.helper.Validate.notNull(this.parentNode);
        if (!(this.parent() instanceof org.jsoup.nodes.Element)) {
            v0 = 0;
        } else {
            v0 = ((org.jsoup.nodes.Element) this.parent());
        }
        java.util.List v1 = org.jsoup.parser.Parser.parseFragment(p6, v0, this.baseUri());
        org.jsoup.nodes.Node[] v2_4 = new org.jsoup.nodes.Node[v1.size()];
        this.parentNode.addChildren(p5, ((org.jsoup.nodes.Node[]) v1.toArray(v2_4)));
        return;
    }

    private org.jsoup.nodes.Element getDeepChild(org.jsoup.nodes.Element p3)
    {
        org.jsoup.select.Elements v0 = p3.children();
        if (v0.size() > 0) {
            p3 = this.getDeepChild(((org.jsoup.nodes.Element) v0.get(0)));
        }
        return p3;
    }

    private org.jsoup.nodes.Document$OutputSettings getOutputSettings()
    {
        org.jsoup.nodes.Document$OutputSettings v0_1;
        if (this.ownerDocument() == null) {
            v0_1 = new org.jsoup.nodes.Document("").outputSettings();
        } else {
            v0_1 = this.ownerDocument().outputSettings();
        }
        return v0_1;
    }

    private void reindexChildren()
    {
        int v0 = 0;
        while (v0 < this.childNodes.size()) {
            ((org.jsoup.nodes.Node) this.childNodes.get(v0)).setSiblingIndex(v0);
            v0++;
        }
        return;
    }

    private void reparentChild(org.jsoup.nodes.Node p2)
    {
        if (p2.parentNode != null) {
            p2.parentNode.removeChild(p2);
        }
        p2.setParentNode(this);
        return;
    }

    public String absUrl(String p7)
    {
        String v4_0;
        org.jsoup.helper.Validate.notEmpty(p7);
        String v3 = this.attr(p7);
        if (this.hasAttr(p7)) {
            try {
                java.net.URL v1_1 = new java.net.URL(this.baseUri);
                try {
                    if (v3.startsWith("?")) {
                        v3 = new StringBuilder().append(v1_1.getPath()).append(v3).toString();
                    }
                } catch (java.net.MalformedURLException v2) {
                    v4_0 = "";
                }
                v4_0 = new java.net.URL(v1_1, v3).toExternalForm();
            } catch (java.net.MalformedURLException v2) {
                v4_0 = new java.net.URL(v3).toExternalForm();
            }
        } else {
            v4_0 = "";
        }
        return v4_0;
    }

    protected varargs void addChildren(int p4, org.jsoup.nodes.Node[] p5)
    {
        org.jsoup.helper.Validate.noNullElements(p5);
        int v0 = (p5.length - 1);
        while (v0 >= 0) {
            org.jsoup.nodes.Node v1 = p5[v0];
            this.reparentChild(v1);
            this.childNodes.add(p4, v1);
            v0--;
        }
        this.reindexChildren();
        return;
    }

    protected varargs void addChildren(org.jsoup.nodes.Node[] p6)
    {
        int v3 = p6.length;
        int v2 = 0;
        while (v2 < v3) {
            org.jsoup.nodes.Node v1 = p6[v2];
            this.reparentChild(v1);
            this.childNodes.add(v1);
            v1.setSiblingIndex((this.childNodes.size() - 1));
            v2++;
        }
        return;
    }

    public org.jsoup.nodes.Node after(String p2)
    {
        this.addSiblingHtml((this.siblingIndex() + 1), p2);
        return this;
    }

    public org.jsoup.nodes.Node after(org.jsoup.nodes.Node p5)
    {
        org.jsoup.helper.Validate.notNull(p5);
        org.jsoup.helper.Validate.notNull(this.parentNode);
        org.jsoup.nodes.Node v0_1 = this.parentNode;
        int v1_1 = (this.siblingIndex() + 1);
        org.jsoup.nodes.Node[] v2_1 = new org.jsoup.nodes.Node[1];
        v2_1[0] = p5;
        v0_1.addChildren(v1_1, v2_1);
        return this;
    }

    public String attr(String p3)
    {
        String v0_1;
        org.jsoup.helper.Validate.notNull(p3);
        if (!this.attributes.hasKey(p3)) {
            if (!p3.toLowerCase().startsWith("abs:")) {
                v0_1 = "";
            } else {
                v0_1 = this.absUrl(p3.substring("abs:".length()));
            }
        } else {
            v0_1 = this.attributes.get(p3);
        }
        return v0_1;
    }

    public org.jsoup.nodes.Node attr(String p2, String p3)
    {
        this.attributes.put(p2, p3);
        return this;
    }

    public org.jsoup.nodes.Attributes attributes()
    {
        return this.attributes;
    }

    public String baseUri()
    {
        return this.baseUri;
    }

    public org.jsoup.nodes.Node before(String p2)
    {
        this.addSiblingHtml(this.siblingIndex(), p2);
        return this;
    }

    public org.jsoup.nodes.Node before(org.jsoup.nodes.Node p5)
    {
        org.jsoup.helper.Validate.notNull(p5);
        org.jsoup.helper.Validate.notNull(this.parentNode);
        org.jsoup.nodes.Node v0_1 = this.parentNode;
        int v1 = this.siblingIndex();
        org.jsoup.nodes.Node[] v2_1 = new org.jsoup.nodes.Node[1];
        v2_1[0] = p5;
        v0_1.addChildren(v1, v2_1);
        return this;
    }

    public org.jsoup.nodes.Node childNode(int p2)
    {
        return ((org.jsoup.nodes.Node) this.childNodes.get(p2));
    }

    public java.util.List childNodes()
    {
        return java.util.Collections.unmodifiableList(this.childNodes);
    }

    protected org.jsoup.nodes.Node[] childNodesAsArray()
    {
        org.jsoup.nodes.Node[] v1_2 = new org.jsoup.nodes.Node[this.childNodes().size()];
        return ((org.jsoup.nodes.Node[]) this.childNodes.toArray(v1_2));
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Node clone()
    {
        return this.doClone(0);
    }

    protected org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node p7)
    {
        try {
            java.util.List v4_0;
            org.jsoup.nodes.Node v1_1 = ((org.jsoup.nodes.Node) super.clone());
            v1_1.parentNode = p7;
        } catch (CloneNotSupportedException v2) {
            throw new RuntimeException(v2);
        }
        if (p7 != null) {
            v4_0 = this.siblingIndex;
        } else {
            v4_0 = 0;
        }
        java.util.List v4_2;
        v1_1.siblingIndex = v4_0;
        if (this.attributes == null) {
            v4_2 = 0;
        } else {
            v4_2 = this.attributes.clone();
        }
        v1_1.attributes = v4_2;
        v1_1.baseUri = this.baseUri;
        v1_1.childNodes = new java.util.ArrayList(this.childNodes.size());
        java.util.Iterator v3 = this.childNodes.iterator();
        while (v3.hasNext()) {
            v1_1.childNodes.add(((org.jsoup.nodes.Node) v3.next()).doClone(v1_1));
        }
        return v1_1;
    }

    public boolean equals(Object p2)
    {
        int v0;
        if (this != p2) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }

    public boolean hasAttr(String p4)
    {
        int v1_6;
        org.jsoup.helper.Validate.notNull(p4);
        if (!p4.toLowerCase().startsWith("abs:")) {
            v1_6 = this.attributes.hasKey(p4);
        } else {
            String v0 = p4.substring("abs:".length());
            if ((!this.attributes.hasKey(v0)) || (this.absUrl(v0).equals(""))) {
            } else {
                v1_6 = 1;
            }
        }
        return v1_6;
    }

    public int hashCode()
    {
        int v0_1;
        int v1_0 = 0;
        if (this.parentNode == null) {
            v0_1 = 0;
        } else {
            v0_1 = this.parentNode.hashCode();
        }
        int v2_2 = (v0_1 * 31);
        if (this.attributes != null) {
            v1_0 = this.attributes.hashCode();
        }
        return (v2_2 + v1_0);
    }

    protected void indent(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        p3.append("\n").append(org.jsoup.helper.StringUtil.padding((p5.indentAmount() * p4)));
        return;
    }

    public org.jsoup.nodes.Node nextSibling()
    {
        org.jsoup.nodes.Node v2_0 = 0;
        if (this.parentNode != null) {
            java.util.List v1 = this.parentNode.childNodes;
            Integer v0 = Integer.valueOf(this.siblingIndex());
            org.jsoup.helper.Validate.notNull(v0);
            if (v1.size() > (v0.intValue() + 1)) {
                v2_0 = ((org.jsoup.nodes.Node) v1.get((v0.intValue() + 1)));
            }
        }
        return v2_0;
    }

    public abstract String nodeName();

    public String outerHtml()
    {
        StringBuilder v0_1 = new StringBuilder(32768);
        this.outerHtml(v0_1);
        return v0_1.toString();
    }

    protected void outerHtml(StringBuilder p4)
    {
        new org.jsoup.select.NodeTraversor(new org.jsoup.nodes.Node$OuterHtmlVisitor(p4, this.getOutputSettings())).traverse(this);
        return;
    }

    abstract void outerHtmlHead();

    abstract void outerHtmlTail();

    public org.jsoup.nodes.Document ownerDocument()
    {
        org.jsoup.nodes.Document v1_1;
        if (!(this instanceof org.jsoup.nodes.Document)) {
            if (this.parentNode != null) {
                v1_1 = this.parentNode.ownerDocument();
            } else {
                v1_1 = 0;
            }
        } else {
            v1_1 = ((org.jsoup.nodes.Document) this);
        }
        return v1_1;
    }

    public org.jsoup.nodes.Node parent()
    {
        return this.parentNode;
    }

    public org.jsoup.nodes.Node previousSibling()
    {
        int v2_1;
        java.util.List v1 = this.parentNode.childNodes;
        Integer v0 = Integer.valueOf(this.siblingIndex());
        org.jsoup.helper.Validate.notNull(v0);
        if (v0.intValue() <= 0) {
            v2_1 = 0;
        } else {
            v2_1 = ((org.jsoup.nodes.Node) v1.get((v0.intValue() - 1)));
        }
        return v2_1;
    }

    public void remove()
    {
        org.jsoup.helper.Validate.notNull(this.parentNode);
        this.parentNode.removeChild(this);
        return;
    }

    public org.jsoup.nodes.Node removeAttr(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2);
        this.attributes.remove(p2);
        return this;
    }

    protected void removeChild(org.jsoup.nodes.Node p3)
    {
        int v1_2;
        if (p3.parentNode != this) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v1_2);
        this.childNodes.remove(p3.siblingIndex());
        this.reindexChildren();
        p3.parentNode = 0;
        return;
    }

    protected void replaceChild(org.jsoup.nodes.Node p4, org.jsoup.nodes.Node p5)
    {
        int v1_3;
        if (p4.parentNode != this) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v1_3);
        org.jsoup.helper.Validate.notNull(p5);
        if (p5.parentNode != null) {
            p5.parentNode.removeChild(p5);
        }
        Integer v0 = Integer.valueOf(p4.siblingIndex());
        this.childNodes.set(v0.intValue(), p5);
        p5.parentNode = this;
        p5.setSiblingIndex(v0.intValue());
        p4.parentNode = 0;
        return;
    }

    public void replaceWith(org.jsoup.nodes.Node p2)
    {
        org.jsoup.helper.Validate.notNull(p2);
        org.jsoup.helper.Validate.notNull(this.parentNode);
        this.parentNode.replaceChild(this, p2);
        return;
    }

    public void setBaseUri(String p1)
    {
        org.jsoup.helper.Validate.notNull(p1);
        this.baseUri = p1;
        return;
    }

    protected void setParentNode(org.jsoup.nodes.Node p2)
    {
        if (this.parentNode != null) {
            this.parentNode.removeChild(this);
        }
        this.parentNode = p2;
        return;
    }

    protected void setSiblingIndex(int p1)
    {
        this.siblingIndex = p1;
        return;
    }

    public int siblingIndex()
    {
        return this.siblingIndex;
    }

    public java.util.List siblingNodes()
    {
        return this.parent().childNodes();
    }

    public String toString()
    {
        return this.outerHtml();
    }

    public org.jsoup.nodes.Node unwrap()
    {
        int v0;
        org.jsoup.helper.Validate.notNull(this.parentNode);
        if (this.childNodes.size() <= 0) {
            v0 = 0;
        } else {
            v0 = ((org.jsoup.nodes.Node) this.childNodes.get(0));
        }
        this.parentNode.addChildren(this.siblingIndex, this.childNodesAsArray());
        this.remove();
        return v0;
    }

    public org.jsoup.nodes.Node wrap(String p11)
    {
        int v0;
        org.jsoup.helper.Validate.notEmpty(p11);
        if (!(this.parent() instanceof org.jsoup.nodes.Element)) {
            v0 = 0;
        } else {
            v0 = ((org.jsoup.nodes.Element) this.parent());
        }
        java.util.List v5 = org.jsoup.parser.Parser.parseFragment(p11, v0, this.baseUri());
        org.jsoup.nodes.Node v6_1 = ((org.jsoup.nodes.Node) v5.get(0));
        if ((v6_1 != null) && ((v6_1 instanceof org.jsoup.nodes.Element))) {
            org.jsoup.nodes.Element v4_1 = ((org.jsoup.nodes.Element) v6_1);
            org.jsoup.nodes.Element v1 = this.getDeepChild(v4_1);
            this.parentNode.replaceChild(this, v4_1);
            org.jsoup.nodes.Node v7_5 = new org.jsoup.nodes.Node[1];
            v7_5[0] = this;
            v1.addChildren(v7_5);
            if (v5.size() > 0) {
                int v2 = 0;
                while (v2 < v5.size()) {
                    org.jsoup.nodes.Node v3_1 = ((org.jsoup.nodes.Node) v5.get(v2));
                    v3_1.parentNode.removeChild(v3_1);
                    v4_1.appendChild(v3_1);
                    v2++;
                }
            }
        } else {
            this = 0;
        }
        return this;
    }
}
package org.jsoup.nodes;
public class Comment extends org.jsoup.nodes.Node {
    private static final String COMMENT_KEY = "comment";

    public Comment(String p3, String p4)
    {
        super(p4);
        super.attributes.put("comment", p3);
        return;
    }

    public String getData()
    {
        return this.attributes.get("comment");
    }

    public String nodeName()
    {
        return "#comment";
    }

    void outerHtmlHead(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        if (p5.prettyPrint()) {
            this.indent(p3, p4, p5);
        }
        p3.append("<!--").append(this.getData()).append("-->");
        return;
    }

    void outerHtmlTail(StringBuilder p1, int p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return;
    }

    public String toString()
    {
        return this.outerHtml();
    }
}
package org.jsoup.nodes;
public class DataNode extends org.jsoup.nodes.Node {
    private static final String DATA_KEY = "data";

    public DataNode(String p3, String p4)
    {
        super(p4);
        super.attributes.put("data", p3);
        return;
    }

    public static org.jsoup.nodes.DataNode createFromEncoded(String p2, String p3)
    {
        return new org.jsoup.nodes.DataNode(org.jsoup.nodes.Entities.unescape(p2), p3);
    }

    public String getWholeData()
    {
        return this.attributes.get("data");
    }

    public String nodeName()
    {
        return "#data";
    }

    void outerHtmlHead(StringBuilder p2, int p3, org.jsoup.nodes.Document$OutputSettings p4)
    {
        p2.append(this.getWholeData());
        return;
    }

    void outerHtmlTail(StringBuilder p1, int p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return;
    }

    public org.jsoup.nodes.DataNode setWholeData(String p3)
    {
        this.attributes.put("data", p3);
        return this;
    }

    public String toString()
    {
        return this.outerHtml();
    }
}
package org.jsoup.nodes;
public class Document$OutputSettings implements java.lang.Cloneable {
    private java.nio.charset.Charset charset;
    private java.nio.charset.CharsetEncoder charsetEncoder;
    private org.jsoup.nodes.Entities$EscapeMode escapeMode;
    private int indentAmount;
    private boolean prettyPrint;

    public Document$OutputSettings()
    {
        this.escapeMode = org.jsoup.nodes.Entities$EscapeMode.base;
        this.charset = java.nio.charset.Charset.forName("UTF-8");
        this.charsetEncoder = this.charset.newEncoder();
        this.prettyPrint = 1;
        this.indentAmount = 1;
        return;
    }

    public java.nio.charset.Charset charset()
    {
        return this.charset;
    }

    public org.jsoup.nodes.Document$OutputSettings charset(String p2)
    {
        this.charset(java.nio.charset.Charset.forName(p2));
        return this;
    }

    public org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset p2)
    {
        this.charset = p2;
        this.charsetEncoder = p2.newEncoder();
        return this;
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Document$OutputSettings clone()
    {
        try {
            org.jsoup.nodes.Document$OutputSettings v0_1 = ((org.jsoup.nodes.Document$OutputSettings) super.clone());
            v0_1.charset(this.charset.name());
            v0_1.escapeMode = org.jsoup.nodes.Entities$EscapeMode.valueOf(this.escapeMode.name());
            return v0_1;
        } catch (CloneNotSupportedException v1) {
            throw new RuntimeException(v1);
        }
    }

    java.nio.charset.CharsetEncoder encoder()
    {
        return this.charsetEncoder;
    }

    public org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode p1)
    {
        this.escapeMode = p1;
        return this;
    }

    public org.jsoup.nodes.Entities$EscapeMode escapeMode()
    {
        return this.escapeMode;
    }

    public int indentAmount()
    {
        return this.indentAmount;
    }

    public org.jsoup.nodes.Document$OutputSettings indentAmount(int p2)
    {
        int v0;
        if (p2 < 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v0);
        this.indentAmount = p2;
        return this;
    }

    public org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean p1)
    {
        this.prettyPrint = p1;
        return this;
    }

    public boolean prettyPrint()
    {
        return this.prettyPrint;
    }
}
package org.jsoup.nodes;
public final enum class Document$QuirksMode extends java.lang.Enum {
    private static final synthetic org.jsoup.nodes.Document$QuirksMode[] $VALUES;
    public static final enum org.jsoup.nodes.Document$QuirksMode limitedQuirks;
    public static final enum org.jsoup.nodes.Document$QuirksMode noQuirks;
    public static final enum org.jsoup.nodes.Document$QuirksMode quirks;

    static Document$QuirksMode()
    {
        org.jsoup.nodes.Document$QuirksMode.noQuirks = new org.jsoup.nodes.Document$QuirksMode("noQuirks", 0);
        org.jsoup.nodes.Document$QuirksMode.quirks = new org.jsoup.nodes.Document$QuirksMode("quirks", 1);
        org.jsoup.nodes.Document$QuirksMode.limitedQuirks = new org.jsoup.nodes.Document$QuirksMode("limitedQuirks", 2);
        org.jsoup.nodes.Document$QuirksMode[] v0_3 = new org.jsoup.nodes.Document$QuirksMode[3];
        v0_3[0] = org.jsoup.nodes.Document$QuirksMode.noQuirks;
        v0_3[1] = org.jsoup.nodes.Document$QuirksMode.quirks;
        v0_3[2] = org.jsoup.nodes.Document$QuirksMode.limitedQuirks;
        org.jsoup.nodes.Document$QuirksMode.$VALUES = v0_3;
        return;
    }

    private Document$QuirksMode(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    public static org.jsoup.nodes.Document$QuirksMode valueOf(String p1)
    {
        return ((org.jsoup.nodes.Document$QuirksMode) Enum.valueOf(org.jsoup.nodes.Document$QuirksMode, p1));
    }

    public static org.jsoup.nodes.Document$QuirksMode[] values()
    {
        return ((org.jsoup.nodes.Document$QuirksMode[]) org.jsoup.nodes.Document$QuirksMode.$VALUES.clone());
    }
}
package org.jsoup.nodes;
public class Element extends org.jsoup.nodes.Node {
    private java.util.Set classNames;
    private org.jsoup.parser.Tag tag;

    public Element(org.jsoup.parser.Tag p2, String p3)
    {
        this(p2, p3, new org.jsoup.nodes.Attributes());
        return;
    }

    public Element(org.jsoup.parser.Tag p1, String p2, org.jsoup.nodes.Attributes p3)
    {
        super(p2, p3);
        org.jsoup.helper.Validate.notNull(p1);
        super.tag = p1;
        return;
    }

    private static void accumulateParents(org.jsoup.nodes.Element p3, org.jsoup.select.Elements p4)
    {
        org.jsoup.nodes.Element v0 = p3.parent();
        if ((v0 != null) && (!v0.tagName().equals("#root"))) {
            p4.add(v0);
            org.jsoup.nodes.Element.accumulateParents(v0, p4);
        }
        return;
    }

    private void appendNormalisedText(StringBuilder p3, org.jsoup.nodes.TextNode p4)
    {
        String v0 = p4.getWholeText();
        if (!this.preserveWhitespace()) {
            v0 = org.jsoup.nodes.TextNode.normaliseWhitespace(v0);
            if (org.jsoup.nodes.TextNode.lastCharIsWhitespace(p3)) {
                v0 = org.jsoup.nodes.TextNode.stripLeadingWhitespace(v0);
            }
        }
        p3.append(v0);
        return;
    }

    private static void appendWhitespaceIfBr(org.jsoup.nodes.Element p2, StringBuilder p3)
    {
        if ((p2.tag.getName().equals("br")) && (!org.jsoup.nodes.TextNode.lastCharIsWhitespace(p3))) {
            p3.append(" ");
        }
        return;
    }

    private void html(StringBuilder p4)
    {
        java.util.Iterator v0 = this.childNodes.iterator();
        while (v0.hasNext()) {
            ((org.jsoup.nodes.Node) v0.next()).outerHtml(p4);
        }
        return;
    }

    private static Integer indexInList(org.jsoup.nodes.Element p3, java.util.List p4)
    {
        org.jsoup.helper.Validate.notNull(p3);
        org.jsoup.helper.Validate.notNull(p4);
        int v1 = 0;
        while (v1 < p4.size()) {
            if (!((org.jsoup.nodes.Element) p4.get(v1)).equals(p3)) {
                v1++;
            } else {
                Integer v2_1 = Integer.valueOf(v1);
            }
            return v2_1;
        }
        v2_1 = 0;
        return v2_1;
    }

    private void ownText(StringBuilder p5)
    {
        java.util.Iterator v1 = this.childNodes.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_2 = ((org.jsoup.nodes.Node) v1.next());
            if (!(v0_2 instanceof org.jsoup.nodes.TextNode)) {
                if ((v0_2 instanceof org.jsoup.nodes.Element)) {
                    org.jsoup.nodes.Element.appendWhitespaceIfBr(((org.jsoup.nodes.Element) v0_2), p5);
                }
            } else {
                this.appendNormalisedText(p5, ((org.jsoup.nodes.TextNode) v0_2));
            }
        }
        return;
    }

    private void text(StringBuilder p6)
    {
        org.jsoup.nodes.Element.appendWhitespaceIfBr(this, p6);
        java.util.Iterator v2 = this.childNodes.iterator();
        while (v2.hasNext()) {
            org.jsoup.nodes.Node v0_0 = ((org.jsoup.nodes.Node) v2.next());
            if (!(v0_0 instanceof org.jsoup.nodes.TextNode)) {
                if ((v0_0 instanceof org.jsoup.nodes.Element)) {
                    void v1_1 = ((org.jsoup.nodes.Element) v0_0);
                    if ((p6.length() > 0) && ((v1_1.isBlock()) && (!org.jsoup.nodes.TextNode.lastCharIsWhitespace(p6)))) {
                        p6.append(" ");
                    }
                    v1_1.text(p6);
                }
            } else {
                this.appendNormalisedText(p6, ((org.jsoup.nodes.TextNode) v0_0));
            }
        }
        return;
    }

    public org.jsoup.nodes.Element addClass(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2);
        java.util.Set v0 = this.classNames();
        v0.add(p2);
        this.classNames(v0);
        return this;
    }

    public org.jsoup.nodes.Element after(String p2)
    {
        return ((org.jsoup.nodes.Element) super.after(p2));
    }

    public org.jsoup.nodes.Element after(org.jsoup.nodes.Node p2)
    {
        return ((org.jsoup.nodes.Element) super.after(p2));
    }

    public bridge synthetic org.jsoup.nodes.Node after(String p2)
    {
        return this.after(p2);
    }

    public bridge synthetic org.jsoup.nodes.Node after(org.jsoup.nodes.Node p2)
    {
        return this.after(p2);
    }

    public org.jsoup.nodes.Element append(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        java.util.List v0 = org.jsoup.parser.Parser.parseFragment(p3, this, this.baseUri());
        org.jsoup.nodes.Node[] v1_3 = new org.jsoup.nodes.Node[v0.size()];
        this.addChildren(((org.jsoup.nodes.Node[]) v0.toArray(v1_3)));
        return this;
    }

    public org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        org.jsoup.nodes.Node[] v0_1 = new org.jsoup.nodes.Node[1];
        v0_1[0] = p3;
        this.addChildren(v0_1);
        return this;
    }

    public org.jsoup.nodes.Element appendElement(String p4)
    {
        org.jsoup.nodes.Element v0_1 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(p4), this.baseUri());
        this.appendChild(v0_1);
        return v0_1;
    }

    public org.jsoup.nodes.Element appendText(String p3)
    {
        this.appendChild(new org.jsoup.nodes.TextNode(p3, this.baseUri()));
        return this;
    }

    public org.jsoup.nodes.Element attr(String p1, String p2)
    {
        super.attr(p1, p2);
        return this;
    }

    public bridge synthetic org.jsoup.nodes.Node attr(String p2, String p3)
    {
        return this.attr(p2, p3);
    }

    public org.jsoup.nodes.Element before(String p2)
    {
        return ((org.jsoup.nodes.Element) super.before(p2));
    }

    public org.jsoup.nodes.Element before(org.jsoup.nodes.Node p2)
    {
        return ((org.jsoup.nodes.Element) super.before(p2));
    }

    public bridge synthetic org.jsoup.nodes.Node before(String p2)
    {
        return this.before(p2);
    }

    public bridge synthetic org.jsoup.nodes.Node before(org.jsoup.nodes.Node p2)
    {
        return this.before(p2);
    }

    public org.jsoup.nodes.Element child(int p2)
    {
        return this.children().get(p2);
    }

    public org.jsoup.select.Elements children()
    {
        java.util.ArrayList v0_1 = new java.util.ArrayList();
        java.util.Iterator v1 = this.childNodes.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v2_1 = ((org.jsoup.nodes.Node) v1.next());
            if ((v2_1 instanceof org.jsoup.nodes.Element)) {
                v0_1.add(((org.jsoup.nodes.Element) v2_1));
            }
        }
        return new org.jsoup.select.Elements(v0_1);
    }

    public String className()
    {
        return this.attr("class");
    }

    public java.util.Set classNames()
    {
        if (this.classNames == null) {
            this.classNames = new java.util.LinkedHashSet(java.util.Arrays.asList(this.className().split("\\s+")));
        }
        return this.classNames;
    }

    public org.jsoup.nodes.Element classNames(java.util.Set p4)
    {
        org.jsoup.helper.Validate.notNull(p4);
        this.attributes.put("class", org.jsoup.helper.StringUtil.join(p4, " "));
        return this;
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Element clone()
    {
        org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) super.clone());
        v0_1.classNames();
        return v0_1;
    }

    public bridge synthetic org.jsoup.nodes.Node clone()
    {
        return this.clone();
    }

    public String data()
    {
        StringBuilder v5_1 = new StringBuilder();
        java.util.Iterator v4 = this.childNodes.iterator();
        while (v4.hasNext()) {
            org.jsoup.nodes.Node v0_1 = ((org.jsoup.nodes.Node) v4.next());
            if (!(v0_1 instanceof org.jsoup.nodes.DataNode)) {
                if ((v0_1 instanceof org.jsoup.nodes.Element)) {
                    v5_1.append(((org.jsoup.nodes.Element) v0_1).data());
                }
            } else {
                v5_1.append(((org.jsoup.nodes.DataNode) v0_1).getWholeData());
            }
        }
        return v5_1.toString();
    }

    public java.util.Map dataset()
    {
        return this.attributes.dataset();
    }

    public Integer elementSiblingIndex()
    {
        Integer v0_1;
        if (this.parent() != null) {
            v0_1 = org.jsoup.nodes.Element.indexInList(this, this.parent().children());
        } else {
            v0_1 = Integer.valueOf(0);
        }
        return v0_1;
    }

    public org.jsoup.nodes.Element empty()
    {
        this.childNodes.clear();
        return this;
    }

    public boolean equals(Object p2)
    {
        int v0;
        if (this != p2) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }

    public org.jsoup.nodes.Element firstElementSibling()
    {
        int v1_2;
        org.jsoup.select.Elements v0 = this.parent().children();
        if (v0.size() <= 1) {
            v1_2 = 0;
        } else {
            v1_2 = ((org.jsoup.nodes.Element) v0.get(0));
        }
        return v1_2;
    }

    public org.jsoup.select.Elements getAllElements()
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AllElements(), this);
    }

    public org.jsoup.nodes.Element getElementById(String p3)
    {
        int v1_1;
        org.jsoup.helper.Validate.notEmpty(p3);
        org.jsoup.select.Elements v0 = org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$Id(p3), this);
        if (v0.size() <= 0) {
            v1_1 = 0;
        } else {
            v1_1 = v0.get(0);
        }
        return v1_1;
    }

    public org.jsoup.select.Elements getElementsByAttribute(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$Attribute(p2.trim().toLowerCase()), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeStarting(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeStarting(p2.trim().toLowerCase()), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValue(String p2, String p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValue(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValueContaining(String p2, String p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValueContaining(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValueEnding(String p2, String p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValueEnding(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValueMatching(String p6, String p7)
    {
        try {
            return this.getElementsByAttributeValueMatching(p6, java.util.regex.Pattern.compile(p7));
        } catch (java.util.regex.PatternSyntaxException v0) {
            throw new IllegalArgumentException(new StringBuilder().append("Pattern syntax error: ").append(p7).toString(), v0);
        }
    }

    public org.jsoup.select.Elements getElementsByAttributeValueMatching(String p2, java.util.regex.Pattern p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValueMatching(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValueNot(String p2, String p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValueNot(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByAttributeValueStarting(String p2, String p3)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$AttributeWithValueStarting(p2, p3), this);
    }

    public org.jsoup.select.Elements getElementsByClass(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$Class(p2), this);
    }

    public org.jsoup.select.Elements getElementsByIndexEquals(int p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$IndexEquals(p2), this);
    }

    public org.jsoup.select.Elements getElementsByIndexGreaterThan(int p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$IndexGreaterThan(p2), this);
    }

    public org.jsoup.select.Elements getElementsByIndexLessThan(int p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$IndexLessThan(p2), this);
    }

    public org.jsoup.select.Elements getElementsByTag(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$Tag(p2.toLowerCase().trim()), this);
    }

    public org.jsoup.select.Elements getElementsContainingOwnText(String p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$ContainsOwnText(p2), this);
    }

    public org.jsoup.select.Elements getElementsContainingText(String p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$ContainsText(p2), this);
    }

    public org.jsoup.select.Elements getElementsMatchingOwnText(String p6)
    {
        try {
            return this.getElementsMatchingOwnText(java.util.regex.Pattern.compile(p6));
        } catch (java.util.regex.PatternSyntaxException v0) {
            throw new IllegalArgumentException(new StringBuilder().append("Pattern syntax error: ").append(p6).toString(), v0);
        }
    }

    public org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$MatchesOwn(p2), this);
    }

    public org.jsoup.select.Elements getElementsMatchingText(String p6)
    {
        try {
            return this.getElementsMatchingText(java.util.regex.Pattern.compile(p6));
        } catch (java.util.regex.PatternSyntaxException v0) {
            throw new IllegalArgumentException(new StringBuilder().append("Pattern syntax error: ").append(p6).toString(), v0);
        }
    }

    public org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern p2)
    {
        return org.jsoup.select.Collector.collect(new org.jsoup.select.Evaluator$Matches(p2), this);
    }

    public boolean hasClass(String p5)
    {
        java.util.Iterator v1 = this.classNames().iterator();
        while (v1.hasNext()) {
            if (p5.equalsIgnoreCase(((String) v1.next()))) {
                int v3_1 = 1;
            }
            return v3_1;
        }
        v3_1 = 0;
        return v3_1;
    }

    public boolean hasText()
    {
        int v4 = 1;
        java.util.Iterator v2 = this.childNodes.iterator();
        while (v2.hasNext()) {
            org.jsoup.nodes.Node v0_0 = ((org.jsoup.nodes.Node) v2.next());
            if (!(v0_0 instanceof org.jsoup.nodes.TextNode)) {
                if (((v0_0 instanceof org.jsoup.nodes.Element)) && (((org.jsoup.nodes.Element) v0_0).hasText())) {
                }
            } else {
                if (!((org.jsoup.nodes.TextNode) v0_0).isBlank()) {
                }
            }
            return v4;
        }
        v4 = 0;
        return v4;
    }

    public int hashCode()
    {
        int v1_1;
        int v2 = (super.hashCode() * 31);
        if (this.tag == null) {
            v1_1 = 0;
        } else {
            v1_1 = this.tag.hashCode();
        }
        return (v2 + v1_1);
    }

    public String html()
    {
        StringBuilder v0_1 = new StringBuilder();
        this.html(v0_1);
        return v0_1.toString().trim();
    }

    public org.jsoup.nodes.Element html(String p1)
    {
        this.empty();
        this.append(p1);
        return this;
    }

    public String id()
    {
        String v0 = this.attr("id");
        if (v0 == null) {
            v0 = "";
        }
        return v0;
    }

    public boolean isBlock()
    {
        return this.tag.isBlock();
    }

    public org.jsoup.nodes.Element lastElementSibling()
    {
        int v1_4;
        org.jsoup.select.Elements v0 = this.parent().children();
        if (v0.size() <= 1) {
            v1_4 = 0;
        } else {
            v1_4 = ((org.jsoup.nodes.Element) v0.get((v0.size() - 1)));
        }
        return v1_4;
    }

    public org.jsoup.nodes.Element nextElementSibling()
    {
        int v2_1;
        org.jsoup.select.Elements v1 = this.parent().children();
        Integer v0 = org.jsoup.nodes.Element.indexInList(this, v1);
        org.jsoup.helper.Validate.notNull(v0);
        if (v1.size() <= (v0.intValue() + 1)) {
            v2_1 = 0;
        } else {
            v2_1 = ((org.jsoup.nodes.Element) v1.get((v0.intValue() + 1)));
        }
        return v2_1;
    }

    public String nodeName()
    {
        return this.tag.getName();
    }

    void outerHtmlHead(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        if ((p3.length() > 0) && ((p5.prettyPrint()) && ((this.tag.formatAsBlock()) || ((this.parent() != null) && (this.parent().tag().formatAsBlock()))))) {
            this.indent(p3, p4, p5);
        }
        p3.append("<").append(this.tagName());
        this.attributes.html(p3, p5);
        if ((!this.childNodes.isEmpty()) || (!this.tag.isSelfClosing())) {
            p3.append(">");
        } else {
            p3.append(" />");
        }
        return;
    }

    void outerHtmlTail(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        if ((!this.childNodes.isEmpty()) || (!this.tag.isSelfClosing())) {
            if ((p5.prettyPrint()) && ((!this.childNodes.isEmpty()) && (this.tag.formatAsBlock()))) {
                this.indent(p3, p4, p5);
            }
            p3.append("</").append(this.tagName()).append(">");
        }
        return;
    }

    public String ownText()
    {
        StringBuilder v0_1 = new StringBuilder();
        this.ownText(v0_1);
        return v0_1.toString().trim();
    }

    public final org.jsoup.nodes.Element parent()
    {
        return ((org.jsoup.nodes.Element) this.parentNode);
    }

    public bridge synthetic org.jsoup.nodes.Node parent()
    {
        return this.parent();
    }

    public org.jsoup.select.Elements parents()
    {
        org.jsoup.select.Elements v0_1 = new org.jsoup.select.Elements();
        org.jsoup.nodes.Element.accumulateParents(this, v0_1);
        return v0_1;
    }

    public org.jsoup.nodes.Element prepend(String p4)
    {
        org.jsoup.helper.Validate.notNull(p4);
        java.util.List v0 = org.jsoup.parser.Parser.parseFragment(p4, this, this.baseUri());
        org.jsoup.nodes.Node[] v1_4 = new org.jsoup.nodes.Node[v0.size()];
        this.addChildren(0, ((org.jsoup.nodes.Node[]) v0.toArray(v1_4)));
        return this;
    }

    public org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        org.jsoup.nodes.Node[] v0_1 = new org.jsoup.nodes.Node[1];
        v0_1[0] = p3;
        this.addChildren(0, v0_1);
        return this;
    }

    public org.jsoup.nodes.Element prependElement(String p4)
    {
        org.jsoup.nodes.Element v0_1 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(p4), this.baseUri());
        this.prependChild(v0_1);
        return v0_1;
    }

    public org.jsoup.nodes.Element prependText(String p3)
    {
        this.prependChild(new org.jsoup.nodes.TextNode(p3, this.baseUri()));
        return this;
    }

    boolean preserveWhitespace()
    {
        if ((!this.tag.preserveWhitespace()) && ((this.parent() == null) || (!this.parent().preserveWhitespace()))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public org.jsoup.nodes.Element previousElementSibling()
    {
        int v2_1;
        org.jsoup.select.Elements v1 = this.parent().children();
        Integer v0 = org.jsoup.nodes.Element.indexInList(this, v1);
        org.jsoup.helper.Validate.notNull(v0);
        if (v0.intValue() <= 0) {
            v2_1 = 0;
        } else {
            v2_1 = ((org.jsoup.nodes.Element) v1.get((v0.intValue() - 1)));
        }
        return v2_1;
    }

    public org.jsoup.nodes.Element removeClass(String p2)
    {
        org.jsoup.helper.Validate.notNull(p2);
        java.util.Set v0 = this.classNames();
        v0.remove(p2);
        this.classNames(v0);
        return this;
    }

    public org.jsoup.select.Elements select(String p2)
    {
        return org.jsoup.select.Selector.select(p2, this);
    }

    public org.jsoup.select.Elements siblingElements()
    {
        return this.parent().children();
    }

    public org.jsoup.parser.Tag tag()
    {
        return this.tag;
    }

    public String tagName()
    {
        return this.tag.getName();
    }

    public org.jsoup.nodes.Element tagName(String p2)
    {
        org.jsoup.helper.Validate.notEmpty(p2, "Tag name must not be empty.");
        this.tag = org.jsoup.parser.Tag.valueOf(p2);
        return this;
    }

    public String text()
    {
        StringBuilder v0_1 = new StringBuilder();
        this.text(v0_1);
        return v0_1.toString().trim();
    }

    public org.jsoup.nodes.Element text(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        this.empty();
        this.appendChild(new org.jsoup.nodes.TextNode(p3, this.baseUri));
        return this;
    }

    public String toString()
    {
        return this.outerHtml();
    }

    public org.jsoup.nodes.Element toggleClass(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        java.util.Set v0 = this.classNames();
        if (!v0.contains(p3)) {
            v0.add(p3);
        } else {
            v0.remove(p3);
        }
        this.classNames(v0);
        return this;
    }

    public String val()
    {
        String v0_1;
        if (!this.tagName().equals("textarea")) {
            v0_1 = this.attr("value");
        } else {
            v0_1 = this.text();
        }
        return v0_1;
    }

    public org.jsoup.nodes.Element val(String p3)
    {
        if (!this.tagName().equals("textarea")) {
            this.attr("value", p3);
        } else {
            this.text(p3);
        }
        return this;
    }

    public org.jsoup.nodes.Element wrap(String p2)
    {
        return ((org.jsoup.nodes.Element) super.wrap(p2));
    }

    public bridge synthetic org.jsoup.nodes.Node wrap(String p2)
    {
        return this.wrap(p2);
    }
}
package org.jsoup.nodes;
public class Document extends org.jsoup.nodes.Element {
    private org.jsoup.nodes.Document$OutputSettings outputSettings;
    private org.jsoup.nodes.Document$QuirksMode quirksMode;

    public Document(String p2)
    {
        super(org.jsoup.parser.Tag.valueOf("#root"), p2);
        super.outputSettings = new org.jsoup.nodes.Document$OutputSettings();
        super.quirksMode = org.jsoup.nodes.Document$QuirksMode.noQuirks;
        return;
    }

    public static org.jsoup.nodes.Document createShell(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        org.jsoup.nodes.Document v0_1 = new org.jsoup.nodes.Document(p3);
        org.jsoup.nodes.Element v1 = v0_1.appendElement("html");
        v1.appendElement("head");
        v1.appendElement("body");
        return v0_1;
    }

    private org.jsoup.nodes.Element findFirstElementByTagName(String p5, org.jsoup.nodes.Node p6)
    {
        org.jsoup.nodes.Element v6_1;
        if (!p6.nodeName().equals(p5)) {
            java.util.Iterator v2 = p6.childNodes.iterator();
            while (v2.hasNext()) {
                org.jsoup.nodes.Element v1 = this.findFirstElementByTagName(p5, ((org.jsoup.nodes.Node) v2.next()));
                if (v1 != null) {
                    v6_1 = v1;
                }
            }
            v6_1 = 0;
        } else {
            v6_1 = ((org.jsoup.nodes.Element) p6);
        }
        return v6_1;
    }

    private void normaliseStructure(String p10, org.jsoup.nodes.Element p11)
    {
        org.jsoup.select.Elements v1 = this.getElementsByTag(p10);
        org.jsoup.nodes.Element v4 = v1.first();
        if (v1.size() > 1) {
            java.util.ArrayList v6_1 = new java.util.ArrayList();
            int v2 = 1;
            while (v2 < v1.size()) {
                org.jsoup.nodes.Node v0_2 = v1.get(v2);
                java.util.Iterator v3_1 = v0_2.childNodes.iterator();
                while (v3_1.hasNext()) {
                    v6_1.add(((org.jsoup.nodes.Node) v3_1.next()));
                }
                v0_2.remove();
                v2++;
            }
            java.util.Iterator v3_0 = v6_1.iterator();
            while (v3_0.hasNext()) {
                v4.appendChild(((org.jsoup.nodes.Node) v3_0.next()));
            }
        }
        if (!v4.parent().equals(p11)) {
            p11.appendChild(v4);
        }
        return;
    }

    private void normaliseTextNodes(org.jsoup.nodes.Element p10)
    {
        java.util.ArrayList v4_1 = new java.util.ArrayList();
        java.util.Iterator v1 = p10.childNodes.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Node v2_3 = ((org.jsoup.nodes.Node) v1.next());
            if ((v2_3 instanceof org.jsoup.nodes.TextNode)) {
                org.jsoup.nodes.TextNode v3_1 = ((org.jsoup.nodes.TextNode) v2_3);
                if (!v3_1.isBlank()) {
                    v4_1.add(v3_1);
                }
            }
        }
        int v0 = (v4_1.size() - 1);
        while (v0 >= 0) {
            org.jsoup.nodes.Node v2_1 = ((org.jsoup.nodes.Node) v4_1.get(v0));
            p10.removeChild(v2_1);
            this.body().prependChild(new org.jsoup.nodes.TextNode(" ", ""));
            this.body().prependChild(v2_1);
            v0--;
        }
        return;
    }

    public org.jsoup.nodes.Element body()
    {
        return this.findFirstElementByTagName("body", this);
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Document clone()
    {
        org.jsoup.nodes.Document v0_1 = ((org.jsoup.nodes.Document) super.clone());
        v0_1.outputSettings = this.outputSettings.clone();
        return v0_1;
    }

    public bridge synthetic org.jsoup.nodes.Element clone()
    {
        return this.clone();
    }

    public bridge synthetic org.jsoup.nodes.Node clone()
    {
        return this.clone();
    }

    public org.jsoup.nodes.Element createElement(String p4)
    {
        return new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(p4), this.baseUri());
    }

    public org.jsoup.nodes.Element head()
    {
        return this.findFirstElementByTagName("head", this);
    }

    public String nodeName()
    {
        return "#document";
    }

    public org.jsoup.nodes.Document normalise()
    {
        org.jsoup.nodes.Element v0 = this.findFirstElementByTagName("html", this);
        if (v0 == null) {
            v0 = this.appendElement("html");
        }
        if (this.head() == null) {
            v0.prependElement("head");
        }
        if (this.body() == null) {
            v0.appendElement("body");
        }
        this.normaliseTextNodes(this.head());
        this.normaliseTextNodes(v0);
        this.normaliseTextNodes(this);
        this.normaliseStructure("head", v0);
        this.normaliseStructure("body", v0);
        return this;
    }

    public String outerHtml()
    {
        return super.html();
    }

    public org.jsoup.nodes.Document$OutputSettings outputSettings()
    {
        return this.outputSettings;
    }

    public org.jsoup.nodes.Document$QuirksMode quirksMode()
    {
        return this.quirksMode;
    }

    public org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode p1)
    {
        this.quirksMode = p1;
        return this;
    }

    public org.jsoup.nodes.Element text(String p2)
    {
        this.body().text(p2);
        return this;
    }

    public String title()
    {
        String v1_1;
        org.jsoup.nodes.Element v0 = this.getElementsByTag("title").first();
        if (v0 == null) {
            v1_1 = "";
        } else {
            v1_1 = v0.text().trim();
        }
        return v1_1;
    }

    public void title(String p4)
    {
        org.jsoup.helper.Validate.notNull(p4);
        org.jsoup.nodes.Element v0 = this.getElementsByTag("title").first();
        if (v0 != null) {
            v0.text(p4);
        } else {
            this.head().appendElement("title").text(p4);
        }
        return;
    }
}
package org.jsoup.nodes;
public class DocumentType extends org.jsoup.nodes.Node {

    public DocumentType(String p2, String p3, String p4, String p5)
    {
        super(p5);
        org.jsoup.helper.Validate.notEmpty(p2);
        super.attr("name", p2);
        super.attr("publicId", p3);
        super.attr("systemId", p4);
        return;
    }

    public String nodeName()
    {
        return "#doctype";
    }

    void outerHtmlHead(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        p3.append("<!DOCTYPE ").append(this.attr("name"));
        if (!org.jsoup.helper.StringUtil.isBlank(this.attr("publicId"))) {
            p3.append(" PUBLIC \"").append(this.attr("publicId")).append("\"");
        }
        if (!org.jsoup.helper.StringUtil.isBlank(this.attr("systemId"))) {
            p3.append(" \"").append(this.attr("systemId")).append("\"");
        }
        p3.append(62);
        return;
    }

    void outerHtmlTail(StringBuilder p1, int p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return;
    }
}
package org.jsoup.nodes;
public final enum class Entities$EscapeMode extends java.lang.Enum {
    private static final synthetic org.jsoup.nodes.Entities$EscapeMode[] $VALUES;
    public static final enum org.jsoup.nodes.Entities$EscapeMode base;
    public static final enum org.jsoup.nodes.Entities$EscapeMode extended;
    public static final enum org.jsoup.nodes.Entities$EscapeMode xhtml;
    private java.util.Map map;

    static Entities$EscapeMode()
    {
        org.jsoup.nodes.Entities$EscapeMode.xhtml = new org.jsoup.nodes.Entities$EscapeMode("xhtml", 0, org.jsoup.nodes.Entities.access$000());
        org.jsoup.nodes.Entities$EscapeMode.base = new org.jsoup.nodes.Entities$EscapeMode("base", 1, org.jsoup.nodes.Entities.access$100());
        org.jsoup.nodes.Entities$EscapeMode.extended = new org.jsoup.nodes.Entities$EscapeMode("extended", 2, org.jsoup.nodes.Entities.access$200());
        org.jsoup.nodes.Entities$EscapeMode[] v0_4 = new org.jsoup.nodes.Entities$EscapeMode[3];
        v0_4[0] = org.jsoup.nodes.Entities$EscapeMode.xhtml;
        v0_4[1] = org.jsoup.nodes.Entities$EscapeMode.base;
        v0_4[2] = org.jsoup.nodes.Entities$EscapeMode.extended;
        org.jsoup.nodes.Entities$EscapeMode.$VALUES = v0_4;
        return;
    }

    private Entities$EscapeMode(String p1, int p2, java.util.Map p3)
    {
        super(p1, p2);
        super.map = p3;
        return;
    }

    public static org.jsoup.nodes.Entities$EscapeMode valueOf(String p1)
    {
        return ((org.jsoup.nodes.Entities$EscapeMode) Enum.valueOf(org.jsoup.nodes.Entities$EscapeMode, p1));
    }

    public static org.jsoup.nodes.Entities$EscapeMode[] values()
    {
        return ((org.jsoup.nodes.Entities$EscapeMode[]) org.jsoup.nodes.Entities$EscapeMode.$VALUES.clone());
    }

    public java.util.Map getMap()
    {
        return this.map;
    }
}
package org.jsoup.nodes;
public class Entities {
    private static final Object[][] baseArray;
    private static final java.util.Map baseByVal;
    private static final java.util.Map full;
    private static final Object[][] fullArray;
    private static final java.util.Map fullByVal;
    private static final java.util.regex.Pattern strictUnescapePattern;
    private static final java.util.regex.Pattern unescapePattern;
    private static final Object[][] xhtmlArray;
    private static final java.util.Map xhtmlByVal;

    static Entities()
    {
        org.jsoup.nodes.Entities.unescapePattern = java.util.regex.Pattern.compile("&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\d*);?");
        org.jsoup.nodes.Entities.strictUnescapePattern = java.util.regex.Pattern.compile("&(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+\\d*);");
        String v5_4 = new Object[][5];
        java.util.Map v6_616 = new Object[2];
        v6_616[0] = "quot";
        v6_616[1] = Integer.valueOf(34);
        v5_4[0] = v6_616;
        java.util.Map v6_1191 = new Object[2];
        v6_1191[0] = "amp";
        v6_1191[1] = Integer.valueOf(38);
        v5_4[1] = v6_1191;
        java.util.Map v6_1278 = new Object[2];
        v6_1278[0] = "apos";
        v6_1278[1] = Integer.valueOf(39);
        v5_4[2] = v6_1278;
        Object[] v7_1392 = new Object[2];
        v7_1392[0] = "lt";
        v7_1392[1] = Integer.valueOf(60);
        v5_4[3] = v7_1392;
        Object[] v7_1506 = new Object[2];
        v7_1506[0] = "gt";
        v7_1506[1] = Integer.valueOf(62);
        v5_4[4] = v7_1506;
        org.jsoup.nodes.Entities.xhtmlArray = v5_4;
        String v5_35 = new Object[][106];
        java.util.Map v6_1635 = new Object[2];
        v6_1635[0] = "AElig";
        v6_1635[1] = Integer.valueOf(198);
        v5_35[0] = v6_1635;
        java.util.Map v6_1734 = new Object[2];
        v6_1734[0] = "AMP";
        v6_1734[1] = Integer.valueOf(38);
        v5_35[1] = v6_1734;
        java.util.Map v6_1821 = new Object[2];
        v6_1821[0] = "Aacute";
        v6_1821[1] = Integer.valueOf(193);
        v5_35[2] = v6_1821;
        Object[] v7_1943 = new Object[2];
        v7_1943[0] = "Acirc";
        v7_1943[1] = Integer.valueOf(194);
        v5_35[3] = v7_1943;
        Object[] v7_2054 = new Object[2];
        v7_2054[0] = "Agrave";
        v7_2054[1] = Integer.valueOf(192);
        v5_35[4] = v7_2054;
        Object[] v7_0 = new Object[2];
        v7_0[0] = "Aring";
        v7_0[1] = Integer.valueOf(197);
        v5_35[5] = v7_0;
        Object[] v7_116 = new Object[2];
        v7_116[0] = "Atilde";
        v7_116[1] = Integer.valueOf(195);
        v5_35[6] = v7_116;
        Object[] v7_227 = new Object[2];
        v7_227[0] = "Auml";
        v7_227[1] = Integer.valueOf(196);
        v5_35[7] = v7_227;
        Object[] v7_338 = new Object[2];
        v7_338[0] = "COPY";
        v7_338[1] = Integer.valueOf(169);
        v5_35[8] = v7_338;
        Object[] v7_453 = new Object[2];
        v7_453[0] = "Ccedil";
        v7_453[1] = Integer.valueOf(199);
        v5_35[9] = v7_453;
        Object[] v7_564 = new Object[2];
        v7_564[0] = "ETH";
        v7_564[1] = Integer.valueOf(208);
        v5_35[10] = v7_564;
        Object[] v7_675 = new Object[2];
        v7_675[0] = "Eacute";
        v7_675[1] = Integer.valueOf(201);
        v5_35[11] = v7_675;
        Object[] v7_787 = new Object[2];
        v7_787[0] = "Ecirc";
        v7_787[1] = Integer.valueOf(202);
        v5_35[12] = v7_787;
        Object[] v7_898 = new Object[2];
        v7_898[0] = "Egrave";
        v7_898[1] = Integer.valueOf(200);
        v5_35[13] = v7_898;
        Object[] v7_1009 = new Object[2];
        v7_1009[0] = "Euml";
        v7_1009[1] = Integer.valueOf(203);
        v5_35[14] = v7_1009;
        Object[] v7_1121 = new Object[2];
        v7_1121[0] = "GT";
        v7_1121[1] = Integer.valueOf(62);
        v5_35[15] = v7_1121;
        Object[] v7_1163 = new Object[2];
        v7_1163[0] = "Iacute";
        v7_1163[1] = Integer.valueOf(205);
        v5_35[16] = v7_1163;
        Object[] v7_1174 = new Object[2];
        v7_1174[0] = "Icirc";
        v7_1174[1] = Integer.valueOf(206);
        v5_35[17] = v7_1174;
        Object[] v7_1185 = new Object[2];
        v7_1185[0] = "Igrave";
        v7_1185[1] = Integer.valueOf(204);
        v5_35[18] = v7_1185;
        Object[] v7_1196 = new Object[2];
        v7_1196[0] = "Iuml";
        v7_1196[1] = Integer.valueOf(207);
        v5_35[19] = v7_1196;
        Object[] v7_1208 = new Object[2];
        v7_1208[0] = "LT";
        v7_1208[1] = Integer.valueOf(60);
        v5_35[20] = v7_1208;
        Object[] v7_1219 = new Object[2];
        v7_1219[0] = "Ntilde";
        v7_1219[1] = Integer.valueOf(209);
        v5_35[21] = v7_1219;
        Object[] v7_1230 = new Object[2];
        v7_1230[0] = "Oacute";
        v7_1230[1] = Integer.valueOf(211);
        v5_35[22] = v7_1230;
        Object[] v7_1242 = new Object[2];
        v7_1242[0] = "Ocirc";
        v7_1242[1] = Integer.valueOf(212);
        v5_35[23] = v7_1242;
        Object[] v7_1253 = new Object[2];
        v7_1253[0] = "Ograve";
        v7_1253[1] = Integer.valueOf(210);
        v5_35[24] = v7_1253;
        Object[] v7_1264 = new Object[2];
        v7_1264[0] = "Oslash";
        v7_1264[1] = Integer.valueOf(216);
        v5_35[25] = v7_1264;
        Object[] v7_1275 = new Object[2];
        v7_1275[0] = "Otilde";
        v7_1275[1] = Integer.valueOf(213);
        v5_35[26] = v7_1275;
        Object[] v7_1286 = new Object[2];
        v7_1286[0] = "Ouml";
        v7_1286[1] = Integer.valueOf(214);
        v5_35[27] = v7_1286;
        Object[] v7_1298 = new Object[2];
        v7_1298[0] = "QUOT";
        v7_1298[1] = Integer.valueOf(34);
        v5_35[28] = v7_1298;
        Object[] v7_1308 = new Object[2];
        v7_1308[0] = "REG";
        v7_1308[1] = Integer.valueOf(174);
        v5_35[29] = v7_1308;
        Object[] v7_1320 = new Object[2];
        v7_1320[0] = "THORN";
        v7_1320[1] = Integer.valueOf(222);
        v5_35[30] = v7_1320;
        Object[] v7_1331 = new Object[2];
        v7_1331[0] = "Uacute";
        v7_1331[1] = Integer.valueOf(218);
        v5_35[31] = v7_1331;
        Object[] v7_1343 = new Object[2];
        v7_1343[0] = "Ucirc";
        v7_1343[1] = Integer.valueOf(219);
        v5_35[32] = v7_1343;
        Object[] v7_1354 = new Object[2];
        v7_1354[0] = "Ugrave";
        v7_1354[1] = Integer.valueOf(217);
        v5_35[33] = v7_1354;
        java.util.Map v6_1362 = new Object[2];
        v6_1362[0] = "Uuml";
        v6_1362[1] = Integer.valueOf(220);
        v5_35[34] = v6_1362;
        Object[] v7_1377 = new Object[2];
        v7_1377[0] = "Yacute";
        v7_1377[1] = Integer.valueOf(221);
        v5_35[35] = v7_1377;
        Object[] v7_1388 = new Object[2];
        v7_1388[0] = "aacute";
        v7_1388[1] = Integer.valueOf(225);
        v5_35[36] = v7_1388;
        Object[] v7_1400 = new Object[2];
        v7_1400[0] = "acirc";
        v7_1400[1] = Integer.valueOf(226);
        v5_35[37] = v7_1400;
        java.util.Map v6_1406 = new Object[2];
        v6_1406[0] = "acute";
        v6_1406[1] = Integer.valueOf(180);
        v5_35[38] = v6_1406;
        Object[] v7_1423 = new Object[2];
        v7_1423[0] = "aelig";
        v7_1423[1] = Integer.valueOf(230);
        v5_35[39] = v7_1423;
        Object[] v7_1434 = new Object[2];
        v7_1434[0] = "agrave";
        v7_1434[1] = Integer.valueOf(224);
        v5_35[40] = v7_1434;
        Object[] v7_1445 = new Object[2];
        v7_1445[0] = "amp";
        v7_1445[1] = Integer.valueOf(38);
        v5_35[41] = v7_1445;
        Object[] v7_1455 = new Object[2];
        v7_1455[0] = "aring";
        v7_1455[1] = Integer.valueOf(229);
        v5_35[42] = v7_1455;
        Object[] v7_1466 = new Object[2];
        v7_1466[0] = "atilde";
        v7_1466[1] = Integer.valueOf(227);
        v5_35[43] = v7_1466;
        Object[] v7_1477 = new Object[2];
        v7_1477[0] = "auml";
        v7_1477[1] = Integer.valueOf(228);
        v5_35[44] = v7_1477;
        Object[] v7_1488 = new Object[2];
        v7_1488[0] = "brvbar";
        v7_1488[1] = Integer.valueOf(166);
        v5_35[45] = v7_1488;
        Object[] v7_1499 = new Object[2];
        v7_1499[0] = "ccedil";
        v7_1499[1] = Integer.valueOf(231);
        v5_35[46] = v7_1499;
        Object[] v7_1511 = new Object[2];
        v7_1511[0] = "cedil";
        v7_1511[1] = Integer.valueOf(184);
        v5_35[47] = v7_1511;
        Object[] v7_1522 = new Object[2];
        v7_1522[0] = "cent";
        v7_1522[1] = Integer.valueOf(162);
        v5_35[48] = v7_1522;
        Object[] v7_1533 = new Object[2];
        v7_1533[0] = "copy";
        v7_1533[1] = Integer.valueOf(169);
        v5_35[49] = v7_1533;
        Object[] v7_1544 = new Object[2];
        v7_1544[0] = "curren";
        v7_1544[1] = Integer.valueOf(164);
        v5_35[50] = v7_1544;
        Object[] v7_1555 = new Object[2];
        v7_1555[0] = "deg";
        v7_1555[1] = Integer.valueOf(176);
        v5_35[51] = v7_1555;
        Object[] v7_1566 = new Object[2];
        v7_1566[0] = "divide";
        v7_1566[1] = Integer.valueOf(247);
        v5_35[52] = v7_1566;
        Object[] v7_1577 = new Object[2];
        v7_1577[0] = "eacute";
        v7_1577[1] = Integer.valueOf(233);
        v5_35[53] = v7_1577;
        Object[] v7_1588 = new Object[2];
        v7_1588[0] = "ecirc";
        v7_1588[1] = Integer.valueOf(234);
        v5_35[54] = v7_1588;
        Object[] v7_1599 = new Object[2];
        v7_1599[0] = "egrave";
        v7_1599[1] = Integer.valueOf(232);
        v5_35[55] = v7_1599;
        Object[] v7_1610 = new Object[2];
        v7_1610[0] = "eth";
        v7_1610[1] = Integer.valueOf(240);
        v5_35[56] = v7_1610;
        Object[] v7_1621 = new Object[2];
        v7_1621[0] = "euml";
        v7_1621[1] = Integer.valueOf(235);
        v5_35[57] = v7_1621;
        Object[] v7_1632 = new Object[2];
        v7_1632[0] = "frac12";
        v7_1632[1] = Integer.valueOf(189);
        v5_35[58] = v7_1632;
        Object[] v7_1643 = new Object[2];
        v7_1643[0] = "frac14";
        v7_1643[1] = Integer.valueOf(188);
        v5_35[59] = v7_1643;
        Object[] v7_1655 = new Object[2];
        v7_1655[0] = "frac34";
        v7_1655[1] = Integer.valueOf(190);
        v5_35[60] = v7_1655;
        Object[] v7_1666 = new Object[2];
        v7_1666[0] = "gt";
        v7_1666[1] = Integer.valueOf(62);
        v5_35[61] = v7_1666;
        Object[] v7_1677 = new Object[2];
        v7_1677[0] = "iacute";
        v7_1677[1] = Integer.valueOf(237);
        v5_35[62] = v7_1677;
        Object[] v7_1689 = new Object[2];
        v7_1689[0] = "icirc";
        v7_1689[1] = Integer.valueOf(238);
        v5_35[63] = v7_1689;
        Object[] v7_1700 = new Object[2];
        v7_1700[0] = "iexcl";
        v7_1700[1] = Integer.valueOf(161);
        v5_35[64] = v7_1700;
        Object[] v7_1712 = new Object[2];
        v7_1712[0] = "igrave";
        v7_1712[1] = Integer.valueOf(236);
        v5_35[65] = v7_1712;
        Object[] v7_1723 = new Object[2];
        v7_1723[0] = "iquest";
        v7_1723[1] = Integer.valueOf(191);
        v5_35[66] = v7_1723;
        Object[] v7_1734 = new Object[2];
        v7_1734[0] = "iuml";
        v7_1734[1] = Integer.valueOf(239);
        v5_35[67] = v7_1734;
        Object[] v7_1745 = new Object[2];
        v7_1745[0] = "laquo";
        v7_1745[1] = Integer.valueOf(171);
        v5_35[68] = v7_1745;
        Object[] v7_1757 = new Object[2];
        v7_1757[0] = "lt";
        v7_1757[1] = Integer.valueOf(60);
        v5_35[69] = v7_1757;
        Object[] v7_1768 = new Object[2];
        v7_1768[0] = "macr";
        v7_1768[1] = Integer.valueOf(175);
        v5_35[70] = v7_1768;
        Object[] v7_1779 = new Object[2];
        v7_1779[0] = "micro";
        v7_1779[1] = Integer.valueOf(181);
        v5_35[71] = v7_1779;
        Object[] v7_1790 = new Object[2];
        v7_1790[0] = "middot";
        v7_1790[1] = Integer.valueOf(183);
        v5_35[72] = v7_1790;
        Object[] v7_1802 = new Object[2];
        v7_1802[0] = "nbsp";
        v7_1802[1] = Integer.valueOf(160);
        v5_35[73] = v7_1802;
        Object[] v7_1813 = new Object[2];
        v7_1813[0] = "not";
        v7_1813[1] = Integer.valueOf(172);
        v5_35[74] = v7_1813;
        Object[] v7_1824 = new Object[2];
        v7_1824[0] = "ntilde";
        v7_1824[1] = Integer.valueOf(241);
        v5_35[75] = v7_1824;
        Object[] v7_1835 = new Object[2];
        v7_1835[0] = "oacute";
        v7_1835[1] = Integer.valueOf(243);
        v5_35[76] = v7_1835;
        Object[] v7_1847 = new Object[2];
        v7_1847[0] = "ocirc";
        v7_1847[1] = Integer.valueOf(244);
        v5_35[77] = v7_1847;
        Object[] v7_1858 = new Object[2];
        v7_1858[0] = "ograve";
        v7_1858[1] = Integer.valueOf(242);
        v5_35[78] = v7_1858;
        Object[] v7_1870 = new Object[2];
        v7_1870[0] = "ordf";
        v7_1870[1] = Integer.valueOf(170);
        v5_35[79] = v7_1870;
        Object[] v7_1881 = new Object[2];
        v7_1881[0] = "ordm";
        v7_1881[1] = Integer.valueOf(186);
        v5_35[80] = v7_1881;
        Object[] v7_1893 = new Object[2];
        v7_1893[0] = "oslash";
        v7_1893[1] = Integer.valueOf(248);
        v5_35[81] = v7_1893;
        Object[] v7_1904 = new Object[2];
        v7_1904[0] = "otilde";
        v7_1904[1] = Integer.valueOf(245);
        v5_35[82] = v7_1904;
        Object[] v7_1915 = new Object[2];
        v7_1915[0] = "ouml";
        v7_1915[1] = Integer.valueOf(246);
        v5_35[83] = v7_1915;
        Object[] v7_1926 = new Object[2];
        v7_1926[0] = "para";
        v7_1926[1] = Integer.valueOf(182);
        v5_35[84] = v7_1926;
        Object[] v7_1937 = new Object[2];
        v7_1937[0] = "plusmn";
        v7_1937[1] = Integer.valueOf(177);
        v5_35[85] = v7_1937;
        Object[] v7_1949 = new Object[2];
        v7_1949[0] = "pound";
        v7_1949[1] = Integer.valueOf(163);
        v5_35[86] = v7_1949;
        Object[] v7_1960 = new Object[2];
        v7_1960[0] = "quot";
        v7_1960[1] = Integer.valueOf(34);
        v5_35[87] = v7_1960;
        Object[] v7_1970 = new Object[2];
        v7_1970[0] = "raquo";
        v7_1970[1] = Integer.valueOf(187);
        v5_35[88] = v7_1970;
        Object[] v7_1981 = new Object[2];
        v7_1981[0] = "reg";
        v7_1981[1] = Integer.valueOf(174);
        v5_35[89] = v7_1981;
        Object[] v7_1992 = new Object[2];
        v7_1992[0] = "sect";
        v7_1992[1] = Integer.valueOf(167);
        v5_35[90] = v7_1992;
        Object[] v7_2003 = new Object[2];
        v7_2003[0] = "shy";
        v7_2003[1] = Integer.valueOf(173);
        v5_35[91] = v7_2003;
        Object[] v7_2014 = new Object[2];
        v7_2014[0] = "sup1";
        v7_2014[1] = Integer.valueOf(185);
        v5_35[92] = v7_2014;
        Object[] v7_2025 = new Object[2];
        v7_2025[0] = "sup2";
        v7_2025[1] = Integer.valueOf(178);
        v5_35[93] = v7_2025;
        Object[] v7_2036 = new Object[2];
        v7_2036[0] = "sup3";
        v7_2036[1] = Integer.valueOf(179);
        v5_35[94] = v7_2036;
        Object[] v7_2047 = new Object[2];
        v7_2047[0] = "szlig";
        v7_2047[1] = Integer.valueOf(223);
        v5_35[95] = v7_2047;
        Object[] v7_2059 = new Object[2];
        v7_2059[0] = "thorn";
        v7_2059[1] = Integer.valueOf(254);
        v5_35[96] = v7_2059;
        Object[] v7_2070 = new Object[2];
        v7_2070[0] = "times";
        v7_2070[1] = Integer.valueOf(215);
        v5_35[97] = v7_2070;
        Object[] v7_2081 = new Object[2];
        v7_2081[0] = "uacute";
        v7_2081[1] = Integer.valueOf(250);
        v5_35[98] = v7_2081;
        Object[] v7_2092 = new Object[2];
        v7_2092[0] = "ucirc";
        v7_2092[1] = Integer.valueOf(251);
        v5_35[99] = v7_2092;
        Object[] v7_2103 = new Object[2];
        v7_2103[0] = "ugrave";
        v7_2103[1] = Integer.valueOf(249);
        v5_35[100] = v7_2103;
        Object[] v7_2114 = new Object[2];
        v7_2114[0] = "uml";
        v7_2114[1] = Integer.valueOf(168);
        v5_35[101] = v7_2114;
        Object[] v7_2125 = new Object[2];
        v7_2125[0] = "uuml";
        v7_2125[1] = Integer.valueOf(252);
        v5_35[102] = v7_2125;
        Object[] v7_2136 = new Object[2];
        v7_2136[0] = "yacute";
        v7_2136[1] = Integer.valueOf(253);
        v5_35[103] = v7_2136;
        Object[] v7_2147 = new Object[2];
        v7_2147[0] = "yen";
        v7_2147[1] = Integer.valueOf(165);
        v5_35[104] = v7_2147;
        Object[] v7_2158 = new Object[2];
        v7_2158[0] = "yuml";
        v7_2158[1] = Integer.valueOf(255);
        v5_35[105] = v7_2158;
        org.jsoup.nodes.Entities.baseArray = v5_35;
        String v5_1 = new Object[][2032];
        java.util.Map v6_6 = new Object[2];
        v6_6[0] = "AElig";
        v6_6[1] = Integer.valueOf(198);
        v5_1[0] = v6_6;
        java.util.Map v6_16 = new Object[2];
        v6_16[0] = "AMP";
        v6_16[1] = Integer.valueOf(38);
        v5_1[1] = v6_16;
        java.util.Map v6_25 = new Object[2];
        v6_25[0] = "Aacute";
        v6_25[1] = Integer.valueOf(193);
        v5_1[2] = v6_25;
        Object[] v7_42 = new Object[2];
        v7_42[0] = "Abreve";
        v7_42[1] = Integer.valueOf(258);
        v5_1[3] = v7_42;
        Object[] v7_53 = new Object[2];
        v7_53[0] = "Acirc";
        v7_53[1] = Integer.valueOf(194);
        v5_1[4] = v7_53;
        Object[] v7_64 = new Object[2];
        v7_64[0] = "Acy";
        v7_64[1] = Integer.valueOf(1040);
        v5_1[5] = v7_64;
        Object[] v7_75 = new Object[2];
        v7_75[0] = "Afr";
        v7_75[1] = Integer.valueOf(120068);
        v5_1[6] = v7_75;
        Object[] v7_86 = new Object[2];
        v7_86[0] = "Agrave";
        v7_86[1] = Integer.valueOf(192);
        v5_1[7] = v7_86;
        Object[] v7_97 = new Object[2];
        v7_97[0] = "Alpha";
        v7_97[1] = Integer.valueOf(913);
        v5_1[8] = v7_97;
        Object[] v7_108 = new Object[2];
        v7_108[0] = "Amacr";
        v7_108[1] = Integer.valueOf(256);
        v5_1[9] = v7_108;
        Object[] v7_120 = new Object[2];
        v7_120[0] = "And";
        v7_120[1] = Integer.valueOf(10835);
        v5_1[10] = v7_120;
        Object[] v7_131 = new Object[2];
        v7_131[0] = "Aogon";
        v7_131[1] = Integer.valueOf(260);
        v5_1[11] = v7_131;
        Object[] v7_142 = new Object[2];
        v7_142[0] = "Aopf";
        v7_142[1] = Integer.valueOf(120120);
        v5_1[12] = v7_142;
        Object[] v7_153 = new Object[2];
        v7_153[0] = "ApplyFunction";
        v7_153[1] = Integer.valueOf(8289);
        v5_1[13] = v7_153;
        Object[] v7_164 = new Object[2];
        v7_164[0] = "Aring";
        v7_164[1] = Integer.valueOf(197);
        v5_1[14] = v7_164;
        Object[] v7_175 = new Object[2];
        v7_175[0] = "Ascr";
        v7_175[1] = Integer.valueOf(119964);
        v5_1[15] = v7_175;
        Object[] v7_186 = new Object[2];
        v7_186[0] = "Assign";
        v7_186[1] = Integer.valueOf(8788);
        v5_1[16] = v7_186;
        Object[] v7_197 = new Object[2];
        v7_197[0] = "Atilde";
        v7_197[1] = Integer.valueOf(195);
        v5_1[17] = v7_197;
        Object[] v7_208 = new Object[2];
        v7_208[0] = "Auml";
        v7_208[1] = Integer.valueOf(196);
        v5_1[18] = v7_208;
        Object[] v7_219 = new Object[2];
        v7_219[0] = "Backslash";
        v7_219[1] = Integer.valueOf(8726);
        v5_1[19] = v7_219;
        Object[] v7_231 = new Object[2];
        v7_231[0] = "Barv";
        v7_231[1] = Integer.valueOf(10983);
        v5_1[20] = v7_231;
        Object[] v7_242 = new Object[2];
        v7_242[0] = "Barwed";
        v7_242[1] = Integer.valueOf(8966);
        v5_1[21] = v7_242;
        Object[] v7_253 = new Object[2];
        v7_253[0] = "Bcy";
        v7_253[1] = Integer.valueOf(1041);
        v5_1[22] = v7_253;
        Object[] v7_264 = new Object[2];
        v7_264[0] = "Because";
        v7_264[1] = Integer.valueOf(8757);
        v5_1[23] = v7_264;
        Object[] v7_275 = new Object[2];
        v7_275[0] = "Bernoullis";
        v7_275[1] = Integer.valueOf(8492);
        v5_1[24] = v7_275;
        Object[] v7_286 = new Object[2];
        v7_286[0] = "Beta";
        v7_286[1] = Integer.valueOf(914);
        v5_1[25] = v7_286;
        Object[] v7_297 = new Object[2];
        v7_297[0] = "Bfr";
        v7_297[1] = Integer.valueOf(120069);
        v5_1[26] = v7_297;
        Object[] v7_308 = new Object[2];
        v7_308[0] = "Bopf";
        v7_308[1] = Integer.valueOf(120121);
        v5_1[27] = v7_308;
        Object[] v7_319 = new Object[2];
        v7_319[0] = "Breve";
        v7_319[1] = Integer.valueOf(728);
        v5_1[28] = v7_319;
        Object[] v7_330 = new Object[2];
        v7_330[0] = "Bscr";
        v7_330[1] = Integer.valueOf(8492);
        v5_1[29] = v7_330;
        Object[] v7_342 = new Object[2];
        v7_342[0] = "Bumpeq";
        v7_342[1] = Integer.valueOf(8782);
        v5_1[30] = v7_342;
        Object[] v7_353 = new Object[2];
        v7_353[0] = "CHcy";
        v7_353[1] = Integer.valueOf(1063);
        v5_1[31] = v7_353;
        Object[] v7_364 = new Object[2];
        v7_364[0] = "COPY";
        v7_364[1] = Integer.valueOf(169);
        v5_1[32] = v7_364;
        Object[] v7_375 = new Object[2];
        v7_375[0] = "Cacute";
        v7_375[1] = Integer.valueOf(262);
        v5_1[33] = v7_375;
        java.util.Map v6_379 = new Object[2];
        v6_379[0] = "Cap";
        v6_379[1] = Integer.valueOf(8914);
        v5_1[34] = v6_379;
        Object[] v7_398 = new Object[2];
        v7_398[0] = "CapitalDifferentialD";
        v7_398[1] = Integer.valueOf(8517);
        v5_1[35] = v7_398;
        Object[] v7_409 = new Object[2];
        v7_409[0] = "Cayleys";
        v7_409[1] = Integer.valueOf(8493);
        v5_1[36] = v7_409;
        Object[] v7_420 = new Object[2];
        v7_420[0] = "Ccaron";
        v7_420[1] = Integer.valueOf(268);
        v5_1[37] = v7_420;
        java.util.Map v6_422 = new Object[2];
        v6_422[0] = "Ccedil";
        v6_422[1] = Integer.valueOf(199);
        v5_1[38] = v6_422;
        Object[] v7_443 = new Object[2];
        v7_443[0] = "Ccirc";
        v7_443[1] = Integer.valueOf(264);
        v5_1[39] = v7_443;
        Object[] v7_455 = new Object[2];
        v7_455[0] = "Cconint";
        v7_455[1] = Integer.valueOf(8752);
        v5_1[40] = v7_455;
        Object[] v7_466 = new Object[2];
        v7_466[0] = "Cdot";
        v7_466[1] = Integer.valueOf(266);
        v5_1[41] = v7_466;
        Object[] v7_477 = new Object[2];
        v7_477[0] = "Cedilla";
        v7_477[1] = Integer.valueOf(184);
        v5_1[42] = v7_477;
        Object[] v7_488 = new Object[2];
        v7_488[0] = "CenterDot";
        v7_488[1] = Integer.valueOf(183);
        v5_1[43] = v7_488;
        Object[] v7_499 = new Object[2];
        v7_499[0] = "Cfr";
        v7_499[1] = Integer.valueOf(8493);
        v5_1[44] = v7_499;
        Object[] v7_510 = new Object[2];
        v7_510[0] = "Chi";
        v7_510[1] = Integer.valueOf(935);
        v5_1[45] = v7_510;
        Object[] v7_521 = new Object[2];
        v7_521[0] = "CircleDot";
        v7_521[1] = Integer.valueOf(8857);
        v5_1[46] = v7_521;
        Object[] v7_532 = new Object[2];
        v7_532[0] = "CircleMinus";
        v7_532[1] = Integer.valueOf(8854);
        v5_1[47] = v7_532;
        Object[] v7_543 = new Object[2];
        v7_543[0] = "CirclePlus";
        v7_543[1] = Integer.valueOf(8853);
        v5_1[48] = v7_543;
        Object[] v7_554 = new Object[2];
        v7_554[0] = "CircleTimes";
        v7_554[1] = Integer.valueOf(8855);
        v5_1[49] = v7_554;
        Object[] v7_566 = new Object[2];
        v7_566[0] = "ClockwiseContourIntegral";
        v7_566[1] = Integer.valueOf(8754);
        v5_1[50] = v7_566;
        Object[] v7_577 = new Object[2];
        v7_577[0] = "CloseCurlyDoubleQuote";
        v7_577[1] = Integer.valueOf(8221);
        v5_1[51] = v7_577;
        Object[] v7_588 = new Object[2];
        v7_588[0] = "CloseCurlyQuote";
        v7_588[1] = Integer.valueOf(8217);
        v5_1[52] = v7_588;
        Object[] v7_599 = new Object[2];
        v7_599[0] = "Colon";
        v7_599[1] = Integer.valueOf(8759);
        v5_1[53] = v7_599;
        Object[] v7_610 = new Object[2];
        v7_610[0] = "Colone";
        v7_610[1] = Integer.valueOf(10868);
        v5_1[54] = v7_610;
        Object[] v7_621 = new Object[2];
        v7_621[0] = "Congruent";
        v7_621[1] = Integer.valueOf(8801);
        v5_1[55] = v7_621;
        Object[] v7_632 = new Object[2];
        v7_632[0] = "Conint";
        v7_632[1] = Integer.valueOf(8751);
        v5_1[56] = v7_632;
        Object[] v7_643 = new Object[2];
        v7_643[0] = "ContourIntegral";
        v7_643[1] = Integer.valueOf(8750);
        v5_1[57] = v7_643;
        Object[] v7_654 = new Object[2];
        v7_654[0] = "Copf";
        v7_654[1] = Integer.valueOf(8450);
        v5_1[58] = v7_654;
        Object[] v7_665 = new Object[2];
        v7_665[0] = "Coproduct";
        v7_665[1] = Integer.valueOf(8720);
        v5_1[59] = v7_665;
        Object[] v7_677 = new Object[2];
        v7_677[0] = "CounterClockwiseContourIntegral";
        v7_677[1] = Integer.valueOf(8755);
        v5_1[60] = v7_677;
        Object[] v7_688 = new Object[2];
        v7_688[0] = "Cross";
        v7_688[1] = Integer.valueOf(10799);
        v5_1[61] = v7_688;
        Object[] v7_699 = new Object[2];
        v7_699[0] = "Cscr";
        v7_699[1] = Integer.valueOf(119966);
        v5_1[62] = v7_699;
        Object[] v7_710 = new Object[2];
        v7_710[0] = "Cup";
        v7_710[1] = Integer.valueOf(8915);
        v5_1[63] = v7_710;
        Object[] v7_721 = new Object[2];
        v7_721[0] = "CupCap";
        v7_721[1] = Integer.valueOf(8781);
        v5_1[64] = v7_721;
        Object[] v7_732 = new Object[2];
        v7_732[0] = "DD";
        v7_732[1] = Integer.valueOf(8517);
        v5_1[65] = v7_732;
        Object[] v7_743 = new Object[2];
        v7_743[0] = "DDotrahd";
        v7_743[1] = Integer.valueOf(10513);
        v5_1[66] = v7_743;
        Object[] v7_755 = new Object[2];
        v7_755[0] = "DJcy";
        v7_755[1] = Integer.valueOf(1026);
        v5_1[67] = v7_755;
        Object[] v7_766 = new Object[2];
        v7_766[0] = "DScy";
        v7_766[1] = Integer.valueOf(1029);
        v5_1[68] = v7_766;
        Object[] v7_777 = new Object[2];
        v7_777[0] = "DZcy";
        v7_777[1] = Integer.valueOf(1039);
        v5_1[69] = v7_777;
        Object[] v7_789 = new Object[2];
        v7_789[0] = "Dagger";
        v7_789[1] = Integer.valueOf(8225);
        v5_1[70] = v7_789;
        Object[] v7_800 = new Object[2];
        v7_800[0] = "Darr";
        v7_800[1] = Integer.valueOf(8609);
        v5_1[71] = v7_800;
        Object[] v7_811 = new Object[2];
        v7_811[0] = "Dashv";
        v7_811[1] = Integer.valueOf(10980);
        v5_1[72] = v7_811;
        Object[] v7_822 = new Object[2];
        v7_822[0] = "Dcaron";
        v7_822[1] = Integer.valueOf(270);
        v5_1[73] = v7_822;
        Object[] v7_833 = new Object[2];
        v7_833[0] = "Dcy";
        v7_833[1] = Integer.valueOf(1044);
        v5_1[74] = v7_833;
        Object[] v7_844 = new Object[2];
        v7_844[0] = "Del";
        v7_844[1] = Integer.valueOf(8711);
        v5_1[75] = v7_844;
        Object[] v7_855 = new Object[2];
        v7_855[0] = "Delta";
        v7_855[1] = Integer.valueOf(916);
        v5_1[76] = v7_855;
        Object[] v7_866 = new Object[2];
        v7_866[0] = "Dfr";
        v7_866[1] = Integer.valueOf(120071);
        v5_1[77] = v7_866;
        Object[] v7_877 = new Object[2];
        v7_877[0] = "DiacriticalAcute";
        v7_877[1] = Integer.valueOf(180);
        v5_1[78] = v7_877;
        Object[] v7_888 = new Object[2];
        v7_888[0] = "DiacriticalDot";
        v7_888[1] = Integer.valueOf(729);
        v5_1[79] = v7_888;
        Object[] v7_900 = new Object[2];
        v7_900[0] = "DiacriticalDoubleAcute";
        v7_900[1] = Integer.valueOf(733);
        v5_1[80] = v7_900;
        Object[] v7_911 = new Object[2];
        v7_911[0] = "DiacriticalGrave";
        v7_911[1] = Integer.valueOf(96);
        v5_1[81] = v7_911;
        Object[] v7_922 = new Object[2];
        v7_922[0] = "DiacriticalTilde";
        v7_922[1] = Integer.valueOf(732);
        v5_1[82] = v7_922;
        Object[] v7_933 = new Object[2];
        v7_933[0] = "Diamond";
        v7_933[1] = Integer.valueOf(8900);
        v5_1[83] = v7_933;
        Object[] v7_944 = new Object[2];
        v7_944[0] = "DifferentialD";
        v7_944[1] = Integer.valueOf(8518);
        v5_1[84] = v7_944;
        Object[] v7_955 = new Object[2];
        v7_955[0] = "Dopf";
        v7_955[1] = Integer.valueOf(120123);
        v5_1[85] = v7_955;
        Object[] v7_966 = new Object[2];
        v7_966[0] = "Dot";
        v7_966[1] = Integer.valueOf(168);
        v5_1[86] = v7_966;
        Object[] v7_977 = new Object[2];
        v7_977[0] = "DotDot";
        v7_977[1] = Integer.valueOf(8412);
        v5_1[87] = v7_977;
        Object[] v7_988 = new Object[2];
        v7_988[0] = "DotEqual";
        v7_988[1] = Integer.valueOf(8784);
        v5_1[88] = v7_988;
        Object[] v7_999 = new Object[2];
        v7_999[0] = "DoubleContourIntegral";
        v7_999[1] = Integer.valueOf(8751);
        v5_1[89] = v7_999;
        Object[] v7_1011 = new Object[2];
        v7_1011[0] = "DoubleDot";
        v7_1011[1] = Integer.valueOf(168);
        v5_1[90] = v7_1011;
        Object[] v7_1022 = new Object[2];
        v7_1022[0] = "DoubleDownArrow";
        v7_1022[1] = Integer.valueOf(8659);
        v5_1[91] = v7_1022;
        Object[] v7_1033 = new Object[2];
        v7_1033[0] = "DoubleLeftArrow";
        v7_1033[1] = Integer.valueOf(8656);
        v5_1[92] = v7_1033;
        Object[] v7_1044 = new Object[2];
        v7_1044[0] = "DoubleLeftRightArrow";
        v7_1044[1] = Integer.valueOf(8660);
        v5_1[93] = v7_1044;
        Object[] v7_1055 = new Object[2];
        v7_1055[0] = "DoubleLeftTee";
        v7_1055[1] = Integer.valueOf(10980);
        v5_1[94] = v7_1055;
        Object[] v7_1066 = new Object[2];
        v7_1066[0] = "DoubleLongLeftArrow";
        v7_1066[1] = Integer.valueOf(10232);
        v5_1[95] = v7_1066;
        Object[] v7_1077 = new Object[2];
        v7_1077[0] = "DoubleLongLeftRightArrow";
        v7_1077[1] = Integer.valueOf(10234);
        v5_1[96] = v7_1077;
        Object[] v7_1088 = new Object[2];
        v7_1088[0] = "DoubleLongRightArrow";
        v7_1088[1] = Integer.valueOf(10233);
        v5_1[97] = v7_1088;
        Object[] v7_1099 = new Object[2];
        v7_1099[0] = "DoubleRightArrow";
        v7_1099[1] = Integer.valueOf(8658);
        v5_1[98] = v7_1099;
        Object[] v7_1110 = new Object[2];
        v7_1110[0] = "DoubleRightTee";
        v7_1110[1] = Integer.valueOf(8872);
        v5_1[99] = v7_1110;
        Object[] v7_1123 = new Object[2];
        v7_1123[0] = "DoubleUpArrow";
        v7_1123[1] = Integer.valueOf(8657);
        v5_1[100] = v7_1123;
        Object[] v7_1134 = new Object[2];
        v7_1134[0] = "DoubleUpDownArrow";
        v7_1134[1] = Integer.valueOf(8661);
        v5_1[101] = v7_1134;
        Object[] v7_1145 = new Object[2];
        v7_1145[0] = "DoubleVerticalBar";
        v7_1145[1] = Integer.valueOf(8741);
        v5_1[102] = v7_1145;
        Object[] v7_1156 = new Object[2];
        v7_1156[0] = "DownArrow";
        v7_1156[1] = Integer.valueOf(8595);
        v5_1[103] = v7_1156;
        Object[] v7_1157 = new Object[2];
        v7_1157[0] = "DownArrowBar";
        v7_1157[1] = Integer.valueOf(10515);
        v5_1[104] = v7_1157;
        Object[] v7_1158 = new Object[2];
        v7_1158[0] = "DownArrowUpArrow";
        v7_1158[1] = Integer.valueOf(8693);
        v5_1[105] = v7_1158;
        Object[] v7_1159 = new Object[2];
        v7_1159[0] = "DownBreve";
        v7_1159[1] = Integer.valueOf(785);
        v5_1[106] = v7_1159;
        Object[] v7_1160 = new Object[2];
        v7_1160[0] = "DownLeftRightVector";
        v7_1160[1] = Integer.valueOf(10576);
        v5_1[107] = v7_1160;
        Object[] v7_1161 = new Object[2];
        v7_1161[0] = "DownLeftTeeVector";
        v7_1161[1] = Integer.valueOf(10590);
        v5_1[108] = v7_1161;
        Object[] v7_1162 = new Object[2];
        v7_1162[0] = "DownLeftVector";
        v7_1162[1] = Integer.valueOf(8637);
        v5_1[109] = v7_1162;
        Object[] v7_1164 = new Object[2];
        v7_1164[0] = "DownLeftVectorBar";
        v7_1164[1] = Integer.valueOf(10582);
        v5_1[110] = v7_1164;
        Object[] v7_1165 = new Object[2];
        v7_1165[0] = "DownRightTeeVector";
        v7_1165[1] = Integer.valueOf(10591);
        v5_1[111] = v7_1165;
        Object[] v7_1166 = new Object[2];
        v7_1166[0] = "DownRightVector";
        v7_1166[1] = Integer.valueOf(8641);
        v5_1[112] = v7_1166;
        Object[] v7_1167 = new Object[2];
        v7_1167[0] = "DownRightVectorBar";
        v7_1167[1] = Integer.valueOf(10583);
        v5_1[113] = v7_1167;
        Object[] v7_1168 = new Object[2];
        v7_1168[0] = "DownTee";
        v7_1168[1] = Integer.valueOf(8868);
        v5_1[114] = v7_1168;
        Object[] v7_1169 = new Object[2];
        v7_1169[0] = "DownTeeArrow";
        v7_1169[1] = Integer.valueOf(8615);
        v5_1[115] = v7_1169;
        Object[] v7_1170 = new Object[2];
        v7_1170[0] = "Downarrow";
        v7_1170[1] = Integer.valueOf(8659);
        v5_1[116] = v7_1170;
        Object[] v7_1171 = new Object[2];
        v7_1171[0] = "Dscr";
        v7_1171[1] = Integer.valueOf(119967);
        v5_1[117] = v7_1171;
        Object[] v7_1172 = new Object[2];
        v7_1172[0] = "Dstrok";
        v7_1172[1] = Integer.valueOf(272);
        v5_1[118] = v7_1172;
        Object[] v7_1173 = new Object[2];
        v7_1173[0] = "ENG";
        v7_1173[1] = Integer.valueOf(330);
        v5_1[119] = v7_1173;
        Object[] v7_1175 = new Object[2];
        v7_1175[0] = "ETH";
        v7_1175[1] = Integer.valueOf(208);
        v5_1[120] = v7_1175;
        Object[] v7_1176 = new Object[2];
        v7_1176[0] = "Eacute";
        v7_1176[1] = Integer.valueOf(201);
        v5_1[121] = v7_1176;
        Object[] v7_1177 = new Object[2];
        v7_1177[0] = "Ecaron";
        v7_1177[1] = Integer.valueOf(282);
        v5_1[122] = v7_1177;
        Object[] v7_1178 = new Object[2];
        v7_1178[0] = "Ecirc";
        v7_1178[1] = Integer.valueOf(202);
        v5_1[123] = v7_1178;
        Object[] v7_1179 = new Object[2];
        v7_1179[0] = "Ecy";
        v7_1179[1] = Integer.valueOf(1069);
        v5_1[124] = v7_1179;
        Object[] v7_1180 = new Object[2];
        v7_1180[0] = "Edot";
        v7_1180[1] = Integer.valueOf(278);
        v5_1[125] = v7_1180;
        Object[] v7_1181 = new Object[2];
        v7_1181[0] = "Efr";
        v7_1181[1] = Integer.valueOf(120072);
        v5_1[126] = v7_1181;
        Object[] v7_1182 = new Object[2];
        v7_1182[0] = "Egrave";
        v7_1182[1] = Integer.valueOf(200);
        v5_1[127] = v7_1182;
        Object[] v7_1183 = new Object[2];
        v7_1183[0] = "Element";
        v7_1183[1] = Integer.valueOf(8712);
        v5_1[128] = v7_1183;
        Object[] v7_1184 = new Object[2];
        v7_1184[0] = "Emacr";
        v7_1184[1] = Integer.valueOf(274);
        v5_1[129] = v7_1184;
        Object[] v7_1186 = new Object[2];
        v7_1186[0] = "EmptySmallSquare";
        v7_1186[1] = Integer.valueOf(9723);
        v5_1[130] = v7_1186;
        Object[] v7_1187 = new Object[2];
        v7_1187[0] = "EmptyVerySmallSquare";
        v7_1187[1] = Integer.valueOf(9643);
        v5_1[131] = v7_1187;
        Object[] v7_1188 = new Object[2];
        v7_1188[0] = "Eogon";
        v7_1188[1] = Integer.valueOf(280);
        v5_1[132] = v7_1188;
        Object[] v7_1189 = new Object[2];
        v7_1189[0] = "Eopf";
        v7_1189[1] = Integer.valueOf(120124);
        v5_1[133] = v7_1189;
        Object[] v7_1190 = new Object[2];
        v7_1190[0] = "Epsilon";
        v7_1190[1] = Integer.valueOf(917);
        v5_1[134] = v7_1190;
        Object[] v7_1191 = new Object[2];
        v7_1191[0] = "Equal";
        v7_1191[1] = Integer.valueOf(10869);
        v5_1[135] = v7_1191;
        Object[] v7_1192 = new Object[2];
        v7_1192[0] = "EqualTilde";
        v7_1192[1] = Integer.valueOf(8770);
        v5_1[136] = v7_1192;
        Object[] v7_1193 = new Object[2];
        v7_1193[0] = "Equilibrium";
        v7_1193[1] = Integer.valueOf(8652);
        v5_1[137] = v7_1193;
        Object[] v7_1194 = new Object[2];
        v7_1194[0] = "Escr";
        v7_1194[1] = Integer.valueOf(8496);
        v5_1[138] = v7_1194;
        Object[] v7_1195 = new Object[2];
        v7_1195[0] = "Esim";
        v7_1195[1] = Integer.valueOf(10867);
        v5_1[139] = v7_1195;
        Object[] v7_1197 = new Object[2];
        v7_1197[0] = "Eta";
        v7_1197[1] = Integer.valueOf(919);
        v5_1[140] = v7_1197;
        Object[] v7_1198 = new Object[2];
        v7_1198[0] = "Euml";
        v7_1198[1] = Integer.valueOf(203);
        v5_1[141] = v7_1198;
        Object[] v7_1199 = new Object[2];
        v7_1199[0] = "Exists";
        v7_1199[1] = Integer.valueOf(8707);
        v5_1[142] = v7_1199;
        Object[] v7_1200 = new Object[2];
        v7_1200[0] = "ExponentialE";
        v7_1200[1] = Integer.valueOf(8519);
        v5_1[143] = v7_1200;
        Object[] v7_1201 = new Object[2];
        v7_1201[0] = "Fcy";
        v7_1201[1] = Integer.valueOf(1060);
        v5_1[144] = v7_1201;
        Object[] v7_1203 = new Object[2];
        v7_1203[0] = "Ffr";
        v7_1203[1] = Integer.valueOf(120073);
        v5_1[145] = v7_1203;
        Object[] v7_1204 = new Object[2];
        v7_1204[0] = "FilledSmallSquare";
        v7_1204[1] = Integer.valueOf(9724);
        v5_1[146] = v7_1204;
        Object[] v7_1205 = new Object[2];
        v7_1205[0] = "FilledVerySmallSquare";
        v7_1205[1] = Integer.valueOf(9642);
        v5_1[147] = v7_1205;
        Object[] v7_1206 = new Object[2];
        v7_1206[0] = "Fopf";
        v7_1206[1] = Integer.valueOf(120125);
        v5_1[148] = v7_1206;
        Object[] v7_1207 = new Object[2];
        v7_1207[0] = "ForAll";
        v7_1207[1] = Integer.valueOf(8704);
        v5_1[149] = v7_1207;
        Object[] v7_1209 = new Object[2];
        v7_1209[0] = "Fouriertrf";
        v7_1209[1] = Integer.valueOf(8497);
        v5_1[150] = v7_1209;
        Object[] v7_1210 = new Object[2];
        v7_1210[0] = "Fscr";
        v7_1210[1] = Integer.valueOf(8497);
        v5_1[151] = v7_1210;
        Object[] v7_1211 = new Object[2];
        v7_1211[0] = "GJcy";
        v7_1211[1] = Integer.valueOf(1027);
        v5_1[152] = v7_1211;
        Object[] v7_1212 = new Object[2];
        v7_1212[0] = "GT";
        v7_1212[1] = Integer.valueOf(62);
        v5_1[153] = v7_1212;
        Object[] v7_1213 = new Object[2];
        v7_1213[0] = "Gamma";
        v7_1213[1] = Integer.valueOf(915);
        v5_1[154] = v7_1213;
        Object[] v7_1214 = new Object[2];
        v7_1214[0] = "Gammad";
        v7_1214[1] = Integer.valueOf(988);
        v5_1[155] = v7_1214;
        Object[] v7_1215 = new Object[2];
        v7_1215[0] = "Gbreve";
        v7_1215[1] = Integer.valueOf(286);
        v5_1[156] = v7_1215;
        Object[] v7_1216 = new Object[2];
        v7_1216[0] = "Gcedil";
        v7_1216[1] = Integer.valueOf(290);
        v5_1[157] = v7_1216;
        Object[] v7_1217 = new Object[2];
        v7_1217[0] = "Gcirc";
        v7_1217[1] = Integer.valueOf(284);
        v5_1[158] = v7_1217;
        Object[] v7_1218 = new Object[2];
        v7_1218[0] = "Gcy";
        v7_1218[1] = Integer.valueOf(1043);
        v5_1[159] = v7_1218;
        Object[] v7_1220 = new Object[2];
        v7_1220[0] = "Gdot";
        v7_1220[1] = Integer.valueOf(288);
        v5_1[160] = v7_1220;
        Object[] v7_1221 = new Object[2];
        v7_1221[0] = "Gfr";
        v7_1221[1] = Integer.valueOf(120074);
        v5_1[161] = v7_1221;
        Object[] v7_1222 = new Object[2];
        v7_1222[0] = "Gg";
        v7_1222[1] = Integer.valueOf(8921);
        v5_1[162] = v7_1222;
        Object[] v7_1223 = new Object[2];
        v7_1223[0] = "Gopf";
        v7_1223[1] = Integer.valueOf(120126);
        v5_1[163] = v7_1223;
        Object[] v7_1224 = new Object[2];
        v7_1224[0] = "GreaterEqual";
        v7_1224[1] = Integer.valueOf(8805);
        v5_1[164] = v7_1224;
        Object[] v7_1225 = new Object[2];
        v7_1225[0] = "GreaterEqualLess";
        v7_1225[1] = Integer.valueOf(8923);
        v5_1[165] = v7_1225;
        Object[] v7_1226 = new Object[2];
        v7_1226[0] = "GreaterFullEqual";
        v7_1226[1] = Integer.valueOf(8807);
        v5_1[166] = v7_1226;
        Object[] v7_1227 = new Object[2];
        v7_1227[0] = "GreaterGreater";
        v7_1227[1] = Integer.valueOf(10914);
        v5_1[167] = v7_1227;
        Object[] v7_1228 = new Object[2];
        v7_1228[0] = "GreaterLess";
        v7_1228[1] = Integer.valueOf(8823);
        v5_1[168] = v7_1228;
        Object[] v7_1229 = new Object[2];
        v7_1229[0] = "GreaterSlantEqual";
        v7_1229[1] = Integer.valueOf(10878);
        v5_1[169] = v7_1229;
        Object[] v7_1231 = new Object[2];
        v7_1231[0] = "GreaterTilde";
        v7_1231[1] = Integer.valueOf(8819);
        v5_1[170] = v7_1231;
        Object[] v7_1232 = new Object[2];
        v7_1232[0] = "Gscr";
        v7_1232[1] = Integer.valueOf(119970);
        v5_1[171] = v7_1232;
        Object[] v7_1233 = new Object[2];
        v7_1233[0] = "Gt";
        v7_1233[1] = Integer.valueOf(8811);
        v5_1[172] = v7_1233;
        Object[] v7_1234 = new Object[2];
        v7_1234[0] = "HARDcy";
        v7_1234[1] = Integer.valueOf(1066);
        v5_1[173] = v7_1234;
        Object[] v7_1235 = new Object[2];
        v7_1235[0] = "Hacek";
        v7_1235[1] = Integer.valueOf(711);
        v5_1[174] = v7_1235;
        Object[] v7_1236 = new Object[2];
        v7_1236[0] = "Hat";
        v7_1236[1] = Integer.valueOf(94);
        v5_1[175] = v7_1236;
        Object[] v7_1237 = new Object[2];
        v7_1237[0] = "Hcirc";
        v7_1237[1] = Integer.valueOf(292);
        v5_1[176] = v7_1237;
        Object[] v7_1238 = new Object[2];
        v7_1238[0] = "Hfr";
        v7_1238[1] = Integer.valueOf(8460);
        v5_1[177] = v7_1238;
        Object[] v7_1240 = new Object[2];
        v7_1240[0] = "HilbertSpace";
        v7_1240[1] = Integer.valueOf(8459);
        v5_1[178] = v7_1240;
        Object[] v7_1241 = new Object[2];
        v7_1241[0] = "Hopf";
        v7_1241[1] = Integer.valueOf(8461);
        v5_1[179] = v7_1241;
        Object[] v7_1243 = new Object[2];
        v7_1243[0] = "HorizontalLine";
        v7_1243[1] = Integer.valueOf(9472);
        v5_1[180] = v7_1243;
        Object[] v7_1244 = new Object[2];
        v7_1244[0] = "Hscr";
        v7_1244[1] = Integer.valueOf(8459);
        v5_1[181] = v7_1244;
        Object[] v7_1245 = new Object[2];
        v7_1245[0] = "Hstrok";
        v7_1245[1] = Integer.valueOf(294);
        v5_1[182] = v7_1245;
        Object[] v7_1246 = new Object[2];
        v7_1246[0] = "HumpDownHump";
        v7_1246[1] = Integer.valueOf(8782);
        v5_1[183] = v7_1246;
        Object[] v7_1247 = new Object[2];
        v7_1247[0] = "HumpEqual";
        v7_1247[1] = Integer.valueOf(8783);
        v5_1[184] = v7_1247;
        Object[] v7_1248 = new Object[2];
        v7_1248[0] = "IEcy";
        v7_1248[1] = Integer.valueOf(1045);
        v5_1[185] = v7_1248;
        Object[] v7_1249 = new Object[2];
        v7_1249[0] = "IJlig";
        v7_1249[1] = Integer.valueOf(306);
        v5_1[186] = v7_1249;
        Object[] v7_1250 = new Object[2];
        v7_1250[0] = "IOcy";
        v7_1250[1] = Integer.valueOf(1025);
        v5_1[187] = v7_1250;
        Object[] v7_1251 = new Object[2];
        v7_1251[0] = "Iacute";
        v7_1251[1] = Integer.valueOf(205);
        v5_1[188] = v7_1251;
        Object[] v7_1252 = new Object[2];
        v7_1252[0] = "Icirc";
        v7_1252[1] = Integer.valueOf(206);
        v5_1[189] = v7_1252;
        Object[] v7_1254 = new Object[2];
        v7_1254[0] = "Icy";
        v7_1254[1] = Integer.valueOf(1048);
        v5_1[190] = v7_1254;
        Object[] v7_1255 = new Object[2];
        v7_1255[0] = "Idot";
        v7_1255[1] = Integer.valueOf(304);
        v5_1[191] = v7_1255;
        Object[] v7_1256 = new Object[2];
        v7_1256[0] = "Ifr";
        v7_1256[1] = Integer.valueOf(8465);
        v5_1[192] = v7_1256;
        Object[] v7_1257 = new Object[2];
        v7_1257[0] = "Igrave";
        v7_1257[1] = Integer.valueOf(204);
        v5_1[193] = v7_1257;
        Object[] v7_1258 = new Object[2];
        v7_1258[0] = "Im";
        v7_1258[1] = Integer.valueOf(8465);
        v5_1[194] = v7_1258;
        Object[] v7_1259 = new Object[2];
        v7_1259[0] = "Imacr";
        v7_1259[1] = Integer.valueOf(298);
        v5_1[195] = v7_1259;
        Object[] v7_1260 = new Object[2];
        v7_1260[0] = "ImaginaryI";
        v7_1260[1] = Integer.valueOf(8520);
        v5_1[196] = v7_1260;
        Object[] v7_1261 = new Object[2];
        v7_1261[0] = "Implies";
        v7_1261[1] = Integer.valueOf(8658);
        v5_1[197] = v7_1261;
        Object[] v7_1262 = new Object[2];
        v7_1262[0] = "Int";
        v7_1262[1] = Integer.valueOf(8748);
        v5_1[198] = v7_1262;
        Object[] v7_1263 = new Object[2];
        v7_1263[0] = "Integral";
        v7_1263[1] = Integer.valueOf(8747);
        v5_1[199] = v7_1263;
        Object[] v7_1265 = new Object[2];
        v7_1265[0] = "Intersection";
        v7_1265[1] = Integer.valueOf(8898);
        v5_1[200] = v7_1265;
        Object[] v7_1266 = new Object[2];
        v7_1266[0] = "InvisibleComma";
        v7_1266[1] = Integer.valueOf(8291);
        v5_1[201] = v7_1266;
        Object[] v7_1267 = new Object[2];
        v7_1267[0] = "InvisibleTimes";
        v7_1267[1] = Integer.valueOf(8290);
        v5_1[202] = v7_1267;
        Object[] v7_1268 = new Object[2];
        v7_1268[0] = "Iogon";
        v7_1268[1] = Integer.valueOf(302);
        v5_1[203] = v7_1268;
        Object[] v7_1269 = new Object[2];
        v7_1269[0] = "Iopf";
        v7_1269[1] = Integer.valueOf(120128);
        v5_1[204] = v7_1269;
        Object[] v7_1270 = new Object[2];
        v7_1270[0] = "Iota";
        v7_1270[1] = Integer.valueOf(921);
        v5_1[205] = v7_1270;
        Object[] v7_1271 = new Object[2];
        v7_1271[0] = "Iscr";
        v7_1271[1] = Integer.valueOf(8464);
        v5_1[206] = v7_1271;
        Object[] v7_1272 = new Object[2];
        v7_1272[0] = "Itilde";
        v7_1272[1] = Integer.valueOf(296);
        v5_1[207] = v7_1272;
        Object[] v7_1273 = new Object[2];
        v7_1273[0] = "Iukcy";
        v7_1273[1] = Integer.valueOf(1030);
        v5_1[208] = v7_1273;
        Object[] v7_1274 = new Object[2];
        v7_1274[0] = "Iuml";
        v7_1274[1] = Integer.valueOf(207);
        v5_1[209] = v7_1274;
        Object[] v7_1276 = new Object[2];
        v7_1276[0] = "Jcirc";
        v7_1276[1] = Integer.valueOf(308);
        v5_1[210] = v7_1276;
        Object[] v7_1277 = new Object[2];
        v7_1277[0] = "Jcy";
        v7_1277[1] = Integer.valueOf(1049);
        v5_1[211] = v7_1277;
        Object[] v7_1278 = new Object[2];
        v7_1278[0] = "Jfr";
        v7_1278[1] = Integer.valueOf(120077);
        v5_1[212] = v7_1278;
        Object[] v7_1279 = new Object[2];
        v7_1279[0] = "Jopf";
        v7_1279[1] = Integer.valueOf(120129);
        v5_1[213] = v7_1279;
        Object[] v7_1280 = new Object[2];
        v7_1280[0] = "Jscr";
        v7_1280[1] = Integer.valueOf(119973);
        v5_1[214] = v7_1280;
        Object[] v7_1281 = new Object[2];
        v7_1281[0] = "Jsercy";
        v7_1281[1] = Integer.valueOf(1032);
        v5_1[215] = v7_1281;
        Object[] v7_1282 = new Object[2];
        v7_1282[0] = "Jukcy";
        v7_1282[1] = Integer.valueOf(1028);
        v5_1[216] = v7_1282;
        Object[] v7_1283 = new Object[2];
        v7_1283[0] = "KHcy";
        v7_1283[1] = Integer.valueOf(1061);
        v5_1[217] = v7_1283;
        Object[] v7_1284 = new Object[2];
        v7_1284[0] = "KJcy";
        v7_1284[1] = Integer.valueOf(1036);
        v5_1[218] = v7_1284;
        Object[] v7_1285 = new Object[2];
        v7_1285[0] = "Kappa";
        v7_1285[1] = Integer.valueOf(922);
        v5_1[219] = v7_1285;
        Object[] v7_1287 = new Object[2];
        v7_1287[0] = "Kcedil";
        v7_1287[1] = Integer.valueOf(310);
        v5_1[220] = v7_1287;
        Object[] v7_1288 = new Object[2];
        v7_1288[0] = "Kcy";
        v7_1288[1] = Integer.valueOf(1050);
        v5_1[221] = v7_1288;
        Object[] v7_1289 = new Object[2];
        v7_1289[0] = "Kfr";
        v7_1289[1] = Integer.valueOf(120078);
        v5_1[222] = v7_1289;
        Object[] v7_1291 = new Object[2];
        v7_1291[0] = "Kopf";
        v7_1291[1] = Integer.valueOf(120130);
        v5_1[223] = v7_1291;
        Object[] v7_1292 = new Object[2];
        v7_1292[0] = "Kscr";
        v7_1292[1] = Integer.valueOf(119974);
        v5_1[224] = v7_1292;
        Object[] v7_1293 = new Object[2];
        v7_1293[0] = "LJcy";
        v7_1293[1] = Integer.valueOf(1033);
        v5_1[225] = v7_1293;
        Object[] v7_1294 = new Object[2];
        v7_1294[0] = "LT";
        v7_1294[1] = Integer.valueOf(60);
        v5_1[226] = v7_1294;
        Object[] v7_1295 = new Object[2];
        v7_1295[0] = "Lacute";
        v7_1295[1] = Integer.valueOf(313);
        v5_1[227] = v7_1295;
        Object[] v7_1296 = new Object[2];
        v7_1296[0] = "Lambda";
        v7_1296[1] = Integer.valueOf(923);
        v5_1[228] = v7_1296;
        Object[] v7_1297 = new Object[2];
        v7_1297[0] = "Lang";
        v7_1297[1] = Integer.valueOf(10218);
        v5_1[229] = v7_1297;
        Object[] v7_1299 = new Object[2];
        v7_1299[0] = "Laplacetrf";
        v7_1299[1] = Integer.valueOf(8466);
        v5_1[230] = v7_1299;
        Object[] v7_1300 = new Object[2];
        v7_1300[0] = "Larr";
        v7_1300[1] = Integer.valueOf(8606);
        v5_1[231] = v7_1300;
        Object[] v7_1301 = new Object[2];
        v7_1301[0] = "Lcaron";
        v7_1301[1] = Integer.valueOf(317);
        v5_1[232] = v7_1301;
        Object[] v7_1302 = new Object[2];
        v7_1302[0] = "Lcedil";
        v7_1302[1] = Integer.valueOf(315);
        v5_1[233] = v7_1302;
        Object[] v7_1303 = new Object[2];
        v7_1303[0] = "Lcy";
        v7_1303[1] = Integer.valueOf(1051);
        v5_1[234] = v7_1303;
        Object[] v7_1304 = new Object[2];
        v7_1304[0] = "LeftAngleBracket";
        v7_1304[1] = Integer.valueOf(10216);
        v5_1[235] = v7_1304;
        Object[] v7_1305 = new Object[2];
        v7_1305[0] = "LeftArrow";
        v7_1305[1] = Integer.valueOf(8592);
        v5_1[236] = v7_1305;
        Object[] v7_1306 = new Object[2];
        v7_1306[0] = "LeftArrowBar";
        v7_1306[1] = Integer.valueOf(8676);
        v5_1[237] = v7_1306;
        Object[] v7_1307 = new Object[2];
        v7_1307[0] = "LeftArrowRightArrow";
        v7_1307[1] = Integer.valueOf(8646);
        v5_1[238] = v7_1307;
        Object[] v7_1309 = new Object[2];
        v7_1309[0] = "LeftCeiling";
        v7_1309[1] = Integer.valueOf(8968);
        v5_1[239] = v7_1309;
        Object[] v7_1310 = new Object[2];
        v7_1310[0] = "LeftDoubleBracket";
        v7_1310[1] = Integer.valueOf(10214);
        v5_1[240] = v7_1310;
        Object[] v7_1311 = new Object[2];
        v7_1311[0] = "LeftDownTeeVector";
        v7_1311[1] = Integer.valueOf(10593);
        v5_1[241] = v7_1311;
        Object[] v7_1312 = new Object[2];
        v7_1312[0] = "LeftDownVector";
        v7_1312[1] = Integer.valueOf(8643);
        v5_1[242] = v7_1312;
        Object[] v7_1313 = new Object[2];
        v7_1313[0] = "LeftDownVectorBar";
        v7_1313[1] = Integer.valueOf(10585);
        v5_1[243] = v7_1313;
        Object[] v7_1314 = new Object[2];
        v7_1314[0] = "LeftFloor";
        v7_1314[1] = Integer.valueOf(8970);
        v5_1[244] = v7_1314;
        Object[] v7_1316 = new Object[2];
        v7_1316[0] = "LeftRightArrow";
        v7_1316[1] = Integer.valueOf(8596);
        v5_1[245] = v7_1316;
        Object[] v7_1317 = new Object[2];
        v7_1317[0] = "LeftRightVector";
        v7_1317[1] = Integer.valueOf(10574);
        v5_1[246] = v7_1317;
        Object[] v7_1318 = new Object[2];
        v7_1318[0] = "LeftTee";
        v7_1318[1] = Integer.valueOf(8867);
        v5_1[247] = v7_1318;
        Object[] v7_1319 = new Object[2];
        v7_1319[0] = "LeftTeeArrow";
        v7_1319[1] = Integer.valueOf(8612);
        v5_1[248] = v7_1319;
        Object[] v7_1321 = new Object[2];
        v7_1321[0] = "LeftTeeVector";
        v7_1321[1] = Integer.valueOf(10586);
        v5_1[249] = v7_1321;
        Object[] v7_1322 = new Object[2];
        v7_1322[0] = "LeftTriangle";
        v7_1322[1] = Integer.valueOf(8882);
        v5_1[250] = v7_1322;
        Object[] v7_1323 = new Object[2];
        v7_1323[0] = "LeftTriangleBar";
        v7_1323[1] = Integer.valueOf(10703);
        v5_1[251] = v7_1323;
        Object[] v7_1324 = new Object[2];
        v7_1324[0] = "LeftTriangleEqual";
        v7_1324[1] = Integer.valueOf(8884);
        v5_1[252] = v7_1324;
        Object[] v7_1325 = new Object[2];
        v7_1325[0] = "LeftUpDownVector";
        v7_1325[1] = Integer.valueOf(10577);
        v5_1[253] = v7_1325;
        Object[] v7_1326 = new Object[2];
        v7_1326[0] = "LeftUpTeeVector";
        v7_1326[1] = Integer.valueOf(10592);
        v5_1[254] = v7_1326;
        Object[] v7_1327 = new Object[2];
        v7_1327[0] = "LeftUpVector";
        v7_1327[1] = Integer.valueOf(8639);
        v5_1[255] = v7_1327;
        Object[] v7_1328 = new Object[2];
        v7_1328[0] = "LeftUpVectorBar";
        v7_1328[1] = Integer.valueOf(10584);
        v5_1[256] = v7_1328;
        Object[] v7_1329 = new Object[2];
        v7_1329[0] = "LeftVector";
        v7_1329[1] = Integer.valueOf(8636);
        v5_1[257] = v7_1329;
        Object[] v7_1330 = new Object[2];
        v7_1330[0] = "LeftVectorBar";
        v7_1330[1] = Integer.valueOf(10578);
        v5_1[258] = v7_1330;
        Object[] v7_1332 = new Object[2];
        v7_1332[0] = "Leftarrow";
        v7_1332[1] = Integer.valueOf(8656);
        v5_1[259] = v7_1332;
        Object[] v7_1333 = new Object[2];
        v7_1333[0] = "Leftrightarrow";
        v7_1333[1] = Integer.valueOf(8660);
        v5_1[260] = v7_1333;
        Object[] v7_1334 = new Object[2];
        v7_1334[0] = "LessEqualGreater";
        v7_1334[1] = Integer.valueOf(8922);
        v5_1[261] = v7_1334;
        Object[] v7_1335 = new Object[2];
        v7_1335[0] = "LessFullEqual";
        v7_1335[1] = Integer.valueOf(8806);
        v5_1[262] = v7_1335;
        Object[] v7_1336 = new Object[2];
        v7_1336[0] = "LessGreater";
        v7_1336[1] = Integer.valueOf(8822);
        v5_1[263] = v7_1336;
        Object[] v7_1337 = new Object[2];
        v7_1337[0] = "LessLess";
        v7_1337[1] = Integer.valueOf(10913);
        v5_1[264] = v7_1337;
        Object[] v7_1338 = new Object[2];
        v7_1338[0] = "LessSlantEqual";
        v7_1338[1] = Integer.valueOf(10877);
        v5_1[265] = v7_1338;
        Object[] v7_1339 = new Object[2];
        v7_1339[0] = "LessTilde";
        v7_1339[1] = Integer.valueOf(8818);
        v5_1[266] = v7_1339;
        Object[] v7_1341 = new Object[2];
        v7_1341[0] = "Lfr";
        v7_1341[1] = Integer.valueOf(120079);
        v5_1[267] = v7_1341;
        Object[] v7_1342 = new Object[2];
        v7_1342[0] = "Ll";
        v7_1342[1] = Integer.valueOf(8920);
        v5_1[268] = v7_1342;
        Object[] v7_1344 = new Object[2];
        v7_1344[0] = "Lleftarrow";
        v7_1344[1] = Integer.valueOf(8666);
        v5_1[269] = v7_1344;
        Object[] v7_1345 = new Object[2];
        v7_1345[0] = "Lmidot";
        v7_1345[1] = Integer.valueOf(319);
        v5_1[270] = v7_1345;
        Object[] v7_1346 = new Object[2];
        v7_1346[0] = "LongLeftArrow";
        v7_1346[1] = Integer.valueOf(10229);
        v5_1[271] = v7_1346;
        Object[] v7_1347 = new Object[2];
        v7_1347[0] = "LongLeftRightArrow";
        v7_1347[1] = Integer.valueOf(10231);
        v5_1[272] = v7_1347;
        Object[] v7_1348 = new Object[2];
        v7_1348[0] = "LongRightArrow";
        v7_1348[1] = Integer.valueOf(10230);
        v5_1[273] = v7_1348;
        Object[] v7_1349 = new Object[2];
        v7_1349[0] = "Longleftarrow";
        v7_1349[1] = Integer.valueOf(10232);
        v5_1[274] = v7_1349;
        Object[] v7_1350 = new Object[2];
        v7_1350[0] = "Longleftrightarrow";
        v7_1350[1] = Integer.valueOf(10234);
        v5_1[275] = v7_1350;
        Object[] v7_1351 = new Object[2];
        v7_1351[0] = "Longrightarrow";
        v7_1351[1] = Integer.valueOf(10233);
        v5_1[276] = v7_1351;
        Object[] v7_1352 = new Object[2];
        v7_1352[0] = "Lopf";
        v7_1352[1] = Integer.valueOf(120131);
        v5_1[277] = v7_1352;
        Object[] v7_1353 = new Object[2];
        v7_1353[0] = "LowerLeftArrow";
        v7_1353[1] = Integer.valueOf(8601);
        v5_1[278] = v7_1353;
        Object[] v7_1355 = new Object[2];
        v7_1355[0] = "LowerRightArrow";
        v7_1355[1] = Integer.valueOf(8600);
        v5_1[279] = v7_1355;
        Object[] v7_1356 = new Object[2];
        v7_1356[0] = "Lscr";
        v7_1356[1] = Integer.valueOf(8466);
        v5_1[280] = v7_1356;
        Object[] v7_1357 = new Object[2];
        v7_1357[0] = "Lsh";
        v7_1357[1] = Integer.valueOf(8624);
        v5_1[281] = v7_1357;
        Object[] v7_1358 = new Object[2];
        v7_1358[0] = "Lstrok";
        v7_1358[1] = Integer.valueOf(321);
        v5_1[282] = v7_1358;
        Object[] v7_1359 = new Object[2];
        v7_1359[0] = "Lt";
        v7_1359[1] = Integer.valueOf(8810);
        v5_1[283] = v7_1359;
        Object[] v7_1360 = new Object[2];
        v7_1360[0] = "Map";
        v7_1360[1] = Integer.valueOf(10501);
        v5_1[284] = v7_1360;
        Object[] v7_1361 = new Object[2];
        v7_1361[0] = "Mcy";
        v7_1361[1] = Integer.valueOf(1052);
        v5_1[285] = v7_1361;
        Object[] v7_1362 = new Object[2];
        v7_1362[0] = "MediumSpace";
        v7_1362[1] = Integer.valueOf(8287);
        v5_1[286] = v7_1362;
        Object[] v7_1363 = new Object[2];
        v7_1363[0] = "Mellintrf";
        v7_1363[1] = Integer.valueOf(8499);
        v5_1[287] = v7_1363;
        Object[] v7_1364 = new Object[2];
        v7_1364[0] = "Mfr";
        v7_1364[1] = Integer.valueOf(120080);
        v5_1[288] = v7_1364;
        Object[] v7_1366 = new Object[2];
        v7_1366[0] = "MinusPlus";
        v7_1366[1] = Integer.valueOf(8723);
        v5_1[289] = v7_1366;
        Object[] v7_1367 = new Object[2];
        v7_1367[0] = "Mopf";
        v7_1367[1] = Integer.valueOf(120132);
        v5_1[290] = v7_1367;
        Object[] v7_1369 = new Object[2];
        v7_1369[0] = "Mscr";
        v7_1369[1] = Integer.valueOf(8499);
        v5_1[291] = v7_1369;
        Object[] v7_1370 = new Object[2];
        v7_1370[0] = "Mu";
        v7_1370[1] = Integer.valueOf(924);
        v5_1[292] = v7_1370;
        Object[] v7_1371 = new Object[2];
        v7_1371[0] = "NJcy";
        v7_1371[1] = Integer.valueOf(1034);
        v5_1[293] = v7_1371;
        Object[] v7_1373 = new Object[2];
        v7_1373[0] = "Nacute";
        v7_1373[1] = Integer.valueOf(323);
        v5_1[294] = v7_1373;
        Object[] v7_1374 = new Object[2];
        v7_1374[0] = "Ncaron";
        v7_1374[1] = Integer.valueOf(327);
        v5_1[295] = v7_1374;
        Object[] v7_1375 = new Object[2];
        v7_1375[0] = "Ncedil";
        v7_1375[1] = Integer.valueOf(325);
        v5_1[296] = v7_1375;
        Object[] v7_1376 = new Object[2];
        v7_1376[0] = "Ncy";
        v7_1376[1] = Integer.valueOf(1053);
        v5_1[297] = v7_1376;
        Object[] v7_1378 = new Object[2];
        v7_1378[0] = "NegativeMediumSpace";
        v7_1378[1] = Integer.valueOf(8203);
        v5_1[298] = v7_1378;
        Object[] v7_1379 = new Object[2];
        v7_1379[0] = "NegativeThickSpace";
        v7_1379[1] = Integer.valueOf(8203);
        v5_1[299] = v7_1379;
        Object[] v7_1380 = new Object[2];
        v7_1380[0] = "NegativeThinSpace";
        v7_1380[1] = Integer.valueOf(8203);
        v5_1[300] = v7_1380;
        Object[] v7_1381 = new Object[2];
        v7_1381[0] = "NegativeVeryThinSpace";
        v7_1381[1] = Integer.valueOf(8203);
        v5_1[301] = v7_1381;
        Object[] v7_1382 = new Object[2];
        v7_1382[0] = "NestedGreaterGreater";
        v7_1382[1] = Integer.valueOf(8811);
        v5_1[302] = v7_1382;
        Object[] v7_1383 = new Object[2];
        v7_1383[0] = "NestedLessLess";
        v7_1383[1] = Integer.valueOf(8810);
        v5_1[303] = v7_1383;
        Object[] v7_1384 = new Object[2];
        v7_1384[0] = "NewLine";
        v7_1384[1] = Integer.valueOf(10);
        v5_1[304] = v7_1384;
        Object[] v7_1385 = new Object[2];
        v7_1385[0] = "Nfr";
        v7_1385[1] = Integer.valueOf(120081);
        v5_1[305] = v7_1385;
        Object[] v7_1386 = new Object[2];
        v7_1386[0] = "NoBreak";
        v7_1386[1] = Integer.valueOf(8288);
        v5_1[306] = v7_1386;
        Object[] v7_1387 = new Object[2];
        v7_1387[0] = "NonBreakingSpace";
        v7_1387[1] = Integer.valueOf(160);
        v5_1[307] = v7_1387;
        Object[] v7_1389 = new Object[2];
        v7_1389[0] = "Nopf";
        v7_1389[1] = Integer.valueOf(8469);
        v5_1[308] = v7_1389;
        Object[] v7_1390 = new Object[2];
        v7_1390[0] = "Not";
        v7_1390[1] = Integer.valueOf(10988);
        v5_1[309] = v7_1390;
        Object[] v7_1391 = new Object[2];
        v7_1391[0] = "NotCongruent";
        v7_1391[1] = Integer.valueOf(8802);
        v5_1[310] = v7_1391;
        Object[] v7_1393 = new Object[2];
        v7_1393[0] = "NotCupCap";
        v7_1393[1] = Integer.valueOf(8813);
        v5_1[311] = v7_1393;
        Object[] v7_1394 = new Object[2];
        v7_1394[0] = "NotDoubleVerticalBar";
        v7_1394[1] = Integer.valueOf(8742);
        v5_1[312] = v7_1394;
        Object[] v7_1395 = new Object[2];
        v7_1395[0] = "NotElement";
        v7_1395[1] = Integer.valueOf(8713);
        v5_1[313] = v7_1395;
        Object[] v7_1396 = new Object[2];
        v7_1396[0] = "NotEqual";
        v7_1396[1] = Integer.valueOf(8800);
        v5_1[314] = v7_1396;
        Object[] v7_1397 = new Object[2];
        v7_1397[0] = "NotExists";
        v7_1397[1] = Integer.valueOf(8708);
        v5_1[315] = v7_1397;
        Object[] v7_1398 = new Object[2];
        v7_1398[0] = "NotGreater";
        v7_1398[1] = Integer.valueOf(8815);
        v5_1[316] = v7_1398;
        Object[] v7_1399 = new Object[2];
        v7_1399[0] = "NotGreaterEqual";
        v7_1399[1] = Integer.valueOf(8817);
        v5_1[317] = v7_1399;
        Object[] v7_1401 = new Object[2];
        v7_1401[0] = "NotGreaterLess";
        v7_1401[1] = Integer.valueOf(8825);
        v5_1[318] = v7_1401;
        Object[] v7_1402 = new Object[2];
        v7_1402[0] = "NotGreaterTilde";
        v7_1402[1] = Integer.valueOf(8821);
        v5_1[319] = v7_1402;
        Object[] v7_1403 = new Object[2];
        v7_1403[0] = "NotLeftTriangle";
        v7_1403[1] = Integer.valueOf(8938);
        v5_1[320] = v7_1403;
        Object[] v7_1404 = new Object[2];
        v7_1404[0] = "NotLeftTriangleEqual";
        v7_1404[1] = Integer.valueOf(8940);
        v5_1[321] = v7_1404;
        Object[] v7_1405 = new Object[2];
        v7_1405[0] = "NotLess";
        v7_1405[1] = Integer.valueOf(8814);
        v5_1[322] = v7_1405;
        Object[] v7_1406 = new Object[2];
        v7_1406[0] = "NotLessEqual";
        v7_1406[1] = Integer.valueOf(8816);
        v5_1[323] = v7_1406;
        Object[] v7_1407 = new Object[2];
        v7_1407[0] = "NotLessGreater";
        v7_1407[1] = Integer.valueOf(8824);
        v5_1[324] = v7_1407;
        Object[] v7_1408 = new Object[2];
        v7_1408[0] = "NotLessTilde";
        v7_1408[1] = Integer.valueOf(8820);
        v5_1[325] = v7_1408;
        Object[] v7_1409 = new Object[2];
        v7_1409[0] = "NotPrecedes";
        v7_1409[1] = Integer.valueOf(8832);
        v5_1[326] = v7_1409;
        Object[] v7_1410 = new Object[2];
        v7_1410[0] = "NotPrecedesSlantEqual";
        v7_1410[1] = Integer.valueOf(8928);
        v5_1[327] = v7_1410;
        Object[] v7_1412 = new Object[2];
        v7_1412[0] = "NotReverseElement";
        v7_1412[1] = Integer.valueOf(8716);
        v5_1[328] = v7_1412;
        Object[] v7_1413 = new Object[2];
        v7_1413[0] = "NotRightTriangle";
        v7_1413[1] = Integer.valueOf(8939);
        v5_1[329] = v7_1413;
        Object[] v7_1415 = new Object[2];
        v7_1415[0] = "NotRightTriangleEqual";
        v7_1415[1] = Integer.valueOf(8941);
        v5_1[330] = v7_1415;
        Object[] v7_1416 = new Object[2];
        v7_1416[0] = "NotSquareSubsetEqual";
        v7_1416[1] = Integer.valueOf(8930);
        v5_1[331] = v7_1416;
        Object[] v7_1417 = new Object[2];
        v7_1417[0] = "NotSquareSupersetEqual";
        v7_1417[1] = Integer.valueOf(8931);
        v5_1[332] = v7_1417;
        Object[] v7_1419 = new Object[2];
        v7_1419[0] = "NotSubsetEqual";
        v7_1419[1] = Integer.valueOf(8840);
        v5_1[333] = v7_1419;
        Object[] v7_1420 = new Object[2];
        v7_1420[0] = "NotSucceeds";
        v7_1420[1] = Integer.valueOf(8833);
        v5_1[334] = v7_1420;
        Object[] v7_1421 = new Object[2];
        v7_1421[0] = "NotSucceedsSlantEqual";
        v7_1421[1] = Integer.valueOf(8929);
        v5_1[335] = v7_1421;
        Object[] v7_1422 = new Object[2];
        v7_1422[0] = "NotSupersetEqual";
        v7_1422[1] = Integer.valueOf(8841);
        v5_1[336] = v7_1422;
        Object[] v7_1424 = new Object[2];
        v7_1424[0] = "NotTilde";
        v7_1424[1] = Integer.valueOf(8769);
        v5_1[337] = v7_1424;
        Object[] v7_1425 = new Object[2];
        v7_1425[0] = "NotTildeEqual";
        v7_1425[1] = Integer.valueOf(8772);
        v5_1[338] = v7_1425;
        Object[] v7_1426 = new Object[2];
        v7_1426[0] = "NotTildeFullEqual";
        v7_1426[1] = Integer.valueOf(8775);
        v5_1[339] = v7_1426;
        Object[] v7_1427 = new Object[2];
        v7_1427[0] = "NotTildeTilde";
        v7_1427[1] = Integer.valueOf(8777);
        v5_1[340] = v7_1427;
        Object[] v7_1428 = new Object[2];
        v7_1428[0] = "NotVerticalBar";
        v7_1428[1] = Integer.valueOf(8740);
        v5_1[341] = v7_1428;
        Object[] v7_1429 = new Object[2];
        v7_1429[0] = "Nscr";
        v7_1429[1] = Integer.valueOf(119977);
        v5_1[342] = v7_1429;
        Object[] v7_1430 = new Object[2];
        v7_1430[0] = "Ntilde";
        v7_1430[1] = Integer.valueOf(209);
        v5_1[343] = v7_1430;
        Object[] v7_1431 = new Object[2];
        v7_1431[0] = "Nu";
        v7_1431[1] = Integer.valueOf(925);
        v5_1[344] = v7_1431;
        Object[] v7_1432 = new Object[2];
        v7_1432[0] = "OElig";
        v7_1432[1] = Integer.valueOf(338);
        v5_1[345] = v7_1432;
        Object[] v7_1433 = new Object[2];
        v7_1433[0] = "Oacute";
        v7_1433[1] = Integer.valueOf(211);
        v5_1[346] = v7_1433;
        Object[] v7_1435 = new Object[2];
        v7_1435[0] = "Ocirc";
        v7_1435[1] = Integer.valueOf(212);
        v5_1[347] = v7_1435;
        Object[] v7_1436 = new Object[2];
        v7_1436[0] = "Ocy";
        v7_1436[1] = Integer.valueOf(1054);
        v5_1[348] = v7_1436;
        Object[] v7_1437 = new Object[2];
        v7_1437[0] = "Odblac";
        v7_1437[1] = Integer.valueOf(336);
        v5_1[349] = v7_1437;
        Object[] v7_1438 = new Object[2];
        v7_1438[0] = "Ofr";
        v7_1438[1] = Integer.valueOf(120082);
        v5_1[350] = v7_1438;
        Object[] v7_1439 = new Object[2];
        v7_1439[0] = "Ograve";
        v7_1439[1] = Integer.valueOf(210);
        v5_1[351] = v7_1439;
        Object[] v7_1440 = new Object[2];
        v7_1440[0] = "Omacr";
        v7_1440[1] = Integer.valueOf(332);
        v5_1[352] = v7_1440;
        Object[] v7_1441 = new Object[2];
        v7_1441[0] = "Omega";
        v7_1441[1] = Integer.valueOf(937);
        v5_1[353] = v7_1441;
        Object[] v7_1442 = new Object[2];
        v7_1442[0] = "Omicron";
        v7_1442[1] = Integer.valueOf(927);
        v5_1[354] = v7_1442;
        Object[] v7_1443 = new Object[2];
        v7_1443[0] = "Oopf";
        v7_1443[1] = Integer.valueOf(120134);
        v5_1[355] = v7_1443;
        Object[] v7_1444 = new Object[2];
        v7_1444[0] = "OpenCurlyDoubleQuote";
        v7_1444[1] = Integer.valueOf(8220);
        v5_1[356] = v7_1444;
        Object[] v7_1446 = new Object[2];
        v7_1446[0] = "OpenCurlyQuote";
        v7_1446[1] = Integer.valueOf(8216);
        v5_1[357] = v7_1446;
        Object[] v7_1447 = new Object[2];
        v7_1447[0] = "Or";
        v7_1447[1] = Integer.valueOf(10836);
        v5_1[358] = v7_1447;
        Object[] v7_1448 = new Object[2];
        v7_1448[0] = "Oscr";
        v7_1448[1] = Integer.valueOf(119978);
        v5_1[359] = v7_1448;
        Object[] v7_1449 = new Object[2];
        v7_1449[0] = "Oslash";
        v7_1449[1] = Integer.valueOf(216);
        v5_1[360] = v7_1449;
        Object[] v7_1450 = new Object[2];
        v7_1450[0] = "Otilde";
        v7_1450[1] = Integer.valueOf(213);
        v5_1[361] = v7_1450;
        Object[] v7_1451 = new Object[2];
        v7_1451[0] = "Otimes";
        v7_1451[1] = Integer.valueOf(10807);
        v5_1[362] = v7_1451;
        Object[] v7_1452 = new Object[2];
        v7_1452[0] = "Ouml";
        v7_1452[1] = Integer.valueOf(214);
        v5_1[363] = v7_1452;
        Object[] v7_1453 = new Object[2];
        v7_1453[0] = "OverBar";
        v7_1453[1] = Integer.valueOf(8254);
        v5_1[364] = v7_1453;
        Object[] v7_1454 = new Object[2];
        v7_1454[0] = "OverBrace";
        v7_1454[1] = Integer.valueOf(9182);
        v5_1[365] = v7_1454;
        Object[] v7_1456 = new Object[2];
        v7_1456[0] = "OverBracket";
        v7_1456[1] = Integer.valueOf(9140);
        v5_1[366] = v7_1456;
        Object[] v7_1457 = new Object[2];
        v7_1457[0] = "OverParenthesis";
        v7_1457[1] = Integer.valueOf(9180);
        v5_1[367] = v7_1457;
        Object[] v7_1458 = new Object[2];
        v7_1458[0] = "PartialD";
        v7_1458[1] = Integer.valueOf(8706);
        v5_1[368] = v7_1458;
        Object[] v7_1459 = new Object[2];
        v7_1459[0] = "Pcy";
        v7_1459[1] = Integer.valueOf(1055);
        v5_1[369] = v7_1459;
        Object[] v7_1460 = new Object[2];
        v7_1460[0] = "Pfr";
        v7_1460[1] = Integer.valueOf(120083);
        v5_1[370] = v7_1460;
        Object[] v7_1461 = new Object[2];
        v7_1461[0] = "Phi";
        v7_1461[1] = Integer.valueOf(934);
        v5_1[371] = v7_1461;
        Object[] v7_1462 = new Object[2];
        v7_1462[0] = "Pi";
        v7_1462[1] = Integer.valueOf(928);
        v5_1[372] = v7_1462;
        Object[] v7_1463 = new Object[2];
        v7_1463[0] = "PlusMinus";
        v7_1463[1] = Integer.valueOf(177);
        v5_1[373] = v7_1463;
        Object[] v7_1464 = new Object[2];
        v7_1464[0] = "Poincareplane";
        v7_1464[1] = Integer.valueOf(8460);
        v5_1[374] = v7_1464;
        Object[] v7_1465 = new Object[2];
        v7_1465[0] = "Popf";
        v7_1465[1] = Integer.valueOf(8473);
        v5_1[375] = v7_1465;
        Object[] v7_1467 = new Object[2];
        v7_1467[0] = "Pr";
        v7_1467[1] = Integer.valueOf(10939);
        v5_1[376] = v7_1467;
        Object[] v7_1468 = new Object[2];
        v7_1468[0] = "Precedes";
        v7_1468[1] = Integer.valueOf(8826);
        v5_1[377] = v7_1468;
        Object[] v7_1469 = new Object[2];
        v7_1469[0] = "PrecedesEqual";
        v7_1469[1] = Integer.valueOf(10927);
        v5_1[378] = v7_1469;
        Object[] v7_1470 = new Object[2];
        v7_1470[0] = "PrecedesSlantEqual";
        v7_1470[1] = Integer.valueOf(8828);
        v5_1[379] = v7_1470;
        Object[] v7_1471 = new Object[2];
        v7_1471[0] = "PrecedesTilde";
        v7_1471[1] = Integer.valueOf(8830);
        v5_1[380] = v7_1471;
        Object[] v7_1472 = new Object[2];
        v7_1472[0] = "Prime";
        v7_1472[1] = Integer.valueOf(8243);
        v5_1[381] = v7_1472;
        Object[] v7_1473 = new Object[2];
        v7_1473[0] = "Product";
        v7_1473[1] = Integer.valueOf(8719);
        v5_1[382] = v7_1473;
        Object[] v7_1474 = new Object[2];
        v7_1474[0] = "Proportion";
        v7_1474[1] = Integer.valueOf(8759);
        v5_1[383] = v7_1474;
        Object[] v7_1475 = new Object[2];
        v7_1475[0] = "Proportional";
        v7_1475[1] = Integer.valueOf(8733);
        v5_1[384] = v7_1475;
        Object[] v7_1476 = new Object[2];
        v7_1476[0] = "Pscr";
        v7_1476[1] = Integer.valueOf(119979);
        v5_1[385] = v7_1476;
        Object[] v7_1478 = new Object[2];
        v7_1478[0] = "Psi";
        v7_1478[1] = Integer.valueOf(936);
        v5_1[386] = v7_1478;
        Object[] v7_1479 = new Object[2];
        v7_1479[0] = "QUOT";
        v7_1479[1] = Integer.valueOf(34);
        v5_1[387] = v7_1479;
        Object[] v7_1480 = new Object[2];
        v7_1480[0] = "Qfr";
        v7_1480[1] = Integer.valueOf(120084);
        v5_1[388] = v7_1480;
        Object[] v7_1481 = new Object[2];
        v7_1481[0] = "Qopf";
        v7_1481[1] = Integer.valueOf(8474);
        v5_1[389] = v7_1481;
        Object[] v7_1482 = new Object[2];
        v7_1482[0] = "Qscr";
        v7_1482[1] = Integer.valueOf(119980);
        v5_1[390] = v7_1482;
        Object[] v7_1483 = new Object[2];
        v7_1483[0] = "RBarr";
        v7_1483[1] = Integer.valueOf(10512);
        v5_1[391] = v7_1483;
        Object[] v7_1484 = new Object[2];
        v7_1484[0] = "REG";
        v7_1484[1] = Integer.valueOf(174);
        v5_1[392] = v7_1484;
        Object[] v7_1485 = new Object[2];
        v7_1485[0] = "Racute";
        v7_1485[1] = Integer.valueOf(340);
        v5_1[393] = v7_1485;
        Object[] v7_1486 = new Object[2];
        v7_1486[0] = "Rang";
        v7_1486[1] = Integer.valueOf(10219);
        v5_1[394] = v7_1486;
        Object[] v7_1487 = new Object[2];
        v7_1487[0] = "Rarr";
        v7_1487[1] = Integer.valueOf(8608);
        v5_1[395] = v7_1487;
        Object[] v7_1489 = new Object[2];
        v7_1489[0] = "Rarrtl";
        v7_1489[1] = Integer.valueOf(10518);
        v5_1[396] = v7_1489;
        Object[] v7_1490 = new Object[2];
        v7_1490[0] = "Rcaron";
        v7_1490[1] = Integer.valueOf(344);
        v5_1[397] = v7_1490;
        Object[] v7_1491 = new Object[2];
        v7_1491[0] = "Rcedil";
        v7_1491[1] = Integer.valueOf(342);
        v5_1[398] = v7_1491;
        Object[] v7_1492 = new Object[2];
        v7_1492[0] = "Rcy";
        v7_1492[1] = Integer.valueOf(1056);
        v5_1[399] = v7_1492;
        Object[] v7_1493 = new Object[2];
        v7_1493[0] = "Re";
        v7_1493[1] = Integer.valueOf(8476);
        v5_1[400] = v7_1493;
        Object[] v7_1494 = new Object[2];
        v7_1494[0] = "ReverseElement";
        v7_1494[1] = Integer.valueOf(8715);
        v5_1[401] = v7_1494;
        Object[] v7_1495 = new Object[2];
        v7_1495[0] = "ReverseEquilibrium";
        v7_1495[1] = Integer.valueOf(8651);
        v5_1[402] = v7_1495;
        Object[] v7_1496 = new Object[2];
        v7_1496[0] = "ReverseUpEquilibrium";
        v7_1496[1] = Integer.valueOf(10607);
        v5_1[403] = v7_1496;
        Object[] v7_1497 = new Object[2];
        v7_1497[0] = "Rfr";
        v7_1497[1] = Integer.valueOf(8476);
        v5_1[404] = v7_1497;
        Object[] v7_1498 = new Object[2];
        v7_1498[0] = "Rho";
        v7_1498[1] = Integer.valueOf(929);
        v5_1[405] = v7_1498;
        Object[] v7_1500 = new Object[2];
        v7_1500[0] = "RightAngleBracket";
        v7_1500[1] = Integer.valueOf(10217);
        v5_1[406] = v7_1500;
        Object[] v7_1501 = new Object[2];
        v7_1501[0] = "RightArrow";
        v7_1501[1] = Integer.valueOf(8594);
        v5_1[407] = v7_1501;
        Object[] v7_1502 = new Object[2];
        v7_1502[0] = "RightArrowBar";
        v7_1502[1] = Integer.valueOf(8677);
        v5_1[408] = v7_1502;
        Object[] v7_1503 = new Object[2];
        v7_1503[0] = "RightArrowLeftArrow";
        v7_1503[1] = Integer.valueOf(8644);
        v5_1[409] = v7_1503;
        Object[] v7_1504 = new Object[2];
        v7_1504[0] = "RightCeiling";
        v7_1504[1] = Integer.valueOf(8969);
        v5_1[410] = v7_1504;
        Object[] v7_1505 = new Object[2];
        v7_1505[0] = "RightDoubleBracket";
        v7_1505[1] = Integer.valueOf(10215);
        v5_1[411] = v7_1505;
        Object[] v7_1507 = new Object[2];
        v7_1507[0] = "RightDownTeeVector";
        v7_1507[1] = Integer.valueOf(10589);
        v5_1[412] = v7_1507;
        Object[] v7_1508 = new Object[2];
        v7_1508[0] = "RightDownVector";
        v7_1508[1] = Integer.valueOf(8642);
        v5_1[413] = v7_1508;
        Object[] v7_1509 = new Object[2];
        v7_1509[0] = "RightDownVectorBar";
        v7_1509[1] = Integer.valueOf(10581);
        v5_1[414] = v7_1509;
        Object[] v7_1510 = new Object[2];
        v7_1510[0] = "RightFloor";
        v7_1510[1] = Integer.valueOf(8971);
        v5_1[415] = v7_1510;
        Object[] v7_1512 = new Object[2];
        v7_1512[0] = "RightTee";
        v7_1512[1] = Integer.valueOf(8866);
        v5_1[416] = v7_1512;
        Object[] v7_1513 = new Object[2];
        v7_1513[0] = "RightTeeArrow";
        v7_1513[1] = Integer.valueOf(8614);
        v5_1[417] = v7_1513;
        Object[] v7_1514 = new Object[2];
        v7_1514[0] = "RightTeeVector";
        v7_1514[1] = Integer.valueOf(10587);
        v5_1[418] = v7_1514;
        Object[] v7_1515 = new Object[2];
        v7_1515[0] = "RightTriangle";
        v7_1515[1] = Integer.valueOf(8883);
        v5_1[419] = v7_1515;
        Object[] v7_1516 = new Object[2];
        v7_1516[0] = "RightTriangleBar";
        v7_1516[1] = Integer.valueOf(10704);
        v5_1[420] = v7_1516;
        Object[] v7_1517 = new Object[2];
        v7_1517[0] = "RightTriangleEqual";
        v7_1517[1] = Integer.valueOf(8885);
        v5_1[421] = v7_1517;
        Object[] v7_1518 = new Object[2];
        v7_1518[0] = "RightUpDownVector";
        v7_1518[1] = Integer.valueOf(10575);
        v5_1[422] = v7_1518;
        Object[] v7_1519 = new Object[2];
        v7_1519[0] = "RightUpTeeVector";
        v7_1519[1] = Integer.valueOf(10588);
        v5_1[423] = v7_1519;
        Object[] v7_1520 = new Object[2];
        v7_1520[0] = "RightUpVector";
        v7_1520[1] = Integer.valueOf(8638);
        v5_1[424] = v7_1520;
        Object[] v7_1521 = new Object[2];
        v7_1521[0] = "RightUpVectorBar";
        v7_1521[1] = Integer.valueOf(10580);
        v5_1[425] = v7_1521;
        Object[] v7_1523 = new Object[2];
        v7_1523[0] = "RightVector";
        v7_1523[1] = Integer.valueOf(8640);
        v5_1[426] = v7_1523;
        Object[] v7_1524 = new Object[2];
        v7_1524[0] = "RightVectorBar";
        v7_1524[1] = Integer.valueOf(10579);
        v5_1[427] = v7_1524;
        Object[] v7_1525 = new Object[2];
        v7_1525[0] = "Rightarrow";
        v7_1525[1] = Integer.valueOf(8658);
        v5_1[428] = v7_1525;
        Object[] v7_1526 = new Object[2];
        v7_1526[0] = "Ropf";
        v7_1526[1] = Integer.valueOf(8477);
        v5_1[429] = v7_1526;
        Object[] v7_1527 = new Object[2];
        v7_1527[0] = "RoundImplies";
        v7_1527[1] = Integer.valueOf(10608);
        v5_1[430] = v7_1527;
        Object[] v7_1528 = new Object[2];
        v7_1528[0] = "Rrightarrow";
        v7_1528[1] = Integer.valueOf(8667);
        v5_1[431] = v7_1528;
        Object[] v7_1529 = new Object[2];
        v7_1529[0] = "Rscr";
        v7_1529[1] = Integer.valueOf(8475);
        v5_1[432] = v7_1529;
        Object[] v7_1530 = new Object[2];
        v7_1530[0] = "Rsh";
        v7_1530[1] = Integer.valueOf(8625);
        v5_1[433] = v7_1530;
        Object[] v7_1531 = new Object[2];
        v7_1531[0] = "RuleDelayed";
        v7_1531[1] = Integer.valueOf(10740);
        v5_1[434] = v7_1531;
        Object[] v7_1532 = new Object[2];
        v7_1532[0] = "SHCHcy";
        v7_1532[1] = Integer.valueOf(1065);
        v5_1[435] = v7_1532;
        Object[] v7_1534 = new Object[2];
        v7_1534[0] = "SHcy";
        v7_1534[1] = Integer.valueOf(1064);
        v5_1[436] = v7_1534;
        Object[] v7_1535 = new Object[2];
        v7_1535[0] = "SOFTcy";
        v7_1535[1] = Integer.valueOf(1068);
        v5_1[437] = v7_1535;
        Object[] v7_1536 = new Object[2];
        v7_1536[0] = "Sacute";
        v7_1536[1] = Integer.valueOf(346);
        v5_1[438] = v7_1536;
        Object[] v7_1537 = new Object[2];
        v7_1537[0] = "Sc";
        v7_1537[1] = Integer.valueOf(10940);
        v5_1[439] = v7_1537;
        Object[] v7_1538 = new Object[2];
        v7_1538[0] = "Scaron";
        v7_1538[1] = Integer.valueOf(352);
        v5_1[440] = v7_1538;
        Object[] v7_1539 = new Object[2];
        v7_1539[0] = "Scedil";
        v7_1539[1] = Integer.valueOf(350);
        v5_1[441] = v7_1539;
        Object[] v7_1540 = new Object[2];
        v7_1540[0] = "Scirc";
        v7_1540[1] = Integer.valueOf(348);
        v5_1[442] = v7_1540;
        Object[] v7_1541 = new Object[2];
        v7_1541[0] = "Scy";
        v7_1541[1] = Integer.valueOf(1057);
        v5_1[443] = v7_1541;
        Object[] v7_1542 = new Object[2];
        v7_1542[0] = "Sfr";
        v7_1542[1] = Integer.valueOf(120086);
        v5_1[444] = v7_1542;
        Object[] v7_1543 = new Object[2];
        v7_1543[0] = "ShortDownArrow";
        v7_1543[1] = Integer.valueOf(8595);
        v5_1[445] = v7_1543;
        Object[] v7_1545 = new Object[2];
        v7_1545[0] = "ShortLeftArrow";
        v7_1545[1] = Integer.valueOf(8592);
        v5_1[446] = v7_1545;
        Object[] v7_1546 = new Object[2];
        v7_1546[0] = "ShortRightArrow";
        v7_1546[1] = Integer.valueOf(8594);
        v5_1[447] = v7_1546;
        Object[] v7_1547 = new Object[2];
        v7_1547[0] = "ShortUpArrow";
        v7_1547[1] = Integer.valueOf(8593);
        v5_1[448] = v7_1547;
        Object[] v7_1548 = new Object[2];
        v7_1548[0] = "Sigma";
        v7_1548[1] = Integer.valueOf(931);
        v5_1[449] = v7_1548;
        Object[] v7_1549 = new Object[2];
        v7_1549[0] = "SmallCircle";
        v7_1549[1] = Integer.valueOf(8728);
        v5_1[450] = v7_1549;
        Object[] v7_1550 = new Object[2];
        v7_1550[0] = "Sopf";
        v7_1550[1] = Integer.valueOf(120138);
        v5_1[451] = v7_1550;
        Object[] v7_1551 = new Object[2];
        v7_1551[0] = "Sqrt";
        v7_1551[1] = Integer.valueOf(8730);
        v5_1[452] = v7_1551;
        Object[] v7_1552 = new Object[2];
        v7_1552[0] = "Square";
        v7_1552[1] = Integer.valueOf(9633);
        v5_1[453] = v7_1552;
        Object[] v7_1553 = new Object[2];
        v7_1553[0] = "SquareIntersection";
        v7_1553[1] = Integer.valueOf(8851);
        v5_1[454] = v7_1553;
        Object[] v7_1554 = new Object[2];
        v7_1554[0] = "SquareSubset";
        v7_1554[1] = Integer.valueOf(8847);
        v5_1[455] = v7_1554;
        Object[] v7_1556 = new Object[2];
        v7_1556[0] = "SquareSubsetEqual";
        v7_1556[1] = Integer.valueOf(8849);
        v5_1[456] = v7_1556;
        Object[] v7_1557 = new Object[2];
        v7_1557[0] = "SquareSuperset";
        v7_1557[1] = Integer.valueOf(8848);
        v5_1[457] = v7_1557;
        Object[] v7_1558 = new Object[2];
        v7_1558[0] = "SquareSupersetEqual";
        v7_1558[1] = Integer.valueOf(8850);
        v5_1[458] = v7_1558;
        Object[] v7_1559 = new Object[2];
        v7_1559[0] = "SquareUnion";
        v7_1559[1] = Integer.valueOf(8852);
        v5_1[459] = v7_1559;
        Object[] v7_1560 = new Object[2];
        v7_1560[0] = "Sscr";
        v7_1560[1] = Integer.valueOf(119982);
        v5_1[460] = v7_1560;
        Object[] v7_1561 = new Object[2];
        v7_1561[0] = "Star";
        v7_1561[1] = Integer.valueOf(8902);
        v5_1[461] = v7_1561;
        Object[] v7_1562 = new Object[2];
        v7_1562[0] = "Sub";
        v7_1562[1] = Integer.valueOf(8912);
        v5_1[462] = v7_1562;
        Object[] v7_1563 = new Object[2];
        v7_1563[0] = "Subset";
        v7_1563[1] = Integer.valueOf(8912);
        v5_1[463] = v7_1563;
        Object[] v7_1564 = new Object[2];
        v7_1564[0] = "SubsetEqual";
        v7_1564[1] = Integer.valueOf(8838);
        v5_1[464] = v7_1564;
        Object[] v7_1565 = new Object[2];
        v7_1565[0] = "Succeeds";
        v7_1565[1] = Integer.valueOf(8827);
        v5_1[465] = v7_1565;
        Object[] v7_1567 = new Object[2];
        v7_1567[0] = "SucceedsEqual";
        v7_1567[1] = Integer.valueOf(10928);
        v5_1[466] = v7_1567;
        Object[] v7_1568 = new Object[2];
        v7_1568[0] = "SucceedsSlantEqual";
        v7_1568[1] = Integer.valueOf(8829);
        v5_1[467] = v7_1568;
        Object[] v7_1569 = new Object[2];
        v7_1569[0] = "SucceedsTilde";
        v7_1569[1] = Integer.valueOf(8831);
        v5_1[468] = v7_1569;
        Object[] v7_1570 = new Object[2];
        v7_1570[0] = "SuchThat";
        v7_1570[1] = Integer.valueOf(8715);
        v5_1[469] = v7_1570;
        Object[] v7_1571 = new Object[2];
        v7_1571[0] = "Sum";
        v7_1571[1] = Integer.valueOf(8721);
        v5_1[470] = v7_1571;
        Object[] v7_1572 = new Object[2];
        v7_1572[0] = "Sup";
        v7_1572[1] = Integer.valueOf(8913);
        v5_1[471] = v7_1572;
        Object[] v7_1573 = new Object[2];
        v7_1573[0] = "Superset";
        v7_1573[1] = Integer.valueOf(8835);
        v5_1[472] = v7_1573;
        Object[] v7_1574 = new Object[2];
        v7_1574[0] = "SupersetEqual";
        v7_1574[1] = Integer.valueOf(8839);
        v5_1[473] = v7_1574;
        Object[] v7_1575 = new Object[2];
        v7_1575[0] = "Supset";
        v7_1575[1] = Integer.valueOf(8913);
        v5_1[474] = v7_1575;
        Object[] v7_1576 = new Object[2];
        v7_1576[0] = "THORN";
        v7_1576[1] = Integer.valueOf(222);
        v5_1[475] = v7_1576;
        Object[] v7_1578 = new Object[2];
        v7_1578[0] = "TRADE";
        v7_1578[1] = Integer.valueOf(8482);
        v5_1[476] = v7_1578;
        Object[] v7_1579 = new Object[2];
        v7_1579[0] = "TSHcy";
        v7_1579[1] = Integer.valueOf(1035);
        v5_1[477] = v7_1579;
        Object[] v7_1580 = new Object[2];
        v7_1580[0] = "TScy";
        v7_1580[1] = Integer.valueOf(1062);
        v5_1[478] = v7_1580;
        Object[] v7_1581 = new Object[2];
        v7_1581[0] = "Tab";
        v7_1581[1] = Integer.valueOf(9);
        v5_1[479] = v7_1581;
        Object[] v7_1582 = new Object[2];
        v7_1582[0] = "Tau";
        v7_1582[1] = Integer.valueOf(932);
        v5_1[480] = v7_1582;
        Object[] v7_1583 = new Object[2];
        v7_1583[0] = "Tcaron";
        v7_1583[1] = Integer.valueOf(356);
        v5_1[481] = v7_1583;
        Object[] v7_1584 = new Object[2];
        v7_1584[0] = "Tcedil";
        v7_1584[1] = Integer.valueOf(354);
        v5_1[482] = v7_1584;
        Object[] v7_1585 = new Object[2];
        v7_1585[0] = "Tcy";
        v7_1585[1] = Integer.valueOf(1058);
        v5_1[483] = v7_1585;
        Object[] v7_1586 = new Object[2];
        v7_1586[0] = "Tfr";
        v7_1586[1] = Integer.valueOf(120087);
        v5_1[484] = v7_1586;
        Object[] v7_1587 = new Object[2];
        v7_1587[0] = "Therefore";
        v7_1587[1] = Integer.valueOf(8756);
        v5_1[485] = v7_1587;
        Object[] v7_1589 = new Object[2];
        v7_1589[0] = "Theta";
        v7_1589[1] = Integer.valueOf(920);
        v5_1[486] = v7_1589;
        Object[] v7_1590 = new Object[2];
        v7_1590[0] = "ThinSpace";
        v7_1590[1] = Integer.valueOf(8201);
        v5_1[487] = v7_1590;
        Object[] v7_1591 = new Object[2];
        v7_1591[0] = "Tilde";
        v7_1591[1] = Integer.valueOf(8764);
        v5_1[488] = v7_1591;
        Object[] v7_1592 = new Object[2];
        v7_1592[0] = "TildeEqual";
        v7_1592[1] = Integer.valueOf(8771);
        v5_1[489] = v7_1592;
        Object[] v7_1593 = new Object[2];
        v7_1593[0] = "TildeFullEqual";
        v7_1593[1] = Integer.valueOf(8773);
        v5_1[490] = v7_1593;
        Object[] v7_1594 = new Object[2];
        v7_1594[0] = "TildeTilde";
        v7_1594[1] = Integer.valueOf(8776);
        v5_1[491] = v7_1594;
        Object[] v7_1595 = new Object[2];
        v7_1595[0] = "Topf";
        v7_1595[1] = Integer.valueOf(120139);
        v5_1[492] = v7_1595;
        Object[] v7_1596 = new Object[2];
        v7_1596[0] = "TripleDot";
        v7_1596[1] = Integer.valueOf(8411);
        v5_1[493] = v7_1596;
        Object[] v7_1597 = new Object[2];
        v7_1597[0] = "Tscr";
        v7_1597[1] = Integer.valueOf(119983);
        v5_1[494] = v7_1597;
        Object[] v7_1598 = new Object[2];
        v7_1598[0] = "Tstrok";
        v7_1598[1] = Integer.valueOf(358);
        v5_1[495] = v7_1598;
        Object[] v7_1600 = new Object[2];
        v7_1600[0] = "Uacute";
        v7_1600[1] = Integer.valueOf(218);
        v5_1[496] = v7_1600;
        Object[] v7_1601 = new Object[2];
        v7_1601[0] = "Uarr";
        v7_1601[1] = Integer.valueOf(8607);
        v5_1[497] = v7_1601;
        Object[] v7_1602 = new Object[2];
        v7_1602[0] = "Uarrocir";
        v7_1602[1] = Integer.valueOf(10569);
        v5_1[498] = v7_1602;
        Object[] v7_1603 = new Object[2];
        v7_1603[0] = "Ubrcy";
        v7_1603[1] = Integer.valueOf(1038);
        v5_1[499] = v7_1603;
        Object[] v7_1604 = new Object[2];
        v7_1604[0] = "Ubreve";
        v7_1604[1] = Integer.valueOf(364);
        v5_1[500] = v7_1604;
        Object[] v7_1605 = new Object[2];
        v7_1605[0] = "Ucirc";
        v7_1605[1] = Integer.valueOf(219);
        v5_1[501] = v7_1605;
        Object[] v7_1606 = new Object[2];
        v7_1606[0] = "Ucy";
        v7_1606[1] = Integer.valueOf(1059);
        v5_1[502] = v7_1606;
        Object[] v7_1607 = new Object[2];
        v7_1607[0] = "Udblac";
        v7_1607[1] = Integer.valueOf(368);
        v5_1[503] = v7_1607;
        Object[] v7_1608 = new Object[2];
        v7_1608[0] = "Ufr";
        v7_1608[1] = Integer.valueOf(120088);
        v5_1[504] = v7_1608;
        Object[] v7_1609 = new Object[2];
        v7_1609[0] = "Ugrave";
        v7_1609[1] = Integer.valueOf(217);
        v5_1[505] = v7_1609;
        Object[] v7_1611 = new Object[2];
        v7_1611[0] = "Umacr";
        v7_1611[1] = Integer.valueOf(362);
        v5_1[506] = v7_1611;
        Object[] v7_1612 = new Object[2];
        v7_1612[0] = "UnderBar";
        v7_1612[1] = Integer.valueOf(95);
        v5_1[507] = v7_1612;
        Object[] v7_1613 = new Object[2];
        v7_1613[0] = "UnderBrace";
        v7_1613[1] = Integer.valueOf(9183);
        v5_1[508] = v7_1613;
        Object[] v7_1614 = new Object[2];
        v7_1614[0] = "UnderBracket";
        v7_1614[1] = Integer.valueOf(9141);
        v5_1[509] = v7_1614;
        Object[] v7_1615 = new Object[2];
        v7_1615[0] = "UnderParenthesis";
        v7_1615[1] = Integer.valueOf(9181);
        v5_1[510] = v7_1615;
        Object[] v7_1616 = new Object[2];
        v7_1616[0] = "Union";
        v7_1616[1] = Integer.valueOf(8899);
        v5_1[511] = v7_1616;
        Object[] v7_1617 = new Object[2];
        v7_1617[0] = "UnionPlus";
        v7_1617[1] = Integer.valueOf(8846);
        v5_1[512] = v7_1617;
        Object[] v7_1618 = new Object[2];
        v7_1618[0] = "Uogon";
        v7_1618[1] = Integer.valueOf(370);
        v5_1[513] = v7_1618;
        Object[] v7_1619 = new Object[2];
        v7_1619[0] = "Uopf";
        v7_1619[1] = Integer.valueOf(120140);
        v5_1[514] = v7_1619;
        Object[] v7_1620 = new Object[2];
        v7_1620[0] = "UpArrow";
        v7_1620[1] = Integer.valueOf(8593);
        v5_1[515] = v7_1620;
        Object[] v7_1622 = new Object[2];
        v7_1622[0] = "UpArrowBar";
        v7_1622[1] = Integer.valueOf(10514);
        v5_1[516] = v7_1622;
        Object[] v7_1623 = new Object[2];
        v7_1623[0] = "UpArrowDownArrow";
        v7_1623[1] = Integer.valueOf(8645);
        v5_1[517] = v7_1623;
        Object[] v7_1624 = new Object[2];
        v7_1624[0] = "UpDownArrow";
        v7_1624[1] = Integer.valueOf(8597);
        v5_1[518] = v7_1624;
        Object[] v7_1625 = new Object[2];
        v7_1625[0] = "UpEquilibrium";
        v7_1625[1] = Integer.valueOf(10606);
        v5_1[519] = v7_1625;
        Object[] v7_1626 = new Object[2];
        v7_1626[0] = "UpTee";
        v7_1626[1] = Integer.valueOf(8869);
        v5_1[520] = v7_1626;
        Object[] v7_1627 = new Object[2];
        v7_1627[0] = "UpTeeArrow";
        v7_1627[1] = Integer.valueOf(8613);
        v5_1[521] = v7_1627;
        Object[] v7_1628 = new Object[2];
        v7_1628[0] = "Uparrow";
        v7_1628[1] = Integer.valueOf(8657);
        v5_1[522] = v7_1628;
        Object[] v7_1629 = new Object[2];
        v7_1629[0] = "Updownarrow";
        v7_1629[1] = Integer.valueOf(8661);
        v5_1[523] = v7_1629;
        Object[] v7_1630 = new Object[2];
        v7_1630[0] = "UpperLeftArrow";
        v7_1630[1] = Integer.valueOf(8598);
        v5_1[524] = v7_1630;
        Object[] v7_1631 = new Object[2];
        v7_1631[0] = "UpperRightArrow";
        v7_1631[1] = Integer.valueOf(8599);
        v5_1[525] = v7_1631;
        Object[] v7_1633 = new Object[2];
        v7_1633[0] = "Upsi";
        v7_1633[1] = Integer.valueOf(978);
        v5_1[526] = v7_1633;
        Object[] v7_1634 = new Object[2];
        v7_1634[0] = "Upsilon";
        v7_1634[1] = Integer.valueOf(933);
        v5_1[527] = v7_1634;
        Object[] v7_1635 = new Object[2];
        v7_1635[0] = "Uring";
        v7_1635[1] = Integer.valueOf(366);
        v5_1[528] = v7_1635;
        Object[] v7_1636 = new Object[2];
        v7_1636[0] = "Uscr";
        v7_1636[1] = Integer.valueOf(119984);
        v5_1[529] = v7_1636;
        Object[] v7_1637 = new Object[2];
        v7_1637[0] = "Utilde";
        v7_1637[1] = Integer.valueOf(360);
        v5_1[530] = v7_1637;
        Object[] v7_1638 = new Object[2];
        v7_1638[0] = "Uuml";
        v7_1638[1] = Integer.valueOf(220);
        v5_1[531] = v7_1638;
        Object[] v7_1639 = new Object[2];
        v7_1639[0] = "VDash";
        v7_1639[1] = Integer.valueOf(8875);
        v5_1[532] = v7_1639;
        Object[] v7_1640 = new Object[2];
        v7_1640[0] = "Vbar";
        v7_1640[1] = Integer.valueOf(10987);
        v5_1[533] = v7_1640;
        Object[] v7_1641 = new Object[2];
        v7_1641[0] = "Vcy";
        v7_1641[1] = Integer.valueOf(1042);
        v5_1[534] = v7_1641;
        Object[] v7_1642 = new Object[2];
        v7_1642[0] = "Vdash";
        v7_1642[1] = Integer.valueOf(8873);
        v5_1[535] = v7_1642;
        Object[] v7_1644 = new Object[2];
        v7_1644[0] = "Vdashl";
        v7_1644[1] = Integer.valueOf(10982);
        v5_1[536] = v7_1644;
        Object[] v7_1645 = new Object[2];
        v7_1645[0] = "Vee";
        v7_1645[1] = Integer.valueOf(8897);
        v5_1[537] = v7_1645;
        Object[] v7_1646 = new Object[2];
        v7_1646[0] = "Verbar";
        v7_1646[1] = Integer.valueOf(8214);
        v5_1[538] = v7_1646;
        Object[] v7_1647 = new Object[2];
        v7_1647[0] = "Vert";
        v7_1647[1] = Integer.valueOf(8214);
        v5_1[539] = v7_1647;
        Object[] v7_1648 = new Object[2];
        v7_1648[0] = "VerticalBar";
        v7_1648[1] = Integer.valueOf(8739);
        v5_1[540] = v7_1648;
        Object[] v7_1649 = new Object[2];
        v7_1649[0] = "VerticalLine";
        v7_1649[1] = Integer.valueOf(124);
        v5_1[541] = v7_1649;
        Object[] v7_1650 = new Object[2];
        v7_1650[0] = "VerticalSeparator";
        v7_1650[1] = Integer.valueOf(10072);
        v5_1[542] = v7_1650;
        Object[] v7_1651 = new Object[2];
        v7_1651[0] = "VerticalTilde";
        v7_1651[1] = Integer.valueOf(8768);
        v5_1[543] = v7_1651;
        Object[] v7_1652 = new Object[2];
        v7_1652[0] = "VeryThinSpace";
        v7_1652[1] = Integer.valueOf(8202);
        v5_1[544] = v7_1652;
        Object[] v7_1654 = new Object[2];
        v7_1654[0] = "Vfr";
        v7_1654[1] = Integer.valueOf(120089);
        v5_1[545] = v7_1654;
        Object[] v7_1656 = new Object[2];
        v7_1656[0] = "Vopf";
        v7_1656[1] = Integer.valueOf(120141);
        v5_1[546] = v7_1656;
        Object[] v7_1657 = new Object[2];
        v7_1657[0] = "Vscr";
        v7_1657[1] = Integer.valueOf(119985);
        v5_1[547] = v7_1657;
        Object[] v7_1658 = new Object[2];
        v7_1658[0] = "Vvdash";
        v7_1658[1] = Integer.valueOf(8874);
        v5_1[548] = v7_1658;
        Object[] v7_1659 = new Object[2];
        v7_1659[0] = "Wcirc";
        v7_1659[1] = Integer.valueOf(372);
        v5_1[549] = v7_1659;
        Object[] v7_1660 = new Object[2];
        v7_1660[0] = "Wedge";
        v7_1660[1] = Integer.valueOf(8896);
        v5_1[550] = v7_1660;
        Object[] v7_1661 = new Object[2];
        v7_1661[0] = "Wfr";
        v7_1661[1] = Integer.valueOf(120090);
        v5_1[551] = v7_1661;
        Object[] v7_1662 = new Object[2];
        v7_1662[0] = "Wopf";
        v7_1662[1] = Integer.valueOf(120142);
        v5_1[552] = v7_1662;
        Object[] v7_1663 = new Object[2];
        v7_1663[0] = "Wscr";
        v7_1663[1] = Integer.valueOf(119986);
        v5_1[553] = v7_1663;
        Object[] v7_1664 = new Object[2];
        v7_1664[0] = "Xfr";
        v7_1664[1] = Integer.valueOf(120091);
        v5_1[554] = v7_1664;
        Object[] v7_1665 = new Object[2];
        v7_1665[0] = "Xi";
        v7_1665[1] = Integer.valueOf(926);
        v5_1[555] = v7_1665;
        Object[] v7_1667 = new Object[2];
        v7_1667[0] = "Xopf";
        v7_1667[1] = Integer.valueOf(120143);
        v5_1[556] = v7_1667;
        Object[] v7_1668 = new Object[2];
        v7_1668[0] = "Xscr";
        v7_1668[1] = Integer.valueOf(119987);
        v5_1[557] = v7_1668;
        Object[] v7_1669 = new Object[2];
        v7_1669[0] = "YAcy";
        v7_1669[1] = Integer.valueOf(1071);
        v5_1[558] = v7_1669;
        Object[] v7_1670 = new Object[2];
        v7_1670[0] = "YIcy";
        v7_1670[1] = Integer.valueOf(1031);
        v5_1[559] = v7_1670;
        Object[] v7_1671 = new Object[2];
        v7_1671[0] = "YUcy";
        v7_1671[1] = Integer.valueOf(1070);
        v5_1[560] = v7_1671;
        Object[] v7_1672 = new Object[2];
        v7_1672[0] = "Yacute";
        v7_1672[1] = Integer.valueOf(221);
        v5_1[561] = v7_1672;
        Object[] v7_1673 = new Object[2];
        v7_1673[0] = "Ycirc";
        v7_1673[1] = Integer.valueOf(374);
        v5_1[562] = v7_1673;
        Object[] v7_1674 = new Object[2];
        v7_1674[0] = "Ycy";
        v7_1674[1] = Integer.valueOf(1067);
        v5_1[563] = v7_1674;
        Object[] v7_1675 = new Object[2];
        v7_1675[0] = "Yfr";
        v7_1675[1] = Integer.valueOf(120092);
        v5_1[564] = v7_1675;
        Object[] v7_1676 = new Object[2];
        v7_1676[0] = "Yopf";
        v7_1676[1] = Integer.valueOf(120144);
        v5_1[565] = v7_1676;
        Object[] v7_1678 = new Object[2];
        v7_1678[0] = "Yscr";
        v7_1678[1] = Integer.valueOf(119988);
        v5_1[566] = v7_1678;
        Object[] v7_1680 = new Object[2];
        v7_1680[0] = "Yuml";
        v7_1680[1] = Integer.valueOf(376);
        v5_1[567] = v7_1680;
        Object[] v7_1681 = new Object[2];
        v7_1681[0] = "ZHcy";
        v7_1681[1] = Integer.valueOf(1046);
        v5_1[568] = v7_1681;
        Object[] v7_1682 = new Object[2];
        v7_1682[0] = "Zacute";
        v7_1682[1] = Integer.valueOf(377);
        v5_1[569] = v7_1682;
        Object[] v7_1683 = new Object[2];
        v7_1683[0] = "Zcaron";
        v7_1683[1] = Integer.valueOf(381);
        v5_1[570] = v7_1683;
        Object[] v7_1684 = new Object[2];
        v7_1684[0] = "Zcy";
        v7_1684[1] = Integer.valueOf(1047);
        v5_1[571] = v7_1684;
        Object[] v7_1685 = new Object[2];
        v7_1685[0] = "Zdot";
        v7_1685[1] = Integer.valueOf(379);
        v5_1[572] = v7_1685;
        Object[] v7_1686 = new Object[2];
        v7_1686[0] = "ZeroWidthSpace";
        v7_1686[1] = Integer.valueOf(8203);
        v5_1[573] = v7_1686;
        Object[] v7_1687 = new Object[2];
        v7_1687[0] = "Zeta";
        v7_1687[1] = Integer.valueOf(918);
        v5_1[574] = v7_1687;
        Object[] v7_1688 = new Object[2];
        v7_1688[0] = "Zfr";
        v7_1688[1] = Integer.valueOf(8488);
        v5_1[575] = v7_1688;
        Object[] v7_1690 = new Object[2];
        v7_1690[0] = "Zopf";
        v7_1690[1] = Integer.valueOf(8484);
        v5_1[576] = v7_1690;
        Object[] v7_1691 = new Object[2];
        v7_1691[0] = "Zscr";
        v7_1691[1] = Integer.valueOf(119989);
        v5_1[577] = v7_1691;
        Object[] v7_1692 = new Object[2];
        v7_1692[0] = "aacute";
        v7_1692[1] = Integer.valueOf(225);
        v5_1[578] = v7_1692;
        Object[] v7_1693 = new Object[2];
        v7_1693[0] = "abreve";
        v7_1693[1] = Integer.valueOf(259);
        v5_1[579] = v7_1693;
        Object[] v7_1694 = new Object[2];
        v7_1694[0] = "ac";
        v7_1694[1] = Integer.valueOf(8766);
        v5_1[580] = v7_1694;
        Object[] v7_1695 = new Object[2];
        v7_1695[0] = "acd";
        v7_1695[1] = Integer.valueOf(8767);
        v5_1[581] = v7_1695;
        Object[] v7_1696 = new Object[2];
        v7_1696[0] = "acirc";
        v7_1696[1] = Integer.valueOf(226);
        v5_1[582] = v7_1696;
        Object[] v7_1697 = new Object[2];
        v7_1697[0] = "acute";
        v7_1697[1] = Integer.valueOf(180);
        v5_1[583] = v7_1697;
        Object[] v7_1698 = new Object[2];
        v7_1698[0] = "acy";
        v7_1698[1] = Integer.valueOf(1072);
        v5_1[584] = v7_1698;
        Object[] v7_1699 = new Object[2];
        v7_1699[0] = "aelig";
        v7_1699[1] = Integer.valueOf(230);
        v5_1[585] = v7_1699;
        Object[] v7_1701 = new Object[2];
        v7_1701[0] = "af";
        v7_1701[1] = Integer.valueOf(8289);
        v5_1[586] = v7_1701;
        Object[] v7_1702 = new Object[2];
        v7_1702[0] = "afr";
        v7_1702[1] = Integer.valueOf(120094);
        v5_1[587] = v7_1702;
        Object[] v7_1703 = new Object[2];
        v7_1703[0] = "agrave";
        v7_1703[1] = Integer.valueOf(224);
        v5_1[588] = v7_1703;
        Object[] v7_1705 = new Object[2];
        v7_1705[0] = "alefsym";
        v7_1705[1] = Integer.valueOf(8501);
        v5_1[589] = v7_1705;
        Object[] v7_1706 = new Object[2];
        v7_1706[0] = "aleph";
        v7_1706[1] = Integer.valueOf(8501);
        v5_1[590] = v7_1706;
        Object[] v7_1707 = new Object[2];
        v7_1707[0] = "alpha";
        v7_1707[1] = Integer.valueOf(945);
        v5_1[591] = v7_1707;
        Object[] v7_1708 = new Object[2];
        v7_1708[0] = "amacr";
        v7_1708[1] = Integer.valueOf(257);
        v5_1[592] = v7_1708;
        Object[] v7_1709 = new Object[2];
        v7_1709[0] = "amalg";
        v7_1709[1] = Integer.valueOf(10815);
        v5_1[593] = v7_1709;
        Object[] v7_1710 = new Object[2];
        v7_1710[0] = "amp";
        v7_1710[1] = Integer.valueOf(38);
        v5_1[594] = v7_1710;
        Object[] v7_1711 = new Object[2];
        v7_1711[0] = "and";
        v7_1711[1] = Integer.valueOf(8743);
        v5_1[595] = v7_1711;
        Object[] v7_1713 = new Object[2];
        v7_1713[0] = "andand";
        v7_1713[1] = Integer.valueOf(10837);
        v5_1[596] = v7_1713;
        Object[] v7_1714 = new Object[2];
        v7_1714[0] = "andd";
        v7_1714[1] = Integer.valueOf(10844);
        v5_1[597] = v7_1714;
        Object[] v7_1715 = new Object[2];
        v7_1715[0] = "andslope";
        v7_1715[1] = Integer.valueOf(10840);
        v5_1[598] = v7_1715;
        Object[] v7_1716 = new Object[2];
        v7_1716[0] = "andv";
        v7_1716[1] = Integer.valueOf(10842);
        v5_1[599] = v7_1716;
        Object[] v7_1717 = new Object[2];
        v7_1717[0] = "ang";
        v7_1717[1] = Integer.valueOf(8736);
        v5_1[600] = v7_1717;
        Object[] v7_1718 = new Object[2];
        v7_1718[0] = "ange";
        v7_1718[1] = Integer.valueOf(10660);
        v5_1[601] = v7_1718;
        Object[] v7_1719 = new Object[2];
        v7_1719[0] = "angle";
        v7_1719[1] = Integer.valueOf(8736);
        v5_1[602] = v7_1719;
        Object[] v7_1720 = new Object[2];
        v7_1720[0] = "angmsd";
        v7_1720[1] = Integer.valueOf(8737);
        v5_1[603] = v7_1720;
        Object[] v7_1721 = new Object[2];
        v7_1721[0] = "angmsdaa";
        v7_1721[1] = Integer.valueOf(10664);
        v5_1[604] = v7_1721;
        Object[] v7_1722 = new Object[2];
        v7_1722[0] = "angmsdab";
        v7_1722[1] = Integer.valueOf(10665);
        v5_1[605] = v7_1722;
        Object[] v7_1724 = new Object[2];
        v7_1724[0] = "angmsdac";
        v7_1724[1] = Integer.valueOf(10666);
        v5_1[606] = v7_1724;
        Object[] v7_1725 = new Object[2];
        v7_1725[0] = "angmsdad";
        v7_1725[1] = Integer.valueOf(10667);
        v5_1[607] = v7_1725;
        Object[] v7_1726 = new Object[2];
        v7_1726[0] = "angmsdae";
        v7_1726[1] = Integer.valueOf(10668);
        v5_1[608] = v7_1726;
        Object[] v7_1727 = new Object[2];
        v7_1727[0] = "angmsdaf";
        v7_1727[1] = Integer.valueOf(10669);
        v5_1[609] = v7_1727;
        Object[] v7_1728 = new Object[2];
        v7_1728[0] = "angmsdag";
        v7_1728[1] = Integer.valueOf(10670);
        v5_1[610] = v7_1728;
        Object[] v7_1729 = new Object[2];
        v7_1729[0] = "angmsdah";
        v7_1729[1] = Integer.valueOf(10671);
        v5_1[611] = v7_1729;
        Object[] v7_1730 = new Object[2];
        v7_1730[0] = "angrt";
        v7_1730[1] = Integer.valueOf(8735);
        v5_1[612] = v7_1730;
        Object[] v7_1731 = new Object[2];
        v7_1731[0] = "angrtvb";
        v7_1731[1] = Integer.valueOf(8894);
        v5_1[613] = v7_1731;
        Object[] v7_1732 = new Object[2];
        v7_1732[0] = "angrtvbd";
        v7_1732[1] = Integer.valueOf(10653);
        v5_1[614] = v7_1732;
        Object[] v7_1733 = new Object[2];
        v7_1733[0] = "angsph";
        v7_1733[1] = Integer.valueOf(8738);
        v5_1[615] = v7_1733;
        Object[] v7_1735 = new Object[2];
        v7_1735[0] = "angst";
        v7_1735[1] = Integer.valueOf(197);
        v5_1[616] = v7_1735;
        Object[] v7_1736 = new Object[2];
        v7_1736[0] = "angzarr";
        v7_1736[1] = Integer.valueOf(9084);
        v5_1[617] = v7_1736;
        Object[] v7_1737 = new Object[2];
        v7_1737[0] = "aogon";
        v7_1737[1] = Integer.valueOf(261);
        v5_1[618] = v7_1737;
        Object[] v7_1738 = new Object[2];
        v7_1738[0] = "aopf";
        v7_1738[1] = Integer.valueOf(120146);
        v5_1[619] = v7_1738;
        Object[] v7_1739 = new Object[2];
        v7_1739[0] = "ap";
        v7_1739[1] = Integer.valueOf(8776);
        v5_1[620] = v7_1739;
        Object[] v7_1740 = new Object[2];
        v7_1740[0] = "apE";
        v7_1740[1] = Integer.valueOf(10864);
        v5_1[621] = v7_1740;
        Object[] v7_1741 = new Object[2];
        v7_1741[0] = "apacir";
        v7_1741[1] = Integer.valueOf(10863);
        v5_1[622] = v7_1741;
        Object[] v7_1742 = new Object[2];
        v7_1742[0] = "ape";
        v7_1742[1] = Integer.valueOf(8778);
        v5_1[623] = v7_1742;
        Object[] v7_1743 = new Object[2];
        v7_1743[0] = "apid";
        v7_1743[1] = Integer.valueOf(8779);
        v5_1[624] = v7_1743;
        Object[] v7_1744 = new Object[2];
        v7_1744[0] = "apos";
        v7_1744[1] = Integer.valueOf(39);
        v5_1[625] = v7_1744;
        Object[] v7_1746 = new Object[2];
        v7_1746[0] = "approx";
        v7_1746[1] = Integer.valueOf(8776);
        v5_1[626] = v7_1746;
        Object[] v7_1747 = new Object[2];
        v7_1747[0] = "approxeq";
        v7_1747[1] = Integer.valueOf(8778);
        v5_1[627] = v7_1747;
        Object[] v7_1748 = new Object[2];
        v7_1748[0] = "aring";
        v7_1748[1] = Integer.valueOf(229);
        v5_1[628] = v7_1748;
        Object[] v7_1749 = new Object[2];
        v7_1749[0] = "ascr";
        v7_1749[1] = Integer.valueOf(119990);
        v5_1[629] = v7_1749;
        Object[] v7_1750 = new Object[2];
        v7_1750[0] = "ast";
        v7_1750[1] = Integer.valueOf(42);
        v5_1[630] = v7_1750;
        Object[] v7_1751 = new Object[2];
        v7_1751[0] = "asymp";
        v7_1751[1] = Integer.valueOf(8776);
        v5_1[631] = v7_1751;
        Object[] v7_1752 = new Object[2];
        v7_1752[0] = "asympeq";
        v7_1752[1] = Integer.valueOf(8781);
        v5_1[632] = v7_1752;
        Object[] v7_1753 = new Object[2];
        v7_1753[0] = "atilde";
        v7_1753[1] = Integer.valueOf(227);
        v5_1[633] = v7_1753;
        Object[] v7_1755 = new Object[2];
        v7_1755[0] = "auml";
        v7_1755[1] = Integer.valueOf(228);
        v5_1[634] = v7_1755;
        Object[] v7_1756 = new Object[2];
        v7_1756[0] = "awconint";
        v7_1756[1] = Integer.valueOf(8755);
        v5_1[635] = v7_1756;
        Object[] v7_1758 = new Object[2];
        v7_1758[0] = "awint";
        v7_1758[1] = Integer.valueOf(10769);
        v5_1[636] = v7_1758;
        Object[] v7_1759 = new Object[2];
        v7_1759[0] = "bNot";
        v7_1759[1] = Integer.valueOf(10989);
        v5_1[637] = v7_1759;
        Object[] v7_1760 = new Object[2];
        v7_1760[0] = "backcong";
        v7_1760[1] = Integer.valueOf(8780);
        v5_1[638] = v7_1760;
        Object[] v7_1761 = new Object[2];
        v7_1761[0] = "backepsilon";
        v7_1761[1] = Integer.valueOf(1014);
        v5_1[639] = v7_1761;
        Object[] v7_1762 = new Object[2];
        v7_1762[0] = "backprime";
        v7_1762[1] = Integer.valueOf(8245);
        v5_1[640] = v7_1762;
        Object[] v7_1763 = new Object[2];
        v7_1763[0] = "backsim";
        v7_1763[1] = Integer.valueOf(8765);
        v5_1[641] = v7_1763;
        Object[] v7_1764 = new Object[2];
        v7_1764[0] = "backsimeq";
        v7_1764[1] = Integer.valueOf(8909);
        v5_1[642] = v7_1764;
        Object[] v7_1765 = new Object[2];
        v7_1765[0] = "barvee";
        v7_1765[1] = Integer.valueOf(8893);
        v5_1[643] = v7_1765;
        Object[] v7_1766 = new Object[2];
        v7_1766[0] = "barwed";
        v7_1766[1] = Integer.valueOf(8965);
        v5_1[644] = v7_1766;
        Object[] v7_1767 = new Object[2];
        v7_1767[0] = "barwedge";
        v7_1767[1] = Integer.valueOf(8965);
        v5_1[645] = v7_1767;
        Object[] v7_1769 = new Object[2];
        v7_1769[0] = "bbrk";
        v7_1769[1] = Integer.valueOf(9141);
        v5_1[646] = v7_1769;
        Object[] v7_1770 = new Object[2];
        v7_1770[0] = "bbrktbrk";
        v7_1770[1] = Integer.valueOf(9142);
        v5_1[647] = v7_1770;
        Object[] v7_1771 = new Object[2];
        v7_1771[0] = "bcong";
        v7_1771[1] = Integer.valueOf(8780);
        v5_1[648] = v7_1771;
        Object[] v7_1772 = new Object[2];
        v7_1772[0] = "bcy";
        v7_1772[1] = Integer.valueOf(1073);
        v5_1[649] = v7_1772;
        Object[] v7_1773 = new Object[2];
        v7_1773[0] = "bdquo";
        v7_1773[1] = Integer.valueOf(8222);
        v5_1[650] = v7_1773;
        Object[] v7_1774 = new Object[2];
        v7_1774[0] = "becaus";
        v7_1774[1] = Integer.valueOf(8757);
        v5_1[651] = v7_1774;
        Object[] v7_1775 = new Object[2];
        v7_1775[0] = "because";
        v7_1775[1] = Integer.valueOf(8757);
        v5_1[652] = v7_1775;
        Object[] v7_1776 = new Object[2];
        v7_1776[0] = "bemptyv";
        v7_1776[1] = Integer.valueOf(10672);
        v5_1[653] = v7_1776;
        Object[] v7_1777 = new Object[2];
        v7_1777[0] = "bepsi";
        v7_1777[1] = Integer.valueOf(1014);
        v5_1[654] = v7_1777;
        Object[] v7_1778 = new Object[2];
        v7_1778[0] = "bernou";
        v7_1778[1] = Integer.valueOf(8492);
        v5_1[655] = v7_1778;
        Object[] v7_1780 = new Object[2];
        v7_1780[0] = "beta";
        v7_1780[1] = Integer.valueOf(946);
        v5_1[656] = v7_1780;
        Object[] v7_1781 = new Object[2];
        v7_1781[0] = "beth";
        v7_1781[1] = Integer.valueOf(8502);
        v5_1[657] = v7_1781;
        Object[] v7_1782 = new Object[2];
        v7_1782[0] = "between";
        v7_1782[1] = Integer.valueOf(8812);
        v5_1[658] = v7_1782;
        Object[] v7_1783 = new Object[2];
        v7_1783[0] = "bfr";
        v7_1783[1] = Integer.valueOf(120095);
        v5_1[659] = v7_1783;
        Object[] v7_1784 = new Object[2];
        v7_1784[0] = "bigcap";
        v7_1784[1] = Integer.valueOf(8898);
        v5_1[660] = v7_1784;
        Object[] v7_1785 = new Object[2];
        v7_1785[0] = "bigcirc";
        v7_1785[1] = Integer.valueOf(9711);
        v5_1[661] = v7_1785;
        Object[] v7_1786 = new Object[2];
        v7_1786[0] = "bigcup";
        v7_1786[1] = Integer.valueOf(8899);
        v5_1[662] = v7_1786;
        Object[] v7_1787 = new Object[2];
        v7_1787[0] = "bigodot";
        v7_1787[1] = Integer.valueOf(10752);
        v5_1[663] = v7_1787;
        Object[] v7_1788 = new Object[2];
        v7_1788[0] = "bigoplus";
        v7_1788[1] = Integer.valueOf(10753);
        v5_1[664] = v7_1788;
        Object[] v7_1789 = new Object[2];
        v7_1789[0] = "bigotimes";
        v7_1789[1] = Integer.valueOf(10754);
        v5_1[665] = v7_1789;
        Object[] v7_1791 = new Object[2];
        v7_1791[0] = "bigsqcup";
        v7_1791[1] = Integer.valueOf(10758);
        v5_1[666] = v7_1791;
        Object[] v7_1793 = new Object[2];
        v7_1793[0] = "bigstar";
        v7_1793[1] = Integer.valueOf(9733);
        v5_1[667] = v7_1793;
        Object[] v7_1794 = new Object[2];
        v7_1794[0] = "bigtriangledown";
        v7_1794[1] = Integer.valueOf(9661);
        v5_1[668] = v7_1794;
        Object[] v7_1795 = new Object[2];
        v7_1795[0] = "bigtriangleup";
        v7_1795[1] = Integer.valueOf(9651);
        v5_1[669] = v7_1795;
        Object[] v7_1796 = new Object[2];
        v7_1796[0] = "biguplus";
        v7_1796[1] = Integer.valueOf(10756);
        v5_1[670] = v7_1796;
        Object[] v7_1797 = new Object[2];
        v7_1797[0] = "bigvee";
        v7_1797[1] = Integer.valueOf(8897);
        v5_1[671] = v7_1797;
        Object[] v7_1798 = new Object[2];
        v7_1798[0] = "bigwedge";
        v7_1798[1] = Integer.valueOf(8896);
        v5_1[672] = v7_1798;
        Object[] v7_1799 = new Object[2];
        v7_1799[0] = "bkarow";
        v7_1799[1] = Integer.valueOf(10509);
        v5_1[673] = v7_1799;
        Object[] v7_1800 = new Object[2];
        v7_1800[0] = "blacklozenge";
        v7_1800[1] = Integer.valueOf(10731);
        v5_1[674] = v7_1800;
        Object[] v7_1801 = new Object[2];
        v7_1801[0] = "blacksquare";
        v7_1801[1] = Integer.valueOf(9642);
        v5_1[675] = v7_1801;
        Object[] v7_1803 = new Object[2];
        v7_1803[0] = "blacktriangle";
        v7_1803[1] = Integer.valueOf(9652);
        v5_1[676] = v7_1803;
        Object[] v7_1804 = new Object[2];
        v7_1804[0] = "blacktriangledown";
        v7_1804[1] = Integer.valueOf(9662);
        v5_1[677] = v7_1804;
        Object[] v7_1805 = new Object[2];
        v7_1805[0] = "blacktriangleleft";
        v7_1805[1] = Integer.valueOf(9666);
        v5_1[678] = v7_1805;
        Object[] v7_1806 = new Object[2];
        v7_1806[0] = "blacktriangleright";
        v7_1806[1] = Integer.valueOf(9656);
        v5_1[679] = v7_1806;
        Object[] v7_1807 = new Object[2];
        v7_1807[0] = "blank";
        v7_1807[1] = Integer.valueOf(9251);
        v5_1[680] = v7_1807;
        Object[] v7_1808 = new Object[2];
        v7_1808[0] = "blk12";
        v7_1808[1] = Integer.valueOf(9618);
        v5_1[681] = v7_1808;
        Object[] v7_1809 = new Object[2];
        v7_1809[0] = "blk14";
        v7_1809[1] = Integer.valueOf(9617);
        v5_1[682] = v7_1809;
        Object[] v7_1810 = new Object[2];
        v7_1810[0] = "blk34";
        v7_1810[1] = Integer.valueOf(9619);
        v5_1[683] = v7_1810;
        Object[] v7_1811 = new Object[2];
        v7_1811[0] = "block";
        v7_1811[1] = Integer.valueOf(9608);
        v5_1[684] = v7_1811;
        Object[] v7_1812 = new Object[2];
        v7_1812[0] = "bnot";
        v7_1812[1] = Integer.valueOf(8976);
        v5_1[685] = v7_1812;
        Object[] v7_1814 = new Object[2];
        v7_1814[0] = "bopf";
        v7_1814[1] = Integer.valueOf(120147);
        v5_1[686] = v7_1814;
        Object[] v7_1815 = new Object[2];
        v7_1815[0] = "bot";
        v7_1815[1] = Integer.valueOf(8869);
        v5_1[687] = v7_1815;
        Object[] v7_1816 = new Object[2];
        v7_1816[0] = "bottom";
        v7_1816[1] = Integer.valueOf(8869);
        v5_1[688] = v7_1816;
        Object[] v7_1817 = new Object[2];
        v7_1817[0] = "bowtie";
        v7_1817[1] = Integer.valueOf(8904);
        v5_1[689] = v7_1817;
        Object[] v7_1818 = new Object[2];
        v7_1818[0] = "boxDL";
        v7_1818[1] = Integer.valueOf(9559);
        v5_1[690] = v7_1818;
        Object[] v7_1819 = new Object[2];
        v7_1819[0] = "boxDR";
        v7_1819[1] = Integer.valueOf(9556);
        v5_1[691] = v7_1819;
        Object[] v7_1820 = new Object[2];
        v7_1820[0] = "boxDl";
        v7_1820[1] = Integer.valueOf(9558);
        v5_1[692] = v7_1820;
        Object[] v7_1821 = new Object[2];
        v7_1821[0] = "boxDr";
        v7_1821[1] = Integer.valueOf(9555);
        v5_1[693] = v7_1821;
        Object[] v7_1822 = new Object[2];
        v7_1822[0] = "boxH";
        v7_1822[1] = Integer.valueOf(9552);
        v5_1[694] = v7_1822;
        Object[] v7_1823 = new Object[2];
        v7_1823[0] = "boxHD";
        v7_1823[1] = Integer.valueOf(9574);
        v5_1[695] = v7_1823;
        Object[] v7_1825 = new Object[2];
        v7_1825[0] = "boxHU";
        v7_1825[1] = Integer.valueOf(9577);
        v5_1[696] = v7_1825;
        Object[] v7_1826 = new Object[2];
        v7_1826[0] = "boxHd";
        v7_1826[1] = Integer.valueOf(9572);
        v5_1[697] = v7_1826;
        Object[] v7_1827 = new Object[2];
        v7_1827[0] = "boxHu";
        v7_1827[1] = Integer.valueOf(9575);
        v5_1[698] = v7_1827;
        Object[] v7_1828 = new Object[2];
        v7_1828[0] = "boxUL";
        v7_1828[1] = Integer.valueOf(9565);
        v5_1[699] = v7_1828;
        Object[] v7_1829 = new Object[2];
        v7_1829[0] = "boxUR";
        v7_1829[1] = Integer.valueOf(9562);
        v5_1[700] = v7_1829;
        Object[] v7_1830 = new Object[2];
        v7_1830[0] = "boxUl";
        v7_1830[1] = Integer.valueOf(9564);
        v5_1[701] = v7_1830;
        Object[] v7_1831 = new Object[2];
        v7_1831[0] = "boxUr";
        v7_1831[1] = Integer.valueOf(9561);
        v5_1[702] = v7_1831;
        Object[] v7_1832 = new Object[2];
        v7_1832[0] = "boxV";
        v7_1832[1] = Integer.valueOf(9553);
        v5_1[703] = v7_1832;
        Object[] v7_1833 = new Object[2];
        v7_1833[0] = "boxVH";
        v7_1833[1] = Integer.valueOf(9580);
        v5_1[704] = v7_1833;
        Object[] v7_1834 = new Object[2];
        v7_1834[0] = "boxVL";
        v7_1834[1] = Integer.valueOf(9571);
        v5_1[705] = v7_1834;
        Object[] v7_1836 = new Object[2];
        v7_1836[0] = "boxVR";
        v7_1836[1] = Integer.valueOf(9568);
        v5_1[706] = v7_1836;
        Object[] v7_1837 = new Object[2];
        v7_1837[0] = "boxVh";
        v7_1837[1] = Integer.valueOf(9579);
        v5_1[707] = v7_1837;
        Object[] v7_1838 = new Object[2];
        v7_1838[0] = "boxVl";
        v7_1838[1] = Integer.valueOf(9570);
        v5_1[708] = v7_1838;
        Object[] v7_1839 = new Object[2];
        v7_1839[0] = "boxVr";
        v7_1839[1] = Integer.valueOf(9567);
        v5_1[709] = v7_1839;
        Object[] v7_1840 = new Object[2];
        v7_1840[0] = "boxbox";
        v7_1840[1] = Integer.valueOf(10697);
        v5_1[710] = v7_1840;
        Object[] v7_1841 = new Object[2];
        v7_1841[0] = "boxdL";
        v7_1841[1] = Integer.valueOf(9557);
        v5_1[711] = v7_1841;
        Object[] v7_1843 = new Object[2];
        v7_1843[0] = "boxdR";
        v7_1843[1] = Integer.valueOf(9554);
        v5_1[712] = v7_1843;
        Object[] v7_1844 = new Object[2];
        v7_1844[0] = "boxdl";
        v7_1844[1] = Integer.valueOf(9488);
        v5_1[713] = v7_1844;
        Object[] v7_1845 = new Object[2];
        v7_1845[0] = "boxdr";
        v7_1845[1] = Integer.valueOf(9484);
        v5_1[714] = v7_1845;
        Object[] v7_1846 = new Object[2];
        v7_1846[0] = "boxh";
        v7_1846[1] = Integer.valueOf(9472);
        v5_1[715] = v7_1846;
        Object[] v7_1848 = new Object[2];
        v7_1848[0] = "boxhD";
        v7_1848[1] = Integer.valueOf(9573);
        v5_1[716] = v7_1848;
        Object[] v7_1849 = new Object[2];
        v7_1849[0] = "boxhU";
        v7_1849[1] = Integer.valueOf(9576);
        v5_1[717] = v7_1849;
        Object[] v7_1850 = new Object[2];
        v7_1850[0] = "boxhd";
        v7_1850[1] = Integer.valueOf(9516);
        v5_1[718] = v7_1850;
        Object[] v7_1851 = new Object[2];
        v7_1851[0] = "boxhu";
        v7_1851[1] = Integer.valueOf(9524);
        v5_1[719] = v7_1851;
        Object[] v7_1852 = new Object[2];
        v7_1852[0] = "boxminus";
        v7_1852[1] = Integer.valueOf(8863);
        v5_1[720] = v7_1852;
        Object[] v7_1853 = new Object[2];
        v7_1853[0] = "boxplus";
        v7_1853[1] = Integer.valueOf(8862);
        v5_1[721] = v7_1853;
        Object[] v7_1854 = new Object[2];
        v7_1854[0] = "boxtimes";
        v7_1854[1] = Integer.valueOf(8864);
        v5_1[722] = v7_1854;
        Object[] v7_1855 = new Object[2];
        v7_1855[0] = "boxuL";
        v7_1855[1] = Integer.valueOf(9563);
        v5_1[723] = v7_1855;
        Object[] v7_1856 = new Object[2];
        v7_1856[0] = "boxuR";
        v7_1856[1] = Integer.valueOf(9560);
        v5_1[724] = v7_1856;
        Object[] v7_1857 = new Object[2];
        v7_1857[0] = "boxul";
        v7_1857[1] = Integer.valueOf(9496);
        v5_1[725] = v7_1857;
        Object[] v7_1859 = new Object[2];
        v7_1859[0] = "boxur";
        v7_1859[1] = Integer.valueOf(9492);
        v5_1[726] = v7_1859;
        Object[] v7_1860 = new Object[2];
        v7_1860[0] = "boxv";
        v7_1860[1] = Integer.valueOf(9474);
        v5_1[727] = v7_1860;
        Object[] v7_1861 = new Object[2];
        v7_1861[0] = "boxvH";
        v7_1861[1] = Integer.valueOf(9578);
        v5_1[728] = v7_1861;
        Object[] v7_1862 = new Object[2];
        v7_1862[0] = "boxvL";
        v7_1862[1] = Integer.valueOf(9569);
        v5_1[729] = v7_1862;
        Object[] v7_1863 = new Object[2];
        v7_1863[0] = "boxvR";
        v7_1863[1] = Integer.valueOf(9566);
        v5_1[730] = v7_1863;
        Object[] v7_1864 = new Object[2];
        v7_1864[0] = "boxvh";
        v7_1864[1] = Integer.valueOf(9532);
        v5_1[731] = v7_1864;
        Object[] v7_1865 = new Object[2];
        v7_1865[0] = "boxvl";
        v7_1865[1] = Integer.valueOf(9508);
        v5_1[732] = v7_1865;
        Object[] v7_1866 = new Object[2];
        v7_1866[0] = "boxvr";
        v7_1866[1] = Integer.valueOf(9500);
        v5_1[733] = v7_1866;
        Object[] v7_1868 = new Object[2];
        v7_1868[0] = "bprime";
        v7_1868[1] = Integer.valueOf(8245);
        v5_1[734] = v7_1868;
        Object[] v7_1869 = new Object[2];
        v7_1869[0] = "breve";
        v7_1869[1] = Integer.valueOf(728);
        v5_1[735] = v7_1869;
        Object[] v7_1871 = new Object[2];
        v7_1871[0] = "brvbar";
        v7_1871[1] = Integer.valueOf(166);
        v5_1[736] = v7_1871;
        Object[] v7_1872 = new Object[2];
        v7_1872[0] = "bscr";
        v7_1872[1] = Integer.valueOf(119991);
        v5_1[737] = v7_1872;
        Object[] v7_1873 = new Object[2];
        v7_1873[0] = "bsemi";
        v7_1873[1] = Integer.valueOf(8271);
        v5_1[738] = v7_1873;
        Object[] v7_1874 = new Object[2];
        v7_1874[0] = "bsim";
        v7_1874[1] = Integer.valueOf(8765);
        v5_1[739] = v7_1874;
        Object[] v7_1875 = new Object[2];
        v7_1875[0] = "bsime";
        v7_1875[1] = Integer.valueOf(8909);
        v5_1[740] = v7_1875;
        Object[] v7_1876 = new Object[2];
        v7_1876[0] = "bsol";
        v7_1876[1] = Integer.valueOf(92);
        v5_1[741] = v7_1876;
        Object[] v7_1877 = new Object[2];
        v7_1877[0] = "bsolb";
        v7_1877[1] = Integer.valueOf(10693);
        v5_1[742] = v7_1877;
        Object[] v7_1878 = new Object[2];
        v7_1878[0] = "bsolhsub";
        v7_1878[1] = Integer.valueOf(10184);
        v5_1[743] = v7_1878;
        Object[] v7_1879 = new Object[2];
        v7_1879[0] = "bull";
        v7_1879[1] = Integer.valueOf(8226);
        v5_1[744] = v7_1879;
        Object[] v7_1880 = new Object[2];
        v7_1880[0] = "bullet";
        v7_1880[1] = Integer.valueOf(8226);
        v5_1[745] = v7_1880;
        Object[] v7_1882 = new Object[2];
        v7_1882[0] = "bump";
        v7_1882[1] = Integer.valueOf(8782);
        v5_1[746] = v7_1882;
        Object[] v7_1883 = new Object[2];
        v7_1883[0] = "bumpE";
        v7_1883[1] = Integer.valueOf(10926);
        v5_1[747] = v7_1883;
        Object[] v7_1884 = new Object[2];
        v7_1884[0] = "bumpe";
        v7_1884[1] = Integer.valueOf(8783);
        v5_1[748] = v7_1884;
        Object[] v7_1885 = new Object[2];
        v7_1885[0] = "bumpeq";
        v7_1885[1] = Integer.valueOf(8783);
        v5_1[749] = v7_1885;
        Object[] v7_1886 = new Object[2];
        v7_1886[0] = "cacute";
        v7_1886[1] = Integer.valueOf(263);
        v5_1[750] = v7_1886;
        Object[] v7_1887 = new Object[2];
        v7_1887[0] = "cap";
        v7_1887[1] = Integer.valueOf(8745);
        v5_1[751] = v7_1887;
        Object[] v7_1888 = new Object[2];
        v7_1888[0] = "capand";
        v7_1888[1] = Integer.valueOf(10820);
        v5_1[752] = v7_1888;
        Object[] v7_1889 = new Object[2];
        v7_1889[0] = "capbrcup";
        v7_1889[1] = Integer.valueOf(10825);
        v5_1[753] = v7_1889;
        Object[] v7_1890 = new Object[2];
        v7_1890[0] = "capcap";
        v7_1890[1] = Integer.valueOf(10827);
        v5_1[754] = v7_1890;
        Object[] v7_1891 = new Object[2];
        v7_1891[0] = "capcup";
        v7_1891[1] = Integer.valueOf(10823);
        v5_1[755] = v7_1891;
        Object[] v7_1894 = new Object[2];
        v7_1894[0] = "capdot";
        v7_1894[1] = Integer.valueOf(10816);
        v5_1[756] = v7_1894;
        Object[] v7_1895 = new Object[2];
        v7_1895[0] = "caret";
        v7_1895[1] = Integer.valueOf(8257);
        v5_1[757] = v7_1895;
        Object[] v7_1896 = new Object[2];
        v7_1896[0] = "caron";
        v7_1896[1] = Integer.valueOf(711);
        v5_1[758] = v7_1896;
        Object[] v7_1897 = new Object[2];
        v7_1897[0] = "ccaps";
        v7_1897[1] = Integer.valueOf(10829);
        v5_1[759] = v7_1897;
        Object[] v7_1898 = new Object[2];
        v7_1898[0] = "ccaron";
        v7_1898[1] = Integer.valueOf(269);
        v5_1[760] = v7_1898;
        Object[] v7_1899 = new Object[2];
        v7_1899[0] = "ccedil";
        v7_1899[1] = Integer.valueOf(231);
        v5_1[761] = v7_1899;
        Object[] v7_1900 = new Object[2];
        v7_1900[0] = "ccirc";
        v7_1900[1] = Integer.valueOf(265);
        v5_1[762] = v7_1900;
        Object[] v7_1901 = new Object[2];
        v7_1901[0] = "ccups";
        v7_1901[1] = Integer.valueOf(10828);
        v5_1[763] = v7_1901;
        Object[] v7_1902 = new Object[2];
        v7_1902[0] = "ccupssm";
        v7_1902[1] = Integer.valueOf(10832);
        v5_1[764] = v7_1902;
        Object[] v7_1903 = new Object[2];
        v7_1903[0] = "cdot";
        v7_1903[1] = Integer.valueOf(267);
        v5_1[765] = v7_1903;
        Object[] v7_1905 = new Object[2];
        v7_1905[0] = "cedil";
        v7_1905[1] = Integer.valueOf(184);
        v5_1[766] = v7_1905;
        Object[] v7_1906 = new Object[2];
        v7_1906[0] = "cemptyv";
        v7_1906[1] = Integer.valueOf(10674);
        v5_1[767] = v7_1906;
        Object[] v7_1907 = new Object[2];
        v7_1907[0] = "cent";
        v7_1907[1] = Integer.valueOf(162);
        v5_1[768] = v7_1907;
        Object[] v7_1908 = new Object[2];
        v7_1908[0] = "centerdot";
        v7_1908[1] = Integer.valueOf(183);
        v5_1[769] = v7_1908;
        Object[] v7_1909 = new Object[2];
        v7_1909[0] = "cfr";
        v7_1909[1] = Integer.valueOf(120096);
        v5_1[770] = v7_1909;
        Object[] v7_1910 = new Object[2];
        v7_1910[0] = "chcy";
        v7_1910[1] = Integer.valueOf(1095);
        v5_1[771] = v7_1910;
        Object[] v7_1911 = new Object[2];
        v7_1911[0] = "check";
        v7_1911[1] = Integer.valueOf(10003);
        v5_1[772] = v7_1911;
        Object[] v7_1912 = new Object[2];
        v7_1912[0] = "checkmark";
        v7_1912[1] = Integer.valueOf(10003);
        v5_1[773] = v7_1912;
        Object[] v7_1913 = new Object[2];
        v7_1913[0] = "chi";
        v7_1913[1] = Integer.valueOf(967);
        v5_1[774] = v7_1913;
        Object[] v7_1914 = new Object[2];
        v7_1914[0] = "cir";
        v7_1914[1] = Integer.valueOf(9675);
        v5_1[775] = v7_1914;
        Object[] v7_1916 = new Object[2];
        v7_1916[0] = "cirE";
        v7_1916[1] = Integer.valueOf(10691);
        v5_1[776] = v7_1916;
        Object[] v7_1917 = new Object[2];
        v7_1917[0] = "circ";
        v7_1917[1] = Integer.valueOf(710);
        v5_1[777] = v7_1917;
        Object[] v7_1918 = new Object[2];
        v7_1918[0] = "circeq";
        v7_1918[1] = Integer.valueOf(8791);
        v5_1[778] = v7_1918;
        Object[] v7_1919 = new Object[2];
        v7_1919[0] = "circlearrowleft";
        v7_1919[1] = Integer.valueOf(8634);
        v5_1[779] = v7_1919;
        Object[] v7_1920 = new Object[2];
        v7_1920[0] = "circlearrowright";
        v7_1920[1] = Integer.valueOf(8635);
        v5_1[780] = v7_1920;
        Object[] v7_1921 = new Object[2];
        v7_1921[0] = "circledR";
        v7_1921[1] = Integer.valueOf(174);
        v5_1[781] = v7_1921;
        Object[] v7_1922 = new Object[2];
        v7_1922[0] = "circledS";
        v7_1922[1] = Integer.valueOf(9416);
        v5_1[782] = v7_1922;
        Object[] v7_1923 = new Object[2];
        v7_1923[0] = "circledast";
        v7_1923[1] = Integer.valueOf(8859);
        v5_1[783] = v7_1923;
        Object[] v7_1924 = new Object[2];
        v7_1924[0] = "circledcirc";
        v7_1924[1] = Integer.valueOf(8858);
        v5_1[784] = v7_1924;
        Object[] v7_1925 = new Object[2];
        v7_1925[0] = "circleddash";
        v7_1925[1] = Integer.valueOf(8861);
        v5_1[785] = v7_1925;
        Object[] v7_1927 = new Object[2];
        v7_1927[0] = "cire";
        v7_1927[1] = Integer.valueOf(8791);
        v5_1[786] = v7_1927;
        Object[] v7_1928 = new Object[2];
        v7_1928[0] = "cirfnint";
        v7_1928[1] = Integer.valueOf(10768);
        v5_1[787] = v7_1928;
        Object[] v7_1929 = new Object[2];
        v7_1929[0] = "cirmid";
        v7_1929[1] = Integer.valueOf(10991);
        v5_1[788] = v7_1929;
        Object[] v7_1930 = new Object[2];
        v7_1930[0] = "cirscir";
        v7_1930[1] = Integer.valueOf(10690);
        v5_1[789] = v7_1930;
        Object[] v7_1931 = new Object[2];
        v7_1931[0] = "clubs";
        v7_1931[1] = Integer.valueOf(9827);
        v5_1[790] = v7_1931;
        Object[] v7_1932 = new Object[2];
        v7_1932[0] = "clubsuit";
        v7_1932[1] = Integer.valueOf(9827);
        v5_1[791] = v7_1932;
        Object[] v7_1933 = new Object[2];
        v7_1933[0] = "colon";
        v7_1933[1] = Integer.valueOf(58);
        v5_1[792] = v7_1933;
        Object[] v7_1934 = new Object[2];
        v7_1934[0] = "colone";
        v7_1934[1] = Integer.valueOf(8788);
        v5_1[793] = v7_1934;
        Object[] v7_1935 = new Object[2];
        v7_1935[0] = "coloneq";
        v7_1935[1] = Integer.valueOf(8788);
        v5_1[794] = v7_1935;
        Object[] v7_1936 = new Object[2];
        v7_1936[0] = "comma";
        v7_1936[1] = Integer.valueOf(44);
        v5_1[795] = v7_1936;
        Object[] v7_1938 = new Object[2];
        v7_1938[0] = "commat";
        v7_1938[1] = Integer.valueOf(64);
        v5_1[796] = v7_1938;
        Object[] v7_1939 = new Object[2];
        v7_1939[0] = "comp";
        v7_1939[1] = Integer.valueOf(8705);
        v5_1[797] = v7_1939;
        Object[] v7_1940 = new Object[2];
        v7_1940[0] = "compfn";
        v7_1940[1] = Integer.valueOf(8728);
        v5_1[798] = v7_1940;
        Object[] v7_1941 = new Object[2];
        v7_1941[0] = "complement";
        v7_1941[1] = Integer.valueOf(8705);
        v5_1[799] = v7_1941;
        Object[] v7_1942 = new Object[2];
        v7_1942[0] = "complexes";
        v7_1942[1] = Integer.valueOf(8450);
        v5_1[800] = v7_1942;
        Object[] v7_1944 = new Object[2];
        v7_1944[0] = "cong";
        v7_1944[1] = Integer.valueOf(8773);
        v5_1[801] = v7_1944;
        Object[] v7_1945 = new Object[2];
        v7_1945[0] = "congdot";
        v7_1945[1] = Integer.valueOf(10861);
        v5_1[802] = v7_1945;
        Object[] v7_1946 = new Object[2];
        v7_1946[0] = "conint";
        v7_1946[1] = Integer.valueOf(8750);
        v5_1[803] = v7_1946;
        Object[] v7_1947 = new Object[2];
        v7_1947[0] = "copf";
        v7_1947[1] = Integer.valueOf(120148);
        v5_1[804] = v7_1947;
        Object[] v7_1948 = new Object[2];
        v7_1948[0] = "coprod";
        v7_1948[1] = Integer.valueOf(8720);
        v5_1[805] = v7_1948;
        Object[] v7_1950 = new Object[2];
        v7_1950[0] = "copy";
        v7_1950[1] = Integer.valueOf(169);
        v5_1[806] = v7_1950;
        Object[] v7_1951 = new Object[2];
        v7_1951[0] = "copysr";
        v7_1951[1] = Integer.valueOf(8471);
        v5_1[807] = v7_1951;
        Object[] v7_1952 = new Object[2];
        v7_1952[0] = "crarr";
        v7_1952[1] = Integer.valueOf(8629);
        v5_1[808] = v7_1952;
        Object[] v7_1953 = new Object[2];
        v7_1953[0] = "cross";
        v7_1953[1] = Integer.valueOf(10007);
        v5_1[809] = v7_1953;
        Object[] v7_1954 = new Object[2];
        v7_1954[0] = "cscr";
        v7_1954[1] = Integer.valueOf(119992);
        v5_1[810] = v7_1954;
        Object[] v7_1955 = new Object[2];
        v7_1955[0] = "csub";
        v7_1955[1] = Integer.valueOf(10959);
        v5_1[811] = v7_1955;
        Object[] v7_1956 = new Object[2];
        v7_1956[0] = "csube";
        v7_1956[1] = Integer.valueOf(10961);
        v5_1[812] = v7_1956;
        Object[] v7_1957 = new Object[2];
        v7_1957[0] = "csup";
        v7_1957[1] = Integer.valueOf(10960);
        v5_1[813] = v7_1957;
        Object[] v7_1958 = new Object[2];
        v7_1958[0] = "csupe";
        v7_1958[1] = Integer.valueOf(10962);
        v5_1[814] = v7_1958;
        Object[] v7_1959 = new Object[2];
        v7_1959[0] = "ctdot";
        v7_1959[1] = Integer.valueOf(8943);
        v5_1[815] = v7_1959;
        Object[] v7_1961 = new Object[2];
        v7_1961[0] = "cudarrl";
        v7_1961[1] = Integer.valueOf(10552);
        v5_1[816] = v7_1961;
        Object[] v7_1962 = new Object[2];
        v7_1962[0] = "cudarrr";
        v7_1962[1] = Integer.valueOf(10549);
        v5_1[817] = v7_1962;
        Object[] v7_1963 = new Object[2];
        v7_1963[0] = "cuepr";
        v7_1963[1] = Integer.valueOf(8926);
        v5_1[818] = v7_1963;
        Object[] v7_1964 = new Object[2];
        v7_1964[0] = "cuesc";
        v7_1964[1] = Integer.valueOf(8927);
        v5_1[819] = v7_1964;
        Object[] v7_1965 = new Object[2];
        v7_1965[0] = "cularr";
        v7_1965[1] = Integer.valueOf(8630);
        v5_1[820] = v7_1965;
        Object[] v7_1966 = new Object[2];
        v7_1966[0] = "cularrp";
        v7_1966[1] = Integer.valueOf(10557);
        v5_1[821] = v7_1966;
        Object[] v7_1967 = new Object[2];
        v7_1967[0] = "cup";
        v7_1967[1] = Integer.valueOf(8746);
        v5_1[822] = v7_1967;
        Object[] v7_1968 = new Object[2];
        v7_1968[0] = "cupbrcap";
        v7_1968[1] = Integer.valueOf(10824);
        v5_1[823] = v7_1968;
        Object[] v7_1969 = new Object[2];
        v7_1969[0] = "cupcap";
        v7_1969[1] = Integer.valueOf(10822);
        v5_1[824] = v7_1969;
        Object[] v7_1971 = new Object[2];
        v7_1971[0] = "cupcup";
        v7_1971[1] = Integer.valueOf(10826);
        v5_1[825] = v7_1971;
        Object[] v7_1972 = new Object[2];
        v7_1972[0] = "cupdot";
        v7_1972[1] = Integer.valueOf(8845);
        v5_1[826] = v7_1972;
        Object[] v7_1973 = new Object[2];
        v7_1973[0] = "cupor";
        v7_1973[1] = Integer.valueOf(10821);
        v5_1[827] = v7_1973;
        Object[] v7_1974 = new Object[2];
        v7_1974[0] = "curarr";
        v7_1974[1] = Integer.valueOf(8631);
        v5_1[828] = v7_1974;
        Object[] v7_1975 = new Object[2];
        v7_1975[0] = "curarrm";
        v7_1975[1] = Integer.valueOf(10556);
        v5_1[829] = v7_1975;
        Object[] v7_1976 = new Object[2];
        v7_1976[0] = "curlyeqprec";
        v7_1976[1] = Integer.valueOf(8926);
        v5_1[830] = v7_1976;
        Object[] v7_1977 = new Object[2];
        v7_1977[0] = "curlyeqsucc";
        v7_1977[1] = Integer.valueOf(8927);
        v5_1[831] = v7_1977;
        Object[] v7_1978 = new Object[2];
        v7_1978[0] = "curlyvee";
        v7_1978[1] = Integer.valueOf(8910);
        v5_1[832] = v7_1978;
        Object[] v7_1979 = new Object[2];
        v7_1979[0] = "curlywedge";
        v7_1979[1] = Integer.valueOf(8911);
        v5_1[833] = v7_1979;
        Object[] v7_1980 = new Object[2];
        v7_1980[0] = "curren";
        v7_1980[1] = Integer.valueOf(164);
        v5_1[834] = v7_1980;
        Object[] v7_1982 = new Object[2];
        v7_1982[0] = "curvearrowleft";
        v7_1982[1] = Integer.valueOf(8630);
        v5_1[835] = v7_1982;
        Object[] v7_1983 = new Object[2];
        v7_1983[0] = "curvearrowright";
        v7_1983[1] = Integer.valueOf(8631);
        v5_1[836] = v7_1983;
        Object[] v7_1984 = new Object[2];
        v7_1984[0] = "cuvee";
        v7_1984[1] = Integer.valueOf(8910);
        v5_1[837] = v7_1984;
        Object[] v7_1985 = new Object[2];
        v7_1985[0] = "cuwed";
        v7_1985[1] = Integer.valueOf(8911);
        v5_1[838] = v7_1985;
        Object[] v7_1986 = new Object[2];
        v7_1986[0] = "cwconint";
        v7_1986[1] = Integer.valueOf(8754);
        v5_1[839] = v7_1986;
        Object[] v7_1987 = new Object[2];
        v7_1987[0] = "cwint";
        v7_1987[1] = Integer.valueOf(8753);
        v5_1[840] = v7_1987;
        Object[] v7_1988 = new Object[2];
        v7_1988[0] = "cylcty";
        v7_1988[1] = Integer.valueOf(9005);
        v5_1[841] = v7_1988;
        Object[] v7_1989 = new Object[2];
        v7_1989[0] = "dArr";
        v7_1989[1] = Integer.valueOf(8659);
        v5_1[842] = v7_1989;
        Object[] v7_1990 = new Object[2];
        v7_1990[0] = "dHar";
        v7_1990[1] = Integer.valueOf(10597);
        v5_1[843] = v7_1990;
        Object[] v7_1991 = new Object[2];
        v7_1991[0] = "dagger";
        v7_1991[1] = Integer.valueOf(8224);
        v5_1[844] = v7_1991;
        Object[] v7_1993 = new Object[2];
        v7_1993[0] = "daleth";
        v7_1993[1] = Integer.valueOf(8504);
        v5_1[845] = v7_1993;
        Object[] v7_1994 = new Object[2];
        v7_1994[0] = "darr";
        v7_1994[1] = Integer.valueOf(8595);
        v5_1[846] = v7_1994;
        Object[] v7_1995 = new Object[2];
        v7_1995[0] = "dash";
        v7_1995[1] = Integer.valueOf(8208);
        v5_1[847] = v7_1995;
        Object[] v7_1996 = new Object[2];
        v7_1996[0] = "dashv";
        v7_1996[1] = Integer.valueOf(8867);
        v5_1[848] = v7_1996;
        Object[] v7_1997 = new Object[2];
        v7_1997[0] = "dbkarow";
        v7_1997[1] = Integer.valueOf(10511);
        v5_1[849] = v7_1997;
        Object[] v7_1998 = new Object[2];
        v7_1998[0] = "dblac";
        v7_1998[1] = Integer.valueOf(733);
        v5_1[850] = v7_1998;
        Object[] v7_1999 = new Object[2];
        v7_1999[0] = "dcaron";
        v7_1999[1] = Integer.valueOf(271);
        v5_1[851] = v7_1999;
        Object[] v7_2000 = new Object[2];
        v7_2000[0] = "dcy";
        v7_2000[1] = Integer.valueOf(1076);
        v5_1[852] = v7_2000;
        Object[] v7_2001 = new Object[2];
        v7_2001[0] = "dd";
        v7_2001[1] = Integer.valueOf(8518);
        v5_1[853] = v7_2001;
        Object[] v7_2002 = new Object[2];
        v7_2002[0] = "ddagger";
        v7_2002[1] = Integer.valueOf(8225);
        v5_1[854] = v7_2002;
        Object[] v7_2004 = new Object[2];
        v7_2004[0] = "ddarr";
        v7_2004[1] = Integer.valueOf(8650);
        v5_1[855] = v7_2004;
        Object[] v7_2005 = new Object[2];
        v7_2005[0] = "ddotseq";
        v7_2005[1] = Integer.valueOf(10871);
        v5_1[856] = v7_2005;
        Object[] v7_2006 = new Object[2];
        v7_2006[0] = "deg";
        v7_2006[1] = Integer.valueOf(176);
        v5_1[857] = v7_2006;
        Object[] v7_2007 = new Object[2];
        v7_2007[0] = "delta";
        v7_2007[1] = Integer.valueOf(948);
        v5_1[858] = v7_2007;
        Object[] v7_2008 = new Object[2];
        v7_2008[0] = "demptyv";
        v7_2008[1] = Integer.valueOf(10673);
        v5_1[859] = v7_2008;
        Object[] v7_2009 = new Object[2];
        v7_2009[0] = "dfisht";
        v7_2009[1] = Integer.valueOf(10623);
        v5_1[860] = v7_2009;
        Object[] v7_2010 = new Object[2];
        v7_2010[0] = "dfr";
        v7_2010[1] = Integer.valueOf(120097);
        v5_1[861] = v7_2010;
        Object[] v7_2011 = new Object[2];
        v7_2011[0] = "dharl";
        v7_2011[1] = Integer.valueOf(8643);
        v5_1[862] = v7_2011;
        Object[] v7_2012 = new Object[2];
        v7_2012[0] = "dharr";
        v7_2012[1] = Integer.valueOf(8642);
        v5_1[863] = v7_2012;
        Object[] v7_2013 = new Object[2];
        v7_2013[0] = "diam";
        v7_2013[1] = Integer.valueOf(8900);
        v5_1[864] = v7_2013;
        Object[] v7_2015 = new Object[2];
        v7_2015[0] = "diamond";
        v7_2015[1] = Integer.valueOf(8900);
        v5_1[865] = v7_2015;
        Object[] v7_2016 = new Object[2];
        v7_2016[0] = "diamondsuit";
        v7_2016[1] = Integer.valueOf(9830);
        v5_1[866] = v7_2016;
        Object[] v7_2017 = new Object[2];
        v7_2017[0] = "diams";
        v7_2017[1] = Integer.valueOf(9830);
        v5_1[867] = v7_2017;
        Object[] v7_2018 = new Object[2];
        v7_2018[0] = "die";
        v7_2018[1] = Integer.valueOf(168);
        v5_1[868] = v7_2018;
        Object[] v7_2019 = new Object[2];
        v7_2019[0] = "digamma";
        v7_2019[1] = Integer.valueOf(989);
        v5_1[869] = v7_2019;
        Object[] v7_2020 = new Object[2];
        v7_2020[0] = "disin";
        v7_2020[1] = Integer.valueOf(8946);
        v5_1[870] = v7_2020;
        Object[] v7_2021 = new Object[2];
        v7_2021[0] = "div";
        v7_2021[1] = Integer.valueOf(247);
        v5_1[871] = v7_2021;
        Object[] v7_2022 = new Object[2];
        v7_2022[0] = "divide";
        v7_2022[1] = Integer.valueOf(247);
        v5_1[872] = v7_2022;
        Object[] v7_2023 = new Object[2];
        v7_2023[0] = "divideontimes";
        v7_2023[1] = Integer.valueOf(8903);
        v5_1[873] = v7_2023;
        Object[] v7_2024 = new Object[2];
        v7_2024[0] = "divonx";
        v7_2024[1] = Integer.valueOf(8903);
        v5_1[874] = v7_2024;
        Object[] v7_2026 = new Object[2];
        v7_2026[0] = "djcy";
        v7_2026[1] = Integer.valueOf(1106);
        v5_1[875] = v7_2026;
        Object[] v7_2027 = new Object[2];
        v7_2027[0] = "dlcorn";
        v7_2027[1] = Integer.valueOf(8990);
        v5_1[876] = v7_2027;
        Object[] v7_2028 = new Object[2];
        v7_2028[0] = "dlcrop";
        v7_2028[1] = Integer.valueOf(8973);
        v5_1[877] = v7_2028;
        Object[] v7_2029 = new Object[2];
        v7_2029[0] = "dollar";
        v7_2029[1] = Integer.valueOf(36);
        v5_1[878] = v7_2029;
        Object[] v7_2030 = new Object[2];
        v7_2030[0] = "dopf";
        v7_2030[1] = Integer.valueOf(120149);
        v5_1[879] = v7_2030;
        Object[] v7_2031 = new Object[2];
        v7_2031[0] = "dot";
        v7_2031[1] = Integer.valueOf(729);
        v5_1[880] = v7_2031;
        Object[] v7_2032 = new Object[2];
        v7_2032[0] = "doteq";
        v7_2032[1] = Integer.valueOf(8784);
        v5_1[881] = v7_2032;
        Object[] v7_2033 = new Object[2];
        v7_2033[0] = "doteqdot";
        v7_2033[1] = Integer.valueOf(8785);
        v5_1[882] = v7_2033;
        Object[] v7_2034 = new Object[2];
        v7_2034[0] = "dotminus";
        v7_2034[1] = Integer.valueOf(8760);
        v5_1[883] = v7_2034;
        Object[] v7_2035 = new Object[2];
        v7_2035[0] = "dotplus";
        v7_2035[1] = Integer.valueOf(8724);
        v5_1[884] = v7_2035;
        Object[] v7_2037 = new Object[2];
        v7_2037[0] = "dotsquare";
        v7_2037[1] = Integer.valueOf(8865);
        v5_1[885] = v7_2037;
        Object[] v7_2038 = new Object[2];
        v7_2038[0] = "doublebarwedge";
        v7_2038[1] = Integer.valueOf(8966);
        v5_1[886] = v7_2038;
        Object[] v7_2039 = new Object[2];
        v7_2039[0] = "downarrow";
        v7_2039[1] = Integer.valueOf(8595);
        v5_1[887] = v7_2039;
        Object[] v7_2040 = new Object[2];
        v7_2040[0] = "downdownarrows";
        v7_2040[1] = Integer.valueOf(8650);
        v5_1[888] = v7_2040;
        Object[] v7_2041 = new Object[2];
        v7_2041[0] = "downharpoonleft";
        v7_2041[1] = Integer.valueOf(8643);
        v5_1[889] = v7_2041;
        Object[] v7_2042 = new Object[2];
        v7_2042[0] = "downharpoonright";
        v7_2042[1] = Integer.valueOf(8642);
        v5_1[890] = v7_2042;
        Object[] v7_2043 = new Object[2];
        v7_2043[0] = "drbkarow";
        v7_2043[1] = Integer.valueOf(10512);
        v5_1[891] = v7_2043;
        Object[] v7_2044 = new Object[2];
        v7_2044[0] = "drcorn";
        v7_2044[1] = Integer.valueOf(8991);
        v5_1[892] = v7_2044;
        Object[] v7_2045 = new Object[2];
        v7_2045[0] = "drcrop";
        v7_2045[1] = Integer.valueOf(8972);
        v5_1[893] = v7_2045;
        Object[] v7_2046 = new Object[2];
        v7_2046[0] = "dscr";
        v7_2046[1] = Integer.valueOf(119993);
        v5_1[894] = v7_2046;
        Object[] v7_2048 = new Object[2];
        v7_2048[0] = "dscy";
        v7_2048[1] = Integer.valueOf(1109);
        v5_1[895] = v7_2048;
        Object[] v7_2049 = new Object[2];
        v7_2049[0] = "dsol";
        v7_2049[1] = Integer.valueOf(10742);
        v5_1[896] = v7_2049;
        Object[] v7_2050 = new Object[2];
        v7_2050[0] = "dstrok";
        v7_2050[1] = Integer.valueOf(273);
        v5_1[897] = v7_2050;
        Object[] v7_2051 = new Object[2];
        v7_2051[0] = "dtdot";
        v7_2051[1] = Integer.valueOf(8945);
        v5_1[898] = v7_2051;
        Object[] v7_2052 = new Object[2];
        v7_2052[0] = "dtri";
        v7_2052[1] = Integer.valueOf(9663);
        v5_1[899] = v7_2052;
        Object[] v7_2053 = new Object[2];
        v7_2053[0] = "dtrif";
        v7_2053[1] = Integer.valueOf(9662);
        v5_1[900] = v7_2053;
        Object[] v7_2055 = new Object[2];
        v7_2055[0] = "duarr";
        v7_2055[1] = Integer.valueOf(8693);
        v5_1[901] = v7_2055;
        Object[] v7_2056 = new Object[2];
        v7_2056[0] = "duhar";
        v7_2056[1] = Integer.valueOf(10607);
        v5_1[902] = v7_2056;
        Object[] v7_2057 = new Object[2];
        v7_2057[0] = "dwangle";
        v7_2057[1] = Integer.valueOf(10662);
        v5_1[903] = v7_2057;
        Object[] v7_2058 = new Object[2];
        v7_2058[0] = "dzcy";
        v7_2058[1] = Integer.valueOf(1119);
        v5_1[904] = v7_2058;
        Object[] v7_2060 = new Object[2];
        v7_2060[0] = "dzigrarr";
        v7_2060[1] = Integer.valueOf(10239);
        v5_1[905] = v7_2060;
        Object[] v7_2061 = new Object[2];
        v7_2061[0] = "eDDot";
        v7_2061[1] = Integer.valueOf(10871);
        v5_1[906] = v7_2061;
        Object[] v7_2062 = new Object[2];
        v7_2062[0] = "eDot";
        v7_2062[1] = Integer.valueOf(8785);
        v5_1[907] = v7_2062;
        Object[] v7_2063 = new Object[2];
        v7_2063[0] = "eacute";
        v7_2063[1] = Integer.valueOf(233);
        v5_1[908] = v7_2063;
        Object[] v7_2064 = new Object[2];
        v7_2064[0] = "easter";
        v7_2064[1] = Integer.valueOf(10862);
        v5_1[909] = v7_2064;
        Object[] v7_2065 = new Object[2];
        v7_2065[0] = "ecaron";
        v7_2065[1] = Integer.valueOf(283);
        v5_1[910] = v7_2065;
        Object[] v7_2066 = new Object[2];
        v7_2066[0] = "ecir";
        v7_2066[1] = Integer.valueOf(8790);
        v5_1[911] = v7_2066;
        Object[] v7_2067 = new Object[2];
        v7_2067[0] = "ecirc";
        v7_2067[1] = Integer.valueOf(234);
        v5_1[912] = v7_2067;
        Object[] v7_2068 = new Object[2];
        v7_2068[0] = "ecolon";
        v7_2068[1] = Integer.valueOf(8789);
        v5_1[913] = v7_2068;
        Object[] v7_2069 = new Object[2];
        v7_2069[0] = "ecy";
        v7_2069[1] = Integer.valueOf(1101);
        v5_1[914] = v7_2069;
        Object[] v7_2071 = new Object[2];
        v7_2071[0] = "edot";
        v7_2071[1] = Integer.valueOf(279);
        v5_1[915] = v7_2071;
        Object[] v7_2072 = new Object[2];
        v7_2072[0] = "ee";
        v7_2072[1] = Integer.valueOf(8519);
        v5_1[916] = v7_2072;
        Object[] v7_2073 = new Object[2];
        v7_2073[0] = "efDot";
        v7_2073[1] = Integer.valueOf(8786);
        v5_1[917] = v7_2073;
        Object[] v7_2074 = new Object[2];
        v7_2074[0] = "efr";
        v7_2074[1] = Integer.valueOf(120098);
        v5_1[918] = v7_2074;
        Object[] v7_2075 = new Object[2];
        v7_2075[0] = "eg";
        v7_2075[1] = Integer.valueOf(10906);
        v5_1[919] = v7_2075;
        Object[] v7_2076 = new Object[2];
        v7_2076[0] = "egrave";
        v7_2076[1] = Integer.valueOf(232);
        v5_1[920] = v7_2076;
        Object[] v7_2077 = new Object[2];
        v7_2077[0] = "egs";
        v7_2077[1] = Integer.valueOf(10902);
        v5_1[921] = v7_2077;
        Object[] v7_2078 = new Object[2];
        v7_2078[0] = "egsdot";
        v7_2078[1] = Integer.valueOf(10904);
        v5_1[922] = v7_2078;
        Object[] v7_2079 = new Object[2];
        v7_2079[0] = "el";
        v7_2079[1] = Integer.valueOf(10905);
        v5_1[923] = v7_2079;
        Object[] v7_2080 = new Object[2];
        v7_2080[0] = "elinters";
        v7_2080[1] = Integer.valueOf(9191);
        v5_1[924] = v7_2080;
        Object[] v7_2082 = new Object[2];
        v7_2082[0] = "ell";
        v7_2082[1] = Integer.valueOf(8467);
        v5_1[925] = v7_2082;
        Object[] v7_2083 = new Object[2];
        v7_2083[0] = "els";
        v7_2083[1] = Integer.valueOf(10901);
        v5_1[926] = v7_2083;
        Object[] v7_2084 = new Object[2];
        v7_2084[0] = "elsdot";
        v7_2084[1] = Integer.valueOf(10903);
        v5_1[927] = v7_2084;
        Object[] v7_2085 = new Object[2];
        v7_2085[0] = "emacr";
        v7_2085[1] = Integer.valueOf(275);
        v5_1[928] = v7_2085;
        Object[] v7_2086 = new Object[2];
        v7_2086[0] = "empty";
        v7_2086[1] = Integer.valueOf(8709);
        v5_1[929] = v7_2086;
        Object[] v7_2087 = new Object[2];
        v7_2087[0] = "emptyset";
        v7_2087[1] = Integer.valueOf(8709);
        v5_1[930] = v7_2087;
        Object[] v7_2088 = new Object[2];
        v7_2088[0] = "emptyv";
        v7_2088[1] = Integer.valueOf(8709);
        v5_1[931] = v7_2088;
        Object[] v7_2089 = new Object[2];
        v7_2089[0] = "emsp13";
        v7_2089[1] = Integer.valueOf(8196);
        v5_1[932] = v7_2089;
        Object[] v7_2090 = new Object[2];
        v7_2090[0] = "emsp14";
        v7_2090[1] = Integer.valueOf(8197);
        v5_1[933] = v7_2090;
        Object[] v7_2091 = new Object[2];
        v7_2091[0] = "emsp";
        v7_2091[1] = Integer.valueOf(8195);
        v5_1[934] = v7_2091;
        Object[] v7_2093 = new Object[2];
        v7_2093[0] = "eng";
        v7_2093[1] = Integer.valueOf(331);
        v5_1[935] = v7_2093;
        Object[] v7_2094 = new Object[2];
        v7_2094[0] = "ensp";
        v7_2094[1] = Integer.valueOf(8194);
        v5_1[936] = v7_2094;
        Object[] v7_2095 = new Object[2];
        v7_2095[0] = "eogon";
        v7_2095[1] = Integer.valueOf(281);
        v5_1[937] = v7_2095;
        Object[] v7_2096 = new Object[2];
        v7_2096[0] = "eopf";
        v7_2096[1] = Integer.valueOf(120150);
        v5_1[938] = v7_2096;
        Object[] v7_2097 = new Object[2];
        v7_2097[0] = "epar";
        v7_2097[1] = Integer.valueOf(8917);
        v5_1[939] = v7_2097;
        Object[] v7_2098 = new Object[2];
        v7_2098[0] = "eparsl";
        v7_2098[1] = Integer.valueOf(10723);
        v5_1[940] = v7_2098;
        Object[] v7_2099 = new Object[2];
        v7_2099[0] = "eplus";
        v7_2099[1] = Integer.valueOf(10865);
        v5_1[941] = v7_2099;
        Object[] v7_2100 = new Object[2];
        v7_2100[0] = "epsi";
        v7_2100[1] = Integer.valueOf(949);
        v5_1[942] = v7_2100;
        Object[] v7_2101 = new Object[2];
        v7_2101[0] = "epsilon";
        v7_2101[1] = Integer.valueOf(949);
        v5_1[943] = v7_2101;
        Object[] v7_2102 = new Object[2];
        v7_2102[0] = "epsiv";
        v7_2102[1] = Integer.valueOf(1013);
        v5_1[944] = v7_2102;
        Object[] v7_2104 = new Object[2];
        v7_2104[0] = "eqcirc";
        v7_2104[1] = Integer.valueOf(8790);
        v5_1[945] = v7_2104;
        Object[] v7_2105 = new Object[2];
        v7_2105[0] = "eqcolon";
        v7_2105[1] = Integer.valueOf(8789);
        v5_1[946] = v7_2105;
        Object[] v7_2106 = new Object[2];
        v7_2106[0] = "eqsim";
        v7_2106[1] = Integer.valueOf(8770);
        v5_1[947] = v7_2106;
        Object[] v7_2107 = new Object[2];
        v7_2107[0] = "eqslantgtr";
        v7_2107[1] = Integer.valueOf(10902);
        v5_1[948] = v7_2107;
        Object[] v7_2108 = new Object[2];
        v7_2108[0] = "eqslantless";
        v7_2108[1] = Integer.valueOf(10901);
        v5_1[949] = v7_2108;
        Object[] v7_2109 = new Object[2];
        v7_2109[0] = "equals";
        v7_2109[1] = Integer.valueOf(61);
        v5_1[950] = v7_2109;
        Object[] v7_2110 = new Object[2];
        v7_2110[0] = "equest";
        v7_2110[1] = Integer.valueOf(8799);
        v5_1[951] = v7_2110;
        Object[] v7_2111 = new Object[2];
        v7_2111[0] = "equiv";
        v7_2111[1] = Integer.valueOf(8801);
        v5_1[952] = v7_2111;
        Object[] v7_2112 = new Object[2];
        v7_2112[0] = "equivDD";
        v7_2112[1] = Integer.valueOf(10872);
        v5_1[953] = v7_2112;
        Object[] v7_2113 = new Object[2];
        v7_2113[0] = "eqvparsl";
        v7_2113[1] = Integer.valueOf(10725);
        v5_1[954] = v7_2113;
        Object[] v7_2115 = new Object[2];
        v7_2115[0] = "erDot";
        v7_2115[1] = Integer.valueOf(8787);
        v5_1[955] = v7_2115;
        Object[] v7_2116 = new Object[2];
        v7_2116[0] = "erarr";
        v7_2116[1] = Integer.valueOf(10609);
        v5_1[956] = v7_2116;
        Object[] v7_2117 = new Object[2];
        v7_2117[0] = "escr";
        v7_2117[1] = Integer.valueOf(8495);
        v5_1[957] = v7_2117;
        Object[] v7_2118 = new Object[2];
        v7_2118[0] = "esdot";
        v7_2118[1] = Integer.valueOf(8784);
        v5_1[958] = v7_2118;
        Object[] v7_2119 = new Object[2];
        v7_2119[0] = "esim";
        v7_2119[1] = Integer.valueOf(8770);
        v5_1[959] = v7_2119;
        Object[] v7_2120 = new Object[2];
        v7_2120[0] = "eta";
        v7_2120[1] = Integer.valueOf(951);
        v5_1[960] = v7_2120;
        Object[] v7_2121 = new Object[2];
        v7_2121[0] = "eth";
        v7_2121[1] = Integer.valueOf(240);
        v5_1[961] = v7_2121;
        Object[] v7_2122 = new Object[2];
        v7_2122[0] = "euml";
        v7_2122[1] = Integer.valueOf(235);
        v5_1[962] = v7_2122;
        Object[] v7_2123 = new Object[2];
        v7_2123[0] = "euro";
        v7_2123[1] = Integer.valueOf(8364);
        v5_1[963] = v7_2123;
        Object[] v7_2124 = new Object[2];
        v7_2124[0] = "excl";
        v7_2124[1] = Integer.valueOf(33);
        v5_1[964] = v7_2124;
        Object[] v7_2126 = new Object[2];
        v7_2126[0] = "exist";
        v7_2126[1] = Integer.valueOf(8707);
        v5_1[965] = v7_2126;
        Object[] v7_2127 = new Object[2];
        v7_2127[0] = "expectation";
        v7_2127[1] = Integer.valueOf(8496);
        v5_1[966] = v7_2127;
        Object[] v7_2128 = new Object[2];
        v7_2128[0] = "exponentiale";
        v7_2128[1] = Integer.valueOf(8519);
        v5_1[967] = v7_2128;
        Object[] v7_2129 = new Object[2];
        v7_2129[0] = "fallingdotseq";
        v7_2129[1] = Integer.valueOf(8786);
        v5_1[968] = v7_2129;
        Object[] v7_2130 = new Object[2];
        v7_2130[0] = "fcy";
        v7_2130[1] = Integer.valueOf(1092);
        v5_1[969] = v7_2130;
        Object[] v7_2131 = new Object[2];
        v7_2131[0] = "female";
        v7_2131[1] = Integer.valueOf(9792);
        v5_1[970] = v7_2131;
        Object[] v7_2132 = new Object[2];
        v7_2132[0] = "ffilig";
        v7_2132[1] = Integer.valueOf(64259);
        v5_1[971] = v7_2132;
        Object[] v7_2133 = new Object[2];
        v7_2133[0] = "fflig";
        v7_2133[1] = Integer.valueOf(64256);
        v5_1[972] = v7_2133;
        Object[] v7_2134 = new Object[2];
        v7_2134[0] = "ffllig";
        v7_2134[1] = Integer.valueOf(64260);
        v5_1[973] = v7_2134;
        Object[] v7_2135 = new Object[2];
        v7_2135[0] = "ffr";
        v7_2135[1] = Integer.valueOf(120099);
        v5_1[974] = v7_2135;
        Object[] v7_2137 = new Object[2];
        v7_2137[0] = "filig";
        v7_2137[1] = Integer.valueOf(64257);
        v5_1[975] = v7_2137;
        Object[] v7_2138 = new Object[2];
        v7_2138[0] = "flat";
        v7_2138[1] = Integer.valueOf(9837);
        v5_1[976] = v7_2138;
        Object[] v7_2139 = new Object[2];
        v7_2139[0] = "fllig";
        v7_2139[1] = Integer.valueOf(64258);
        v5_1[977] = v7_2139;
        Object[] v7_2140 = new Object[2];
        v7_2140[0] = "fltns";
        v7_2140[1] = Integer.valueOf(9649);
        v5_1[978] = v7_2140;
        Object[] v7_2141 = new Object[2];
        v7_2141[0] = "fnof";
        v7_2141[1] = Integer.valueOf(402);
        v5_1[979] = v7_2141;
        Object[] v7_2142 = new Object[2];
        v7_2142[0] = "fopf";
        v7_2142[1] = Integer.valueOf(120151);
        v5_1[980] = v7_2142;
        Object[] v7_2143 = new Object[2];
        v7_2143[0] = "forall";
        v7_2143[1] = Integer.valueOf(8704);
        v5_1[981] = v7_2143;
        Object[] v7_2144 = new Object[2];
        v7_2144[0] = "fork";
        v7_2144[1] = Integer.valueOf(8916);
        v5_1[982] = v7_2144;
        Object[] v7_2145 = new Object[2];
        v7_2145[0] = "forkv";
        v7_2145[1] = Integer.valueOf(10969);
        v5_1[983] = v7_2145;
        Object[] v7_2146 = new Object[2];
        v7_2146[0] = "fpartint";
        v7_2146[1] = Integer.valueOf(10765);
        v5_1[984] = v7_2146;
        Object[] v7_2148 = new Object[2];
        v7_2148[0] = "frac12";
        v7_2148[1] = Integer.valueOf(189);
        v5_1[985] = v7_2148;
        Object[] v7_2149 = new Object[2];
        v7_2149[0] = "frac13";
        v7_2149[1] = Integer.valueOf(8531);
        v5_1[986] = v7_2149;
        Object[] v7_2150 = new Object[2];
        v7_2150[0] = "frac14";
        v7_2150[1] = Integer.valueOf(188);
        v5_1[987] = v7_2150;
        Object[] v7_2151 = new Object[2];
        v7_2151[0] = "frac15";
        v7_2151[1] = Integer.valueOf(8533);
        v5_1[988] = v7_2151;
        Object[] v7_2152 = new Object[2];
        v7_2152[0] = "frac16";
        v7_2152[1] = Integer.valueOf(8537);
        v5_1[989] = v7_2152;
        Object[] v7_2153 = new Object[2];
        v7_2153[0] = "frac18";
        v7_2153[1] = Integer.valueOf(8539);
        v5_1[990] = v7_2153;
        Object[] v7_2154 = new Object[2];
        v7_2154[0] = "frac23";
        v7_2154[1] = Integer.valueOf(8532);
        v5_1[991] = v7_2154;
        Object[] v7_2155 = new Object[2];
        v7_2155[0] = "frac25";
        v7_2155[1] = Integer.valueOf(8534);
        v5_1[992] = v7_2155;
        Object[] v7_2156 = new Object[2];
        v7_2156[0] = "frac34";
        v7_2156[1] = Integer.valueOf(190);
        v5_1[993] = v7_2156;
        Object[] v7_2157 = new Object[2];
        v7_2157[0] = "frac35";
        v7_2157[1] = Integer.valueOf(8535);
        v5_1[994] = v7_2157;
        Object[] v7_2159 = new Object[2];
        v7_2159[0] = "frac38";
        v7_2159[1] = Integer.valueOf(8540);
        v5_1[995] = v7_2159;
        Object[] v7_2160 = new Object[2];
        v7_2160[0] = "frac45";
        v7_2160[1] = Integer.valueOf(8536);
        v5_1[996] = v7_2160;
        Object[] v7_2161 = new Object[2];
        v7_2161[0] = "frac56";
        v7_2161[1] = Integer.valueOf(8538);
        v5_1[997] = v7_2161;
        Object[] v7_2162 = new Object[2];
        v7_2162[0] = "frac58";
        v7_2162[1] = Integer.valueOf(8541);
        v5_1[998] = v7_2162;
        Object[] v7_2163 = new Object[2];
        v7_2163[0] = "frac78";
        v7_2163[1] = Integer.valueOf(8542);
        v5_1[999] = v7_2163;
        Object[] v7_2164 = new Object[2];
        v7_2164[0] = "frasl";
        v7_2164[1] = Integer.valueOf(8260);
        v5_1[1000] = v7_2164;
        Object[] v7_1 = new Object[2];
        v7_1[0] = "frown";
        v7_1[1] = Integer.valueOf(8994);
        v5_1[1001] = v7_1;
        Object[] v7_2 = new Object[2];
        v7_2[0] = "fscr";
        v7_2[1] = Integer.valueOf(119995);
        v5_1[1002] = v7_2;
        Object[] v7_3 = new Object[2];
        v7_3[0] = "gE";
        v7_3[1] = Integer.valueOf(8807);
        v5_1[1003] = v7_3;
        Object[] v7_4 = new Object[2];
        v7_4[0] = "gEl";
        v7_4[1] = Integer.valueOf(10892);
        v5_1[1004] = v7_4;
        Object[] v7_5 = new Object[2];
        v7_5[0] = "gacute";
        v7_5[1] = Integer.valueOf(501);
        v5_1[1005] = v7_5;
        Object[] v7_6 = new Object[2];
        v7_6[0] = "gamma";
        v7_6[1] = Integer.valueOf(947);
        v5_1[1006] = v7_6;
        Object[] v7_7 = new Object[2];
        v7_7[0] = "gammad";
        v7_7[1] = Integer.valueOf(989);
        v5_1[1007] = v7_7;
        Object[] v7_9 = new Object[2];
        v7_9[0] = "gap";
        v7_9[1] = Integer.valueOf(10886);
        v5_1[1008] = v7_9;
        Object[] v7_10 = new Object[2];
        v7_10[0] = "gbreve";
        v7_10[1] = Integer.valueOf(287);
        v5_1[1009] = v7_10;
        Object[] v7_11 = new Object[2];
        v7_11[0] = "gcirc";
        v7_11[1] = Integer.valueOf(285);
        v5_1[1010] = v7_11;
        Object[] v7_13 = new Object[2];
        v7_13[0] = "gcy";
        v7_13[1] = Integer.valueOf(1075);
        v5_1[1011] = v7_13;
        Object[] v7_14 = new Object[2];
        v7_14[0] = "gdot";
        v7_14[1] = Integer.valueOf(289);
        v5_1[1012] = v7_14;
        Object[] v7_16 = new Object[2];
        v7_16[0] = "ge";
        v7_16[1] = Integer.valueOf(8805);
        v5_1[1013] = v7_16;
        Object[] v7_17 = new Object[2];
        v7_17[0] = "gel";
        v7_17[1] = Integer.valueOf(8923);
        v5_1[1014] = v7_17;
        Object[] v7_18 = new Object[2];
        v7_18[0] = "geq";
        v7_18[1] = Integer.valueOf(8805);
        v5_1[1015] = v7_18;
        Object[] v7_19 = new Object[2];
        v7_19[0] = "geqq";
        v7_19[1] = Integer.valueOf(8807);
        v5_1[1016] = v7_19;
        Object[] v7_21 = new Object[2];
        v7_21[0] = "geqslant";
        v7_21[1] = Integer.valueOf(10878);
        v5_1[1017] = v7_21;
        Object[] v7_22 = new Object[2];
        v7_22[0] = "ges";
        v7_22[1] = Integer.valueOf(10878);
        v5_1[1018] = v7_22;
        Object[] v7_23 = new Object[2];
        v7_23[0] = "gescc";
        v7_23[1] = Integer.valueOf(10921);
        v5_1[1019] = v7_23;
        Object[] v7_24 = new Object[2];
        v7_24[0] = "gesdot";
        v7_24[1] = Integer.valueOf(10880);
        v5_1[1020] = v7_24;
        Object[] v7_26 = new Object[2];
        v7_26[0] = "gesdoto";
        v7_26[1] = Integer.valueOf(10882);
        v5_1[1021] = v7_26;
        Object[] v7_27 = new Object[2];
        v7_27[0] = "gesdotol";
        v7_27[1] = Integer.valueOf(10884);
        v5_1[1022] = v7_27;
        Object[] v7_28 = new Object[2];
        v7_28[0] = "gesles";
        v7_28[1] = Integer.valueOf(10900);
        v5_1[1023] = v7_28;
        Object[] v7_29 = new Object[2];
        v7_29[0] = "gfr";
        v7_29[1] = Integer.valueOf(120100);
        v5_1[1024] = v7_29;
        Object[] v7_31 = new Object[2];
        v7_31[0] = "gg";
        v7_31[1] = Integer.valueOf(8811);
        v5_1[1025] = v7_31;
        Object[] v7_32 = new Object[2];
        v7_32[0] = "ggg";
        v7_32[1] = Integer.valueOf(8921);
        v5_1[1026] = v7_32;
        Object[] v7_34 = new Object[2];
        v7_34[0] = "gimel";
        v7_34[1] = Integer.valueOf(8503);
        v5_1[1027] = v7_34;
        Object[] v7_35 = new Object[2];
        v7_35[0] = "gjcy";
        v7_35[1] = Integer.valueOf(1107);
        v5_1[1028] = v7_35;
        Object[] v7_37 = new Object[2];
        v7_37[0] = "gl";
        v7_37[1] = Integer.valueOf(8823);
        v5_1[1029] = v7_37;
        Object[] v7_38 = new Object[2];
        v7_38[0] = "glE";
        v7_38[1] = Integer.valueOf(10898);
        v5_1[1030] = v7_38;
        Object[] v7_39 = new Object[2];
        v7_39[0] = "gla";
        v7_39[1] = Integer.valueOf(10917);
        v5_1[1031] = v7_39;
        Object[] v7_40 = new Object[2];
        v7_40[0] = "glj";
        v7_40[1] = Integer.valueOf(10916);
        v5_1[1032] = v7_40;
        Object[] v7_41 = new Object[2];
        v7_41[0] = "gnE";
        v7_41[1] = Integer.valueOf(8809);
        v5_1[1033] = v7_41;
        Object[] v7_43 = new Object[2];
        v7_43[0] = "gnap";
        v7_43[1] = Integer.valueOf(10890);
        v5_1[1034] = v7_43;
        Object[] v7_44 = new Object[2];
        v7_44[0] = "gnapprox";
        v7_44[1] = Integer.valueOf(10890);
        v5_1[1035] = v7_44;
        Object[] v7_45 = new Object[2];
        v7_45[0] = "gne";
        v7_45[1] = Integer.valueOf(10888);
        v5_1[1036] = v7_45;
        Object[] v7_46 = new Object[2];
        v7_46[0] = "gneq";
        v7_46[1] = Integer.valueOf(10888);
        v5_1[1037] = v7_46;
        Object[] v7_47 = new Object[2];
        v7_47[0] = "gneqq";
        v7_47[1] = Integer.valueOf(8809);
        v5_1[1038] = v7_47;
        Object[] v7_48 = new Object[2];
        v7_48[0] = "gnsim";
        v7_48[1] = Integer.valueOf(8935);
        v5_1[1039] = v7_48;
        Object[] v7_49 = new Object[2];
        v7_49[0] = "gopf";
        v7_49[1] = Integer.valueOf(120152);
        v5_1[1040] = v7_49;
        Object[] v7_50 = new Object[2];
        v7_50[0] = "grave";
        v7_50[1] = Integer.valueOf(96);
        v5_1[1041] = v7_50;
        Object[] v7_51 = new Object[2];
        v7_51[0] = "gscr";
        v7_51[1] = Integer.valueOf(8458);
        v5_1[1042] = v7_51;
        Object[] v7_52 = new Object[2];
        v7_52[0] = "gsim";
        v7_52[1] = Integer.valueOf(8819);
        v5_1[1043] = v7_52;
        Object[] v7_54 = new Object[2];
        v7_54[0] = "gsime";
        v7_54[1] = Integer.valueOf(10894);
        v5_1[1044] = v7_54;
        Object[] v7_55 = new Object[2];
        v7_55[0] = "gsiml";
        v7_55[1] = Integer.valueOf(10896);
        v5_1[1045] = v7_55;
        Object[] v7_56 = new Object[2];
        v7_56[0] = "gt";
        v7_56[1] = Integer.valueOf(62);
        v5_1[1046] = v7_56;
        Object[] v7_57 = new Object[2];
        v7_57[0] = "gtcc";
        v7_57[1] = Integer.valueOf(10919);
        v5_1[1047] = v7_57;
        Object[] v7_58 = new Object[2];
        v7_58[0] = "gtcir";
        v7_58[1] = Integer.valueOf(10874);
        v5_1[1048] = v7_58;
        Object[] v7_59 = new Object[2];
        v7_59[0] = "gtdot";
        v7_59[1] = Integer.valueOf(8919);
        v5_1[1049] = v7_59;
        Object[] v7_60 = new Object[2];
        v7_60[0] = "gtlPar";
        v7_60[1] = Integer.valueOf(10645);
        v5_1[1050] = v7_60;
        Object[] v7_61 = new Object[2];
        v7_61[0] = "gtquest";
        v7_61[1] = Integer.valueOf(10876);
        v5_1[1051] = v7_61;
        Object[] v7_62 = new Object[2];
        v7_62[0] = "gtrapprox";
        v7_62[1] = Integer.valueOf(10886);
        v5_1[1052] = v7_62;
        Object[] v7_63 = new Object[2];
        v7_63[0] = "gtrarr";
        v7_63[1] = Integer.valueOf(10616);
        v5_1[1053] = v7_63;
        Object[] v7_65 = new Object[2];
        v7_65[0] = "gtrdot";
        v7_65[1] = Integer.valueOf(8919);
        v5_1[1054] = v7_65;
        Object[] v7_66 = new Object[2];
        v7_66[0] = "gtreqless";
        v7_66[1] = Integer.valueOf(8923);
        v5_1[1055] = v7_66;
        Object[] v7_67 = new Object[2];
        v7_67[0] = "gtreqqless";
        v7_67[1] = Integer.valueOf(10892);
        v5_1[1056] = v7_67;
        Object[] v7_68 = new Object[2];
        v7_68[0] = "gtrless";
        v7_68[1] = Integer.valueOf(8823);
        v5_1[1057] = v7_68;
        Object[] v7_69 = new Object[2];
        v7_69[0] = "gtrsim";
        v7_69[1] = Integer.valueOf(8819);
        v5_1[1058] = v7_69;
        Object[] v7_70 = new Object[2];
        v7_70[0] = "hArr";
        v7_70[1] = Integer.valueOf(8660);
        v5_1[1059] = v7_70;
        Object[] v7_71 = new Object[2];
        v7_71[0] = "hairsp";
        v7_71[1] = Integer.valueOf(8202);
        v5_1[1060] = v7_71;
        Object[] v7_72 = new Object[2];
        v7_72[0] = "half";
        v7_72[1] = Integer.valueOf(189);
        v5_1[1061] = v7_72;
        Object[] v7_73 = new Object[2];
        v7_73[0] = "hamilt";
        v7_73[1] = Integer.valueOf(8459);
        v5_1[1062] = v7_73;
        Object[] v7_74 = new Object[2];
        v7_74[0] = "hardcy";
        v7_74[1] = Integer.valueOf(1098);
        v5_1[1063] = v7_74;
        Object[] v7_76 = new Object[2];
        v7_76[0] = "harr";
        v7_76[1] = Integer.valueOf(8596);
        v5_1[1064] = v7_76;
        Object[] v7_77 = new Object[2];
        v7_77[0] = "harrcir";
        v7_77[1] = Integer.valueOf(10568);
        v5_1[1065] = v7_77;
        Object[] v7_78 = new Object[2];
        v7_78[0] = "harrw";
        v7_78[1] = Integer.valueOf(8621);
        v5_1[1066] = v7_78;
        Object[] v7_79 = new Object[2];
        v7_79[0] = "hbar";
        v7_79[1] = Integer.valueOf(8463);
        v5_1[1067] = v7_79;
        Object[] v7_80 = new Object[2];
        v7_80[0] = "hcirc";
        v7_80[1] = Integer.valueOf(293);
        v5_1[1068] = v7_80;
        Object[] v7_81 = new Object[2];
        v7_81[0] = "hearts";
        v7_81[1] = Integer.valueOf(9829);
        v5_1[1069] = v7_81;
        Object[] v7_82 = new Object[2];
        v7_82[0] = "heartsuit";
        v7_82[1] = Integer.valueOf(9829);
        v5_1[1070] = v7_82;
        Object[] v7_83 = new Object[2];
        v7_83[0] = "hellip";
        v7_83[1] = Integer.valueOf(8230);
        v5_1[1071] = v7_83;
        Object[] v7_84 = new Object[2];
        v7_84[0] = "hercon";
        v7_84[1] = Integer.valueOf(8889);
        v5_1[1072] = v7_84;
        Object[] v7_85 = new Object[2];
        v7_85[0] = "hfr";
        v7_85[1] = Integer.valueOf(120101);
        v5_1[1073] = v7_85;
        Object[] v7_87 = new Object[2];
        v7_87[0] = "hksearow";
        v7_87[1] = Integer.valueOf(10533);
        v5_1[1074] = v7_87;
        Object[] v7_88 = new Object[2];
        v7_88[0] = "hkswarow";
        v7_88[1] = Integer.valueOf(10534);
        v5_1[1075] = v7_88;
        Object[] v7_89 = new Object[2];
        v7_89[0] = "hoarr";
        v7_89[1] = Integer.valueOf(8703);
        v5_1[1076] = v7_89;
        Object[] v7_90 = new Object[2];
        v7_90[0] = "homtht";
        v7_90[1] = Integer.valueOf(8763);
        v5_1[1077] = v7_90;
        Object[] v7_91 = new Object[2];
        v7_91[0] = "hookleftarrow";
        v7_91[1] = Integer.valueOf(8617);
        v5_1[1078] = v7_91;
        Object[] v7_92 = new Object[2];
        v7_92[0] = "hookrightarrow";
        v7_92[1] = Integer.valueOf(8618);
        v5_1[1079] = v7_92;
        Object[] v7_93 = new Object[2];
        v7_93[0] = "hopf";
        v7_93[1] = Integer.valueOf(120153);
        v5_1[1080] = v7_93;
        Object[] v7_94 = new Object[2];
        v7_94[0] = "horbar";
        v7_94[1] = Integer.valueOf(8213);
        v5_1[1081] = v7_94;
        Object[] v7_95 = new Object[2];
        v7_95[0] = "hscr";
        v7_95[1] = Integer.valueOf(119997);
        v5_1[1082] = v7_95;
        Object[] v7_96 = new Object[2];
        v7_96[0] = "hslash";
        v7_96[1] = Integer.valueOf(8463);
        v5_1[1083] = v7_96;
        Object[] v7_98 = new Object[2];
        v7_98[0] = "hstrok";
        v7_98[1] = Integer.valueOf(295);
        v5_1[1084] = v7_98;
        Object[] v7_99 = new Object[2];
        v7_99[0] = "hybull";
        v7_99[1] = Integer.valueOf(8259);
        v5_1[1085] = v7_99;
        Object[] v7_100 = new Object[2];
        v7_100[0] = "hyphen";
        v7_100[1] = Integer.valueOf(8208);
        v5_1[1086] = v7_100;
        Object[] v7_101 = new Object[2];
        v7_101[0] = "iacute";
        v7_101[1] = Integer.valueOf(237);
        v5_1[1087] = v7_101;
        Object[] v7_102 = new Object[2];
        v7_102[0] = "ic";
        v7_102[1] = Integer.valueOf(8291);
        v5_1[1088] = v7_102;
        Object[] v7_103 = new Object[2];
        v7_103[0] = "icirc";
        v7_103[1] = Integer.valueOf(238);
        v5_1[1089] = v7_103;
        Object[] v7_104 = new Object[2];
        v7_104[0] = "icy";
        v7_104[1] = Integer.valueOf(1080);
        v5_1[1090] = v7_104;
        Object[] v7_105 = new Object[2];
        v7_105[0] = "iecy";
        v7_105[1] = Integer.valueOf(1077);
        v5_1[1091] = v7_105;
        Object[] v7_106 = new Object[2];
        v7_106[0] = "iexcl";
        v7_106[1] = Integer.valueOf(161);
        v5_1[1092] = v7_106;
        Object[] v7_107 = new Object[2];
        v7_107[0] = "iff";
        v7_107[1] = Integer.valueOf(8660);
        v5_1[1093] = v7_107;
        Object[] v7_109 = new Object[2];
        v7_109[0] = "ifr";
        v7_109[1] = Integer.valueOf(120102);
        v5_1[1094] = v7_109;
        Object[] v7_110 = new Object[2];
        v7_110[0] = "igrave";
        v7_110[1] = Integer.valueOf(236);
        v5_1[1095] = v7_110;
        Object[] v7_111 = new Object[2];
        v7_111[0] = "ii";
        v7_111[1] = Integer.valueOf(8520);
        v5_1[1096] = v7_111;
        Object[] v7_112 = new Object[2];
        v7_112[0] = "iiiint";
        v7_112[1] = Integer.valueOf(10764);
        v5_1[1097] = v7_112;
        Object[] v7_113 = new Object[2];
        v7_113[0] = "iiint";
        v7_113[1] = Integer.valueOf(8749);
        v5_1[1098] = v7_113;
        Object[] v7_114 = new Object[2];
        v7_114[0] = "iinfin";
        v7_114[1] = Integer.valueOf(10716);
        v5_1[1099] = v7_114;
        Object[] v7_115 = new Object[2];
        v7_115[0] = "iiota";
        v7_115[1] = Integer.valueOf(8489);
        v5_1[1100] = v7_115;
        Object[] v7_117 = new Object[2];
        v7_117[0] = "ijlig";
        v7_117[1] = Integer.valueOf(307);
        v5_1[1101] = v7_117;
        Object[] v7_118 = new Object[2];
        v7_118[0] = "imacr";
        v7_118[1] = Integer.valueOf(299);
        v5_1[1102] = v7_118;
        Object[] v7_119 = new Object[2];
        v7_119[0] = "image";
        v7_119[1] = Integer.valueOf(8465);
        v5_1[1103] = v7_119;
        Object[] v7_121 = new Object[2];
        v7_121[0] = "imagline";
        v7_121[1] = Integer.valueOf(8464);
        v5_1[1104] = v7_121;
        Object[] v7_122 = new Object[2];
        v7_122[0] = "imagpart";
        v7_122[1] = Integer.valueOf(8465);
        v5_1[1105] = v7_122;
        Object[] v7_123 = new Object[2];
        v7_123[0] = "imath";
        v7_123[1] = Integer.valueOf(305);
        v5_1[1106] = v7_123;
        Object[] v7_124 = new Object[2];
        v7_124[0] = "imof";
        v7_124[1] = Integer.valueOf(8887);
        v5_1[1107] = v7_124;
        Object[] v7_125 = new Object[2];
        v7_125[0] = "imped";
        v7_125[1] = Integer.valueOf(437);
        v5_1[1108] = v7_125;
        Object[] v7_126 = new Object[2];
        v7_126[0] = "in";
        v7_126[1] = Integer.valueOf(8712);
        v5_1[1109] = v7_126;
        Object[] v7_127 = new Object[2];
        v7_127[0] = "incare";
        v7_127[1] = Integer.valueOf(8453);
        v5_1[1110] = v7_127;
        Object[] v7_128 = new Object[2];
        v7_128[0] = "infin";
        v7_128[1] = Integer.valueOf(8734);
        v5_1[1111] = v7_128;
        Object[] v7_129 = new Object[2];
        v7_129[0] = "infintie";
        v7_129[1] = Integer.valueOf(10717);
        v5_1[1112] = v7_129;
        Object[] v7_130 = new Object[2];
        v7_130[0] = "inodot";
        v7_130[1] = Integer.valueOf(305);
        v5_1[1113] = v7_130;
        Object[] v7_132 = new Object[2];
        v7_132[0] = "int";
        v7_132[1] = Integer.valueOf(8747);
        v5_1[1114] = v7_132;
        Object[] v7_133 = new Object[2];
        v7_133[0] = "intcal";
        v7_133[1] = Integer.valueOf(8890);
        v5_1[1115] = v7_133;
        Object[] v7_134 = new Object[2];
        v7_134[0] = "integers";
        v7_134[1] = Integer.valueOf(8484);
        v5_1[1116] = v7_134;
        Object[] v7_135 = new Object[2];
        v7_135[0] = "intercal";
        v7_135[1] = Integer.valueOf(8890);
        v5_1[1117] = v7_135;
        Object[] v7_136 = new Object[2];
        v7_136[0] = "intlarhk";
        v7_136[1] = Integer.valueOf(10775);
        v5_1[1118] = v7_136;
        Object[] v7_137 = new Object[2];
        v7_137[0] = "intprod";
        v7_137[1] = Integer.valueOf(10812);
        v5_1[1119] = v7_137;
        Object[] v7_138 = new Object[2];
        v7_138[0] = "iocy";
        v7_138[1] = Integer.valueOf(1105);
        v5_1[1120] = v7_138;
        Object[] v7_139 = new Object[2];
        v7_139[0] = "iogon";
        v7_139[1] = Integer.valueOf(303);
        v5_1[1121] = v7_139;
        Object[] v7_140 = new Object[2];
        v7_140[0] = "iopf";
        v7_140[1] = Integer.valueOf(120154);
        v5_1[1122] = v7_140;
        Object[] v7_141 = new Object[2];
        v7_141[0] = "iota";
        v7_141[1] = Integer.valueOf(953);
        v5_1[1123] = v7_141;
        Object[] v7_143 = new Object[2];
        v7_143[0] = "iprod";
        v7_143[1] = Integer.valueOf(10812);
        v5_1[1124] = v7_143;
        Object[] v7_144 = new Object[2];
        v7_144[0] = "iquest";
        v7_144[1] = Integer.valueOf(191);
        v5_1[1125] = v7_144;
        Object[] v7_145 = new Object[2];
        v7_145[0] = "iscr";
        v7_145[1] = Integer.valueOf(119998);
        v5_1[1126] = v7_145;
        Object[] v7_146 = new Object[2];
        v7_146[0] = "isin";
        v7_146[1] = Integer.valueOf(8712);
        v5_1[1127] = v7_146;
        Object[] v7_147 = new Object[2];
        v7_147[0] = "isinE";
        v7_147[1] = Integer.valueOf(8953);
        v5_1[1128] = v7_147;
        Object[] v7_148 = new Object[2];
        v7_148[0] = "isindot";
        v7_148[1] = Integer.valueOf(8949);
        v5_1[1129] = v7_148;
        Object[] v7_149 = new Object[2];
        v7_149[0] = "isins";
        v7_149[1] = Integer.valueOf(8948);
        v5_1[1130] = v7_149;
        Object[] v7_150 = new Object[2];
        v7_150[0] = "isinsv";
        v7_150[1] = Integer.valueOf(8947);
        v5_1[1131] = v7_150;
        Object[] v7_151 = new Object[2];
        v7_151[0] = "isinv";
        v7_151[1] = Integer.valueOf(8712);
        v5_1[1132] = v7_151;
        Object[] v7_152 = new Object[2];
        v7_152[0] = "it";
        v7_152[1] = Integer.valueOf(8290);
        v5_1[1133] = v7_152;
        Object[] v7_154 = new Object[2];
        v7_154[0] = "itilde";
        v7_154[1] = Integer.valueOf(297);
        v5_1[1134] = v7_154;
        Object[] v7_155 = new Object[2];
        v7_155[0] = "iukcy";
        v7_155[1] = Integer.valueOf(1110);
        v5_1[1135] = v7_155;
        Object[] v7_156 = new Object[2];
        v7_156[0] = "iuml";
        v7_156[1] = Integer.valueOf(239);
        v5_1[1136] = v7_156;
        Object[] v7_157 = new Object[2];
        v7_157[0] = "jcirc";
        v7_157[1] = Integer.valueOf(309);
        v5_1[1137] = v7_157;
        Object[] v7_158 = new Object[2];
        v7_158[0] = "jcy";
        v7_158[1] = Integer.valueOf(1081);
        v5_1[1138] = v7_158;
        Object[] v7_159 = new Object[2];
        v7_159[0] = "jfr";
        v7_159[1] = Integer.valueOf(120103);
        v5_1[1139] = v7_159;
        Object[] v7_160 = new Object[2];
        v7_160[0] = "jmath";
        v7_160[1] = Integer.valueOf(567);
        v5_1[1140] = v7_160;
        Object[] v7_161 = new Object[2];
        v7_161[0] = "jopf";
        v7_161[1] = Integer.valueOf(120155);
        v5_1[1141] = v7_161;
        Object[] v7_162 = new Object[2];
        v7_162[0] = "jscr";
        v7_162[1] = Integer.valueOf(119999);
        v5_1[1142] = v7_162;
        Object[] v7_163 = new Object[2];
        v7_163[0] = "jsercy";
        v7_163[1] = Integer.valueOf(1112);
        v5_1[1143] = v7_163;
        Object[] v7_165 = new Object[2];
        v7_165[0] = "jukcy";
        v7_165[1] = Integer.valueOf(1108);
        v5_1[1144] = v7_165;
        Object[] v7_166 = new Object[2];
        v7_166[0] = "kappa";
        v7_166[1] = Integer.valueOf(954);
        v5_1[1145] = v7_166;
        Object[] v7_167 = new Object[2];
        v7_167[0] = "kappav";
        v7_167[1] = Integer.valueOf(1008);
        v5_1[1146] = v7_167;
        Object[] v7_168 = new Object[2];
        v7_168[0] = "kcedil";
        v7_168[1] = Integer.valueOf(311);
        v5_1[1147] = v7_168;
        Object[] v7_169 = new Object[2];
        v7_169[0] = "kcy";
        v7_169[1] = Integer.valueOf(1082);
        v5_1[1148] = v7_169;
        Object[] v7_170 = new Object[2];
        v7_170[0] = "kfr";
        v7_170[1] = Integer.valueOf(120104);
        v5_1[1149] = v7_170;
        Object[] v7_171 = new Object[2];
        v7_171[0] = "kgreen";
        v7_171[1] = Integer.valueOf(312);
        v5_1[1150] = v7_171;
        Object[] v7_172 = new Object[2];
        v7_172[0] = "khcy";
        v7_172[1] = Integer.valueOf(1093);
        v5_1[1151] = v7_172;
        Object[] v7_173 = new Object[2];
        v7_173[0] = "kjcy";
        v7_173[1] = Integer.valueOf(1116);
        v5_1[1152] = v7_173;
        Object[] v7_174 = new Object[2];
        v7_174[0] = "kopf";
        v7_174[1] = Integer.valueOf(120156);
        v5_1[1153] = v7_174;
        Object[] v7_176 = new Object[2];
        v7_176[0] = "kscr";
        v7_176[1] = Integer.valueOf(120000);
        v5_1[1154] = v7_176;
        Object[] v7_177 = new Object[2];
        v7_177[0] = "lAarr";
        v7_177[1] = Integer.valueOf(8666);
        v5_1[1155] = v7_177;
        Object[] v7_178 = new Object[2];
        v7_178[0] = "lArr";
        v7_178[1] = Integer.valueOf(8656);
        v5_1[1156] = v7_178;
        Object[] v7_179 = new Object[2];
        v7_179[0] = "lAtail";
        v7_179[1] = Integer.valueOf(10523);
        v5_1[1157] = v7_179;
        Object[] v7_180 = new Object[2];
        v7_180[0] = "lBarr";
        v7_180[1] = Integer.valueOf(10510);
        v5_1[1158] = v7_180;
        Object[] v7_181 = new Object[2];
        v7_181[0] = "lE";
        v7_181[1] = Integer.valueOf(8806);
        v5_1[1159] = v7_181;
        Object[] v7_182 = new Object[2];
        v7_182[0] = "lEg";
        v7_182[1] = Integer.valueOf(10891);
        v5_1[1160] = v7_182;
        Object[] v7_183 = new Object[2];
        v7_183[0] = "lHar";
        v7_183[1] = Integer.valueOf(10594);
        v5_1[1161] = v7_183;
        Object[] v7_184 = new Object[2];
        v7_184[0] = "lacute";
        v7_184[1] = Integer.valueOf(314);
        v5_1[1162] = v7_184;
        Object[] v7_185 = new Object[2];
        v7_185[0] = "laemptyv";
        v7_185[1] = Integer.valueOf(10676);
        v5_1[1163] = v7_185;
        Object[] v7_187 = new Object[2];
        v7_187[0] = "lagran";
        v7_187[1] = Integer.valueOf(8466);
        v5_1[1164] = v7_187;
        Object[] v7_188 = new Object[2];
        v7_188[0] = "lambda";
        v7_188[1] = Integer.valueOf(955);
        v5_1[1165] = v7_188;
        Object[] v7_189 = new Object[2];
        v7_189[0] = "lang";
        v7_189[1] = Integer.valueOf(10216);
        v5_1[1166] = v7_189;
        Object[] v7_190 = new Object[2];
        v7_190[0] = "langd";
        v7_190[1] = Integer.valueOf(10641);
        v5_1[1167] = v7_190;
        Object[] v7_191 = new Object[2];
        v7_191[0] = "langle";
        v7_191[1] = Integer.valueOf(10216);
        v5_1[1168] = v7_191;
        Object[] v7_192 = new Object[2];
        v7_192[0] = "lap";
        v7_192[1] = Integer.valueOf(10885);
        v5_1[1169] = v7_192;
        Object[] v7_193 = new Object[2];
        v7_193[0] = "laquo";
        v7_193[1] = Integer.valueOf(171);
        v5_1[1170] = v7_193;
        Object[] v7_194 = new Object[2];
        v7_194[0] = "larr";
        v7_194[1] = Integer.valueOf(8592);
        v5_1[1171] = v7_194;
        Object[] v7_195 = new Object[2];
        v7_195[0] = "larrb";
        v7_195[1] = Integer.valueOf(8676);
        v5_1[1172] = v7_195;
        Object[] v7_196 = new Object[2];
        v7_196[0] = "larrbfs";
        v7_196[1] = Integer.valueOf(10527);
        v5_1[1173] = v7_196;
        Object[] v7_198 = new Object[2];
        v7_198[0] = "larrfs";
        v7_198[1] = Integer.valueOf(10525);
        v5_1[1174] = v7_198;
        Object[] v7_199 = new Object[2];
        v7_199[0] = "larrhk";
        v7_199[1] = Integer.valueOf(8617);
        v5_1[1175] = v7_199;
        Object[] v7_200 = new Object[2];
        v7_200[0] = "larrlp";
        v7_200[1] = Integer.valueOf(8619);
        v5_1[1176] = v7_200;
        Object[] v7_201 = new Object[2];
        v7_201[0] = "larrpl";
        v7_201[1] = Integer.valueOf(10553);
        v5_1[1177] = v7_201;
        Object[] v7_202 = new Object[2];
        v7_202[0] = "larrsim";
        v7_202[1] = Integer.valueOf(10611);
        v5_1[1178] = v7_202;
        Object[] v7_203 = new Object[2];
        v7_203[0] = "larrtl";
        v7_203[1] = Integer.valueOf(8610);
        v5_1[1179] = v7_203;
        Object[] v7_204 = new Object[2];
        v7_204[0] = "lat";
        v7_204[1] = Integer.valueOf(10923);
        v5_1[1180] = v7_204;
        Object[] v7_205 = new Object[2];
        v7_205[0] = "latail";
        v7_205[1] = Integer.valueOf(10521);
        v5_1[1181] = v7_205;
        Object[] v7_206 = new Object[2];
        v7_206[0] = "late";
        v7_206[1] = Integer.valueOf(10925);
        v5_1[1182] = v7_206;
        Object[] v7_207 = new Object[2];
        v7_207[0] = "lbarr";
        v7_207[1] = Integer.valueOf(10508);
        v5_1[1183] = v7_207;
        Object[] v7_209 = new Object[2];
        v7_209[0] = "lbbrk";
        v7_209[1] = Integer.valueOf(10098);
        v5_1[1184] = v7_209;
        Object[] v7_210 = new Object[2];
        v7_210[0] = "lbrace";
        v7_210[1] = Integer.valueOf(123);
        v5_1[1185] = v7_210;
        Object[] v7_211 = new Object[2];
        v7_211[0] = "lbrack";
        v7_211[1] = Integer.valueOf(91);
        v5_1[1186] = v7_211;
        Object[] v7_212 = new Object[2];
        v7_212[0] = "lbrke";
        v7_212[1] = Integer.valueOf(10635);
        v5_1[1187] = v7_212;
        Object[] v7_213 = new Object[2];
        v7_213[0] = "lbrksld";
        v7_213[1] = Integer.valueOf(10639);
        v5_1[1188] = v7_213;
        Object[] v7_214 = new Object[2];
        v7_214[0] = "lbrkslu";
        v7_214[1] = Integer.valueOf(10637);
        v5_1[1189] = v7_214;
        Object[] v7_215 = new Object[2];
        v7_215[0] = "lcaron";
        v7_215[1] = Integer.valueOf(318);
        v5_1[1190] = v7_215;
        Object[] v7_216 = new Object[2];
        v7_216[0] = "lcedil";
        v7_216[1] = Integer.valueOf(316);
        v5_1[1191] = v7_216;
        Object[] v7_217 = new Object[2];
        v7_217[0] = "lceil";
        v7_217[1] = Integer.valueOf(8968);
        v5_1[1192] = v7_217;
        Object[] v7_218 = new Object[2];
        v7_218[0] = "lcub";
        v7_218[1] = Integer.valueOf(123);
        v5_1[1193] = v7_218;
        Object[] v7_220 = new Object[2];
        v7_220[0] = "lcy";
        v7_220[1] = Integer.valueOf(1083);
        v5_1[1194] = v7_220;
        Object[] v7_221 = new Object[2];
        v7_221[0] = "ldca";
        v7_221[1] = Integer.valueOf(10550);
        v5_1[1195] = v7_221;
        Object[] v7_222 = new Object[2];
        v7_222[0] = "ldquo";
        v7_222[1] = Integer.valueOf(8220);
        v5_1[1196] = v7_222;
        Object[] v7_223 = new Object[2];
        v7_223[0] = "ldquor";
        v7_223[1] = Integer.valueOf(8222);
        v5_1[1197] = v7_223;
        Object[] v7_224 = new Object[2];
        v7_224[0] = "ldrdhar";
        v7_224[1] = Integer.valueOf(10599);
        v5_1[1198] = v7_224;
        Object[] v7_225 = new Object[2];
        v7_225[0] = "ldrushar";
        v7_225[1] = Integer.valueOf(10571);
        v5_1[1199] = v7_225;
        Object[] v7_226 = new Object[2];
        v7_226[0] = "ldsh";
        v7_226[1] = Integer.valueOf(8626);
        v5_1[1200] = v7_226;
        Object[] v7_228 = new Object[2];
        v7_228[0] = "le";
        v7_228[1] = Integer.valueOf(8804);
        v5_1[1201] = v7_228;
        Object[] v7_229 = new Object[2];
        v7_229[0] = "leftarrow";
        v7_229[1] = Integer.valueOf(8592);
        v5_1[1202] = v7_229;
        Object[] v7_230 = new Object[2];
        v7_230[0] = "leftarrowtail";
        v7_230[1] = Integer.valueOf(8610);
        v5_1[1203] = v7_230;
        Object[] v7_232 = new Object[2];
        v7_232[0] = "leftharpoondown";
        v7_232[1] = Integer.valueOf(8637);
        v5_1[1204] = v7_232;
        Object[] v7_233 = new Object[2];
        v7_233[0] = "leftharpoonup";
        v7_233[1] = Integer.valueOf(8636);
        v5_1[1205] = v7_233;
        Object[] v7_234 = new Object[2];
        v7_234[0] = "leftleftarrows";
        v7_234[1] = Integer.valueOf(8647);
        v5_1[1206] = v7_234;
        Object[] v7_235 = new Object[2];
        v7_235[0] = "leftrightarrow";
        v7_235[1] = Integer.valueOf(8596);
        v5_1[1207] = v7_235;
        Object[] v7_236 = new Object[2];
        v7_236[0] = "leftrightarrows";
        v7_236[1] = Integer.valueOf(8646);
        v5_1[1208] = v7_236;
        Object[] v7_237 = new Object[2];
        v7_237[0] = "leftrightharpoons";
        v7_237[1] = Integer.valueOf(8651);
        v5_1[1209] = v7_237;
        Object[] v7_238 = new Object[2];
        v7_238[0] = "leftrightsquigarrow";
        v7_238[1] = Integer.valueOf(8621);
        v5_1[1210] = v7_238;
        Object[] v7_239 = new Object[2];
        v7_239[0] = "leftthreetimes";
        v7_239[1] = Integer.valueOf(8907);
        v5_1[1211] = v7_239;
        Object[] v7_240 = new Object[2];
        v7_240[0] = "leg";
        v7_240[1] = Integer.valueOf(8922);
        v5_1[1212] = v7_240;
        Object[] v7_241 = new Object[2];
        v7_241[0] = "leq";
        v7_241[1] = Integer.valueOf(8804);
        v5_1[1213] = v7_241;
        Object[] v7_243 = new Object[2];
        v7_243[0] = "leqq";
        v7_243[1] = Integer.valueOf(8806);
        v5_1[1214] = v7_243;
        Object[] v7_244 = new Object[2];
        v7_244[0] = "leqslant";
        v7_244[1] = Integer.valueOf(10877);
        v5_1[1215] = v7_244;
        Object[] v7_245 = new Object[2];
        v7_245[0] = "les";
        v7_245[1] = Integer.valueOf(10877);
        v5_1[1216] = v7_245;
        Object[] v7_246 = new Object[2];
        v7_246[0] = "lescc";
        v7_246[1] = Integer.valueOf(10920);
        v5_1[1217] = v7_246;
        Object[] v7_247 = new Object[2];
        v7_247[0] = "lesdot";
        v7_247[1] = Integer.valueOf(10879);
        v5_1[1218] = v7_247;
        Object[] v7_248 = new Object[2];
        v7_248[0] = "lesdoto";
        v7_248[1] = Integer.valueOf(10881);
        v5_1[1219] = v7_248;
        Object[] v7_249 = new Object[2];
        v7_249[0] = "lesdotor";
        v7_249[1] = Integer.valueOf(10883);
        v5_1[1220] = v7_249;
        Object[] v7_250 = new Object[2];
        v7_250[0] = "lesges";
        v7_250[1] = Integer.valueOf(10899);
        v5_1[1221] = v7_250;
        Object[] v7_251 = new Object[2];
        v7_251[0] = "lessapprox";
        v7_251[1] = Integer.valueOf(10885);
        v5_1[1222] = v7_251;
        Object[] v7_252 = new Object[2];
        v7_252[0] = "lessdot";
        v7_252[1] = Integer.valueOf(8918);
        v5_1[1223] = v7_252;
        Object[] v7_254 = new Object[2];
        v7_254[0] = "lesseqgtr";
        v7_254[1] = Integer.valueOf(8922);
        v5_1[1224] = v7_254;
        Object[] v7_255 = new Object[2];
        v7_255[0] = "lesseqqgtr";
        v7_255[1] = Integer.valueOf(10891);
        v5_1[1225] = v7_255;
        Object[] v7_256 = new Object[2];
        v7_256[0] = "lessgtr";
        v7_256[1] = Integer.valueOf(8822);
        v5_1[1226] = v7_256;
        Object[] v7_257 = new Object[2];
        v7_257[0] = "lesssim";
        v7_257[1] = Integer.valueOf(8818);
        v5_1[1227] = v7_257;
        Object[] v7_258 = new Object[2];
        v7_258[0] = "lfisht";
        v7_258[1] = Integer.valueOf(10620);
        v5_1[1228] = v7_258;
        Object[] v7_259 = new Object[2];
        v7_259[0] = "lfloor";
        v7_259[1] = Integer.valueOf(8970);
        v5_1[1229] = v7_259;
        Object[] v7_260 = new Object[2];
        v7_260[0] = "lfr";
        v7_260[1] = Integer.valueOf(120105);
        v5_1[1230] = v7_260;
        Object[] v7_261 = new Object[2];
        v7_261[0] = "lg";
        v7_261[1] = Integer.valueOf(8822);
        v5_1[1231] = v7_261;
        Object[] v7_262 = new Object[2];
        v7_262[0] = "lgE";
        v7_262[1] = Integer.valueOf(10897);
        v5_1[1232] = v7_262;
        Object[] v7_263 = new Object[2];
        v7_263[0] = "lhard";
        v7_263[1] = Integer.valueOf(8637);
        v5_1[1233] = v7_263;
        Object[] v7_265 = new Object[2];
        v7_265[0] = "lharu";
        v7_265[1] = Integer.valueOf(8636);
        v5_1[1234] = v7_265;
        Object[] v7_266 = new Object[2];
        v7_266[0] = "lharul";
        v7_266[1] = Integer.valueOf(10602);
        v5_1[1235] = v7_266;
        Object[] v7_267 = new Object[2];
        v7_267[0] = "lhblk";
        v7_267[1] = Integer.valueOf(9604);
        v5_1[1236] = v7_267;
        Object[] v7_268 = new Object[2];
        v7_268[0] = "ljcy";
        v7_268[1] = Integer.valueOf(1113);
        v5_1[1237] = v7_268;
        Object[] v7_269 = new Object[2];
        v7_269[0] = "ll";
        v7_269[1] = Integer.valueOf(8810);
        v5_1[1238] = v7_269;
        Object[] v7_270 = new Object[2];
        v7_270[0] = "llarr";
        v7_270[1] = Integer.valueOf(8647);
        v5_1[1239] = v7_270;
        Object[] v7_271 = new Object[2];
        v7_271[0] = "llcorner";
        v7_271[1] = Integer.valueOf(8990);
        v5_1[1240] = v7_271;
        Object[] v7_272 = new Object[2];
        v7_272[0] = "llhard";
        v7_272[1] = Integer.valueOf(10603);
        v5_1[1241] = v7_272;
        Object[] v7_273 = new Object[2];
        v7_273[0] = "lltri";
        v7_273[1] = Integer.valueOf(9722);
        v5_1[1242] = v7_273;
        Object[] v7_274 = new Object[2];
        v7_274[0] = "lmidot";
        v7_274[1] = Integer.valueOf(320);
        v5_1[1243] = v7_274;
        Object[] v7_276 = new Object[2];
        v7_276[0] = "lmoust";
        v7_276[1] = Integer.valueOf(9136);
        v5_1[1244] = v7_276;
        Object[] v7_277 = new Object[2];
        v7_277[0] = "lmoustache";
        v7_277[1] = Integer.valueOf(9136);
        v5_1[1245] = v7_277;
        Object[] v7_278 = new Object[2];
        v7_278[0] = "lnE";
        v7_278[1] = Integer.valueOf(8808);
        v5_1[1246] = v7_278;
        Object[] v7_279 = new Object[2];
        v7_279[0] = "lnap";
        v7_279[1] = Integer.valueOf(10889);
        v5_1[1247] = v7_279;
        Object[] v7_280 = new Object[2];
        v7_280[0] = "lnapprox";
        v7_280[1] = Integer.valueOf(10889);
        v5_1[1248] = v7_280;
        Object[] v7_281 = new Object[2];
        v7_281[0] = "lne";
        v7_281[1] = Integer.valueOf(10887);
        v5_1[1249] = v7_281;
        Object[] v7_282 = new Object[2];
        v7_282[0] = "lneq";
        v7_282[1] = Integer.valueOf(10887);
        v5_1[1250] = v7_282;
        Object[] v7_283 = new Object[2];
        v7_283[0] = "lneqq";
        v7_283[1] = Integer.valueOf(8808);
        v5_1[1251] = v7_283;
        Object[] v7_284 = new Object[2];
        v7_284[0] = "lnsim";
        v7_284[1] = Integer.valueOf(8934);
        v5_1[1252] = v7_284;
        Object[] v7_285 = new Object[2];
        v7_285[0] = "loang";
        v7_285[1] = Integer.valueOf(10220);
        v5_1[1253] = v7_285;
        Object[] v7_287 = new Object[2];
        v7_287[0] = "loarr";
        v7_287[1] = Integer.valueOf(8701);
        v5_1[1254] = v7_287;
        Object[] v7_288 = new Object[2];
        v7_288[0] = "lobrk";
        v7_288[1] = Integer.valueOf(10214);
        v5_1[1255] = v7_288;
        Object[] v7_289 = new Object[2];
        v7_289[0] = "longleftarrow";
        v7_289[1] = Integer.valueOf(10229);
        v5_1[1256] = v7_289;
        Object[] v7_290 = new Object[2];
        v7_290[0] = "longleftrightarrow";
        v7_290[1] = Integer.valueOf(10231);
        v5_1[1257] = v7_290;
        Object[] v7_291 = new Object[2];
        v7_291[0] = "longmapsto";
        v7_291[1] = Integer.valueOf(10236);
        v5_1[1258] = v7_291;
        Object[] v7_292 = new Object[2];
        v7_292[0] = "longrightarrow";
        v7_292[1] = Integer.valueOf(10230);
        v5_1[1259] = v7_292;
        Object[] v7_293 = new Object[2];
        v7_293[0] = "looparrowleft";
        v7_293[1] = Integer.valueOf(8619);
        v5_1[1260] = v7_293;
        Object[] v7_294 = new Object[2];
        v7_294[0] = "looparrowright";
        v7_294[1] = Integer.valueOf(8620);
        v5_1[1261] = v7_294;
        Object[] v7_295 = new Object[2];
        v7_295[0] = "lopar";
        v7_295[1] = Integer.valueOf(10629);
        v5_1[1262] = v7_295;
        Object[] v7_296 = new Object[2];
        v7_296[0] = "lopf";
        v7_296[1] = Integer.valueOf(120157);
        v5_1[1263] = v7_296;
        Object[] v7_298 = new Object[2];
        v7_298[0] = "loplus";
        v7_298[1] = Integer.valueOf(10797);
        v5_1[1264] = v7_298;
        Object[] v7_299 = new Object[2];
        v7_299[0] = "lotimes";
        v7_299[1] = Integer.valueOf(10804);
        v5_1[1265] = v7_299;
        Object[] v7_300 = new Object[2];
        v7_300[0] = "lowast";
        v7_300[1] = Integer.valueOf(8727);
        v5_1[1266] = v7_300;
        Object[] v7_301 = new Object[2];
        v7_301[0] = "lowbar";
        v7_301[1] = Integer.valueOf(95);
        v5_1[1267] = v7_301;
        Object[] v7_302 = new Object[2];
        v7_302[0] = "loz";
        v7_302[1] = Integer.valueOf(9674);
        v5_1[1268] = v7_302;
        Object[] v7_303 = new Object[2];
        v7_303[0] = "lozenge";
        v7_303[1] = Integer.valueOf(9674);
        v5_1[1269] = v7_303;
        Object[] v7_304 = new Object[2];
        v7_304[0] = "lozf";
        v7_304[1] = Integer.valueOf(10731);
        v5_1[1270] = v7_304;
        Object[] v7_305 = new Object[2];
        v7_305[0] = "lpar";
        v7_305[1] = Integer.valueOf(40);
        v5_1[1271] = v7_305;
        Object[] v7_306 = new Object[2];
        v7_306[0] = "lparlt";
        v7_306[1] = Integer.valueOf(10643);
        v5_1[1272] = v7_306;
        Object[] v7_307 = new Object[2];
        v7_307[0] = "lrarr";
        v7_307[1] = Integer.valueOf(8646);
        v5_1[1273] = v7_307;
        Object[] v7_309 = new Object[2];
        v7_309[0] = "lrcorner";
        v7_309[1] = Integer.valueOf(8991);
        v5_1[1274] = v7_309;
        Object[] v7_310 = new Object[2];
        v7_310[0] = "lrhar";
        v7_310[1] = Integer.valueOf(8651);
        v5_1[1275] = v7_310;
        Object[] v7_311 = new Object[2];
        v7_311[0] = "lrhard";
        v7_311[1] = Integer.valueOf(10605);
        v5_1[1276] = v7_311;
        Object[] v7_312 = new Object[2];
        v7_312[0] = "lrm";
        v7_312[1] = Integer.valueOf(8206);
        v5_1[1277] = v7_312;
        Object[] v7_313 = new Object[2];
        v7_313[0] = "lrtri";
        v7_313[1] = Integer.valueOf(8895);
        v5_1[1278] = v7_313;
        Object[] v7_314 = new Object[2];
        v7_314[0] = "lsaquo";
        v7_314[1] = Integer.valueOf(8249);
        v5_1[1279] = v7_314;
        Object[] v7_315 = new Object[2];
        v7_315[0] = "lscr";
        v7_315[1] = Integer.valueOf(120001);
        v5_1[1280] = v7_315;
        Object[] v7_316 = new Object[2];
        v7_316[0] = "lsh";
        v7_316[1] = Integer.valueOf(8624);
        v5_1[1281] = v7_316;
        Object[] v7_317 = new Object[2];
        v7_317[0] = "lsim";
        v7_317[1] = Integer.valueOf(8818);
        v5_1[1282] = v7_317;
        Object[] v7_318 = new Object[2];
        v7_318[0] = "lsime";
        v7_318[1] = Integer.valueOf(10893);
        v5_1[1283] = v7_318;
        Object[] v7_320 = new Object[2];
        v7_320[0] = "lsimg";
        v7_320[1] = Integer.valueOf(10895);
        v5_1[1284] = v7_320;
        Object[] v7_321 = new Object[2];
        v7_321[0] = "lsqb";
        v7_321[1] = Integer.valueOf(91);
        v5_1[1285] = v7_321;
        Object[] v7_322 = new Object[2];
        v7_322[0] = "lsquo";
        v7_322[1] = Integer.valueOf(8216);
        v5_1[1286] = v7_322;
        Object[] v7_323 = new Object[2];
        v7_323[0] = "lsquor";
        v7_323[1] = Integer.valueOf(8218);
        v5_1[1287] = v7_323;
        Object[] v7_324 = new Object[2];
        v7_324[0] = "lstrok";
        v7_324[1] = Integer.valueOf(322);
        v5_1[1288] = v7_324;
        Object[] v7_325 = new Object[2];
        v7_325[0] = "lt";
        v7_325[1] = Integer.valueOf(60);
        v5_1[1289] = v7_325;
        Object[] v7_326 = new Object[2];
        v7_326[0] = "ltcc";
        v7_326[1] = Integer.valueOf(10918);
        v5_1[1290] = v7_326;
        Object[] v7_327 = new Object[2];
        v7_327[0] = "ltcir";
        v7_327[1] = Integer.valueOf(10873);
        v5_1[1291] = v7_327;
        Object[] v7_328 = new Object[2];
        v7_328[0] = "ltdot";
        v7_328[1] = Integer.valueOf(8918);
        v5_1[1292] = v7_328;
        Object[] v7_329 = new Object[2];
        v7_329[0] = "lthree";
        v7_329[1] = Integer.valueOf(8907);
        v5_1[1293] = v7_329;
        Object[] v7_331 = new Object[2];
        v7_331[0] = "ltimes";
        v7_331[1] = Integer.valueOf(8905);
        v5_1[1294] = v7_331;
        Object[] v7_332 = new Object[2];
        v7_332[0] = "ltlarr";
        v7_332[1] = Integer.valueOf(10614);
        v5_1[1295] = v7_332;
        Object[] v7_333 = new Object[2];
        v7_333[0] = "ltquest";
        v7_333[1] = Integer.valueOf(10875);
        v5_1[1296] = v7_333;
        Object[] v7_334 = new Object[2];
        v7_334[0] = "ltrPar";
        v7_334[1] = Integer.valueOf(10646);
        v5_1[1297] = v7_334;
        Object[] v7_335 = new Object[2];
        v7_335[0] = "ltri";
        v7_335[1] = Integer.valueOf(9667);
        v5_1[1298] = v7_335;
        Object[] v7_336 = new Object[2];
        v7_336[0] = "ltrie";
        v7_336[1] = Integer.valueOf(8884);
        v5_1[1299] = v7_336;
        Object[] v7_337 = new Object[2];
        v7_337[0] = "ltrif";
        v7_337[1] = Integer.valueOf(9666);
        v5_1[1300] = v7_337;
        Object[] v7_339 = new Object[2];
        v7_339[0] = "lurdshar";
        v7_339[1] = Integer.valueOf(10570);
        v5_1[1301] = v7_339;
        Object[] v7_340 = new Object[2];
        v7_340[0] = "luruhar";
        v7_340[1] = Integer.valueOf(10598);
        v5_1[1302] = v7_340;
        Object[] v7_341 = new Object[2];
        v7_341[0] = "mDDot";
        v7_341[1] = Integer.valueOf(8762);
        v5_1[1303] = v7_341;
        Object[] v7_343 = new Object[2];
        v7_343[0] = "macr";
        v7_343[1] = Integer.valueOf(175);
        v5_1[1304] = v7_343;
        Object[] v7_344 = new Object[2];
        v7_344[0] = "male";
        v7_344[1] = Integer.valueOf(9794);
        v5_1[1305] = v7_344;
        Object[] v7_345 = new Object[2];
        v7_345[0] = "malt";
        v7_345[1] = Integer.valueOf(10016);
        v5_1[1306] = v7_345;
        Object[] v7_346 = new Object[2];
        v7_346[0] = "maltese";
        v7_346[1] = Integer.valueOf(10016);
        v5_1[1307] = v7_346;
        Object[] v7_347 = new Object[2];
        v7_347[0] = "map";
        v7_347[1] = Integer.valueOf(8614);
        v5_1[1308] = v7_347;
        Object[] v7_348 = new Object[2];
        v7_348[0] = "mapsto";
        v7_348[1] = Integer.valueOf(8614);
        v5_1[1309] = v7_348;
        Object[] v7_349 = new Object[2];
        v7_349[0] = "mapstodown";
        v7_349[1] = Integer.valueOf(8615);
        v5_1[1310] = v7_349;
        Object[] v7_350 = new Object[2];
        v7_350[0] = "mapstoleft";
        v7_350[1] = Integer.valueOf(8612);
        v5_1[1311] = v7_350;
        Object[] v7_351 = new Object[2];
        v7_351[0] = "mapstoup";
        v7_351[1] = Integer.valueOf(8613);
        v5_1[1312] = v7_351;
        Object[] v7_352 = new Object[2];
        v7_352[0] = "marker";
        v7_352[1] = Integer.valueOf(9646);
        v5_1[1313] = v7_352;
        Object[] v7_354 = new Object[2];
        v7_354[0] = "mcomma";
        v7_354[1] = Integer.valueOf(10793);
        v5_1[1314] = v7_354;
        Object[] v7_355 = new Object[2];
        v7_355[0] = "mcy";
        v7_355[1] = Integer.valueOf(1084);
        v5_1[1315] = v7_355;
        Object[] v7_356 = new Object[2];
        v7_356[0] = "mdash";
        v7_356[1] = Integer.valueOf(8212);
        v5_1[1316] = v7_356;
        Object[] v7_357 = new Object[2];
        v7_357[0] = "measuredangle";
        v7_357[1] = Integer.valueOf(8737);
        v5_1[1317] = v7_357;
        Object[] v7_358 = new Object[2];
        v7_358[0] = "mfr";
        v7_358[1] = Integer.valueOf(120106);
        v5_1[1318] = v7_358;
        Object[] v7_359 = new Object[2];
        v7_359[0] = "mho";
        v7_359[1] = Integer.valueOf(8487);
        v5_1[1319] = v7_359;
        Object[] v7_360 = new Object[2];
        v7_360[0] = "micro";
        v7_360[1] = Integer.valueOf(181);
        v5_1[1320] = v7_360;
        Object[] v7_361 = new Object[2];
        v7_361[0] = "mid";
        v7_361[1] = Integer.valueOf(8739);
        v5_1[1321] = v7_361;
        Object[] v7_362 = new Object[2];
        v7_362[0] = "midast";
        v7_362[1] = Integer.valueOf(42);
        v5_1[1322] = v7_362;
        Object[] v7_363 = new Object[2];
        v7_363[0] = "midcir";
        v7_363[1] = Integer.valueOf(10992);
        v5_1[1323] = v7_363;
        Object[] v7_365 = new Object[2];
        v7_365[0] = "middot";
        v7_365[1] = Integer.valueOf(183);
        v5_1[1324] = v7_365;
        Object[] v7_366 = new Object[2];
        v7_366[0] = "minus";
        v7_366[1] = Integer.valueOf(8722);
        v5_1[1325] = v7_366;
        Object[] v7_367 = new Object[2];
        v7_367[0] = "minusb";
        v7_367[1] = Integer.valueOf(8863);
        v5_1[1326] = v7_367;
        Object[] v7_368 = new Object[2];
        v7_368[0] = "minusd";
        v7_368[1] = Integer.valueOf(8760);
        v5_1[1327] = v7_368;
        Object[] v7_369 = new Object[2];
        v7_369[0] = "minusdu";
        v7_369[1] = Integer.valueOf(10794);
        v5_1[1328] = v7_369;
        Object[] v7_370 = new Object[2];
        v7_370[0] = "mlcp";
        v7_370[1] = Integer.valueOf(10971);
        v5_1[1329] = v7_370;
        Object[] v7_371 = new Object[2];
        v7_371[0] = "mldr";
        v7_371[1] = Integer.valueOf(8230);
        v5_1[1330] = v7_371;
        Object[] v7_372 = new Object[2];
        v7_372[0] = "mnplus";
        v7_372[1] = Integer.valueOf(8723);
        v5_1[1331] = v7_372;
        Object[] v7_373 = new Object[2];
        v7_373[0] = "models";
        v7_373[1] = Integer.valueOf(8871);
        v5_1[1332] = v7_373;
        Object[] v7_374 = new Object[2];
        v7_374[0] = "mopf";
        v7_374[1] = Integer.valueOf(120158);
        v5_1[1333] = v7_374;
        Object[] v7_376 = new Object[2];
        v7_376[0] = "mp";
        v7_376[1] = Integer.valueOf(8723);
        v5_1[1334] = v7_376;
        Object[] v7_377 = new Object[2];
        v7_377[0] = "mscr";
        v7_377[1] = Integer.valueOf(120002);
        v5_1[1335] = v7_377;
        Object[] v7_378 = new Object[2];
        v7_378[0] = "mstpos";
        v7_378[1] = Integer.valueOf(8766);
        v5_1[1336] = v7_378;
        Object[] v7_379 = new Object[2];
        v7_379[0] = "mu";
        v7_379[1] = Integer.valueOf(956);
        v5_1[1337] = v7_379;
        Object[] v7_380 = new Object[2];
        v7_380[0] = "multimap";
        v7_380[1] = Integer.valueOf(8888);
        v5_1[1338] = v7_380;
        Object[] v7_381 = new Object[2];
        v7_381[0] = "mumap";
        v7_381[1] = Integer.valueOf(8888);
        v5_1[1339] = v7_381;
        Object[] v7_382 = new Object[2];
        v7_382[0] = "nLeftarrow";
        v7_382[1] = Integer.valueOf(8653);
        v5_1[1340] = v7_382;
        Object[] v7_383 = new Object[2];
        v7_383[0] = "nLeftrightarrow";
        v7_383[1] = Integer.valueOf(8654);
        v5_1[1341] = v7_383;
        Object[] v7_384 = new Object[2];
        v7_384[0] = "nRightarrow";
        v7_384[1] = Integer.valueOf(8655);
        v5_1[1342] = v7_384;
        Object[] v7_385 = new Object[2];
        v7_385[0] = "nVDash";
        v7_385[1] = Integer.valueOf(8879);
        v5_1[1343] = v7_385;
        Object[] v7_387 = new Object[2];
        v7_387[0] = "nVdash";
        v7_387[1] = Integer.valueOf(8878);
        v5_1[1344] = v7_387;
        Object[] v7_388 = new Object[2];
        v7_388[0] = "nabla";
        v7_388[1] = Integer.valueOf(8711);
        v5_1[1345] = v7_388;
        Object[] v7_390 = new Object[2];
        v7_390[0] = "nacute";
        v7_390[1] = Integer.valueOf(324);
        v5_1[1346] = v7_390;
        Object[] v7_391 = new Object[2];
        v7_391[0] = "nap";
        v7_391[1] = Integer.valueOf(8777);
        v5_1[1347] = v7_391;
        Object[] v7_393 = new Object[2];
        v7_393[0] = "napos";
        v7_393[1] = Integer.valueOf(329);
        v5_1[1348] = v7_393;
        Object[] v7_394 = new Object[2];
        v7_394[0] = "napprox";
        v7_394[1] = Integer.valueOf(8777);
        v5_1[1349] = v7_394;
        Object[] v7_395 = new Object[2];
        v7_395[0] = "natur";
        v7_395[1] = Integer.valueOf(9838);
        v5_1[1350] = v7_395;
        Object[] v7_396 = new Object[2];
        v7_396[0] = "natural";
        v7_396[1] = Integer.valueOf(9838);
        v5_1[1351] = v7_396;
        Object[] v7_397 = new Object[2];
        v7_397[0] = "naturals";
        v7_397[1] = Integer.valueOf(8469);
        v5_1[1352] = v7_397;
        Object[] v7_399 = new Object[2];
        v7_399[0] = "nbsp";
        v7_399[1] = Integer.valueOf(160);
        v5_1[1353] = v7_399;
        Object[] v7_400 = new Object[2];
        v7_400[0] = "ncap";
        v7_400[1] = Integer.valueOf(10819);
        v5_1[1354] = v7_400;
        Object[] v7_401 = new Object[2];
        v7_401[0] = "ncaron";
        v7_401[1] = Integer.valueOf(328);
        v5_1[1355] = v7_401;
        Object[] v7_402 = new Object[2];
        v7_402[0] = "ncedil";
        v7_402[1] = Integer.valueOf(326);
        v5_1[1356] = v7_402;
        Object[] v7_403 = new Object[2];
        v7_403[0] = "ncong";
        v7_403[1] = Integer.valueOf(8775);
        v5_1[1357] = v7_403;
        Object[] v7_404 = new Object[2];
        v7_404[0] = "ncup";
        v7_404[1] = Integer.valueOf(10818);
        v5_1[1358] = v7_404;
        Object[] v7_405 = new Object[2];
        v7_405[0] = "ncy";
        v7_405[1] = Integer.valueOf(1085);
        v5_1[1359] = v7_405;
        Object[] v7_406 = new Object[2];
        v7_406[0] = "ndash";
        v7_406[1] = Integer.valueOf(8211);
        v5_1[1360] = v7_406;
        Object[] v7_407 = new Object[2];
        v7_407[0] = "ne";
        v7_407[1] = Integer.valueOf(8800);
        v5_1[1361] = v7_407;
        Object[] v7_408 = new Object[2];
        v7_408[0] = "neArr";
        v7_408[1] = Integer.valueOf(8663);
        v5_1[1362] = v7_408;
        Object[] v7_410 = new Object[2];
        v7_410[0] = "nearhk";
        v7_410[1] = Integer.valueOf(10532);
        v5_1[1363] = v7_410;
        Object[] v7_411 = new Object[2];
        v7_411[0] = "nearr";
        v7_411[1] = Integer.valueOf(8599);
        v5_1[1364] = v7_411;
        Object[] v7_412 = new Object[2];
        v7_412[0] = "nearrow";
        v7_412[1] = Integer.valueOf(8599);
        v5_1[1365] = v7_412;
        Object[] v7_413 = new Object[2];
        v7_413[0] = "nequiv";
        v7_413[1] = Integer.valueOf(8802);
        v5_1[1366] = v7_413;
        Object[] v7_414 = new Object[2];
        v7_414[0] = "nesear";
        v7_414[1] = Integer.valueOf(10536);
        v5_1[1367] = v7_414;
        Object[] v7_415 = new Object[2];
        v7_415[0] = "nexist";
        v7_415[1] = Integer.valueOf(8708);
        v5_1[1368] = v7_415;
        Object[] v7_416 = new Object[2];
        v7_416[0] = "nexists";
        v7_416[1] = Integer.valueOf(8708);
        v5_1[1369] = v7_416;
        Object[] v7_417 = new Object[2];
        v7_417[0] = "nfr";
        v7_417[1] = Integer.valueOf(120107);
        v5_1[1370] = v7_417;
        Object[] v7_418 = new Object[2];
        v7_418[0] = "nge";
        v7_418[1] = Integer.valueOf(8817);
        v5_1[1371] = v7_418;
        Object[] v7_419 = new Object[2];
        v7_419[0] = "ngeq";
        v7_419[1] = Integer.valueOf(8817);
        v5_1[1372] = v7_419;
        Object[] v7_421 = new Object[2];
        v7_421[0] = "ngsim";
        v7_421[1] = Integer.valueOf(8821);
        v5_1[1373] = v7_421;
        Object[] v7_422 = new Object[2];
        v7_422[0] = "ngt";
        v7_422[1] = Integer.valueOf(8815);
        v5_1[1374] = v7_422;
        Object[] v7_423 = new Object[2];
        v7_423[0] = "ngtr";
        v7_423[1] = Integer.valueOf(8815);
        v5_1[1375] = v7_423;
        Object[] v7_424 = new Object[2];
        v7_424[0] = "nhArr";
        v7_424[1] = Integer.valueOf(8654);
        v5_1[1376] = v7_424;
        Object[] v7_425 = new Object[2];
        v7_425[0] = "nharr";
        v7_425[1] = Integer.valueOf(8622);
        v5_1[1377] = v7_425;
        Object[] v7_426 = new Object[2];
        v7_426[0] = "nhpar";
        v7_426[1] = Integer.valueOf(10994);
        v5_1[1378] = v7_426;
        Object[] v7_427 = new Object[2];
        v7_427[0] = "ni";
        v7_427[1] = Integer.valueOf(8715);
        v5_1[1379] = v7_427;
        Object[] v7_428 = new Object[2];
        v7_428[0] = "nis";
        v7_428[1] = Integer.valueOf(8956);
        v5_1[1380] = v7_428;
        Object[] v7_429 = new Object[2];
        v7_429[0] = "nisd";
        v7_429[1] = Integer.valueOf(8954);
        v5_1[1381] = v7_429;
        Object[] v7_430 = new Object[2];
        v7_430[0] = "niv";
        v7_430[1] = Integer.valueOf(8715);
        v5_1[1382] = v7_430;
        Object[] v7_432 = new Object[2];
        v7_432[0] = "njcy";
        v7_432[1] = Integer.valueOf(1114);
        v5_1[1383] = v7_432;
        Object[] v7_433 = new Object[2];
        v7_433[0] = "nlArr";
        v7_433[1] = Integer.valueOf(8653);
        v5_1[1384] = v7_433;
        Object[] v7_435 = new Object[2];
        v7_435[0] = "nlarr";
        v7_435[1] = Integer.valueOf(8602);
        v5_1[1385] = v7_435;
        Object[] v7_436 = new Object[2];
        v7_436[0] = "nldr";
        v7_436[1] = Integer.valueOf(8229);
        v5_1[1386] = v7_436;
        Object[] v7_438 = new Object[2];
        v7_438[0] = "nle";
        v7_438[1] = Integer.valueOf(8816);
        v5_1[1387] = v7_438;
        Object[] v7_439 = new Object[2];
        v7_439[0] = "nleftarrow";
        v7_439[1] = Integer.valueOf(8602);
        v5_1[1388] = v7_439;
        Object[] v7_440 = new Object[2];
        v7_440[0] = "nleftrightarrow";
        v7_440[1] = Integer.valueOf(8622);
        v5_1[1389] = v7_440;
        Object[] v7_441 = new Object[2];
        v7_441[0] = "nleq";
        v7_441[1] = Integer.valueOf(8816);
        v5_1[1390] = v7_441;
        Object[] v7_442 = new Object[2];
        v7_442[0] = "nless";
        v7_442[1] = Integer.valueOf(8814);
        v5_1[1391] = v7_442;
        Object[] v7_444 = new Object[2];
        v7_444[0] = "nlsim";
        v7_444[1] = Integer.valueOf(8820);
        v5_1[1392] = v7_444;
        Object[] v7_445 = new Object[2];
        v7_445[0] = "nlt";
        v7_445[1] = Integer.valueOf(8814);
        v5_1[1393] = v7_445;
        Object[] v7_446 = new Object[2];
        v7_446[0] = "nltri";
        v7_446[1] = Integer.valueOf(8938);
        v5_1[1394] = v7_446;
        Object[] v7_447 = new Object[2];
        v7_447[0] = "nltrie";
        v7_447[1] = Integer.valueOf(8940);
        v5_1[1395] = v7_447;
        Object[] v7_448 = new Object[2];
        v7_448[0] = "nmid";
        v7_448[1] = Integer.valueOf(8740);
        v5_1[1396] = v7_448;
        Object[] v7_449 = new Object[2];
        v7_449[0] = "nopf";
        v7_449[1] = Integer.valueOf(120159);
        v5_1[1397] = v7_449;
        Object[] v7_450 = new Object[2];
        v7_450[0] = "not";
        v7_450[1] = Integer.valueOf(172);
        v5_1[1398] = v7_450;
        Object[] v7_451 = new Object[2];
        v7_451[0] = "notin";
        v7_451[1] = Integer.valueOf(8713);
        v5_1[1399] = v7_451;
        Object[] v7_452 = new Object[2];
        v7_452[0] = "notinva";
        v7_452[1] = Integer.valueOf(8713);
        v5_1[1400] = v7_452;
        Object[] v7_454 = new Object[2];
        v7_454[0] = "notinvb";
        v7_454[1] = Integer.valueOf(8951);
        v5_1[1401] = v7_454;
        Object[] v7_456 = new Object[2];
        v7_456[0] = "notinvc";
        v7_456[1] = Integer.valueOf(8950);
        v5_1[1402] = v7_456;
        Object[] v7_457 = new Object[2];
        v7_457[0] = "notni";
        v7_457[1] = Integer.valueOf(8716);
        v5_1[1403] = v7_457;
        Object[] v7_458 = new Object[2];
        v7_458[0] = "notniva";
        v7_458[1] = Integer.valueOf(8716);
        v5_1[1404] = v7_458;
        Object[] v7_459 = new Object[2];
        v7_459[0] = "notnivb";
        v7_459[1] = Integer.valueOf(8958);
        v5_1[1405] = v7_459;
        Object[] v7_460 = new Object[2];
        v7_460[0] = "notnivc";
        v7_460[1] = Integer.valueOf(8957);
        v5_1[1406] = v7_460;
        Object[] v7_461 = new Object[2];
        v7_461[0] = "npar";
        v7_461[1] = Integer.valueOf(8742);
        v5_1[1407] = v7_461;
        Object[] v7_462 = new Object[2];
        v7_462[0] = "nparallel";
        v7_462[1] = Integer.valueOf(8742);
        v5_1[1408] = v7_462;
        Object[] v7_463 = new Object[2];
        v7_463[0] = "npolint";
        v7_463[1] = Integer.valueOf(10772);
        v5_1[1409] = v7_463;
        Object[] v7_464 = new Object[2];
        v7_464[0] = "npr";
        v7_464[1] = Integer.valueOf(8832);
        v5_1[1410] = v7_464;
        Object[] v7_465 = new Object[2];
        v7_465[0] = "nprcue";
        v7_465[1] = Integer.valueOf(8928);
        v5_1[1411] = v7_465;
        Object[] v7_467 = new Object[2];
        v7_467[0] = "nprec";
        v7_467[1] = Integer.valueOf(8832);
        v5_1[1412] = v7_467;
        Object[] v7_468 = new Object[2];
        v7_468[0] = "nrArr";
        v7_468[1] = Integer.valueOf(8655);
        v5_1[1413] = v7_468;
        Object[] v7_469 = new Object[2];
        v7_469[0] = "nrarr";
        v7_469[1] = Integer.valueOf(8603);
        v5_1[1414] = v7_469;
        Object[] v7_470 = new Object[2];
        v7_470[0] = "nrightarrow";
        v7_470[1] = Integer.valueOf(8603);
        v5_1[1415] = v7_470;
        Object[] v7_471 = new Object[2];
        v7_471[0] = "nrtri";
        v7_471[1] = Integer.valueOf(8939);
        v5_1[1416] = v7_471;
        Object[] v7_472 = new Object[2];
        v7_472[0] = "nrtrie";
        v7_472[1] = Integer.valueOf(8941);
        v5_1[1417] = v7_472;
        Object[] v7_473 = new Object[2];
        v7_473[0] = "nsc";
        v7_473[1] = Integer.valueOf(8833);
        v5_1[1418] = v7_473;
        Object[] v7_474 = new Object[2];
        v7_474[0] = "nsccue";
        v7_474[1] = Integer.valueOf(8929);
        v5_1[1419] = v7_474;
        Object[] v7_475 = new Object[2];
        v7_475[0] = "nscr";
        v7_475[1] = Integer.valueOf(120003);
        v5_1[1420] = v7_475;
        Object[] v7_476 = new Object[2];
        v7_476[0] = "nshortmid";
        v7_476[1] = Integer.valueOf(8740);
        v5_1[1421] = v7_476;
        Object[] v7_478 = new Object[2];
        v7_478[0] = "nshortparallel";
        v7_478[1] = Integer.valueOf(8742);
        v5_1[1422] = v7_478;
        Object[] v7_479 = new Object[2];
        v7_479[0] = "nsim";
        v7_479[1] = Integer.valueOf(8769);
        v5_1[1423] = v7_479;
        Object[] v7_480 = new Object[2];
        v7_480[0] = "nsime";
        v7_480[1] = Integer.valueOf(8772);
        v5_1[1424] = v7_480;
        Object[] v7_481 = new Object[2];
        v7_481[0] = "nsimeq";
        v7_481[1] = Integer.valueOf(8772);
        v5_1[1425] = v7_481;
        Object[] v7_482 = new Object[2];
        v7_482[0] = "nsmid";
        v7_482[1] = Integer.valueOf(8740);
        v5_1[1426] = v7_482;
        Object[] v7_483 = new Object[2];
        v7_483[0] = "nspar";
        v7_483[1] = Integer.valueOf(8742);
        v5_1[1427] = v7_483;
        Object[] v7_484 = new Object[2];
        v7_484[0] = "nsqsube";
        v7_484[1] = Integer.valueOf(8930);
        v5_1[1428] = v7_484;
        Object[] v7_485 = new Object[2];
        v7_485[0] = "nsqsupe";
        v7_485[1] = Integer.valueOf(8931);
        v5_1[1429] = v7_485;
        Object[] v7_486 = new Object[2];
        v7_486[0] = "nsub";
        v7_486[1] = Integer.valueOf(8836);
        v5_1[1430] = v7_486;
        Object[] v7_487 = new Object[2];
        v7_487[0] = "nsube";
        v7_487[1] = Integer.valueOf(8840);
        v5_1[1431] = v7_487;
        Object[] v7_489 = new Object[2];
        v7_489[0] = "nsubseteq";
        v7_489[1] = Integer.valueOf(8840);
        v5_1[1432] = v7_489;
        Object[] v7_490 = new Object[2];
        v7_490[0] = "nsucc";
        v7_490[1] = Integer.valueOf(8833);
        v5_1[1433] = v7_490;
        Object[] v7_491 = new Object[2];
        v7_491[0] = "nsup";
        v7_491[1] = Integer.valueOf(8837);
        v5_1[1434] = v7_491;
        Object[] v7_492 = new Object[2];
        v7_492[0] = "nsupe";
        v7_492[1] = Integer.valueOf(8841);
        v5_1[1435] = v7_492;
        Object[] v7_493 = new Object[2];
        v7_493[0] = "nsupseteq";
        v7_493[1] = Integer.valueOf(8841);
        v5_1[1436] = v7_493;
        Object[] v7_494 = new Object[2];
        v7_494[0] = "ntgl";
        v7_494[1] = Integer.valueOf(8825);
        v5_1[1437] = v7_494;
        Object[] v7_495 = new Object[2];
        v7_495[0] = "ntilde";
        v7_495[1] = Integer.valueOf(241);
        v5_1[1438] = v7_495;
        Object[] v7_496 = new Object[2];
        v7_496[0] = "ntlg";
        v7_496[1] = Integer.valueOf(8824);
        v5_1[1439] = v7_496;
        Object[] v7_497 = new Object[2];
        v7_497[0] = "ntriangleleft";
        v7_497[1] = Integer.valueOf(8938);
        v5_1[1440] = v7_497;
        Object[] v7_498 = new Object[2];
        v7_498[0] = "ntrianglelefteq";
        v7_498[1] = Integer.valueOf(8940);
        v5_1[1441] = v7_498;
        Object[] v7_500 = new Object[2];
        v7_500[0] = "ntriangleright";
        v7_500[1] = Integer.valueOf(8939);
        v5_1[1442] = v7_500;
        Object[] v7_501 = new Object[2];
        v7_501[0] = "ntrianglerighteq";
        v7_501[1] = Integer.valueOf(8941);
        v5_1[1443] = v7_501;
        Object[] v7_502 = new Object[2];
        v7_502[0] = "nu";
        v7_502[1] = Integer.valueOf(957);
        v5_1[1444] = v7_502;
        Object[] v7_503 = new Object[2];
        v7_503[0] = "num";
        v7_503[1] = Integer.valueOf(35);
        v5_1[1445] = v7_503;
        Object[] v7_504 = new Object[2];
        v7_504[0] = "numero";
        v7_504[1] = Integer.valueOf(8470);
        v5_1[1446] = v7_504;
        Object[] v7_505 = new Object[2];
        v7_505[0] = "numsp";
        v7_505[1] = Integer.valueOf(8199);
        v5_1[1447] = v7_505;
        Object[] v7_506 = new Object[2];
        v7_506[0] = "nvDash";
        v7_506[1] = Integer.valueOf(8877);
        v5_1[1448] = v7_506;
        Object[] v7_507 = new Object[2];
        v7_507[0] = "nvHarr";
        v7_507[1] = Integer.valueOf(10500);
        v5_1[1449] = v7_507;
        Object[] v7_508 = new Object[2];
        v7_508[0] = "nvdash";
        v7_508[1] = Integer.valueOf(8876);
        v5_1[1450] = v7_508;
        Object[] v7_509 = new Object[2];
        v7_509[0] = "nvinfin";
        v7_509[1] = Integer.valueOf(10718);
        v5_1[1451] = v7_509;
        Object[] v7_511 = new Object[2];
        v7_511[0] = "nvlArr";
        v7_511[1] = Integer.valueOf(10498);
        v5_1[1452] = v7_511;
        Object[] v7_512 = new Object[2];
        v7_512[0] = "nvrArr";
        v7_512[1] = Integer.valueOf(10499);
        v5_1[1453] = v7_512;
        Object[] v7_513 = new Object[2];
        v7_513[0] = "nwArr";
        v7_513[1] = Integer.valueOf(8662);
        v5_1[1454] = v7_513;
        Object[] v7_514 = new Object[2];
        v7_514[0] = "nwarhk";
        v7_514[1] = Integer.valueOf(10531);
        v5_1[1455] = v7_514;
        Object[] v7_515 = new Object[2];
        v7_515[0] = "nwarr";
        v7_515[1] = Integer.valueOf(8598);
        v5_1[1456] = v7_515;
        Object[] v7_516 = new Object[2];
        v7_516[0] = "nwarrow";
        v7_516[1] = Integer.valueOf(8598);
        v5_1[1457] = v7_516;
        Object[] v7_517 = new Object[2];
        v7_517[0] = "nwnear";
        v7_517[1] = Integer.valueOf(10535);
        v5_1[1458] = v7_517;
        Object[] v7_518 = new Object[2];
        v7_518[0] = "oS";
        v7_518[1] = Integer.valueOf(9416);
        v5_1[1459] = v7_518;
        Object[] v7_519 = new Object[2];
        v7_519[0] = "oacute";
        v7_519[1] = Integer.valueOf(243);
        v5_1[1460] = v7_519;
        Object[] v7_520 = new Object[2];
        v7_520[0] = "oast";
        v7_520[1] = Integer.valueOf(8859);
        v5_1[1461] = v7_520;
        Object[] v7_522 = new Object[2];
        v7_522[0] = "ocir";
        v7_522[1] = Integer.valueOf(8858);
        v5_1[1462] = v7_522;
        Object[] v7_523 = new Object[2];
        v7_523[0] = "ocirc";
        v7_523[1] = Integer.valueOf(244);
        v5_1[1463] = v7_523;
        Object[] v7_524 = new Object[2];
        v7_524[0] = "ocy";
        v7_524[1] = Integer.valueOf(1086);
        v5_1[1464] = v7_524;
        Object[] v7_525 = new Object[2];
        v7_525[0] = "odash";
        v7_525[1] = Integer.valueOf(8861);
        v5_1[1465] = v7_525;
        Object[] v7_526 = new Object[2];
        v7_526[0] = "odblac";
        v7_526[1] = Integer.valueOf(337);
        v5_1[1466] = v7_526;
        Object[] v7_527 = new Object[2];
        v7_527[0] = "odiv";
        v7_527[1] = Integer.valueOf(10808);
        v5_1[1467] = v7_527;
        Object[] v7_528 = new Object[2];
        v7_528[0] = "odot";
        v7_528[1] = Integer.valueOf(8857);
        v5_1[1468] = v7_528;
        Object[] v7_529 = new Object[2];
        v7_529[0] = "odsold";
        v7_529[1] = Integer.valueOf(10684);
        v5_1[1469] = v7_529;
        Object[] v7_530 = new Object[2];
        v7_530[0] = "oelig";
        v7_530[1] = Integer.valueOf(339);
        v5_1[1470] = v7_530;
        Object[] v7_531 = new Object[2];
        v7_531[0] = "ofcir";
        v7_531[1] = Integer.valueOf(10687);
        v5_1[1471] = v7_531;
        Object[] v7_533 = new Object[2];
        v7_533[0] = "ofr";
        v7_533[1] = Integer.valueOf(120108);
        v5_1[1472] = v7_533;
        Object[] v7_534 = new Object[2];
        v7_534[0] = "ogon";
        v7_534[1] = Integer.valueOf(731);
        v5_1[1473] = v7_534;
        Object[] v7_535 = new Object[2];
        v7_535[0] = "ograve";
        v7_535[1] = Integer.valueOf(242);
        v5_1[1474] = v7_535;
        Object[] v7_536 = new Object[2];
        v7_536[0] = "ogt";
        v7_536[1] = Integer.valueOf(10689);
        v5_1[1475] = v7_536;
        Object[] v7_537 = new Object[2];
        v7_537[0] = "ohbar";
        v7_537[1] = Integer.valueOf(10677);
        v5_1[1476] = v7_537;
        Object[] v7_538 = new Object[2];
        v7_538[0] = "ohm";
        v7_538[1] = Integer.valueOf(937);
        v5_1[1477] = v7_538;
        Object[] v7_539 = new Object[2];
        v7_539[0] = "oint";
        v7_539[1] = Integer.valueOf(8750);
        v5_1[1478] = v7_539;
        Object[] v7_540 = new Object[2];
        v7_540[0] = "olarr";
        v7_540[1] = Integer.valueOf(8634);
        v5_1[1479] = v7_540;
        Object[] v7_541 = new Object[2];
        v7_541[0] = "olcir";
        v7_541[1] = Integer.valueOf(10686);
        v5_1[1480] = v7_541;
        Object[] v7_542 = new Object[2];
        v7_542[0] = "olcross";
        v7_542[1] = Integer.valueOf(10683);
        v5_1[1481] = v7_542;
        Object[] v7_544 = new Object[2];
        v7_544[0] = "oline";
        v7_544[1] = Integer.valueOf(8254);
        v5_1[1482] = v7_544;
        Object[] v7_545 = new Object[2];
        v7_545[0] = "olt";
        v7_545[1] = Integer.valueOf(10688);
        v5_1[1483] = v7_545;
        Object[] v7_546 = new Object[2];
        v7_546[0] = "omacr";
        v7_546[1] = Integer.valueOf(333);
        v5_1[1484] = v7_546;
        Object[] v7_547 = new Object[2];
        v7_547[0] = "omega";
        v7_547[1] = Integer.valueOf(969);
        v5_1[1485] = v7_547;
        Object[] v7_548 = new Object[2];
        v7_548[0] = "omicron";
        v7_548[1] = Integer.valueOf(959);
        v5_1[1486] = v7_548;
        Object[] v7_549 = new Object[2];
        v7_549[0] = "omid";
        v7_549[1] = Integer.valueOf(10678);
        v5_1[1487] = v7_549;
        Object[] v7_550 = new Object[2];
        v7_550[0] = "ominus";
        v7_550[1] = Integer.valueOf(8854);
        v5_1[1488] = v7_550;
        Object[] v7_551 = new Object[2];
        v7_551[0] = "oopf";
        v7_551[1] = Integer.valueOf(120160);
        v5_1[1489] = v7_551;
        Object[] v7_552 = new Object[2];
        v7_552[0] = "opar";
        v7_552[1] = Integer.valueOf(10679);
        v5_1[1490] = v7_552;
        Object[] v7_553 = new Object[2];
        v7_553[0] = "operp";
        v7_553[1] = Integer.valueOf(10681);
        v5_1[1491] = v7_553;
        Object[] v7_555 = new Object[2];
        v7_555[0] = "oplus";
        v7_555[1] = Integer.valueOf(8853);
        v5_1[1492] = v7_555;
        Object[] v7_556 = new Object[2];
        v7_556[0] = "or";
        v7_556[1] = Integer.valueOf(8744);
        v5_1[1493] = v7_556;
        Object[] v7_557 = new Object[2];
        v7_557[0] = "orarr";
        v7_557[1] = Integer.valueOf(8635);
        v5_1[1494] = v7_557;
        Object[] v7_558 = new Object[2];
        v7_558[0] = "ord";
        v7_558[1] = Integer.valueOf(10845);
        v5_1[1495] = v7_558;
        Object[] v7_559 = new Object[2];
        v7_559[0] = "order";
        v7_559[1] = Integer.valueOf(8500);
        v5_1[1496] = v7_559;
        Object[] v7_560 = new Object[2];
        v7_560[0] = "orderof";
        v7_560[1] = Integer.valueOf(8500);
        v5_1[1497] = v7_560;
        Object[] v7_561 = new Object[2];
        v7_561[0] = "ordf";
        v7_561[1] = Integer.valueOf(170);
        v5_1[1498] = v7_561;
        Object[] v7_562 = new Object[2];
        v7_562[0] = "ordm";
        v7_562[1] = Integer.valueOf(186);
        v5_1[1499] = v7_562;
        Object[] v7_563 = new Object[2];
        v7_563[0] = "origof";
        v7_563[1] = Integer.valueOf(8886);
        v5_1[1500] = v7_563;
        Object[] v7_565 = new Object[2];
        v7_565[0] = "oror";
        v7_565[1] = Integer.valueOf(10838);
        v5_1[1501] = v7_565;
        Object[] v7_567 = new Object[2];
        v7_567[0] = "orslope";
        v7_567[1] = Integer.valueOf(10839);
        v5_1[1502] = v7_567;
        Object[] v7_568 = new Object[2];
        v7_568[0] = "orv";
        v7_568[1] = Integer.valueOf(10843);
        v5_1[1503] = v7_568;
        Object[] v7_569 = new Object[2];
        v7_569[0] = "oscr";
        v7_569[1] = Integer.valueOf(8500);
        v5_1[1504] = v7_569;
        Object[] v7_570 = new Object[2];
        v7_570[0] = "oslash";
        v7_570[1] = Integer.valueOf(248);
        v5_1[1505] = v7_570;
        Object[] v7_571 = new Object[2];
        v7_571[0] = "osol";
        v7_571[1] = Integer.valueOf(8856);
        v5_1[1506] = v7_571;
        Object[] v7_572 = new Object[2];
        v7_572[0] = "otilde";
        v7_572[1] = Integer.valueOf(245);
        v5_1[1507] = v7_572;
        Object[] v7_573 = new Object[2];
        v7_573[0] = "otimes";
        v7_573[1] = Integer.valueOf(8855);
        v5_1[1508] = v7_573;
        Object[] v7_574 = new Object[2];
        v7_574[0] = "otimesas";
        v7_574[1] = Integer.valueOf(10806);
        v5_1[1509] = v7_574;
        Object[] v7_575 = new Object[2];
        v7_575[0] = "ouml";
        v7_575[1] = Integer.valueOf(246);
        v5_1[1510] = v7_575;
        Object[] v7_576 = new Object[2];
        v7_576[0] = "ovbar";
        v7_576[1] = Integer.valueOf(9021);
        v5_1[1511] = v7_576;
        Object[] v7_578 = new Object[2];
        v7_578[0] = "par";
        v7_578[1] = Integer.valueOf(8741);
        v5_1[1512] = v7_578;
        Object[] v7_579 = new Object[2];
        v7_579[0] = "para";
        v7_579[1] = Integer.valueOf(182);
        v5_1[1513] = v7_579;
        Object[] v7_580 = new Object[2];
        v7_580[0] = "parallel";
        v7_580[1] = Integer.valueOf(8741);
        v5_1[1514] = v7_580;
        Object[] v7_581 = new Object[2];
        v7_581[0] = "parsim";
        v7_581[1] = Integer.valueOf(10995);
        v5_1[1515] = v7_581;
        Object[] v7_582 = new Object[2];
        v7_582[0] = "parsl";
        v7_582[1] = Integer.valueOf(11005);
        v5_1[1516] = v7_582;
        Object[] v7_583 = new Object[2];
        v7_583[0] = "part";
        v7_583[1] = Integer.valueOf(8706);
        v5_1[1517] = v7_583;
        Object[] v7_584 = new Object[2];
        v7_584[0] = "pcy";
        v7_584[1] = Integer.valueOf(1087);
        v5_1[1518] = v7_584;
        Object[] v7_585 = new Object[2];
        v7_585[0] = "percnt";
        v7_585[1] = Integer.valueOf(37);
        v5_1[1519] = v7_585;
        Object[] v7_586 = new Object[2];
        v7_586[0] = "period";
        v7_586[1] = Integer.valueOf(46);
        v5_1[1520] = v7_586;
        Object[] v7_587 = new Object[2];
        v7_587[0] = "permil";
        v7_587[1] = Integer.valueOf(8240);
        v5_1[1521] = v7_587;
        Object[] v7_589 = new Object[2];
        v7_589[0] = "perp";
        v7_589[1] = Integer.valueOf(8869);
        v5_1[1522] = v7_589;
        Object[] v7_590 = new Object[2];
        v7_590[0] = "pertenk";
        v7_590[1] = Integer.valueOf(8241);
        v5_1[1523] = v7_590;
        Object[] v7_591 = new Object[2];
        v7_591[0] = "pfr";
        v7_591[1] = Integer.valueOf(120109);
        v5_1[1524] = v7_591;
        Object[] v7_592 = new Object[2];
        v7_592[0] = "phi";
        v7_592[1] = Integer.valueOf(966);
        v5_1[1525] = v7_592;
        Object[] v7_593 = new Object[2];
        v7_593[0] = "phiv";
        v7_593[1] = Integer.valueOf(981);
        v5_1[1526] = v7_593;
        Object[] v7_594 = new Object[2];
        v7_594[0] = "phmmat";
        v7_594[1] = Integer.valueOf(8499);
        v5_1[1527] = v7_594;
        Object[] v7_595 = new Object[2];
        v7_595[0] = "phone";
        v7_595[1] = Integer.valueOf(9742);
        v5_1[1528] = v7_595;
        Object[] v7_596 = new Object[2];
        v7_596[0] = "pi";
        v7_596[1] = Integer.valueOf(960);
        v5_1[1529] = v7_596;
        Object[] v7_597 = new Object[2];
        v7_597[0] = "pitchfork";
        v7_597[1] = Integer.valueOf(8916);
        v5_1[1530] = v7_597;
        Object[] v7_598 = new Object[2];
        v7_598[0] = "piv";
        v7_598[1] = Integer.valueOf(982);
        v5_1[1531] = v7_598;
        Object[] v7_600 = new Object[2];
        v7_600[0] = "planck";
        v7_600[1] = Integer.valueOf(8463);
        v5_1[1532] = v7_600;
        Object[] v7_601 = new Object[2];
        v7_601[0] = "planckh";
        v7_601[1] = Integer.valueOf(8462);
        v5_1[1533] = v7_601;
        Object[] v7_602 = new Object[2];
        v7_602[0] = "plankv";
        v7_602[1] = Integer.valueOf(8463);
        v5_1[1534] = v7_602;
        Object[] v7_603 = new Object[2];
        v7_603[0] = "plus";
        v7_603[1] = Integer.valueOf(43);
        v5_1[1535] = v7_603;
        Object[] v7_604 = new Object[2];
        v7_604[0] = "plusacir";
        v7_604[1] = Integer.valueOf(10787);
        v5_1[1536] = v7_604;
        Object[] v7_605 = new Object[2];
        v7_605[0] = "plusb";
        v7_605[1] = Integer.valueOf(8862);
        v5_1[1537] = v7_605;
        Object[] v7_606 = new Object[2];
        v7_606[0] = "pluscir";
        v7_606[1] = Integer.valueOf(10786);
        v5_1[1538] = v7_606;
        Object[] v7_607 = new Object[2];
        v7_607[0] = "plusdo";
        v7_607[1] = Integer.valueOf(8724);
        v5_1[1539] = v7_607;
        Object[] v7_608 = new Object[2];
        v7_608[0] = "plusdu";
        v7_608[1] = Integer.valueOf(10789);
        v5_1[1540] = v7_608;
        Object[] v7_609 = new Object[2];
        v7_609[0] = "pluse";
        v7_609[1] = Integer.valueOf(10866);
        v5_1[1541] = v7_609;
        Object[] v7_611 = new Object[2];
        v7_611[0] = "plusmn";
        v7_611[1] = Integer.valueOf(177);
        v5_1[1542] = v7_611;
        Object[] v7_612 = new Object[2];
        v7_612[0] = "plussim";
        v7_612[1] = Integer.valueOf(10790);
        v5_1[1543] = v7_612;
        Object[] v7_613 = new Object[2];
        v7_613[0] = "plustwo";
        v7_613[1] = Integer.valueOf(10791);
        v5_1[1544] = v7_613;
        Object[] v7_614 = new Object[2];
        v7_614[0] = "pm";
        v7_614[1] = Integer.valueOf(177);
        v5_1[1545] = v7_614;
        Object[] v7_615 = new Object[2];
        v7_615[0] = "pointint";
        v7_615[1] = Integer.valueOf(10773);
        v5_1[1546] = v7_615;
        Object[] v7_616 = new Object[2];
        v7_616[0] = "popf";
        v7_616[1] = Integer.valueOf(120161);
        v5_1[1547] = v7_616;
        Object[] v7_617 = new Object[2];
        v7_617[0] = "pound";
        v7_617[1] = Integer.valueOf(163);
        v5_1[1548] = v7_617;
        Object[] v7_618 = new Object[2];
        v7_618[0] = "pr";
        v7_618[1] = Integer.valueOf(8826);
        v5_1[1549] = v7_618;
        Object[] v7_619 = new Object[2];
        v7_619[0] = "prE";
        v7_619[1] = Integer.valueOf(10931);
        v5_1[1550] = v7_619;
        Object[] v7_620 = new Object[2];
        v7_620[0] = "prap";
        v7_620[1] = Integer.valueOf(10935);
        v5_1[1551] = v7_620;
        Object[] v7_622 = new Object[2];
        v7_622[0] = "prcue";
        v7_622[1] = Integer.valueOf(8828);
        v5_1[1552] = v7_622;
        Object[] v7_623 = new Object[2];
        v7_623[0] = "pre";
        v7_623[1] = Integer.valueOf(10927);
        v5_1[1553] = v7_623;
        Object[] v7_624 = new Object[2];
        v7_624[0] = "prec";
        v7_624[1] = Integer.valueOf(8826);
        v5_1[1554] = v7_624;
        Object[] v7_625 = new Object[2];
        v7_625[0] = "precapprox";
        v7_625[1] = Integer.valueOf(10935);
        v5_1[1555] = v7_625;
        Object[] v7_626 = new Object[2];
        v7_626[0] = "preccurlyeq";
        v7_626[1] = Integer.valueOf(8828);
        v5_1[1556] = v7_626;
        Object[] v7_627 = new Object[2];
        v7_627[0] = "preceq";
        v7_627[1] = Integer.valueOf(10927);
        v5_1[1557] = v7_627;
        Object[] v7_628 = new Object[2];
        v7_628[0] = "precnapprox";
        v7_628[1] = Integer.valueOf(10937);
        v5_1[1558] = v7_628;
        Object[] v7_629 = new Object[2];
        v7_629[0] = "precneqq";
        v7_629[1] = Integer.valueOf(10933);
        v5_1[1559] = v7_629;
        Object[] v7_630 = new Object[2];
        v7_630[0] = "precnsim";
        v7_630[1] = Integer.valueOf(8936);
        v5_1[1560] = v7_630;
        Object[] v7_631 = new Object[2];
        v7_631[0] = "precsim";
        v7_631[1] = Integer.valueOf(8830);
        v5_1[1561] = v7_631;
        Object[] v7_633 = new Object[2];
        v7_633[0] = "prime";
        v7_633[1] = Integer.valueOf(8242);
        v5_1[1562] = v7_633;
        Object[] v7_634 = new Object[2];
        v7_634[0] = "primes";
        v7_634[1] = Integer.valueOf(8473);
        v5_1[1563] = v7_634;
        Object[] v7_635 = new Object[2];
        v7_635[0] = "prnE";
        v7_635[1] = Integer.valueOf(10933);
        v5_1[1564] = v7_635;
        Object[] v7_636 = new Object[2];
        v7_636[0] = "prnap";
        v7_636[1] = Integer.valueOf(10937);
        v5_1[1565] = v7_636;
        Object[] v7_637 = new Object[2];
        v7_637[0] = "prnsim";
        v7_637[1] = Integer.valueOf(8936);
        v5_1[1566] = v7_637;
        Object[] v7_638 = new Object[2];
        v7_638[0] = "prod";
        v7_638[1] = Integer.valueOf(8719);
        v5_1[1567] = v7_638;
        Object[] v7_639 = new Object[2];
        v7_639[0] = "profalar";
        v7_639[1] = Integer.valueOf(9006);
        v5_1[1568] = v7_639;
        Object[] v7_640 = new Object[2];
        v7_640[0] = "profline";
        v7_640[1] = Integer.valueOf(8978);
        v5_1[1569] = v7_640;
        Object[] v7_641 = new Object[2];
        v7_641[0] = "profsurf";
        v7_641[1] = Integer.valueOf(8979);
        v5_1[1570] = v7_641;
        Object[] v7_642 = new Object[2];
        v7_642[0] = "prop";
        v7_642[1] = Integer.valueOf(8733);
        v5_1[1571] = v7_642;
        Object[] v7_644 = new Object[2];
        v7_644[0] = "propto";
        v7_644[1] = Integer.valueOf(8733);
        v5_1[1572] = v7_644;
        Object[] v7_645 = new Object[2];
        v7_645[0] = "prsim";
        v7_645[1] = Integer.valueOf(8830);
        v5_1[1573] = v7_645;
        Object[] v7_646 = new Object[2];
        v7_646[0] = "prurel";
        v7_646[1] = Integer.valueOf(8880);
        v5_1[1574] = v7_646;
        Object[] v7_647 = new Object[2];
        v7_647[0] = "pscr";
        v7_647[1] = Integer.valueOf(120005);
        v5_1[1575] = v7_647;
        Object[] v7_648 = new Object[2];
        v7_648[0] = "psi";
        v7_648[1] = Integer.valueOf(968);
        v5_1[1576] = v7_648;
        Object[] v7_649 = new Object[2];
        v7_649[0] = "puncsp";
        v7_649[1] = Integer.valueOf(8200);
        v5_1[1577] = v7_649;
        Object[] v7_650 = new Object[2];
        v7_650[0] = "qfr";
        v7_650[1] = Integer.valueOf(120110);
        v5_1[1578] = v7_650;
        Object[] v7_651 = new Object[2];
        v7_651[0] = "qint";
        v7_651[1] = Integer.valueOf(10764);
        v5_1[1579] = v7_651;
        Object[] v7_652 = new Object[2];
        v7_652[0] = "qopf";
        v7_652[1] = Integer.valueOf(120162);
        v5_1[1580] = v7_652;
        Object[] v7_653 = new Object[2];
        v7_653[0] = "qprime";
        v7_653[1] = Integer.valueOf(8279);
        v5_1[1581] = v7_653;
        Object[] v7_655 = new Object[2];
        v7_655[0] = "qscr";
        v7_655[1] = Integer.valueOf(120006);
        v5_1[1582] = v7_655;
        Object[] v7_656 = new Object[2];
        v7_656[0] = "quaternions";
        v7_656[1] = Integer.valueOf(8461);
        v5_1[1583] = v7_656;
        Object[] v7_657 = new Object[2];
        v7_657[0] = "quatint";
        v7_657[1] = Integer.valueOf(10774);
        v5_1[1584] = v7_657;
        Object[] v7_658 = new Object[2];
        v7_658[0] = "quest";
        v7_658[1] = Integer.valueOf(63);
        v5_1[1585] = v7_658;
        Object[] v7_659 = new Object[2];
        v7_659[0] = "questeq";
        v7_659[1] = Integer.valueOf(8799);
        v5_1[1586] = v7_659;
        Object[] v7_660 = new Object[2];
        v7_660[0] = "quot";
        v7_660[1] = Integer.valueOf(34);
        v5_1[1587] = v7_660;
        Object[] v7_661 = new Object[2];
        v7_661[0] = "rAarr";
        v7_661[1] = Integer.valueOf(8667);
        v5_1[1588] = v7_661;
        Object[] v7_662 = new Object[2];
        v7_662[0] = "rArr";
        v7_662[1] = Integer.valueOf(8658);
        v5_1[1589] = v7_662;
        Object[] v7_663 = new Object[2];
        v7_663[0] = "rAtail";
        v7_663[1] = Integer.valueOf(10524);
        v5_1[1590] = v7_663;
        Object[] v7_664 = new Object[2];
        v7_664[0] = "rBarr";
        v7_664[1] = Integer.valueOf(10511);
        v5_1[1591] = v7_664;
        Object[] v7_666 = new Object[2];
        v7_666[0] = "rHar";
        v7_666[1] = Integer.valueOf(10596);
        v5_1[1592] = v7_666;
        Object[] v7_667 = new Object[2];
        v7_667[0] = "racute";
        v7_667[1] = Integer.valueOf(341);
        v5_1[1593] = v7_667;
        Object[] v7_668 = new Object[2];
        v7_668[0] = "radic";
        v7_668[1] = Integer.valueOf(8730);
        v5_1[1594] = v7_668;
        Object[] v7_669 = new Object[2];
        v7_669[0] = "raemptyv";
        v7_669[1] = Integer.valueOf(10675);
        v5_1[1595] = v7_669;
        Object[] v7_670 = new Object[2];
        v7_670[0] = "rang";
        v7_670[1] = Integer.valueOf(10217);
        v5_1[1596] = v7_670;
        Object[] v7_671 = new Object[2];
        v7_671[0] = "rangd";
        v7_671[1] = Integer.valueOf(10642);
        v5_1[1597] = v7_671;
        Object[] v7_672 = new Object[2];
        v7_672[0] = "range";
        v7_672[1] = Integer.valueOf(10661);
        v5_1[1598] = v7_672;
        Object[] v7_673 = new Object[2];
        v7_673[0] = "rangle";
        v7_673[1] = Integer.valueOf(10217);
        v5_1[1599] = v7_673;
        Object[] v7_674 = new Object[2];
        v7_674[0] = "raquo";
        v7_674[1] = Integer.valueOf(187);
        v5_1[1600] = v7_674;
        Object[] v7_676 = new Object[2];
        v7_676[0] = "rarr";
        v7_676[1] = Integer.valueOf(8594);
        v5_1[1601] = v7_676;
        Object[] v7_678 = new Object[2];
        v7_678[0] = "rarrap";
        v7_678[1] = Integer.valueOf(10613);
        v5_1[1602] = v7_678;
        Object[] v7_679 = new Object[2];
        v7_679[0] = "rarrb";
        v7_679[1] = Integer.valueOf(8677);
        v5_1[1603] = v7_679;
        Object[] v7_680 = new Object[2];
        v7_680[0] = "rarrbfs";
        v7_680[1] = Integer.valueOf(10528);
        v5_1[1604] = v7_680;
        Object[] v7_681 = new Object[2];
        v7_681[0] = "rarrc";
        v7_681[1] = Integer.valueOf(10547);
        v5_1[1605] = v7_681;
        Object[] v7_682 = new Object[2];
        v7_682[0] = "rarrfs";
        v7_682[1] = Integer.valueOf(10526);
        v5_1[1606] = v7_682;
        Object[] v7_683 = new Object[2];
        v7_683[0] = "rarrhk";
        v7_683[1] = Integer.valueOf(8618);
        v5_1[1607] = v7_683;
        Object[] v7_684 = new Object[2];
        v7_684[0] = "rarrlp";
        v7_684[1] = Integer.valueOf(8620);
        v5_1[1608] = v7_684;
        Object[] v7_685 = new Object[2];
        v7_685[0] = "rarrpl";
        v7_685[1] = Integer.valueOf(10565);
        v5_1[1609] = v7_685;
        Object[] v7_686 = new Object[2];
        v7_686[0] = "rarrsim";
        v7_686[1] = Integer.valueOf(10612);
        v5_1[1610] = v7_686;
        Object[] v7_687 = new Object[2];
        v7_687[0] = "rarrtl";
        v7_687[1] = Integer.valueOf(8611);
        v5_1[1611] = v7_687;
        Object[] v7_689 = new Object[2];
        v7_689[0] = "rarrw";
        v7_689[1] = Integer.valueOf(8605);
        v5_1[1612] = v7_689;
        Object[] v7_690 = new Object[2];
        v7_690[0] = "ratail";
        v7_690[1] = Integer.valueOf(10522);
        v5_1[1613] = v7_690;
        Object[] v7_691 = new Object[2];
        v7_691[0] = "ratio";
        v7_691[1] = Integer.valueOf(8758);
        v5_1[1614] = v7_691;
        Object[] v7_692 = new Object[2];
        v7_692[0] = "rationals";
        v7_692[1] = Integer.valueOf(8474);
        v5_1[1615] = v7_692;
        Object[] v7_693 = new Object[2];
        v7_693[0] = "rbarr";
        v7_693[1] = Integer.valueOf(10509);
        v5_1[1616] = v7_693;
        Object[] v7_694 = new Object[2];
        v7_694[0] = "rbbrk";
        v7_694[1] = Integer.valueOf(10099);
        v5_1[1617] = v7_694;
        Object[] v7_695 = new Object[2];
        v7_695[0] = "rbrace";
        v7_695[1] = Integer.valueOf(125);
        v5_1[1618] = v7_695;
        Object[] v7_696 = new Object[2];
        v7_696[0] = "rbrack";
        v7_696[1] = Integer.valueOf(93);
        v5_1[1619] = v7_696;
        Object[] v7_697 = new Object[2];
        v7_697[0] = "rbrke";
        v7_697[1] = Integer.valueOf(10636);
        v5_1[1620] = v7_697;
        Object[] v7_698 = new Object[2];
        v7_698[0] = "rbrksld";
        v7_698[1] = Integer.valueOf(10638);
        v5_1[1621] = v7_698;
        Object[] v7_700 = new Object[2];
        v7_700[0] = "rbrkslu";
        v7_700[1] = Integer.valueOf(10640);
        v5_1[1622] = v7_700;
        Object[] v7_701 = new Object[2];
        v7_701[0] = "rcaron";
        v7_701[1] = Integer.valueOf(345);
        v5_1[1623] = v7_701;
        Object[] v7_702 = new Object[2];
        v7_702[0] = "rcedil";
        v7_702[1] = Integer.valueOf(343);
        v5_1[1624] = v7_702;
        Object[] v7_703 = new Object[2];
        v7_703[0] = "rceil";
        v7_703[1] = Integer.valueOf(8969);
        v5_1[1625] = v7_703;
        Object[] v7_704 = new Object[2];
        v7_704[0] = "rcub";
        v7_704[1] = Integer.valueOf(125);
        v5_1[1626] = v7_704;
        Object[] v7_705 = new Object[2];
        v7_705[0] = "rcy";
        v7_705[1] = Integer.valueOf(1088);
        v5_1[1627] = v7_705;
        Object[] v7_706 = new Object[2];
        v7_706[0] = "rdca";
        v7_706[1] = Integer.valueOf(10551);
        v5_1[1628] = v7_706;
        Object[] v7_707 = new Object[2];
        v7_707[0] = "rdldhar";
        v7_707[1] = Integer.valueOf(10601);
        v5_1[1629] = v7_707;
        Object[] v7_708 = new Object[2];
        v7_708[0] = "rdquo";
        v7_708[1] = Integer.valueOf(8221);
        v5_1[1630] = v7_708;
        Object[] v7_709 = new Object[2];
        v7_709[0] = "rdquor";
        v7_709[1] = Integer.valueOf(8221);
        v5_1[1631] = v7_709;
        Object[] v7_711 = new Object[2];
        v7_711[0] = "rdsh";
        v7_711[1] = Integer.valueOf(8627);
        v5_1[1632] = v7_711;
        Object[] v7_712 = new Object[2];
        v7_712[0] = "real";
        v7_712[1] = Integer.valueOf(8476);
        v5_1[1633] = v7_712;
        Object[] v7_713 = new Object[2];
        v7_713[0] = "realine";
        v7_713[1] = Integer.valueOf(8475);
        v5_1[1634] = v7_713;
        Object[] v7_714 = new Object[2];
        v7_714[0] = "realpart";
        v7_714[1] = Integer.valueOf(8476);
        v5_1[1635] = v7_714;
        Object[] v7_715 = new Object[2];
        v7_715[0] = "reals";
        v7_715[1] = Integer.valueOf(8477);
        v5_1[1636] = v7_715;
        Object[] v7_716 = new Object[2];
        v7_716[0] = "rect";
        v7_716[1] = Integer.valueOf(9645);
        v5_1[1637] = v7_716;
        Object[] v7_717 = new Object[2];
        v7_717[0] = "reg";
        v7_717[1] = Integer.valueOf(174);
        v5_1[1638] = v7_717;
        Object[] v7_718 = new Object[2];
        v7_718[0] = "rfisht";
        v7_718[1] = Integer.valueOf(10621);
        v5_1[1639] = v7_718;
        Object[] v7_719 = new Object[2];
        v7_719[0] = "rfloor";
        v7_719[1] = Integer.valueOf(8971);
        v5_1[1640] = v7_719;
        Object[] v7_720 = new Object[2];
        v7_720[0] = "rfr";
        v7_720[1] = Integer.valueOf(120111);
        v5_1[1641] = v7_720;
        Object[] v7_722 = new Object[2];
        v7_722[0] = "rhard";
        v7_722[1] = Integer.valueOf(8641);
        v5_1[1642] = v7_722;
        Object[] v7_723 = new Object[2];
        v7_723[0] = "rharu";
        v7_723[1] = Integer.valueOf(8640);
        v5_1[1643] = v7_723;
        Object[] v7_724 = new Object[2];
        v7_724[0] = "rharul";
        v7_724[1] = Integer.valueOf(10604);
        v5_1[1644] = v7_724;
        Object[] v7_725 = new Object[2];
        v7_725[0] = "rho";
        v7_725[1] = Integer.valueOf(961);
        v5_1[1645] = v7_725;
        Object[] v7_726 = new Object[2];
        v7_726[0] = "rhov";
        v7_726[1] = Integer.valueOf(1009);
        v5_1[1646] = v7_726;
        Object[] v7_727 = new Object[2];
        v7_727[0] = "rightarrow";
        v7_727[1] = Integer.valueOf(8594);
        v5_1[1647] = v7_727;
        Object[] v7_728 = new Object[2];
        v7_728[0] = "rightarrowtail";
        v7_728[1] = Integer.valueOf(8611);
        v5_1[1648] = v7_728;
        Object[] v7_729 = new Object[2];
        v7_729[0] = "rightharpoondown";
        v7_729[1] = Integer.valueOf(8641);
        v5_1[1649] = v7_729;
        Object[] v7_730 = new Object[2];
        v7_730[0] = "rightharpoonup";
        v7_730[1] = Integer.valueOf(8640);
        v5_1[1650] = v7_730;
        Object[] v7_731 = new Object[2];
        v7_731[0] = "rightleftarrows";
        v7_731[1] = Integer.valueOf(8644);
        v5_1[1651] = v7_731;
        Object[] v7_733 = new Object[2];
        v7_733[0] = "rightleftharpoons";
        v7_733[1] = Integer.valueOf(8652);
        v5_1[1652] = v7_733;
        Object[] v7_734 = new Object[2];
        v7_734[0] = "rightrightarrows";
        v7_734[1] = Integer.valueOf(8649);
        v5_1[1653] = v7_734;
        Object[] v7_735 = new Object[2];
        v7_735[0] = "rightsquigarrow";
        v7_735[1] = Integer.valueOf(8605);
        v5_1[1654] = v7_735;
        Object[] v7_736 = new Object[2];
        v7_736[0] = "rightthreetimes";
        v7_736[1] = Integer.valueOf(8908);
        v5_1[1655] = v7_736;
        Object[] v7_737 = new Object[2];
        v7_737[0] = "ring";
        v7_737[1] = Integer.valueOf(730);
        v5_1[1656] = v7_737;
        Object[] v7_738 = new Object[2];
        v7_738[0] = "risingdotseq";
        v7_738[1] = Integer.valueOf(8787);
        v5_1[1657] = v7_738;
        Object[] v7_739 = new Object[2];
        v7_739[0] = "rlarr";
        v7_739[1] = Integer.valueOf(8644);
        v5_1[1658] = v7_739;
        Object[] v7_740 = new Object[2];
        v7_740[0] = "rlhar";
        v7_740[1] = Integer.valueOf(8652);
        v5_1[1659] = v7_740;
        Object[] v7_741 = new Object[2];
        v7_741[0] = "rlm";
        v7_741[1] = Integer.valueOf(8207);
        v5_1[1660] = v7_741;
        Object[] v7_742 = new Object[2];
        v7_742[0] = "rmoust";
        v7_742[1] = Integer.valueOf(9137);
        v5_1[1661] = v7_742;
        Object[] v7_744 = new Object[2];
        v7_744[0] = "rmoustache";
        v7_744[1] = Integer.valueOf(9137);
        v5_1[1662] = v7_744;
        Object[] v7_745 = new Object[2];
        v7_745[0] = "rnmid";
        v7_745[1] = Integer.valueOf(10990);
        v5_1[1663] = v7_745;
        Object[] v7_746 = new Object[2];
        v7_746[0] = "roang";
        v7_746[1] = Integer.valueOf(10221);
        v5_1[1664] = v7_746;
        Object[] v7_747 = new Object[2];
        v7_747[0] = "roarr";
        v7_747[1] = Integer.valueOf(8702);
        v5_1[1665] = v7_747;
        Object[] v7_748 = new Object[2];
        v7_748[0] = "robrk";
        v7_748[1] = Integer.valueOf(10215);
        v5_1[1666] = v7_748;
        Object[] v7_750 = new Object[2];
        v7_750[0] = "ropar";
        v7_750[1] = Integer.valueOf(10630);
        v5_1[1667] = v7_750;
        Object[] v7_751 = new Object[2];
        v7_751[0] = "ropf";
        v7_751[1] = Integer.valueOf(120163);
        v5_1[1668] = v7_751;
        Object[] v7_752 = new Object[2];
        v7_752[0] = "roplus";
        v7_752[1] = Integer.valueOf(10798);
        v5_1[1669] = v7_752;
        Object[] v7_753 = new Object[2];
        v7_753[0] = "rotimes";
        v7_753[1] = Integer.valueOf(10805);
        v5_1[1670] = v7_753;
        Object[] v7_754 = new Object[2];
        v7_754[0] = "rpar";
        v7_754[1] = Integer.valueOf(41);
        v5_1[1671] = v7_754;
        Object[] v7_756 = new Object[2];
        v7_756[0] = "rpargt";
        v7_756[1] = Integer.valueOf(10644);
        v5_1[1672] = v7_756;
        Object[] v7_757 = new Object[2];
        v7_757[0] = "rppolint";
        v7_757[1] = Integer.valueOf(10770);
        v5_1[1673] = v7_757;
        Object[] v7_758 = new Object[2];
        v7_758[0] = "rrarr";
        v7_758[1] = Integer.valueOf(8649);
        v5_1[1674] = v7_758;
        Object[] v7_759 = new Object[2];
        v7_759[0] = "rsaquo";
        v7_759[1] = Integer.valueOf(8250);
        v5_1[1675] = v7_759;
        Object[] v7_760 = new Object[2];
        v7_760[0] = "rscr";
        v7_760[1] = Integer.valueOf(120007);
        v5_1[1676] = v7_760;
        Object[] v7_761 = new Object[2];
        v7_761[0] = "rsh";
        v7_761[1] = Integer.valueOf(8625);
        v5_1[1677] = v7_761;
        Object[] v7_762 = new Object[2];
        v7_762[0] = "rsqb";
        v7_762[1] = Integer.valueOf(93);
        v5_1[1678] = v7_762;
        Object[] v7_763 = new Object[2];
        v7_763[0] = "rsquo";
        v7_763[1] = Integer.valueOf(8217);
        v5_1[1679] = v7_763;
        Object[] v7_764 = new Object[2];
        v7_764[0] = "rsquor";
        v7_764[1] = Integer.valueOf(8217);
        v5_1[1680] = v7_764;
        Object[] v7_765 = new Object[2];
        v7_765[0] = "rthree";
        v7_765[1] = Integer.valueOf(8908);
        v5_1[1681] = v7_765;
        Object[] v7_767 = new Object[2];
        v7_767[0] = "rtimes";
        v7_767[1] = Integer.valueOf(8906);
        v5_1[1682] = v7_767;
        Object[] v7_768 = new Object[2];
        v7_768[0] = "rtri";
        v7_768[1] = Integer.valueOf(9657);
        v5_1[1683] = v7_768;
        Object[] v7_769 = new Object[2];
        v7_769[0] = "rtrie";
        v7_769[1] = Integer.valueOf(8885);
        v5_1[1684] = v7_769;
        Object[] v7_770 = new Object[2];
        v7_770[0] = "rtrif";
        v7_770[1] = Integer.valueOf(9656);
        v5_1[1685] = v7_770;
        Object[] v7_771 = new Object[2];
        v7_771[0] = "rtriltri";
        v7_771[1] = Integer.valueOf(10702);
        v5_1[1686] = v7_771;
        Object[] v7_772 = new Object[2];
        v7_772[0] = "ruluhar";
        v7_772[1] = Integer.valueOf(10600);
        v5_1[1687] = v7_772;
        Object[] v7_773 = new Object[2];
        v7_773[0] = "rx";
        v7_773[1] = Integer.valueOf(8478);
        v5_1[1688] = v7_773;
        Object[] v7_774 = new Object[2];
        v7_774[0] = "sacute";
        v7_774[1] = Integer.valueOf(347);
        v5_1[1689] = v7_774;
        Object[] v7_775 = new Object[2];
        v7_775[0] = "sbquo";
        v7_775[1] = Integer.valueOf(8218);
        v5_1[1690] = v7_775;
        Object[] v7_776 = new Object[2];
        v7_776[0] = "sc";
        v7_776[1] = Integer.valueOf(8827);
        v5_1[1691] = v7_776;
        Object[] v7_778 = new Object[2];
        v7_778[0] = "scE";
        v7_778[1] = Integer.valueOf(10932);
        v5_1[1692] = v7_778;
        Object[] v7_779 = new Object[2];
        v7_779[0] = "scap";
        v7_779[1] = Integer.valueOf(10936);
        v5_1[1693] = v7_779;
        Object[] v7_780 = new Object[2];
        v7_780[0] = "scaron";
        v7_780[1] = Integer.valueOf(353);
        v5_1[1694] = v7_780;
        Object[] v7_781 = new Object[2];
        v7_781[0] = "sccue";
        v7_781[1] = Integer.valueOf(8829);
        v5_1[1695] = v7_781;
        Object[] v7_782 = new Object[2];
        v7_782[0] = "sce";
        v7_782[1] = Integer.valueOf(10928);
        v5_1[1696] = v7_782;
        Object[] v7_783 = new Object[2];
        v7_783[0] = "scedil";
        v7_783[1] = Integer.valueOf(351);
        v5_1[1697] = v7_783;
        Object[] v7_784 = new Object[2];
        v7_784[0] = "scirc";
        v7_784[1] = Integer.valueOf(349);
        v5_1[1698] = v7_784;
        Object[] v7_785 = new Object[2];
        v7_785[0] = "scnE";
        v7_785[1] = Integer.valueOf(10934);
        v5_1[1699] = v7_785;
        Object[] v7_786 = new Object[2];
        v7_786[0] = "scnap";
        v7_786[1] = Integer.valueOf(10938);
        v5_1[1700] = v7_786;
        Object[] v7_788 = new Object[2];
        v7_788[0] = "scnsim";
        v7_788[1] = Integer.valueOf(8937);
        v5_1[1701] = v7_788;
        Object[] v7_790 = new Object[2];
        v7_790[0] = "scpolint";
        v7_790[1] = Integer.valueOf(10771);
        v5_1[1702] = v7_790;
        Object[] v7_791 = new Object[2];
        v7_791[0] = "scsim";
        v7_791[1] = Integer.valueOf(8831);
        v5_1[1703] = v7_791;
        Object[] v7_792 = new Object[2];
        v7_792[0] = "scy";
        v7_792[1] = Integer.valueOf(1089);
        v5_1[1704] = v7_792;
        Object[] v7_793 = new Object[2];
        v7_793[0] = "sdot";
        v7_793[1] = Integer.valueOf(8901);
        v5_1[1705] = v7_793;
        Object[] v7_794 = new Object[2];
        v7_794[0] = "sdotb";
        v7_794[1] = Integer.valueOf(8865);
        v5_1[1706] = v7_794;
        Object[] v7_795 = new Object[2];
        v7_795[0] = "sdote";
        v7_795[1] = Integer.valueOf(10854);
        v5_1[1707] = v7_795;
        Object[] v7_796 = new Object[2];
        v7_796[0] = "seArr";
        v7_796[1] = Integer.valueOf(8664);
        v5_1[1708] = v7_796;
        Object[] v7_797 = new Object[2];
        v7_797[0] = "searhk";
        v7_797[1] = Integer.valueOf(10533);
        v5_1[1709] = v7_797;
        Object[] v7_798 = new Object[2];
        v7_798[0] = "searr";
        v7_798[1] = Integer.valueOf(8600);
        v5_1[1710] = v7_798;
        Object[] v7_799 = new Object[2];
        v7_799[0] = "searrow";
        v7_799[1] = Integer.valueOf(8600);
        v5_1[1711] = v7_799;
        Object[] v7_801 = new Object[2];
        v7_801[0] = "sect";
        v7_801[1] = Integer.valueOf(167);
        v5_1[1712] = v7_801;
        Object[] v7_802 = new Object[2];
        v7_802[0] = "semi";
        v7_802[1] = Integer.valueOf(59);
        v5_1[1713] = v7_802;
        Object[] v7_803 = new Object[2];
        v7_803[0] = "seswar";
        v7_803[1] = Integer.valueOf(10537);
        v5_1[1714] = v7_803;
        Object[] v7_804 = new Object[2];
        v7_804[0] = "setminus";
        v7_804[1] = Integer.valueOf(8726);
        v5_1[1715] = v7_804;
        Object[] v7_805 = new Object[2];
        v7_805[0] = "setmn";
        v7_805[1] = Integer.valueOf(8726);
        v5_1[1716] = v7_805;
        Object[] v7_806 = new Object[2];
        v7_806[0] = "sext";
        v7_806[1] = Integer.valueOf(10038);
        v5_1[1717] = v7_806;
        Object[] v7_807 = new Object[2];
        v7_807[0] = "sfr";
        v7_807[1] = Integer.valueOf(120112);
        v5_1[1718] = v7_807;
        Object[] v7_808 = new Object[2];
        v7_808[0] = "sfrown";
        v7_808[1] = Integer.valueOf(8994);
        v5_1[1719] = v7_808;
        Object[] v7_809 = new Object[2];
        v7_809[0] = "sharp";
        v7_809[1] = Integer.valueOf(9839);
        v5_1[1720] = v7_809;
        Object[] v7_810 = new Object[2];
        v7_810[0] = "shchcy";
        v7_810[1] = Integer.valueOf(1097);
        v5_1[1721] = v7_810;
        Object[] v7_812 = new Object[2];
        v7_812[0] = "shcy";
        v7_812[1] = Integer.valueOf(1096);
        v5_1[1722] = v7_812;
        Object[] v7_813 = new Object[2];
        v7_813[0] = "shortmid";
        v7_813[1] = Integer.valueOf(8739);
        v5_1[1723] = v7_813;
        Object[] v7_814 = new Object[2];
        v7_814[0] = "shortparallel";
        v7_814[1] = Integer.valueOf(8741);
        v5_1[1724] = v7_814;
        Object[] v7_815 = new Object[2];
        v7_815[0] = "shy";
        v7_815[1] = Integer.valueOf(173);
        v5_1[1725] = v7_815;
        Object[] v7_816 = new Object[2];
        v7_816[0] = "sigma";
        v7_816[1] = Integer.valueOf(963);
        v5_1[1726] = v7_816;
        Object[] v7_817 = new Object[2];
        v7_817[0] = "sigmaf";
        v7_817[1] = Integer.valueOf(962);
        v5_1[1727] = v7_817;
        Object[] v7_818 = new Object[2];
        v7_818[0] = "sigmav";
        v7_818[1] = Integer.valueOf(962);
        v5_1[1728] = v7_818;
        Object[] v7_819 = new Object[2];
        v7_819[0] = "sim";
        v7_819[1] = Integer.valueOf(8764);
        v5_1[1729] = v7_819;
        Object[] v7_820 = new Object[2];
        v7_820[0] = "simdot";
        v7_820[1] = Integer.valueOf(10858);
        v5_1[1730] = v7_820;
        Object[] v7_821 = new Object[2];
        v7_821[0] = "sime";
        v7_821[1] = Integer.valueOf(8771);
        v5_1[1731] = v7_821;
        Object[] v7_823 = new Object[2];
        v7_823[0] = "simeq";
        v7_823[1] = Integer.valueOf(8771);
        v5_1[1732] = v7_823;
        Object[] v7_824 = new Object[2];
        v7_824[0] = "simg";
        v7_824[1] = Integer.valueOf(10910);
        v5_1[1733] = v7_824;
        Object[] v7_825 = new Object[2];
        v7_825[0] = "simgE";
        v7_825[1] = Integer.valueOf(10912);
        v5_1[1734] = v7_825;
        Object[] v7_826 = new Object[2];
        v7_826[0] = "siml";
        v7_826[1] = Integer.valueOf(10909);
        v5_1[1735] = v7_826;
        Object[] v7_827 = new Object[2];
        v7_827[0] = "simlE";
        v7_827[1] = Integer.valueOf(10911);
        v5_1[1736] = v7_827;
        Object[] v7_828 = new Object[2];
        v7_828[0] = "simne";
        v7_828[1] = Integer.valueOf(8774);
        v5_1[1737] = v7_828;
        Object[] v7_829 = new Object[2];
        v7_829[0] = "simplus";
        v7_829[1] = Integer.valueOf(10788);
        v5_1[1738] = v7_829;
        Object[] v7_830 = new Object[2];
        v7_830[0] = "simrarr";
        v7_830[1] = Integer.valueOf(10610);
        v5_1[1739] = v7_830;
        Object[] v7_831 = new Object[2];
        v7_831[0] = "slarr";
        v7_831[1] = Integer.valueOf(8592);
        v5_1[1740] = v7_831;
        Object[] v7_832 = new Object[2];
        v7_832[0] = "smallsetminus";
        v7_832[1] = Integer.valueOf(8726);
        v5_1[1741] = v7_832;
        Object[] v7_834 = new Object[2];
        v7_834[0] = "smashp";
        v7_834[1] = Integer.valueOf(10803);
        v5_1[1742] = v7_834;
        Object[] v7_835 = new Object[2];
        v7_835[0] = "smeparsl";
        v7_835[1] = Integer.valueOf(10724);
        v5_1[1743] = v7_835;
        Object[] v7_836 = new Object[2];
        v7_836[0] = "smid";
        v7_836[1] = Integer.valueOf(8739);
        v5_1[1744] = v7_836;
        Object[] v7_837 = new Object[2];
        v7_837[0] = "smile";
        v7_837[1] = Integer.valueOf(8995);
        v5_1[1745] = v7_837;
        Object[] v7_838 = new Object[2];
        v7_838[0] = "smt";
        v7_838[1] = Integer.valueOf(10922);
        v5_1[1746] = v7_838;
        Object[] v7_839 = new Object[2];
        v7_839[0] = "smte";
        v7_839[1] = Integer.valueOf(10924);
        v5_1[1747] = v7_839;
        Object[] v7_840 = new Object[2];
        v7_840[0] = "softcy";
        v7_840[1] = Integer.valueOf(1100);
        v5_1[1748] = v7_840;
        Object[] v7_841 = new Object[2];
        v7_841[0] = "sol";
        v7_841[1] = Integer.valueOf(47);
        v5_1[1749] = v7_841;
        Object[] v7_842 = new Object[2];
        v7_842[0] = "solb";
        v7_842[1] = Integer.valueOf(10692);
        v5_1[1750] = v7_842;
        Object[] v7_843 = new Object[2];
        v7_843[0] = "solbar";
        v7_843[1] = Integer.valueOf(9023);
        v5_1[1751] = v7_843;
        Object[] v7_845 = new Object[2];
        v7_845[0] = "sopf";
        v7_845[1] = Integer.valueOf(120164);
        v5_1[1752] = v7_845;
        Object[] v7_846 = new Object[2];
        v7_846[0] = "spades";
        v7_846[1] = Integer.valueOf(9824);
        v5_1[1753] = v7_846;
        Object[] v7_847 = new Object[2];
        v7_847[0] = "spadesuit";
        v7_847[1] = Integer.valueOf(9824);
        v5_1[1754] = v7_847;
        Object[] v7_848 = new Object[2];
        v7_848[0] = "spar";
        v7_848[1] = Integer.valueOf(8741);
        v5_1[1755] = v7_848;
        Object[] v7_849 = new Object[2];
        v7_849[0] = "sqcap";
        v7_849[1] = Integer.valueOf(8851);
        v5_1[1756] = v7_849;
        Object[] v7_850 = new Object[2];
        v7_850[0] = "sqcup";
        v7_850[1] = Integer.valueOf(8852);
        v5_1[1757] = v7_850;
        Object[] v7_851 = new Object[2];
        v7_851[0] = "sqsub";
        v7_851[1] = Integer.valueOf(8847);
        v5_1[1758] = v7_851;
        Object[] v7_852 = new Object[2];
        v7_852[0] = "sqsube";
        v7_852[1] = Integer.valueOf(8849);
        v5_1[1759] = v7_852;
        Object[] v7_853 = new Object[2];
        v7_853[0] = "sqsubset";
        v7_853[1] = Integer.valueOf(8847);
        v5_1[1760] = v7_853;
        Object[] v7_854 = new Object[2];
        v7_854[0] = "sqsubseteq";
        v7_854[1] = Integer.valueOf(8849);
        v5_1[1761] = v7_854;
        Object[] v7_856 = new Object[2];
        v7_856[0] = "sqsup";
        v7_856[1] = Integer.valueOf(8848);
        v5_1[1762] = v7_856;
        Object[] v7_857 = new Object[2];
        v7_857[0] = "sqsupe";
        v7_857[1] = Integer.valueOf(8850);
        v5_1[1763] = v7_857;
        Object[] v7_858 = new Object[2];
        v7_858[0] = "sqsupset";
        v7_858[1] = Integer.valueOf(8848);
        v5_1[1764] = v7_858;
        Object[] v7_859 = new Object[2];
        v7_859[0] = "sqsupseteq";
        v7_859[1] = Integer.valueOf(8850);
        v5_1[1765] = v7_859;
        Object[] v7_860 = new Object[2];
        v7_860[0] = "squ";
        v7_860[1] = Integer.valueOf(9633);
        v5_1[1766] = v7_860;
        Object[] v7_861 = new Object[2];
        v7_861[0] = "square";
        v7_861[1] = Integer.valueOf(9633);
        v5_1[1767] = v7_861;
        Object[] v7_862 = new Object[2];
        v7_862[0] = "squarf";
        v7_862[1] = Integer.valueOf(9642);
        v5_1[1768] = v7_862;
        Object[] v7_863 = new Object[2];
        v7_863[0] = "squf";
        v7_863[1] = Integer.valueOf(9642);
        v5_1[1769] = v7_863;
        Object[] v7_864 = new Object[2];
        v7_864[0] = "srarr";
        v7_864[1] = Integer.valueOf(8594);
        v5_1[1770] = v7_864;
        Object[] v7_865 = new Object[2];
        v7_865[0] = "sscr";
        v7_865[1] = Integer.valueOf(120008);
        v5_1[1771] = v7_865;
        Object[] v7_867 = new Object[2];
        v7_867[0] = "ssetmn";
        v7_867[1] = Integer.valueOf(8726);
        v5_1[1772] = v7_867;
        Object[] v7_868 = new Object[2];
        v7_868[0] = "ssmile";
        v7_868[1] = Integer.valueOf(8995);
        v5_1[1773] = v7_868;
        Object[] v7_869 = new Object[2];
        v7_869[0] = "sstarf";
        v7_869[1] = Integer.valueOf(8902);
        v5_1[1774] = v7_869;
        Object[] v7_870 = new Object[2];
        v7_870[0] = "star";
        v7_870[1] = Integer.valueOf(9734);
        v5_1[1775] = v7_870;
        Object[] v7_871 = new Object[2];
        v7_871[0] = "starf";
        v7_871[1] = Integer.valueOf(9733);
        v5_1[1776] = v7_871;
        Object[] v7_872 = new Object[2];
        v7_872[0] = "straightepsilon";
        v7_872[1] = Integer.valueOf(1013);
        v5_1[1777] = v7_872;
        Object[] v7_873 = new Object[2];
        v7_873[0] = "straightphi";
        v7_873[1] = Integer.valueOf(981);
        v5_1[1778] = v7_873;
        Object[] v7_874 = new Object[2];
        v7_874[0] = "strns";
        v7_874[1] = Integer.valueOf(175);
        v5_1[1779] = v7_874;
        Object[] v7_875 = new Object[2];
        v7_875[0] = "sub";
        v7_875[1] = Integer.valueOf(8834);
        v5_1[1780] = v7_875;
        Object[] v7_876 = new Object[2];
        v7_876[0] = "subE";
        v7_876[1] = Integer.valueOf(10949);
        v5_1[1781] = v7_876;
        Object[] v7_878 = new Object[2];
        v7_878[0] = "subdot";
        v7_878[1] = Integer.valueOf(10941);
        v5_1[1782] = v7_878;
        Object[] v7_879 = new Object[2];
        v7_879[0] = "sube";
        v7_879[1] = Integer.valueOf(8838);
        v5_1[1783] = v7_879;
        Object[] v7_880 = new Object[2];
        v7_880[0] = "subedot";
        v7_880[1] = Integer.valueOf(10947);
        v5_1[1784] = v7_880;
        Object[] v7_881 = new Object[2];
        v7_881[0] = "submult";
        v7_881[1] = Integer.valueOf(10945);
        v5_1[1785] = v7_881;
        Object[] v7_882 = new Object[2];
        v7_882[0] = "subnE";
        v7_882[1] = Integer.valueOf(10955);
        v5_1[1786] = v7_882;
        Object[] v7_883 = new Object[2];
        v7_883[0] = "subne";
        v7_883[1] = Integer.valueOf(8842);
        v5_1[1787] = v7_883;
        Object[] v7_884 = new Object[2];
        v7_884[0] = "subplus";
        v7_884[1] = Integer.valueOf(10943);
        v5_1[1788] = v7_884;
        Object[] v7_885 = new Object[2];
        v7_885[0] = "subrarr";
        v7_885[1] = Integer.valueOf(10617);
        v5_1[1789] = v7_885;
        Object[] v7_886 = new Object[2];
        v7_886[0] = "subset";
        v7_886[1] = Integer.valueOf(8834);
        v5_1[1790] = v7_886;
        Object[] v7_887 = new Object[2];
        v7_887[0] = "subseteq";
        v7_887[1] = Integer.valueOf(8838);
        v5_1[1791] = v7_887;
        Object[] v7_889 = new Object[2];
        v7_889[0] = "subseteqq";
        v7_889[1] = Integer.valueOf(10949);
        v5_1[1792] = v7_889;
        Object[] v7_890 = new Object[2];
        v7_890[0] = "subsetneq";
        v7_890[1] = Integer.valueOf(8842);
        v5_1[1793] = v7_890;
        Object[] v7_891 = new Object[2];
        v7_891[0] = "subsetneqq";
        v7_891[1] = Integer.valueOf(10955);
        v5_1[1794] = v7_891;
        Object[] v7_892 = new Object[2];
        v7_892[0] = "subsim";
        v7_892[1] = Integer.valueOf(10951);
        v5_1[1795] = v7_892;
        Object[] v7_893 = new Object[2];
        v7_893[0] = "subsub";
        v7_893[1] = Integer.valueOf(10965);
        v5_1[1796] = v7_893;
        Object[] v7_894 = new Object[2];
        v7_894[0] = "subsup";
        v7_894[1] = Integer.valueOf(10963);
        v5_1[1797] = v7_894;
        Object[] v7_895 = new Object[2];
        v7_895[0] = "succ";
        v7_895[1] = Integer.valueOf(8827);
        v5_1[1798] = v7_895;
        Object[] v7_896 = new Object[2];
        v7_896[0] = "succapprox";
        v7_896[1] = Integer.valueOf(10936);
        v5_1[1799] = v7_896;
        Object[] v7_897 = new Object[2];
        v7_897[0] = "succcurlyeq";
        v7_897[1] = Integer.valueOf(8829);
        v5_1[1800] = v7_897;
        Object[] v7_899 = new Object[2];
        v7_899[0] = "succeq";
        v7_899[1] = Integer.valueOf(10928);
        v5_1[1801] = v7_899;
        Object[] v7_901 = new Object[2];
        v7_901[0] = "succnapprox";
        v7_901[1] = Integer.valueOf(10938);
        v5_1[1802] = v7_901;
        Object[] v7_902 = new Object[2];
        v7_902[0] = "succneqq";
        v7_902[1] = Integer.valueOf(10934);
        v5_1[1803] = v7_902;
        Object[] v7_903 = new Object[2];
        v7_903[0] = "succnsim";
        v7_903[1] = Integer.valueOf(8937);
        v5_1[1804] = v7_903;
        Object[] v7_904 = new Object[2];
        v7_904[0] = "succsim";
        v7_904[1] = Integer.valueOf(8831);
        v5_1[1805] = v7_904;
        Object[] v7_905 = new Object[2];
        v7_905[0] = "sum";
        v7_905[1] = Integer.valueOf(8721);
        v5_1[1806] = v7_905;
        Object[] v7_906 = new Object[2];
        v7_906[0] = "sung";
        v7_906[1] = Integer.valueOf(9834);
        v5_1[1807] = v7_906;
        Object[] v7_907 = new Object[2];
        v7_907[0] = "sup1";
        v7_907[1] = Integer.valueOf(185);
        v5_1[1808] = v7_907;
        Object[] v7_908 = new Object[2];
        v7_908[0] = "sup2";
        v7_908[1] = Integer.valueOf(178);
        v5_1[1809] = v7_908;
        Object[] v7_909 = new Object[2];
        v7_909[0] = "sup3";
        v7_909[1] = Integer.valueOf(179);
        v5_1[1810] = v7_909;
        Object[] v7_910 = new Object[2];
        v7_910[0] = "sup";
        v7_910[1] = Integer.valueOf(8835);
        v5_1[1811] = v7_910;
        Object[] v7_912 = new Object[2];
        v7_912[0] = "supE";
        v7_912[1] = Integer.valueOf(10950);
        v5_1[1812] = v7_912;
        Object[] v7_913 = new Object[2];
        v7_913[0] = "supdot";
        v7_913[1] = Integer.valueOf(10942);
        v5_1[1813] = v7_913;
        Object[] v7_914 = new Object[2];
        v7_914[0] = "supdsub";
        v7_914[1] = Integer.valueOf(10968);
        v5_1[1814] = v7_914;
        Object[] v7_915 = new Object[2];
        v7_915[0] = "supe";
        v7_915[1] = Integer.valueOf(8839);
        v5_1[1815] = v7_915;
        Object[] v7_916 = new Object[2];
        v7_916[0] = "supedot";
        v7_916[1] = Integer.valueOf(10948);
        v5_1[1816] = v7_916;
        Object[] v7_917 = new Object[2];
        v7_917[0] = "suphsol";
        v7_917[1] = Integer.valueOf(10185);
        v5_1[1817] = v7_917;
        Object[] v7_918 = new Object[2];
        v7_918[0] = "suphsub";
        v7_918[1] = Integer.valueOf(10967);
        v5_1[1818] = v7_918;
        Object[] v7_919 = new Object[2];
        v7_919[0] = "suplarr";
        v7_919[1] = Integer.valueOf(10619);
        v5_1[1819] = v7_919;
        Object[] v7_920 = new Object[2];
        v7_920[0] = "supmult";
        v7_920[1] = Integer.valueOf(10946);
        v5_1[1820] = v7_920;
        Object[] v7_921 = new Object[2];
        v7_921[0] = "supnE";
        v7_921[1] = Integer.valueOf(10956);
        v5_1[1821] = v7_921;
        Object[] v7_923 = new Object[2];
        v7_923[0] = "supne";
        v7_923[1] = Integer.valueOf(8843);
        v5_1[1822] = v7_923;
        Object[] v7_924 = new Object[2];
        v7_924[0] = "supplus";
        v7_924[1] = Integer.valueOf(10944);
        v5_1[1823] = v7_924;
        Object[] v7_925 = new Object[2];
        v7_925[0] = "supset";
        v7_925[1] = Integer.valueOf(8835);
        v5_1[1824] = v7_925;
        Object[] v7_926 = new Object[2];
        v7_926[0] = "supseteq";
        v7_926[1] = Integer.valueOf(8839);
        v5_1[1825] = v7_926;
        Object[] v7_927 = new Object[2];
        v7_927[0] = "supseteqq";
        v7_927[1] = Integer.valueOf(10950);
        v5_1[1826] = v7_927;
        Object[] v7_928 = new Object[2];
        v7_928[0] = "supsetneq";
        v7_928[1] = Integer.valueOf(8843);
        v5_1[1827] = v7_928;
        Object[] v7_929 = new Object[2];
        v7_929[0] = "supsetneqq";
        v7_929[1] = Integer.valueOf(10956);
        v5_1[1828] = v7_929;
        Object[] v7_930 = new Object[2];
        v7_930[0] = "supsim";
        v7_930[1] = Integer.valueOf(10952);
        v5_1[1829] = v7_930;
        Object[] v7_931 = new Object[2];
        v7_931[0] = "supsub";
        v7_931[1] = Integer.valueOf(10964);
        v5_1[1830] = v7_931;
        Object[] v7_932 = new Object[2];
        v7_932[0] = "supsup";
        v7_932[1] = Integer.valueOf(10966);
        v5_1[1831] = v7_932;
        Object[] v7_934 = new Object[2];
        v7_934[0] = "swArr";
        v7_934[1] = Integer.valueOf(8665);
        v5_1[1832] = v7_934;
        Object[] v7_935 = new Object[2];
        v7_935[0] = "swarhk";
        v7_935[1] = Integer.valueOf(10534);
        v5_1[1833] = v7_935;
        Object[] v7_936 = new Object[2];
        v7_936[0] = "swarr";
        v7_936[1] = Integer.valueOf(8601);
        v5_1[1834] = v7_936;
        Object[] v7_937 = new Object[2];
        v7_937[0] = "swarrow";
        v7_937[1] = Integer.valueOf(8601);
        v5_1[1835] = v7_937;
        Object[] v7_938 = new Object[2];
        v7_938[0] = "swnwar";
        v7_938[1] = Integer.valueOf(10538);
        v5_1[1836] = v7_938;
        Object[] v7_939 = new Object[2];
        v7_939[0] = "szlig";
        v7_939[1] = Integer.valueOf(223);
        v5_1[1837] = v7_939;
        Object[] v7_940 = new Object[2];
        v7_940[0] = "target";
        v7_940[1] = Integer.valueOf(8982);
        v5_1[1838] = v7_940;
        Object[] v7_941 = new Object[2];
        v7_941[0] = "tau";
        v7_941[1] = Integer.valueOf(964);
        v5_1[1839] = v7_941;
        Object[] v7_942 = new Object[2];
        v7_942[0] = "tbrk";
        v7_942[1] = Integer.valueOf(9140);
        v5_1[1840] = v7_942;
        Object[] v7_943 = new Object[2];
        v7_943[0] = "tcaron";
        v7_943[1] = Integer.valueOf(357);
        v5_1[1841] = v7_943;
        Object[] v7_945 = new Object[2];
        v7_945[0] = "tcedil";
        v7_945[1] = Integer.valueOf(355);
        v5_1[1842] = v7_945;
        Object[] v7_946 = new Object[2];
        v7_946[0] = "tcy";
        v7_946[1] = Integer.valueOf(1090);
        v5_1[1843] = v7_946;
        Object[] v7_947 = new Object[2];
        v7_947[0] = "tdot";
        v7_947[1] = Integer.valueOf(8411);
        v5_1[1844] = v7_947;
        Object[] v7_948 = new Object[2];
        v7_948[0] = "telrec";
        v7_948[1] = Integer.valueOf(8981);
        v5_1[1845] = v7_948;
        Object[] v7_949 = new Object[2];
        v7_949[0] = "tfr";
        v7_949[1] = Integer.valueOf(120113);
        v5_1[1846] = v7_949;
        Object[] v7_950 = new Object[2];
        v7_950[0] = "there4";
        v7_950[1] = Integer.valueOf(8756);
        v5_1[1847] = v7_950;
        Object[] v7_951 = new Object[2];
        v7_951[0] = "therefore";
        v7_951[1] = Integer.valueOf(8756);
        v5_1[1848] = v7_951;
        Object[] v7_952 = new Object[2];
        v7_952[0] = "theta";
        v7_952[1] = Integer.valueOf(952);
        v5_1[1849] = v7_952;
        Object[] v7_953 = new Object[2];
        v7_953[0] = "thetasym";
        v7_953[1] = Integer.valueOf(977);
        v5_1[1850] = v7_953;
        Object[] v7_954 = new Object[2];
        v7_954[0] = "thetav";
        v7_954[1] = Integer.valueOf(977);
        v5_1[1851] = v7_954;
        Object[] v7_956 = new Object[2];
        v7_956[0] = "thickapprox";
        v7_956[1] = Integer.valueOf(8776);
        v5_1[1852] = v7_956;
        Object[] v7_957 = new Object[2];
        v7_957[0] = "thicksim";
        v7_957[1] = Integer.valueOf(8764);
        v5_1[1853] = v7_957;
        Object[] v7_958 = new Object[2];
        v7_958[0] = "thinsp";
        v7_958[1] = Integer.valueOf(8201);
        v5_1[1854] = v7_958;
        Object[] v7_959 = new Object[2];
        v7_959[0] = "thkap";
        v7_959[1] = Integer.valueOf(8776);
        v5_1[1855] = v7_959;
        Object[] v7_960 = new Object[2];
        v7_960[0] = "thksim";
        v7_960[1] = Integer.valueOf(8764);
        v5_1[1856] = v7_960;
        Object[] v7_961 = new Object[2];
        v7_961[0] = "thorn";
        v7_961[1] = Integer.valueOf(254);
        v5_1[1857] = v7_961;
        Object[] v7_962 = new Object[2];
        v7_962[0] = "tilde";
        v7_962[1] = Integer.valueOf(732);
        v5_1[1858] = v7_962;
        Object[] v7_963 = new Object[2];
        v7_963[0] = "times";
        v7_963[1] = Integer.valueOf(215);
        v5_1[1859] = v7_963;
        Object[] v7_964 = new Object[2];
        v7_964[0] = "timesb";
        v7_964[1] = Integer.valueOf(8864);
        v5_1[1860] = v7_964;
        Object[] v7_965 = new Object[2];
        v7_965[0] = "timesbar";
        v7_965[1] = Integer.valueOf(10801);
        v5_1[1861] = v7_965;
        Object[] v7_967 = new Object[2];
        v7_967[0] = "timesd";
        v7_967[1] = Integer.valueOf(10800);
        v5_1[1862] = v7_967;
        Object[] v7_968 = new Object[2];
        v7_968[0] = "tint";
        v7_968[1] = Integer.valueOf(8749);
        v5_1[1863] = v7_968;
        Object[] v7_969 = new Object[2];
        v7_969[0] = "toea";
        v7_969[1] = Integer.valueOf(10536);
        v5_1[1864] = v7_969;
        Object[] v7_970 = new Object[2];
        v7_970[0] = "top";
        v7_970[1] = Integer.valueOf(8868);
        v5_1[1865] = v7_970;
        Object[] v7_971 = new Object[2];
        v7_971[0] = "topbot";
        v7_971[1] = Integer.valueOf(9014);
        v5_1[1866] = v7_971;
        Object[] v7_972 = new Object[2];
        v7_972[0] = "topcir";
        v7_972[1] = Integer.valueOf(10993);
        v5_1[1867] = v7_972;
        Object[] v7_973 = new Object[2];
        v7_973[0] = "topf";
        v7_973[1] = Integer.valueOf(120165);
        v5_1[1868] = v7_973;
        Object[] v7_974 = new Object[2];
        v7_974[0] = "topfork";
        v7_974[1] = Integer.valueOf(10970);
        v5_1[1869] = v7_974;
        Object[] v7_975 = new Object[2];
        v7_975[0] = "tosa";
        v7_975[1] = Integer.valueOf(10537);
        v5_1[1870] = v7_975;
        Object[] v7_976 = new Object[2];
        v7_976[0] = "tprime";
        v7_976[1] = Integer.valueOf(8244);
        v5_1[1871] = v7_976;
        Object[] v7_978 = new Object[2];
        v7_978[0] = "trade";
        v7_978[1] = Integer.valueOf(8482);
        v5_1[1872] = v7_978;
        Object[] v7_979 = new Object[2];
        v7_979[0] = "triangle";
        v7_979[1] = Integer.valueOf(9653);
        v5_1[1873] = v7_979;
        Object[] v7_980 = new Object[2];
        v7_980[0] = "triangledown";
        v7_980[1] = Integer.valueOf(9663);
        v5_1[1874] = v7_980;
        Object[] v7_981 = new Object[2];
        v7_981[0] = "triangleleft";
        v7_981[1] = Integer.valueOf(9667);
        v5_1[1875] = v7_981;
        Object[] v7_982 = new Object[2];
        v7_982[0] = "trianglelefteq";
        v7_982[1] = Integer.valueOf(8884);
        v5_1[1876] = v7_982;
        Object[] v7_983 = new Object[2];
        v7_983[0] = "triangleq";
        v7_983[1] = Integer.valueOf(8796);
        v5_1[1877] = v7_983;
        Object[] v7_984 = new Object[2];
        v7_984[0] = "triangleright";
        v7_984[1] = Integer.valueOf(9657);
        v5_1[1878] = v7_984;
        Object[] v7_985 = new Object[2];
        v7_985[0] = "trianglerighteq";
        v7_985[1] = Integer.valueOf(8885);
        v5_1[1879] = v7_985;
        Object[] v7_986 = new Object[2];
        v7_986[0] = "tridot";
        v7_986[1] = Integer.valueOf(9708);
        v5_1[1880] = v7_986;
        Object[] v7_987 = new Object[2];
        v7_987[0] = "trie";
        v7_987[1] = Integer.valueOf(8796);
        v5_1[1881] = v7_987;
        Object[] v7_989 = new Object[2];
        v7_989[0] = "triminus";
        v7_989[1] = Integer.valueOf(10810);
        v5_1[1882] = v7_989;
        Object[] v7_990 = new Object[2];
        v7_990[0] = "triplus";
        v7_990[1] = Integer.valueOf(10809);
        v5_1[1883] = v7_990;
        Object[] v7_991 = new Object[2];
        v7_991[0] = "trisb";
        v7_991[1] = Integer.valueOf(10701);
        v5_1[1884] = v7_991;
        Object[] v7_992 = new Object[2];
        v7_992[0] = "tritime";
        v7_992[1] = Integer.valueOf(10811);
        v5_1[1885] = v7_992;
        Object[] v7_993 = new Object[2];
        v7_993[0] = "trpezium";
        v7_993[1] = Integer.valueOf(9186);
        v5_1[1886] = v7_993;
        Object[] v7_994 = new Object[2];
        v7_994[0] = "tscr";
        v7_994[1] = Integer.valueOf(120009);
        v5_1[1887] = v7_994;
        Object[] v7_995 = new Object[2];
        v7_995[0] = "tscy";
        v7_995[1] = Integer.valueOf(1094);
        v5_1[1888] = v7_995;
        Object[] v7_996 = new Object[2];
        v7_996[0] = "tshcy";
        v7_996[1] = Integer.valueOf(1115);
        v5_1[1889] = v7_996;
        Object[] v7_997 = new Object[2];
        v7_997[0] = "tstrok";
        v7_997[1] = Integer.valueOf(359);
        v5_1[1890] = v7_997;
        Object[] v7_998 = new Object[2];
        v7_998[0] = "twixt";
        v7_998[1] = Integer.valueOf(8812);
        v5_1[1891] = v7_998;
        Object[] v7_1000 = new Object[2];
        v7_1000[0] = "twoheadleftarrow";
        v7_1000[1] = Integer.valueOf(8606);
        v5_1[1892] = v7_1000;
        Object[] v7_1001 = new Object[2];
        v7_1001[0] = "twoheadrightarrow";
        v7_1001[1] = Integer.valueOf(8608);
        v5_1[1893] = v7_1001;
        Object[] v7_1002 = new Object[2];
        v7_1002[0] = "uArr";
        v7_1002[1] = Integer.valueOf(8657);
        v5_1[1894] = v7_1002;
        Object[] v7_1003 = new Object[2];
        v7_1003[0] = "uHar";
        v7_1003[1] = Integer.valueOf(10595);
        v5_1[1895] = v7_1003;
        Object[] v7_1004 = new Object[2];
        v7_1004[0] = "uacute";
        v7_1004[1] = Integer.valueOf(250);
        v5_1[1896] = v7_1004;
        Object[] v7_1005 = new Object[2];
        v7_1005[0] = "uarr";
        v7_1005[1] = Integer.valueOf(8593);
        v5_1[1897] = v7_1005;
        Object[] v7_1006 = new Object[2];
        v7_1006[0] = "ubrcy";
        v7_1006[1] = Integer.valueOf(1118);
        v5_1[1898] = v7_1006;
        Object[] v7_1007 = new Object[2];
        v7_1007[0] = "ubreve";
        v7_1007[1] = Integer.valueOf(365);
        v5_1[1899] = v7_1007;
        Object[] v7_1008 = new Object[2];
        v7_1008[0] = "ucirc";
        v7_1008[1] = Integer.valueOf(251);
        v5_1[1900] = v7_1008;
        Object[] v7_1010 = new Object[2];
        v7_1010[0] = "ucy";
        v7_1010[1] = Integer.valueOf(1091);
        v5_1[1901] = v7_1010;
        Object[] v7_1012 = new Object[2];
        v7_1012[0] = "udarr";
        v7_1012[1] = Integer.valueOf(8645);
        v5_1[1902] = v7_1012;
        Object[] v7_1013 = new Object[2];
        v7_1013[0] = "udblac";
        v7_1013[1] = Integer.valueOf(369);
        v5_1[1903] = v7_1013;
        Object[] v7_1014 = new Object[2];
        v7_1014[0] = "udhar";
        v7_1014[1] = Integer.valueOf(10606);
        v5_1[1904] = v7_1014;
        Object[] v7_1015 = new Object[2];
        v7_1015[0] = "ufisht";
        v7_1015[1] = Integer.valueOf(10622);
        v5_1[1905] = v7_1015;
        Object[] v7_1016 = new Object[2];
        v7_1016[0] = "ufr";
        v7_1016[1] = Integer.valueOf(120114);
        v5_1[1906] = v7_1016;
        Object[] v7_1017 = new Object[2];
        v7_1017[0] = "ugrave";
        v7_1017[1] = Integer.valueOf(249);
        v5_1[1907] = v7_1017;
        Object[] v7_1018 = new Object[2];
        v7_1018[0] = "uharl";
        v7_1018[1] = Integer.valueOf(8639);
        v5_1[1908] = v7_1018;
        Object[] v7_1019 = new Object[2];
        v7_1019[0] = "uharr";
        v7_1019[1] = Integer.valueOf(8638);
        v5_1[1909] = v7_1019;
        Object[] v7_1020 = new Object[2];
        v7_1020[0] = "uhblk";
        v7_1020[1] = Integer.valueOf(9600);
        v5_1[1910] = v7_1020;
        Object[] v7_1021 = new Object[2];
        v7_1021[0] = "ulcorn";
        v7_1021[1] = Integer.valueOf(8988);
        v5_1[1911] = v7_1021;
        Object[] v7_1023 = new Object[2];
        v7_1023[0] = "ulcorner";
        v7_1023[1] = Integer.valueOf(8988);
        v5_1[1912] = v7_1023;
        Object[] v7_1024 = new Object[2];
        v7_1024[0] = "ulcrop";
        v7_1024[1] = Integer.valueOf(8975);
        v5_1[1913] = v7_1024;
        Object[] v7_1025 = new Object[2];
        v7_1025[0] = "ultri";
        v7_1025[1] = Integer.valueOf(9720);
        v5_1[1914] = v7_1025;
        Object[] v7_1026 = new Object[2];
        v7_1026[0] = "umacr";
        v7_1026[1] = Integer.valueOf(363);
        v5_1[1915] = v7_1026;
        Object[] v7_1027 = new Object[2];
        v7_1027[0] = "uml";
        v7_1027[1] = Integer.valueOf(168);
        v5_1[1916] = v7_1027;
        Object[] v7_1028 = new Object[2];
        v7_1028[0] = "uogon";
        v7_1028[1] = Integer.valueOf(371);
        v5_1[1917] = v7_1028;
        Object[] v7_1029 = new Object[2];
        v7_1029[0] = "uopf";
        v7_1029[1] = Integer.valueOf(120166);
        v5_1[1918] = v7_1029;
        Object[] v7_1030 = new Object[2];
        v7_1030[0] = "uparrow";
        v7_1030[1] = Integer.valueOf(8593);
        v5_1[1919] = v7_1030;
        Object[] v7_1031 = new Object[2];
        v7_1031[0] = "updownarrow";
        v7_1031[1] = Integer.valueOf(8597);
        v5_1[1920] = v7_1031;
        Object[] v7_1032 = new Object[2];
        v7_1032[0] = "upharpoonleft";
        v7_1032[1] = Integer.valueOf(8639);
        v5_1[1921] = v7_1032;
        Object[] v7_1034 = new Object[2];
        v7_1034[0] = "upharpoonright";
        v7_1034[1] = Integer.valueOf(8638);
        v5_1[1922] = v7_1034;
        Object[] v7_1035 = new Object[2];
        v7_1035[0] = "uplus";
        v7_1035[1] = Integer.valueOf(8846);
        v5_1[1923] = v7_1035;
        Object[] v7_1036 = new Object[2];
        v7_1036[0] = "upsi";
        v7_1036[1] = Integer.valueOf(965);
        v5_1[1924] = v7_1036;
        Object[] v7_1037 = new Object[2];
        v7_1037[0] = "upsih";
        v7_1037[1] = Integer.valueOf(978);
        v5_1[1925] = v7_1037;
        Object[] v7_1038 = new Object[2];
        v7_1038[0] = "upsilon";
        v7_1038[1] = Integer.valueOf(965);
        v5_1[1926] = v7_1038;
        Object[] v7_1039 = new Object[2];
        v7_1039[0] = "upuparrows";
        v7_1039[1] = Integer.valueOf(8648);
        v5_1[1927] = v7_1039;
        Object[] v7_1040 = new Object[2];
        v7_1040[0] = "urcorn";
        v7_1040[1] = Integer.valueOf(8989);
        v5_1[1928] = v7_1040;
        Object[] v7_1041 = new Object[2];
        v7_1041[0] = "urcorner";
        v7_1041[1] = Integer.valueOf(8989);
        v5_1[1929] = v7_1041;
        Object[] v7_1042 = new Object[2];
        v7_1042[0] = "urcrop";
        v7_1042[1] = Integer.valueOf(8974);
        v5_1[1930] = v7_1042;
        Object[] v7_1043 = new Object[2];
        v7_1043[0] = "uring";
        v7_1043[1] = Integer.valueOf(367);
        v5_1[1931] = v7_1043;
        Object[] v7_1045 = new Object[2];
        v7_1045[0] = "urtri";
        v7_1045[1] = Integer.valueOf(9721);
        v5_1[1932] = v7_1045;
        Object[] v7_1046 = new Object[2];
        v7_1046[0] = "uscr";
        v7_1046[1] = Integer.valueOf(120010);
        v5_1[1933] = v7_1046;
        Object[] v7_1047 = new Object[2];
        v7_1047[0] = "utdot";
        v7_1047[1] = Integer.valueOf(8944);
        v5_1[1934] = v7_1047;
        Object[] v7_1048 = new Object[2];
        v7_1048[0] = "utilde";
        v7_1048[1] = Integer.valueOf(361);
        v5_1[1935] = v7_1048;
        Object[] v7_1049 = new Object[2];
        v7_1049[0] = "utri";
        v7_1049[1] = Integer.valueOf(9653);
        v5_1[1936] = v7_1049;
        Object[] v7_1050 = new Object[2];
        v7_1050[0] = "utrif";
        v7_1050[1] = Integer.valueOf(9652);
        v5_1[1937] = v7_1050;
        Object[] v7_1051 = new Object[2];
        v7_1051[0] = "uuarr";
        v7_1051[1] = Integer.valueOf(8648);
        v5_1[1938] = v7_1051;
        Object[] v7_1052 = new Object[2];
        v7_1052[0] = "uuml";
        v7_1052[1] = Integer.valueOf(252);
        v5_1[1939] = v7_1052;
        Object[] v7_1053 = new Object[2];
        v7_1053[0] = "uwangle";
        v7_1053[1] = Integer.valueOf(10663);
        v5_1[1940] = v7_1053;
        Object[] v7_1054 = new Object[2];
        v7_1054[0] = "vArr";
        v7_1054[1] = Integer.valueOf(8661);
        v5_1[1941] = v7_1054;
        Object[] v7_1056 = new Object[2];
        v7_1056[0] = "vBar";
        v7_1056[1] = Integer.valueOf(10984);
        v5_1[1942] = v7_1056;
        Object[] v7_1057 = new Object[2];
        v7_1057[0] = "vBarv";
        v7_1057[1] = Integer.valueOf(10985);
        v5_1[1943] = v7_1057;
        Object[] v7_1058 = new Object[2];
        v7_1058[0] = "vDash";
        v7_1058[1] = Integer.valueOf(8872);
        v5_1[1944] = v7_1058;
        Object[] v7_1059 = new Object[2];
        v7_1059[0] = "vangrt";
        v7_1059[1] = Integer.valueOf(10652);
        v5_1[1945] = v7_1059;
        Object[] v7_1060 = new Object[2];
        v7_1060[0] = "varepsilon";
        v7_1060[1] = Integer.valueOf(1013);
        v5_1[1946] = v7_1060;
        Object[] v7_1061 = new Object[2];
        v7_1061[0] = "varkappa";
        v7_1061[1] = Integer.valueOf(1008);
        v5_1[1947] = v7_1061;
        Object[] v7_1062 = new Object[2];
        v7_1062[0] = "varnothing";
        v7_1062[1] = Integer.valueOf(8709);
        v5_1[1948] = v7_1062;
        Object[] v7_1063 = new Object[2];
        v7_1063[0] = "varphi";
        v7_1063[1] = Integer.valueOf(981);
        v5_1[1949] = v7_1063;
        Object[] v7_1064 = new Object[2];
        v7_1064[0] = "varpi";
        v7_1064[1] = Integer.valueOf(982);
        v5_1[1950] = v7_1064;
        Object[] v7_1065 = new Object[2];
        v7_1065[0] = "varpropto";
        v7_1065[1] = Integer.valueOf(8733);
        v5_1[1951] = v7_1065;
        Object[] v7_1067 = new Object[2];
        v7_1067[0] = "varr";
        v7_1067[1] = Integer.valueOf(8597);
        v5_1[1952] = v7_1067;
        Object[] v7_1068 = new Object[2];
        v7_1068[0] = "varrho";
        v7_1068[1] = Integer.valueOf(1009);
        v5_1[1953] = v7_1068;
        Object[] v7_1069 = new Object[2];
        v7_1069[0] = "varsigma";
        v7_1069[1] = Integer.valueOf(962);
        v5_1[1954] = v7_1069;
        Object[] v7_1070 = new Object[2];
        v7_1070[0] = "vartheta";
        v7_1070[1] = Integer.valueOf(977);
        v5_1[1955] = v7_1070;
        Object[] v7_1071 = new Object[2];
        v7_1071[0] = "vartriangleleft";
        v7_1071[1] = Integer.valueOf(8882);
        v5_1[1956] = v7_1071;
        Object[] v7_1072 = new Object[2];
        v7_1072[0] = "vartriangleright";
        v7_1072[1] = Integer.valueOf(8883);
        v5_1[1957] = v7_1072;
        Object[] v7_1073 = new Object[2];
        v7_1073[0] = "vcy";
        v7_1073[1] = Integer.valueOf(1074);
        v5_1[1958] = v7_1073;
        Object[] v7_1074 = new Object[2];
        v7_1074[0] = "vdash";
        v7_1074[1] = Integer.valueOf(8866);
        v5_1[1959] = v7_1074;
        Object[] v7_1075 = new Object[2];
        v7_1075[0] = "vee";
        v7_1075[1] = Integer.valueOf(8744);
        v5_1[1960] = v7_1075;
        Object[] v7_1076 = new Object[2];
        v7_1076[0] = "veebar";
        v7_1076[1] = Integer.valueOf(8891);
        v5_1[1961] = v7_1076;
        Object[] v7_1078 = new Object[2];
        v7_1078[0] = "veeeq";
        v7_1078[1] = Integer.valueOf(8794);
        v5_1[1962] = v7_1078;
        Object[] v7_1079 = new Object[2];
        v7_1079[0] = "vellip";
        v7_1079[1] = Integer.valueOf(8942);
        v5_1[1963] = v7_1079;
        Object[] v7_1080 = new Object[2];
        v7_1080[0] = "verbar";
        v7_1080[1] = Integer.valueOf(124);
        v5_1[1964] = v7_1080;
        Object[] v7_1081 = new Object[2];
        v7_1081[0] = "vert";
        v7_1081[1] = Integer.valueOf(124);
        v5_1[1965] = v7_1081;
        Object[] v7_1082 = new Object[2];
        v7_1082[0] = "vfr";
        v7_1082[1] = Integer.valueOf(120115);
        v5_1[1966] = v7_1082;
        Object[] v7_1083 = new Object[2];
        v7_1083[0] = "vltri";
        v7_1083[1] = Integer.valueOf(8882);
        v5_1[1967] = v7_1083;
        Object[] v7_1084 = new Object[2];
        v7_1084[0] = "vopf";
        v7_1084[1] = Integer.valueOf(120167);
        v5_1[1968] = v7_1084;
        Object[] v7_1085 = new Object[2];
        v7_1085[0] = "vprop";
        v7_1085[1] = Integer.valueOf(8733);
        v5_1[1969] = v7_1085;
        Object[] v7_1086 = new Object[2];
        v7_1086[0] = "vrtri";
        v7_1086[1] = Integer.valueOf(8883);
        v5_1[1970] = v7_1086;
        Object[] v7_1087 = new Object[2];
        v7_1087[0] = "vscr";
        v7_1087[1] = Integer.valueOf(120011);
        v5_1[1971] = v7_1087;
        Object[] v7_1089 = new Object[2];
        v7_1089[0] = "vzigzag";
        v7_1089[1] = Integer.valueOf(10650);
        v5_1[1972] = v7_1089;
        Object[] v7_1090 = new Object[2];
        v7_1090[0] = "wcirc";
        v7_1090[1] = Integer.valueOf(373);
        v5_1[1973] = v7_1090;
        Object[] v7_1091 = new Object[2];
        v7_1091[0] = "wedbar";
        v7_1091[1] = Integer.valueOf(10847);
        v5_1[1974] = v7_1091;
        Object[] v7_1092 = new Object[2];
        v7_1092[0] = "wedge";
        v7_1092[1] = Integer.valueOf(8743);
        v5_1[1975] = v7_1092;
        Object[] v7_1093 = new Object[2];
        v7_1093[0] = "wedgeq";
        v7_1093[1] = Integer.valueOf(8793);
        v5_1[1976] = v7_1093;
        Object[] v7_1094 = new Object[2];
        v7_1094[0] = "weierp";
        v7_1094[1] = Integer.valueOf(8472);
        v5_1[1977] = v7_1094;
        Object[] v7_1095 = new Object[2];
        v7_1095[0] = "wfr";
        v7_1095[1] = Integer.valueOf(120116);
        v5_1[1978] = v7_1095;
        Object[] v7_1096 = new Object[2];
        v7_1096[0] = "wopf";
        v7_1096[1] = Integer.valueOf(120168);
        v5_1[1979] = v7_1096;
        Object[] v7_1097 = new Object[2];
        v7_1097[0] = "wp";
        v7_1097[1] = Integer.valueOf(8472);
        v5_1[1980] = v7_1097;
        Object[] v7_1098 = new Object[2];
        v7_1098[0] = "wr";
        v7_1098[1] = Integer.valueOf(8768);
        v5_1[1981] = v7_1098;
        Object[] v7_1100 = new Object[2];
        v7_1100[0] = "wreath";
        v7_1100[1] = Integer.valueOf(8768);
        v5_1[1982] = v7_1100;
        Object[] v7_1101 = new Object[2];
        v7_1101[0] = "wscr";
        v7_1101[1] = Integer.valueOf(120012);
        v5_1[1983] = v7_1101;
        Object[] v7_1102 = new Object[2];
        v7_1102[0] = "xcap";
        v7_1102[1] = Integer.valueOf(8898);
        v5_1[1984] = v7_1102;
        Object[] v7_1103 = new Object[2];
        v7_1103[0] = "xcirc";
        v7_1103[1] = Integer.valueOf(9711);
        v5_1[1985] = v7_1103;
        Object[] v7_1104 = new Object[2];
        v7_1104[0] = "xcup";
        v7_1104[1] = Integer.valueOf(8899);
        v5_1[1986] = v7_1104;
        Object[] v7_1105 = new Object[2];
        v7_1105[0] = "xdtri";
        v7_1105[1] = Integer.valueOf(9661);
        v5_1[1987] = v7_1105;
        Object[] v7_1106 = new Object[2];
        v7_1106[0] = "xfr";
        v7_1106[1] = Integer.valueOf(120117);
        v5_1[1988] = v7_1106;
        Object[] v7_1107 = new Object[2];
        v7_1107[0] = "xhArr";
        v7_1107[1] = Integer.valueOf(10234);
        v5_1[1989] = v7_1107;
        Object[] v7_1108 = new Object[2];
        v7_1108[0] = "xharr";
        v7_1108[1] = Integer.valueOf(10231);
        v5_1[1990] = v7_1108;
        Object[] v7_1109 = new Object[2];
        v7_1109[0] = "xi";
        v7_1109[1] = Integer.valueOf(958);
        v5_1[1991] = v7_1109;
        Object[] v7_1111 = new Object[2];
        v7_1111[0] = "xlArr";
        v7_1111[1] = Integer.valueOf(10232);
        v5_1[1992] = v7_1111;
        Object[] v7_1112 = new Object[2];
        v7_1112[0] = "xlarr";
        v7_1112[1] = Integer.valueOf(10229);
        v5_1[1993] = v7_1112;
        Object[] v7_1113 = new Object[2];
        v7_1113[0] = "xmap";
        v7_1113[1] = Integer.valueOf(10236);
        v5_1[1994] = v7_1113;
        Object[] v7_1114 = new Object[2];
        v7_1114[0] = "xnis";
        v7_1114[1] = Integer.valueOf(8955);
        v5_1[1995] = v7_1114;
        Object[] v7_1115 = new Object[2];
        v7_1115[0] = "xodot";
        v7_1115[1] = Integer.valueOf(10752);
        v5_1[1996] = v7_1115;
        Object[] v7_1116 = new Object[2];
        v7_1116[0] = "xopf";
        v7_1116[1] = Integer.valueOf(120169);
        v5_1[1997] = v7_1116;
        Object[] v7_1117 = new Object[2];
        v7_1117[0] = "xoplus";
        v7_1117[1] = Integer.valueOf(10753);
        v5_1[1998] = v7_1117;
        Object[] v7_1118 = new Object[2];
        v7_1118[0] = "xotime";
        v7_1118[1] = Integer.valueOf(10754);
        v5_1[1999] = v7_1118;
        Object[] v7_1119 = new Object[2];
        v7_1119[0] = "xrArr";
        v7_1119[1] = Integer.valueOf(10233);
        v5_1[2000] = v7_1119;
        Object[] v7_1122 = new Object[2];
        v7_1122[0] = "xrarr";
        v7_1122[1] = Integer.valueOf(10230);
        v5_1[2001] = v7_1122;
        Object[] v7_1124 = new Object[2];
        v7_1124[0] = "xscr";
        v7_1124[1] = Integer.valueOf(120013);
        v5_1[2002] = v7_1124;
        Object[] v7_1125 = new Object[2];
        v7_1125[0] = "xsqcup";
        v7_1125[1] = Integer.valueOf(10758);
        v5_1[2003] = v7_1125;
        Object[] v7_1126 = new Object[2];
        v7_1126[0] = "xuplus";
        v7_1126[1] = Integer.valueOf(10756);
        v5_1[2004] = v7_1126;
        Object[] v7_1127 = new Object[2];
        v7_1127[0] = "xutri";
        v7_1127[1] = Integer.valueOf(9651);
        v5_1[2005] = v7_1127;
        Object[] v7_1128 = new Object[2];
        v7_1128[0] = "xvee";
        v7_1128[1] = Integer.valueOf(8897);
        v5_1[2006] = v7_1128;
        Object[] v7_1129 = new Object[2];
        v7_1129[0] = "xwedge";
        v7_1129[1] = Integer.valueOf(8896);
        v5_1[2007] = v7_1129;
        Object[] v7_1130 = new Object[2];
        v7_1130[0] = "yacute";
        v7_1130[1] = Integer.valueOf(253);
        v5_1[2008] = v7_1130;
        Object[] v7_1131 = new Object[2];
        v7_1131[0] = "yacy";
        v7_1131[1] = Integer.valueOf(1103);
        v5_1[2009] = v7_1131;
        Object[] v7_1132 = new Object[2];
        v7_1132[0] = "ycirc";
        v7_1132[1] = Integer.valueOf(375);
        v5_1[2010] = v7_1132;
        Object[] v7_1133 = new Object[2];
        v7_1133[0] = "ycy";
        v7_1133[1] = Integer.valueOf(1099);
        v5_1[2011] = v7_1133;
        Object[] v7_1135 = new Object[2];
        v7_1135[0] = "yen";
        v7_1135[1] = Integer.valueOf(165);
        v5_1[2012] = v7_1135;
        Object[] v7_1136 = new Object[2];
        v7_1136[0] = "yfr";
        v7_1136[1] = Integer.valueOf(120118);
        v5_1[2013] = v7_1136;
        Object[] v7_1137 = new Object[2];
        v7_1137[0] = "yicy";
        v7_1137[1] = Integer.valueOf(1111);
        v5_1[2014] = v7_1137;
        Object[] v7_1138 = new Object[2];
        v7_1138[0] = "yopf";
        v7_1138[1] = Integer.valueOf(120170);
        v5_1[2015] = v7_1138;
        Object[] v7_1139 = new Object[2];
        v7_1139[0] = "yscr";
        v7_1139[1] = Integer.valueOf(120014);
        v5_1[2016] = v7_1139;
        Object[] v7_1140 = new Object[2];
        v7_1140[0] = "yucy";
        v7_1140[1] = Integer.valueOf(1102);
        v5_1[2017] = v7_1140;
        Object[] v7_1141 = new Object[2];
        v7_1141[0] = "yuml";
        v7_1141[1] = Integer.valueOf(255);
        v5_1[2018] = v7_1141;
        Object[] v7_1142 = new Object[2];
        v7_1142[0] = "zacute";
        v7_1142[1] = Integer.valueOf(378);
        v5_1[2019] = v7_1142;
        Object[] v7_1143 = new Object[2];
        v7_1143[0] = "zcaron";
        v7_1143[1] = Integer.valueOf(382);
        v5_1[2020] = v7_1143;
        Object[] v7_1144 = new Object[2];
        v7_1144[0] = "zcy";
        v7_1144[1] = Integer.valueOf(1079);
        v5_1[2021] = v7_1144;
        Object[] v7_1146 = new Object[2];
        v7_1146[0] = "zdot";
        v7_1146[1] = Integer.valueOf(380);
        v5_1[2022] = v7_1146;
        Object[] v7_1147 = new Object[2];
        v7_1147[0] = "zeetrf";
        v7_1147[1] = Integer.valueOf(8488);
        v5_1[2023] = v7_1147;
        Object[] v7_1148 = new Object[2];
        v7_1148[0] = "zeta";
        v7_1148[1] = Integer.valueOf(950);
        v5_1[2024] = v7_1148;
        Object[] v7_1149 = new Object[2];
        v7_1149[0] = "zfr";
        v7_1149[1] = Integer.valueOf(120119);
        v5_1[2025] = v7_1149;
        Object[] v7_1150 = new Object[2];
        v7_1150[0] = "zhcy";
        v7_1150[1] = Integer.valueOf(1078);
        v5_1[2026] = v7_1150;
        Object[] v7_1151 = new Object[2];
        v7_1151[0] = "zigrarr";
        v7_1151[1] = Integer.valueOf(8669);
        v5_1[2027] = v7_1151;
        Object[] v7_1152 = new Object[2];
        v7_1152[0] = "zopf";
        v7_1152[1] = Integer.valueOf(120171);
        v5_1[2028] = v7_1152;
        Object[] v7_1153 = new Object[2];
        v7_1153[0] = "zscr";
        v7_1153[1] = Integer.valueOf(120015);
        v5_1[2029] = v7_1153;
        Object[] v7_1154 = new Object[2];
        v7_1154[0] = "zwj";
        v7_1154[1] = Integer.valueOf(8205);
        v5_1[2030] = v7_1154;
        Object[] v7_1155 = new Object[2];
        v7_1155[0] = "zwnj";
        v7_1155[1] = Integer.valueOf(8204);
        v5_1[2031] = v7_1155;
        org.jsoup.nodes.Entities.fullArray = v5_1;
        org.jsoup.nodes.Entities.full = new java.util.HashMap(org.jsoup.nodes.Entities.fullArray.length);
        org.jsoup.nodes.Entities.xhtmlByVal = new java.util.HashMap(org.jsoup.nodes.Entities.xhtmlArray.length);
        org.jsoup.nodes.Entities.baseByVal = new java.util.HashMap(org.jsoup.nodes.Entities.baseArray.length);
        org.jsoup.nodes.Entities.fullByVal = new java.util.HashMap(org.jsoup.nodes.Entities.fullArray.length);
        Object[][] v0_0 = org.jsoup.nodes.Entities.xhtmlArray;
        int v4_0 = v0_0.length;
        int v3_0 = 0;
        while (v3_0 < v4_0) {
            Object[] v2_2 = v0_0[v3_0];
            org.jsoup.nodes.Entities.xhtmlByVal.put(Character.valueOf(((char) ((Integer) v2_2[1]).intValue())), ((String) v2_2[0]));
            v3_0++;
        }
        Object[][] v0_1 = org.jsoup.nodes.Entities.baseArray;
        int v4_1 = v0_1.length;
        int v3_1 = 0;
        while (v3_1 < v4_1) {
            Object[] v2_1 = v0_1[v3_1];
            org.jsoup.nodes.Entities.baseByVal.put(Character.valueOf(((char) ((Integer) v2_1[1]).intValue())), ((String) v2_1[0]));
            v3_1++;
        }
        Object[][] v0_2 = org.jsoup.nodes.Entities.fullArray;
        int v4_2 = v0_2.length;
        int v3_2 = 0;
        while (v3_2 < v4_2) {
            Object[] v2_0 = v0_2[v3_2];
            Character v1_0 = Character.valueOf(((char) ((Integer) v2_0[1]).intValue()));
            org.jsoup.nodes.Entities.full.put(((String) v2_0[0]), v1_0);
            org.jsoup.nodes.Entities.fullByVal.put(v1_0, ((String) v2_0[0]));
            v3_2++;
        }
        return;
    }

    private Entities()
    {
        return;
    }

    static synthetic java.util.Map access$000()
    {
        return org.jsoup.nodes.Entities.xhtmlByVal;
    }

    static synthetic java.util.Map access$100()
    {
        return org.jsoup.nodes.Entities.baseByVal;
    }

    static synthetic java.util.Map access$200()
    {
        return org.jsoup.nodes.Entities.fullByVal;
    }

    static String escape(String p7, java.nio.charset.CharsetEncoder p8, org.jsoup.nodes.Entities$EscapeMode p9)
    {
        StringBuilder v0_1 = new StringBuilder((p7.length() * 2));
        java.util.Map v2 = p9.getMap();
        int v3 = 0;
        while (v3 < p7.length()) {
            Character v1 = Character.valueOf(p7.charAt(v3));
            if (!v2.containsKey(v1)) {
                if (!p8.canEncode(v1.charValue())) {
                    v0_1.append("&#").append(v1.charValue()).append(59);
                } else {
                    v0_1.append(v1.charValue());
                }
            } else {
                v0_1.append(38).append(((String) v2.get(v1))).append(59);
            }
            v3++;
        }
        return v0_1.toString();
    }

    static String escape(String p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return org.jsoup.nodes.Entities.escape(p2, p3.encoder(), p3.escapeMode());
    }

    public static Character getCharacterByName(String p1)
    {
        return ((Character) org.jsoup.nodes.Entities.full.get(p1));
    }

    public static boolean isNamedEntity(String p1)
    {
        return org.jsoup.nodes.Entities.full.containsKey(p1);
    }

    static String unescape(String p1)
    {
        return org.jsoup.nodes.Entities.unescape(p1, 0);
    }

    static String unescape(String p8, boolean p9)
    {
        if (p8.contains("&")) {
            java.util.regex.Matcher v4;
            if (!p9) {
                v4 = org.jsoup.nodes.Entities.unescapePattern.matcher(p8);
            } else {
                v4 = org.jsoup.nodes.Entities.strictUnescapePattern.matcher(p8);
            }
            StringBuffer v0_1 = new StringBuffer(p8.length());
            while (v4.find()) {
                int v3 = -1;
                String v6 = v4.group(3);
                if (v6 == null) {
                    String v5 = v4.group(1);
                    if (org.jsoup.nodes.Entities.full.containsKey(v5)) {
                        v3 = ((Character) org.jsoup.nodes.Entities.full.get(v5)).charValue();
                    }
                } else {
                    try {
                        int v1;
                        if (v4.group(2) == null) {
                            v1 = 10;
                        } else {
                            v1 = 16;
                        }
                        v3 = Integer.valueOf(v6, v1).intValue();
                    } catch (String v7) {
                    }
                }
                if ((v3 == -1) && (v3 <= 65535)) {
                    v4.appendReplacement(v0_1, java.util.regex.Matcher.quoteReplacement(v4.group(0)));
                } else {
                    v4.appendReplacement(v0_1, java.util.regex.Matcher.quoteReplacement(Character.toString(((char) v3))));
                }
            }
            v4.appendTail(v0_1);
            p8 = v0_1.toString();
        }
        return p8;
    }
}
package org.jsoup.select;
public interface NodeVisitor {

    public abstract void head();

    public abstract void tail();
}
package org.jsoup.nodes;
 class Node$OuterHtmlVisitor implements org.jsoup.select.NodeVisitor {
    private StringBuilder accum;
    private org.jsoup.nodes.Document$OutputSettings out;

    Node$OuterHtmlVisitor(StringBuilder p1, org.jsoup.nodes.Document$OutputSettings p2)
    {
        this.accum = p1;
        this.out = p2;
        return;
    }

    public void head(org.jsoup.nodes.Node p3, int p4)
    {
        p3.outerHtmlHead(this.accum, p4, this.out);
        return;
    }

    public void tail(org.jsoup.nodes.Node p3, int p4)
    {
        if (!p3.nodeName().equals("#text")) {
            p3.outerHtmlTail(this.accum, p4, this.out);
        }
        return;
    }
}
package org.jsoup.nodes;
public class TextNode extends org.jsoup.nodes.Node {
    private static final String TEXT_KEY = "text";
    String text;

    public TextNode(String p1, String p2)
    {
        this.baseUri = p2;
        this.text = p1;
        return;
    }

    public static org.jsoup.nodes.TextNode createFromEncoded(String p2, String p3)
    {
        return new org.jsoup.nodes.TextNode(org.jsoup.nodes.Entities.unescape(p2), p3);
    }

    private void ensureAttributes()
    {
        if (this.attributes == null) {
            this.attributes = new org.jsoup.nodes.Attributes();
            this.attributes.put("text", this.text);
        }
        return;
    }

    static boolean lastCharIsWhitespace(StringBuilder p2)
    {
        if ((p2.length() == 0) || (p2.charAt((p2.length() - 1)) != 32)) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    static String normaliseWhitespace(String p0)
    {
        return org.jsoup.helper.StringUtil.normaliseWhitespace(p0);
    }

    static String stripLeadingWhitespace(String p2)
    {
        return p2.replaceFirst("^\\s+", "");
    }

    public String absUrl(String p2)
    {
        this.ensureAttributes();
        return super.absUrl(p2);
    }

    public String attr(String p2)
    {
        this.ensureAttributes();
        return super.attr(p2);
    }

    public org.jsoup.nodes.Node attr(String p2, String p3)
    {
        this.ensureAttributes();
        return super.attr(p2, p3);
    }

    public org.jsoup.nodes.Attributes attributes()
    {
        this.ensureAttributes();
        return super.attributes();
    }

    public String getWholeText()
    {
        String v0_2;
        if (this.attributes != null) {
            v0_2 = this.attributes.get("text");
        } else {
            v0_2 = this.text;
        }
        return v0_2;
    }

    public boolean hasAttr(String p2)
    {
        this.ensureAttributes();
        return super.hasAttr(p2);
    }

    public boolean isBlank()
    {
        return org.jsoup.helper.StringUtil.isBlank(this.getWholeText());
    }

    public String nodeName()
    {
        return "#text";
    }

    void outerHtmlHead(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        String v0 = org.jsoup.nodes.Entities.escape(this.getWholeText(), p5);
        if ((p5.prettyPrint()) && (((this.parent() instanceof org.jsoup.nodes.Element)) && (!((org.jsoup.nodes.Element) this.parent()).preserveWhitespace()))) {
            v0 = org.jsoup.nodes.TextNode.normaliseWhitespace(v0);
        }
        if ((p5.prettyPrint()) && ((this.siblingIndex() == 0) && (((this.parentNode instanceof org.jsoup.nodes.Element)) && ((((org.jsoup.nodes.Element) this.parentNode).tag().formatAsBlock()) && (!this.isBlank()))))) {
            this.indent(p3, p4, p5);
        }
        p3.append(v0);
        return;
    }

    void outerHtmlTail(StringBuilder p1, int p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return;
    }

    public org.jsoup.nodes.Node removeAttr(String p2)
    {
        this.ensureAttributes();
        return super.removeAttr(p2);
    }

    public org.jsoup.nodes.TextNode splitText(int p8)
    {
        org.jsoup.nodes.Node v3_5;
        if (p8 < 0) {
            v3_5 = 0;
        } else {
            v3_5 = 1;
        }
        org.jsoup.nodes.Node v3_0;
        org.jsoup.helper.Validate.isTrue(v3_5, "Split offset must be not be negative");
        if (p8 >= this.text.length()) {
            v3_0 = 0;
        } else {
            v3_0 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v3_0, "Split offset must not be greater than current text length");
        String v0 = this.getWholeText().substring(0, p8);
        String v1 = this.getWholeText().substring(p8);
        this.text(v0);
        org.jsoup.nodes.TextNode v2_1 = new org.jsoup.nodes.TextNode(v1, this.baseUri());
        if (this.parent() != null) {
            org.jsoup.nodes.Node v3_6 = this.parent();
            int v6_2 = (this.siblingIndex() + 1);
            org.jsoup.nodes.Node[] v4_1 = new org.jsoup.nodes.Node[1];
            v4_1[0] = v2_1;
            v3_6.addChildren(v6_2, v4_1);
        }
        return v2_1;
    }

    public String text()
    {
        return org.jsoup.nodes.TextNode.normaliseWhitespace(this.getWholeText());
    }

    public org.jsoup.nodes.TextNode text(String p3)
    {
        this.text = p3;
        if (this.attributes != null) {
            this.attributes.put("text", p3);
        }
        return this;
    }

    public String toString()
    {
        return this.outerHtml();
    }
}
package org.jsoup.nodes;
public class XmlDeclaration extends org.jsoup.nodes.Node {
    private static final String DECL_KEY = "declaration";
    private final boolean isProcessingInstruction;

    public XmlDeclaration(String p3, String p4, boolean p5)
    {
        super(p4);
        super.attributes.put("declaration", p3);
        super.isProcessingInstruction = p5;
        return;
    }

    public String getWholeDeclaration()
    {
        return this.attributes.get("declaration");
    }

    public String nodeName()
    {
        return "#declaration";
    }

    void outerHtmlHead(StringBuilder p3, int p4, org.jsoup.nodes.Document$OutputSettings p5)
    {
        StringBuilder v0_3;
        StringBuilder vtmp1 = p3.append("<");
        if (!this.isProcessingInstruction) {
            v0_3 = "?";
        } else {
            v0_3 = "!";
        }
        vtmp1.append(v0_3).append(this.getWholeDeclaration()).append(">");
        return;
    }

    void outerHtmlTail(StringBuilder p1, int p2, org.jsoup.nodes.Document$OutputSettings p3)
    {
        return;
    }

    public String toString()
    {
        return this.outerHtml();
    }
}
package org.jsoup.parser;
 class CharacterReader {
    static final char EOF = 65535;
    private final String input;
    private final int length;
    private int mark;
    private int pos;

    CharacterReader(String p3)
    {
        this.pos = 0;
        this.mark = 0;
        org.jsoup.helper.Validate.notNull(p3);
        String v3_1 = p3.replaceAll("\r\n?", "\n");
        this.input = v3_1;
        this.length = v3_1.length();
        return;
    }

    void advance()
    {
        this.pos = (this.pos + 1);
        return;
    }

    char consume()
    {
        char v0;
        if (!this.isEmpty()) {
            v0 = this.input.charAt(this.pos);
        } else {
            v0 = 65535;
        }
        this.pos = (this.pos + 1);
        return v0;
    }

    String consumeAsString()
    {
        String v0_0 = this.input;
        int v1 = this.pos;
        int v2 = this.pos;
        this.pos = (v2 + 1);
        return v0_0.substring(v1, v2);
    }

    String consumeDigitSequence()
    {
        int v1 = this.pos;
        while (!this.isEmpty()) {
            char v0 = this.input.charAt(this.pos);
            if ((v0 < 48) || (v0 > 57)) {
                break;
            }
            this.pos = (this.pos + 1);
        }
        return this.input.substring(v1, this.pos);
    }

    String consumeHexSequence()
    {
        int v1 = this.pos;
        while (!this.isEmpty()) {
            char v0 = this.input.charAt(this.pos);
            if (((v0 < 48) || (v0 > 57)) && (((v0 < 65) || (v0 > 70)) && ((v0 < 97) || (v0 > 102)))) {
                break;
            }
            this.pos = (this.pos + 1);
        }
        return this.input.substring(v1, this.pos);
    }

    String consumeLetterSequence()
    {
        int v1 = this.pos;
        while (!this.isEmpty()) {
            char v0 = this.input.charAt(this.pos);
            if (((v0 < 65) || (v0 > 90)) && ((v0 < 97) || (v0 > 122))) {
                break;
            }
            this.pos = (this.pos + 1);
        }
        return this.input.substring(v1, this.pos);
    }

    String consumeTo(char p5)
    {
        String v0;
        int v1 = this.input.indexOf(p5, this.pos);
        if (v1 == -1) {
            v0 = this.consumeToEnd();
        } else {
            v0 = this.input.substring(this.pos, v1);
            this.pos = (this.pos + v0.length());
        }
        return v0;
    }

    String consumeTo(String p5)
    {
        String v0;
        int v1 = this.input.indexOf(p5, this.pos);
        if (v1 == -1) {
            v0 = this.consumeToEnd();
        } else {
            v0 = this.input.substring(this.pos, v1);
            this.pos = (this.pos + v0.length());
        }
        return v0;
    }

    varargs String consumeToAny(char[] p9)
    {
        int v5 = this.pos;
        while (!this.isEmpty()) {
            char vtmp2 = this.input.charAt(this.pos);
            int v2 = 0;
            while (v2 < p9.length) {
                if (p9[v2] != vtmp2) {
                    v2++;
                }
                int v6_4;
                if (this.pos <= v5) {
                    v6_4 = "";
                } else {
                    v6_4 = this.input.substring(v5, this.pos);
                }
                return v6_4;
            }
            this.pos = (this.pos + 1);
        }
    }

    String consumeToEnd()
    {
        String v0 = this.input.substring(this.pos, this.input.length());
        this.pos = this.input.length();
        return v0;
    }

    boolean containsIgnoreCase(String p6)
    {
        int v2_2;
        String v1 = p6.toLowerCase();
        String v0 = p6.toUpperCase();
        if ((this.input.indexOf(v1, this.pos) <= -1) && (this.input.indexOf(v0, this.pos) <= -1)) {
            v2_2 = 0;
        } else {
            v2_2 = 1;
        }
        return v2_2;
    }

    char current()
    {
        char v0_2;
        if (!this.isEmpty()) {
            v0_2 = this.input.charAt(this.pos);
        } else {
            v0_2 = 65535;
        }
        return v0_2;
    }

    boolean isEmpty()
    {
        int v0_1;
        if (this.pos < this.length) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    void mark()
    {
        this.mark = this.pos;
        return;
    }

    boolean matchConsume(String p3)
    {
        int v0_1;
        if (!this.matches(p3)) {
            v0_1 = 0;
        } else {
            this.pos = (this.pos + p3.length());
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean matchConsumeIgnoreCase(String p3)
    {
        int v0_1;
        if (!this.matchesIgnoreCase(p3)) {
            v0_1 = 0;
        } else {
            this.pos = (this.pos + p3.length());
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean matches(char p3)
    {
        if ((this.isEmpty()) || (this.input.charAt(this.pos) != p3)) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }

    boolean matches(String p3)
    {
        return this.input.startsWith(p3, this.pos);
    }

    varargs boolean matchesAny(char[] p9)
    {
        int v5 = 0;
        if (!this.isEmpty()) {
            char vtmp2 = this.input.charAt(this.pos);
            int v2 = 0;
            while (v2 < p9.length) {
                if (p9[v2] != vtmp2) {
                    v2++;
                } else {
                    v5 = 1;
                    break;
                }
            }
        }
        return v5;
    }

    boolean matchesDigit()
    {
        int v1 = 0;
        if (!this.isEmpty()) {
            char v0 = this.input.charAt(this.pos);
            if ((v0 >= 48) && (v0 <= 57)) {
                v1 = 1;
            }
        }
        return v1;
    }

    boolean matchesIgnoreCase(String p7)
    {
        return this.input.regionMatches(1, this.pos, p7, 0, p7.length());
    }

    boolean matchesLetter()
    {
        int v1 = 0;
        if (!this.isEmpty()) {
            char v0 = this.input.charAt(this.pos);
            if (((v0 >= 65) && (v0 <= 90)) || ((v0 >= 97) && (v0 <= 122))) {
                v1 = 1;
            }
        }
        return v1;
    }

    int pos()
    {
        return this.pos;
    }

    void rewindToMark()
    {
        this.pos = this.mark;
        return;
    }

    public String toString()
    {
        return this.input.substring(this.pos);
    }

    void unconsume()
    {
        this.pos = (this.pos - 1);
        return;
    }
}
package org.jsoup.parser;
 class ParseError {
    private char c;
    private String errorMsg;
    private int pos;
    private org.jsoup.parser.Token token;
    private org.jsoup.parser.TokeniserState tokeniserState;
    private org.jsoup.parser.TreeBuilderState treeBuilderState;

    ParseError(String p1, char p2, org.jsoup.parser.TokeniserState p3, int p4)
    {
        this.errorMsg = p1;
        this.c = p2;
        this.tokeniserState = p3;
        this.pos = p4;
        return;
    }

    ParseError(String p1, int p2)
    {
        this.errorMsg = p1;
        this.pos = p2;
        return;
    }

    ParseError(String p1, org.jsoup.parser.TokeniserState p2, int p3)
    {
        this.errorMsg = p1;
        this.tokeniserState = p2;
        this.pos = p3;
        return;
    }

    ParseError(String p1, org.jsoup.parser.TreeBuilderState p2, org.jsoup.parser.Token p3, int p4)
    {
        this.errorMsg = p1;
        this.treeBuilderState = p2;
        this.token = p3;
        this.pos = p4;
        return;
    }

    String getErrorMsg()
    {
        return this.errorMsg;
    }

    int getPos()
    {
        return this.pos;
    }
}
package org.jsoup.parser;
public class Parser {

    public Parser()
    {
        return;
    }

    public static org.jsoup.nodes.Document parse(String p2, String p3)
    {
        return new org.jsoup.parser.TreeBuilder().parse(p2, p3);
    }

    public static org.jsoup.nodes.Document parseBodyFragment(String p9, String p10)
    {
        org.jsoup.nodes.Document v2 = org.jsoup.nodes.Document.createShell(p10);
        org.jsoup.nodes.Element v1 = v2.body();
        java.util.List v6 = org.jsoup.parser.Parser.parseFragment(p9, v1, p10);
        org.jsoup.nodes.Node[] v8_1 = new org.jsoup.nodes.Node[v6.size()];
        org.jsoup.nodes.Node[] v0 = ((org.jsoup.nodes.Node[]) v6.toArray(v8_1));
        int v4 = v0.length;
        int v3 = 0;
        while (v3 < v4) {
            v1.appendChild(v0[v3]);
            v3++;
        }
        return v2;
    }

    public static org.jsoup.nodes.Document parseBodyFragmentRelaxed(String p1, String p2)
    {
        return org.jsoup.parser.Parser.parse(p1, p2);
    }

    public static java.util.List parseFragment(String p2, org.jsoup.nodes.Element p3, String p4)
    {
        return new org.jsoup.parser.TreeBuilder().parseFragment(p2, p3, p4);
    }
}
package org.jsoup.parser;
public class Tag {
    private static final String[] blockTags;
    private static final String[] emptyTags;
    private static final String[] formatAsInlineTags;
    private static final String[] inlineTags;
    private static final String[] preserveWhitespaceTags;
    private static final java.util.Map tags;
    private boolean canContainBlock;
    private boolean canContainInline;
    private boolean empty;
    private boolean formatAsBlock;
    private boolean isBlock;
    private boolean preserveWhitespace;
    private boolean selfClosing;
    private String tagName;

    static Tag()
    {
        org.jsoup.parser.Tag.tags = new java.util.HashMap();
        java.util.Map v5_13 = new String[58];
        v5_13[0] = "html";
        v5_13[1] = "head";
        v5_13[2] = "body";
        v5_13[3] = "frameset";
        v5_13[4] = "script";
        v5_13[5] = "noscript";
        v5_13[6] = "style";
        v5_13[7] = "meta";
        v5_13[8] = "link";
        v5_13[9] = "title";
        v5_13[10] = "frame";
        v5_13[11] = "noframes";
        v5_13[12] = "section";
        v5_13[13] = "nav";
        v5_13[14] = "aside";
        v5_13[15] = "hgroup";
        v5_13[16] = "header";
        v5_13[17] = "footer";
        v5_13[18] = "p";
        v5_13[19] = "h1";
        v5_13[20] = "h2";
        v5_13[21] = "h3";
        v5_13[22] = "h4";
        v5_13[23] = "h5";
        v5_13[24] = "h6";
        v5_13[25] = "ul";
        v5_13[26] = "ol";
        v5_13[27] = "pre";
        v5_13[28] = "div";
        v5_13[29] = "blockquote";
        v5_13[30] = "hr";
        v5_13[31] = "address";
        v5_13[32] = "figure";
        v5_13[33] = "figcaption";
        v5_13[34] = "form";
        v5_13[35] = "fieldset";
        v5_13[36] = "ins";
        v5_13[37] = "del";
        v5_13[38] = "dl";
        v5_13[39] = "dt";
        v5_13[40] = "dd";
        v5_13[41] = "li";
        v5_13[42] = "table";
        v5_13[43] = "caption";
        v5_13[44] = "thead";
        v5_13[45] = "tfoot";
        v5_13[46] = "tbody";
        v5_13[47] = "colgroup";
        v5_13[48] = "col";
        v5_13[49] = "tr";
        v5_13[50] = "th";
        v5_13[51] = "td";
        v5_13[52] = "video";
        v5_13[53] = "audio";
        v5_13[54] = "canvas";
        v5_13[55] = "details";
        v5_13[56] = "menu";
        v5_13[57] = "plaintext";
        org.jsoup.parser.Tag.blockTags = v5_13;
        java.util.Map v5_1 = new String[56];
        v5_1[0] = "object";
        v5_1[1] = "base";
        v5_1[2] = "font";
        v5_1[3] = "tt";
        v5_1[4] = "i";
        v5_1[5] = "b";
        v5_1[6] = "u";
        v5_1[7] = "big";
        v5_1[8] = "small";
        v5_1[9] = "em";
        v5_1[10] = "strong";
        v5_1[11] = "dfn";
        v5_1[12] = "code";
        v5_1[13] = "samp";
        v5_1[14] = "kbd";
        v5_1[15] = "var";
        v5_1[16] = "cite";
        v5_1[17] = "abbr";
        v5_1[18] = "time";
        v5_1[19] = "acronym";
        v5_1[20] = "mark";
        v5_1[21] = "ruby";
        v5_1[22] = "rt";
        v5_1[23] = "rp";
        v5_1[24] = "a";
        v5_1[25] = "img";
        v5_1[26] = "br";
        v5_1[27] = "wbr";
        v5_1[28] = "map";
        v5_1[29] = "q";
        v5_1[30] = "sub";
        v5_1[31] = "sup";
        v5_1[32] = "bdo";
        v5_1[33] = "iframe";
        v5_1[34] = "embed";
        v5_1[35] = "span";
        v5_1[36] = "input";
        v5_1[37] = "select";
        v5_1[38] = "textarea";
        v5_1[39] = "label";
        v5_1[40] = "button";
        v5_1[41] = "optgroup";
        v5_1[42] = "option";
        v5_1[43] = "legend";
        v5_1[44] = "datalist";
        v5_1[45] = "keygen";
        v5_1[46] = "output";
        v5_1[47] = "progress";
        v5_1[48] = "meter";
        v5_1[49] = "area";
        v5_1[50] = "param";
        v5_1[51] = "source";
        v5_1[52] = "track";
        v5_1[53] = "summary";
        v5_1[54] = "command";
        v5_1[55] = "device";
        org.jsoup.parser.Tag.inlineTags = v5_1;
        java.util.Map v5_3 = new String[14];
        v5_3[0] = "meta";
        v5_3[1] = "link";
        v5_3[2] = "base";
        v5_3[3] = "frame";
        v5_3[4] = "img";
        v5_3[5] = "br";
        v5_3[6] = "wbr";
        v5_3[7] = "embed";
        v5_3[8] = "hr";
        v5_3[9] = "input";
        v5_3[10] = "keygen";
        v5_3[11] = "col";
        v5_3[12] = "command";
        v5_3[13] = "device";
        org.jsoup.parser.Tag.emptyTags = v5_3;
        java.util.Map v5_5 = new String[14];
        v5_5[0] = "title";
        v5_5[1] = "a";
        v5_5[2] = "p";
        v5_5[3] = "h1";
        v5_5[4] = "h2";
        v5_5[5] = "h3";
        v5_5[6] = "h4";
        v5_5[7] = "h5";
        v5_5[8] = "h6";
        v5_5[9] = "pre";
        v5_5[10] = "address";
        v5_5[11] = "li";
        v5_5[12] = "th";
        v5_5[13] = "td";
        org.jsoup.parser.Tag.formatAsInlineTags = v5_5;
        java.util.Map v5_6 = new String[3];
        v5_6[0] = "pre";
        v5_6[1] = "plaintext";
        v5_6[2] = "title";
        org.jsoup.parser.Tag.preserveWhitespaceTags = v5_6;
        String[] v0_0 = org.jsoup.parser.Tag.blockTags;
        int v2_0 = v0_0.length;
        int v1_0 = 0;
        while (v1_0 < v2_0) {
            org.jsoup.parser.Tag.register(new org.jsoup.parser.Tag(v0_0[v1_0]));
            v1_0++;
        }
        String[] v0_1 = org.jsoup.parser.Tag.inlineTags;
        int v2_1 = v0_1.length;
        int v1_1 = 0;
        while (v1_1 < v2_1) {
            org.jsoup.parser.Tag v3_7 = new org.jsoup.parser.Tag(v0_1[v1_1]);
            v3_7.isBlock = 0;
            v3_7.canContainBlock = 0;
            v3_7.formatAsBlock = 0;
            org.jsoup.parser.Tag.register(v3_7);
            v1_1++;
        }
        String[] v0_2 = org.jsoup.parser.Tag.emptyTags;
        int v2_2 = v0_2.length;
        int v1_2 = 0;
        while (v1_2 < v2_2) {
            org.jsoup.parser.Tag v3_5 = ((org.jsoup.parser.Tag) org.jsoup.parser.Tag.tags.get(v0_2[v1_2]));
            org.jsoup.helper.Validate.notNull(v3_5);
            v3_5.canContainBlock = 0;
            v3_5.canContainInline = 0;
            v3_5.empty = 1;
            v1_2++;
        }
        String[] v0_3 = org.jsoup.parser.Tag.formatAsInlineTags;
        int v2_3 = v0_3.length;
        int v1_3 = 0;
        while (v1_3 < v2_3) {
            org.jsoup.parser.Tag v3_3 = ((org.jsoup.parser.Tag) org.jsoup.parser.Tag.tags.get(v0_3[v1_3]));
            org.jsoup.helper.Validate.notNull(v3_3);
            v3_3.formatAsBlock = 0;
            v1_3++;
        }
        String[] v0_4 = org.jsoup.parser.Tag.preserveWhitespaceTags;
        int v2_4 = v0_4.length;
        int v1_4 = 0;
        while (v1_4 < v2_4) {
            org.jsoup.parser.Tag v3_1 = ((org.jsoup.parser.Tag) org.jsoup.parser.Tag.tags.get(v0_4[v1_4]));
            org.jsoup.helper.Validate.notNull(v3_1);
            v3_1.preserveWhitespace = 1;
            v1_4++;
        }
        return;
    }

    private Tag(String p3)
    {
        this.isBlock = 1;
        this.formatAsBlock = 1;
        this.canContainBlock = 1;
        this.canContainInline = 1;
        this.empty = 0;
        this.selfClosing = 0;
        this.preserveWhitespace = 0;
        this.tagName = p3.toLowerCase();
        return;
    }

    public static boolean isKnownTag(String p1)
    {
        return org.jsoup.parser.Tag.tags.containsKey(p1);
    }

    private static org.jsoup.parser.Tag register(org.jsoup.parser.Tag p3)
    {
        try {
            org.jsoup.parser.Tag.tags.put(p3.tagName, p3);
            return p3;
        } catch (Throwable v0_1) {
            throw v0_1;
        }
    }

    public static org.jsoup.parser.Tag valueOf(String p3)
    {
        org.jsoup.helper.Validate.notNull(p3);
        String v3_1 = p3.trim().toLowerCase();
        org.jsoup.helper.Validate.notEmpty(v3_1);
        try {
            org.jsoup.parser.Tag v0_0 = ((org.jsoup.parser.Tag) org.jsoup.parser.Tag.tags.get(v3_1));
        } catch (int v1_2) {
            throw v1_2;
        }
        if (v0_0 == null) {
            v0_0 = new org.jsoup.parser.Tag(v3_1);
            v0_0.isBlock = 0;
            v0_0.canContainBlock = 1;
        }
        return v0_0;
    }

    public boolean canContainBlock()
    {
        return this.canContainBlock;
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if ((p6 instanceof org.jsoup.parser.Tag)) {
                if (this.canContainBlock == ((org.jsoup.parser.Tag) p6).canContainBlock) {
                    if (this.canContainInline == ((org.jsoup.parser.Tag) p6).canContainInline) {
                        if (this.empty == ((org.jsoup.parser.Tag) p6).empty) {
                            if (this.formatAsBlock == ((org.jsoup.parser.Tag) p6).formatAsBlock) {
                                if (this.isBlock == ((org.jsoup.parser.Tag) p6).isBlock) {
                                    if (this.preserveWhitespace == ((org.jsoup.parser.Tag) p6).preserveWhitespace) {
                                        if (this.selfClosing == ((org.jsoup.parser.Tag) p6).selfClosing) {
                                            if (!this.tagName.equals(((org.jsoup.parser.Tag) p6).tagName)) {
                                                v1 = 0;
                                            }
                                        } else {
                                            v1 = 0;
                                        }
                                    } else {
                                        v1 = 0;
                                    }
                                } else {
                                    v1 = 0;
                                }
                            } else {
                                v1 = 0;
                            }
                        } else {
                            v1 = 0;
                        }
                    } else {
                        v1 = 0;
                    }
                } else {
                    v1 = 0;
                }
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public boolean formatAsBlock()
    {
        return this.formatAsBlock;
    }

    public String getName()
    {
        return this.tagName;
    }

    public int hashCode()
    {
        int v1_13;
        int v2 = 1;
        int vtmp1 = this.tagName.hashCode();
        if (!this.isBlock) {
            v1_13 = 0;
        } else {
            v1_13 = 1;
        }
        int v1_1;
        if (!this.formatAsBlock) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        int v1_4;
        if (!this.canContainBlock) {
            v1_4 = 0;
        } else {
            v1_4 = 1;
        }
        int v1_6;
        if (!this.canContainInline) {
            v1_6 = 0;
        } else {
            v1_6 = 1;
        }
        int v1_8;
        if (!this.empty) {
            v1_8 = 0;
        } else {
            v1_8 = 1;
        }
        int v1_10;
        if (!this.selfClosing) {
            v1_10 = 0;
        } else {
            v1_10 = 1;
        }
        if (!this.preserveWhitespace) {
            v2 = 0;
        }
        return ((((((((((((((vtmp1 * 31) + v1_13) * 31) + v1_1) * 31) + v1_4) * 31) + v1_6) * 31) + v1_8) * 31) + v1_10) * 31) + v2);
    }

    public boolean isBlock()
    {
        return this.isBlock;
    }

    public boolean isData()
    {
        if ((this.canContainInline) || (this.isEmpty())) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public boolean isEmpty()
    {
        return this.empty;
    }

    public boolean isInline()
    {
        int v0_1;
        if (this.isBlock) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean isKnownTag()
    {
        return org.jsoup.parser.Tag.tags.containsKey(this.tagName);
    }

    public boolean isSelfClosing()
    {
        if ((!this.empty) && (!this.selfClosing)) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public boolean preserveWhitespace()
    {
        return this.preserveWhitespace;
    }

    org.jsoup.parser.Tag setSelfClosing()
    {
        this.selfClosing = 1;
        return this;
    }

    public String toString()
    {
        return this.tagName;
    }
}
package org.jsoup.parser;
synthetic class Token$1 {
}
package org.jsoup.parser;
abstract class Token {
    org.jsoup.parser.Token$TokenType type;

    private Token()
    {
        return;
    }

    synthetic Token(org.jsoup.parser.Token$1 p1)
    {
        return;
    }

    org.jsoup.parser.Token$Character asCharacter()
    {
        return ((org.jsoup.parser.Token$Character) this);
    }

    org.jsoup.parser.Token$Comment asComment()
    {
        return ((org.jsoup.parser.Token$Comment) this);
    }

    org.jsoup.parser.Token$Doctype asDoctype()
    {
        return ((org.jsoup.parser.Token$Doctype) this);
    }

    org.jsoup.parser.Token$EndTag asEndTag()
    {
        return ((org.jsoup.parser.Token$EndTag) this);
    }

    org.jsoup.parser.Token$StartTag asStartTag()
    {
        return ((org.jsoup.parser.Token$StartTag) this);
    }

    boolean isCharacter()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.Character) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean isComment()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.Comment) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean isDoctype()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.Doctype) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean isEOF()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.EOF) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean isEndTag()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.EndTag) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    boolean isStartTag()
    {
        int v0_1;
        if (this.type != org.jsoup.parser.Token$TokenType.StartTag) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }
}
package org.jsoup.parser;
 class Token$Character extends org.jsoup.parser.Token {
    private final String data;

    Token$Character(String p2)
    {
        super(0);
        super.type = org.jsoup.parser.Token$TokenType.Character;
        super.data = p2;
        return;
    }

    String getData()
    {
        return this.data;
    }

    public String toString()
    {
        return this.getData();
    }
}
package org.jsoup.parser;
 class Token$Comment extends org.jsoup.parser.Token {
    final StringBuilder data;

    Token$Comment()
    {
        super(0);
        super.data = new StringBuilder();
        super.type = org.jsoup.parser.Token$TokenType.Comment;
        return;
    }

    String getData()
    {
        return this.data.toString();
    }

    public String toString()
    {
        return new StringBuilder().append("<!--").append(this.getData()).append("-->").toString();
    }
}
package org.jsoup.parser;
 class Token$Doctype extends org.jsoup.parser.Token {
    boolean forceQuirks;
    final StringBuilder name;
    final StringBuilder publicIdentifier;
    final StringBuilder systemIdentifier;

    Token$Doctype()
    {
        super(0);
        super.name = new StringBuilder();
        super.publicIdentifier = new StringBuilder();
        super.systemIdentifier = new StringBuilder();
        super.forceQuirks = 0;
        super.type = org.jsoup.parser.Token$TokenType.Doctype;
        return;
    }

    String getName()
    {
        return this.name.toString();
    }

    String getPublicIdentifier()
    {
        return this.publicIdentifier.toString();
    }

    public String getSystemIdentifier()
    {
        return this.systemIdentifier.toString();
    }

    public boolean isForceQuirks()
    {
        return this.forceQuirks;
    }
}
package org.jsoup.parser;
 class Token$EOF extends org.jsoup.parser.Token {

    Token$EOF()
    {
        super(0);
        super.type = org.jsoup.parser.Token$TokenType.EOF;
        return;
    }
}
package org.jsoup.parser;
abstract class Token$Tag extends org.jsoup.parser.Token {
    org.jsoup.nodes.Attributes attributes;
    private String pendingAttributeName;
    private String pendingAttributeValue;
    boolean selfClosing;
    protected String tagName;

    Token$Tag()
    {
        super(0);
        super.selfClosing = 0;
        super.attributes = new org.jsoup.nodes.Attributes();
        return;
    }

    void appendAttributeName(char p2)
    {
        this.appendAttributeName(String.valueOf(p2));
        return;
    }

    void appendAttributeName(String p2)
    {
        if (this.pendingAttributeName != null) {
            p2 = this.pendingAttributeName.concat(p2);
        }
        this.pendingAttributeName = p2;
        return;
    }

    void appendAttributeValue(char p2)
    {
        this.appendAttributeValue(String.valueOf(p2));
        return;
    }

    void appendAttributeValue(String p2)
    {
        if (this.pendingAttributeValue != null) {
            p2 = this.pendingAttributeValue.concat(p2);
        }
        this.pendingAttributeValue = p2;
        return;
    }

    void appendTagName(char p2)
    {
        this.appendTagName(String.valueOf(p2));
        return;
    }

    void appendTagName(String p2)
    {
        if (this.tagName != null) {
            p2 = this.tagName.concat(p2);
        }
        this.tagName = p2;
        return;
    }

    void finaliseTag()
    {
        if (this.pendingAttributeName != null) {
            this.newAttribute();
        }
        return;
    }

    org.jsoup.nodes.Attributes getAttributes()
    {
        return this.attributes;
    }

    boolean isSelfClosing()
    {
        return this.selfClosing;
    }

    String name()
    {
        String v0_2;
        if (this.tagName.length() != 0) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        org.jsoup.helper.Validate.isFalse(v0_2);
        return this.tagName;
    }

    org.jsoup.parser.Token$Tag name(String p1)
    {
        this.tagName = p1;
        return this;
    }

    void newAttribute()
    {
        if (this.pendingAttributeName != null) {
            if (this.pendingAttributeValue == null) {
                this.pendingAttributeValue = "";
            }
            this.attributes.put(new org.jsoup.nodes.Attribute(this.pendingAttributeName, this.pendingAttributeValue));
        }
        this.pendingAttributeName = 0;
        this.pendingAttributeValue = 0;
        return;
    }
}
package org.jsoup.parser;
 class Token$EndTag extends org.jsoup.parser.Token$Tag {

    Token$EndTag()
    {
        this.type = org.jsoup.parser.Token$TokenType.EndTag;
        return;
    }

    Token$EndTag(String p1)
    {
        this.tagName = p1;
        return;
    }

    public String toString()
    {
        return new StringBuilder().append("</").append(this.name()).append(" ").append(this.attributes.toString()).append(">").toString();
    }
}
package org.jsoup.parser;
 class Token$StartTag extends org.jsoup.parser.Token$Tag {

    Token$StartTag()
    {
        this.type = org.jsoup.parser.Token$TokenType.StartTag;
        return;
    }

    Token$StartTag(String p1)
    {
        this.tagName = p1;
        return;
    }

    Token$StartTag(String p1, org.jsoup.nodes.Attributes p2)
    {
        this.tagName = p1;
        this.attributes = p2;
        return;
    }

    public String toString()
    {
        return new StringBuilder().append("<").append(this.name()).append(" ").append(this.attributes.toString()).append(">").toString();
    }
}
package org.jsoup.parser;
final enum class Token$TokenType extends java.lang.Enum {
    private static final synthetic org.jsoup.parser.Token$TokenType[] $VALUES;
    public static final enum org.jsoup.parser.Token$TokenType Character;
    public static final enum org.jsoup.parser.Token$TokenType Comment;
    public static final enum org.jsoup.parser.Token$TokenType Doctype;
    public static final enum org.jsoup.parser.Token$TokenType EOF;
    public static final enum org.jsoup.parser.Token$TokenType EndTag;
    public static final enum org.jsoup.parser.Token$TokenType StartTag;

    static Token$TokenType()
    {
        org.jsoup.parser.Token$TokenType.Doctype = new org.jsoup.parser.Token$TokenType("Doctype", 0);
        org.jsoup.parser.Token$TokenType.StartTag = new org.jsoup.parser.Token$TokenType("StartTag", 1);
        org.jsoup.parser.Token$TokenType.EndTag = new org.jsoup.parser.Token$TokenType("EndTag", 2);
        org.jsoup.parser.Token$TokenType.Comment = new org.jsoup.parser.Token$TokenType("Comment", 3);
        org.jsoup.parser.Token$TokenType.Character = new org.jsoup.parser.Token$TokenType("Character", 4);
        org.jsoup.parser.Token$TokenType.EOF = new org.jsoup.parser.Token$TokenType("EOF", 5);
        org.jsoup.parser.Token$TokenType[] v0_10 = new org.jsoup.parser.Token$TokenType[6];
        v0_10[0] = org.jsoup.parser.Token$TokenType.Doctype;
        v0_10[1] = org.jsoup.parser.Token$TokenType.StartTag;
        v0_10[2] = org.jsoup.parser.Token$TokenType.EndTag;
        v0_10[3] = org.jsoup.parser.Token$TokenType.Comment;
        v0_10[4] = org.jsoup.parser.Token$TokenType.Character;
        v0_10[5] = org.jsoup.parser.Token$TokenType.EOF;
        org.jsoup.parser.Token$TokenType.$VALUES = v0_10;
        return;
    }

    private Token$TokenType(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    public static org.jsoup.parser.Token$TokenType valueOf(String p1)
    {
        return ((org.jsoup.parser.Token$TokenType) Enum.valueOf(org.jsoup.parser.Token$TokenType, p1));
    }

    public static org.jsoup.parser.Token$TokenType[] values()
    {
        return ((org.jsoup.parser.Token$TokenType[]) org.jsoup.parser.Token$TokenType.$VALUES.clone());
    }
}
package org.jsoup.parser;
public class TokenQueue {
    private static final char ESC = 92;
    private int pos;
    private String queue;

    public TokenQueue(String p2)
    {
        this.pos = 0;
        org.jsoup.helper.Validate.notNull(p2);
        this.queue = p2;
        return;
    }

    private int remainingLength()
    {
        return (this.queue.length() - this.pos);
    }

    public static String unescape(String p7)
    {
        StringBuilder v5_1 = new StringBuilder();
        char v3 = 0;
        char[] v0 = p7.toCharArray();
        int v4 = v0.length;
        int v2 = 0;
        while (v2 < v4) {
            char v1 = v0[v2];
            if (v1 != 92) {
                v5_1.append(v1);
            } else {
                if ((v3 != 0) && (v3 == 92)) {
                    v5_1.append(v1);
                }
            }
            v3 = v1;
            v2++;
        }
        return v5_1.toString();
    }

    public void addFirst(Character p2)
    {
        this.addFirst(p2.toString());
        return;
    }

    public void addFirst(String p4)
    {
        this.queue = new StringBuilder().append(p4).append(this.queue.substring(this.pos)).toString();
        this.pos = 0;
        return;
    }

    public void advance()
    {
        if (!this.isEmpty()) {
            this.pos = (this.pos + 1);
        }
        return;
    }

    public String chompBalanced(char p6, char p7)
    {
        StringBuilder v0_1 = new StringBuilder();
        int v2 = 0;
        char v3 = 0;
        while (!this.isEmpty()) {
            Character v1 = Character.valueOf(this.consume());
            if ((v3 == 0) || (v3 != 92)) {
                if (!v1.equals(Character.valueOf(p6))) {
                    if (v1.equals(Character.valueOf(p7))) {
                        v2--;
                    }
                } else {
                    v2++;
                }
            }
            if ((v2 > 0) && (v3 != 0)) {
                v0_1.append(v1);
            }
            v3 = v1.charValue();
            if (v2 <= 0) {
                break;
            }
        }
        return v0_1.toString();
    }

    public String chompTo(String p2)
    {
        String v0 = this.consumeTo(p2);
        this.matchChomp(p2);
        return v0;
    }

    public String chompToIgnoreCase(String p2)
    {
        String v0 = this.consumeToIgnoreCase(p2);
        this.matchChomp(p2);
        return v0;
    }

    public char consume()
    {
        char v0_0 = this.queue;
        int v1 = this.pos;
        this.pos = (v1 + 1);
        return v0_0.charAt(v1);
    }

    public void consume(String p4)
    {
        if (this.matches(p4)) {
            int v0 = p4.length();
            if (v0 <= this.remainingLength()) {
                this.pos = (this.pos + v0);
                return;
            } else {
                throw new IllegalStateException("Queue not long enough to consume sequence");
            }
        } else {
            throw new IllegalStateException("Queue did not match expected sequence");
        }
    }

    public String consumeAttributeKey()
    {
        int v0 = this.pos;
        while (!this.isEmpty()) {
            if (!this.matchesWord()) {
                int v1_8 = new char[3];
                v1_8 = {45, 95, 58};
                if (!this.matchesAny(v1_8)) {
                    break;
                }
            }
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v0, this.pos);
    }

    public String consumeCssIdentifier()
    {
        int v0 = this.pos;
        while (!this.isEmpty()) {
            if (!this.matchesWord()) {
                int v1_8 = new char[2];
                v1_8 = {45, 95};
                if (!this.matchesAny(v1_8)) {
                    break;
                }
            }
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v0, this.pos);
    }

    public String consumeElementSelector()
    {
        int v0 = this.pos;
        while (!this.isEmpty()) {
            if (!this.matchesWord()) {
                int v1_8 = new char[3];
                v1_8 = {124, 95, 45};
                if (!this.matchesAny(v1_8)) {
                    break;
                }
            }
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v0, this.pos);
    }

    public String consumeTagName()
    {
        int v0 = this.pos;
        while (!this.isEmpty()) {
            if (!this.matchesWord()) {
                int v1_8 = new char[3];
                v1_8 = {58, 95, 45};
                if (!this.matchesAny(v1_8)) {
                    break;
                }
            }
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v0, this.pos);
    }

    public String consumeTo(String p5)
    {
        String v0;
        int v1 = this.queue.indexOf(p5, this.pos);
        if (v1 == -1) {
            v0 = this.remainder();
        } else {
            v0 = this.queue.substring(this.pos, v1);
            this.pos = (this.pos + v0.length());
        }
        return v0;
    }

    public varargs String consumeToAny(String[] p5)
    {
        int v1 = this.pos;
        while ((!this.isEmpty()) && (!this.matchesAny(p5))) {
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v1, this.pos);
    }

    public String consumeToIgnoreCase(String p8)
    {
        int v4 = this.pos;
        String v2 = p8.substring(0, 1);
        boolean v0 = v2.toLowerCase().equals(v2.toUpperCase());
        while ((!this.isEmpty()) && (!this.matches(p8))) {
            if (!v0) {
                this.pos = (this.pos + 1);
            } else {
                int v3 = (this.queue.indexOf(v2, this.pos) - this.pos);
                if (v3 != 0) {
                    if (v3 >= 0) {
                        this.pos = (this.pos + v3);
                    } else {
                        this.pos = this.queue.length();
                    }
                } else {
                    this.pos = (this.pos + 1);
                }
            }
        }
        return this.queue.substring(v4, this.pos);
    }

    public boolean consumeWhitespace()
    {
        int v0 = 0;
        while (this.matchesWhitespace()) {
            this.pos = (this.pos + 1);
            v0 = 1;
        }
        return v0;
    }

    public String consumeWord()
    {
        int v0 = this.pos;
        while (this.matchesWord()) {
            this.pos = (this.pos + 1);
        }
        return this.queue.substring(v0, this.pos);
    }

    public boolean isEmpty()
    {
        int v0_1;
        if (this.remainingLength() != 0) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean matchChomp(String p3)
    {
        int v0_1;
        if (!this.matches(p3)) {
            v0_1 = 0;
        } else {
            this.pos = (this.pos + p3.length());
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean matches(String p7)
    {
        return this.queue.regionMatches(1, this.pos, p7, 0, p7.length());
    }

    public varargs boolean matchesAny(char[] p8)
    {
        int v4 = 0;
        if (!this.isEmpty()) {
            int v2 = 0;
            while (v2 < p8.length) {
                if (this.queue.charAt(this.pos) != p8[v2]) {
                    v2++;
                } else {
                    v4 = 1;
                    break;
                }
            }
        }
        return v4;
    }

    public varargs boolean matchesAny(String[] p6)
    {
        int v1 = 0;
        while (v1 < p6.length) {
            if (!this.matches(p6[v1])) {
                v1++;
            } else {
                int v4_0 = 1;
            }
            return v4_0;
        }
        v4_0 = 0;
        return v4_0;
    }

    public boolean matchesCS(String p3)
    {
        return this.queue.startsWith(p3, this.pos);
    }

    public boolean matchesStartTag()
    {
        if ((this.remainingLength() < 2) || ((this.queue.charAt(this.pos) != 60) || (!Character.isLetter(this.queue.charAt((this.pos + 1)))))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public boolean matchesWhitespace()
    {
        if ((this.isEmpty()) || (!Character.isWhitespace(this.queue.charAt(this.pos)))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public boolean matchesWord()
    {
        if ((this.isEmpty()) || (!Character.isLetterOrDigit(this.queue.charAt(this.pos)))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public char peek()
    {
        char v0_2;
        if (!this.isEmpty()) {
            v0_2 = this.queue.charAt(this.pos);
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public String remainder()
    {
        StringBuilder v0_1 = new StringBuilder();
        while (!this.isEmpty()) {
            v0_1.append(this.consume());
        }
        return v0_1.toString();
    }

    public String toString()
    {
        return this.queue.substring(this.pos);
    }
}
package org.jsoup.parser;
 class Tokeniser {
    static final char replacementChar = 65533;
    private StringBuilder charBuffer;
    org.jsoup.parser.Token$Comment commentPending;
    StringBuilder dataBuffer;
    org.jsoup.parser.Token$Doctype doctypePending;
    private org.jsoup.parser.Token emitPending;
    private java.util.List errors;
    private boolean isEmitPending;
    private org.jsoup.parser.Token$StartTag lastStartTag;
    private org.jsoup.parser.CharacterReader reader;
    private boolean selfClosingFlagAcknowledged;
    private org.jsoup.parser.TokeniserState state;
    org.jsoup.parser.Token$Tag tagPending;
    private boolean trackErrors;

    Tokeniser(org.jsoup.parser.CharacterReader p3)
    {
        this.trackErrors = 1;
        this.errors = new java.util.ArrayList();
        this.state = org.jsoup.parser.TokeniserState.Data;
        this.isEmitPending = 0;
        this.charBuffer = new StringBuilder();
        this.selfClosingFlagAcknowledged = 1;
        this.reader = p3;
        return;
    }

    private void characterReferenceError()
    {
        if (this.trackErrors) {
            this.errors.add(new org.jsoup.parser.ParseError("Invalid character reference", this.reader.pos()));
        }
        return;
    }

    private void error(String p4)
    {
        if (this.trackErrors) {
            this.errors.add(new org.jsoup.parser.ParseError(p4, this.reader.pos()));
        }
        return;
    }

    void acknowledgeSelfClosingFlag()
    {
        this.selfClosingFlagAcknowledged = 1;
        return;
    }

    void advanceTransition(org.jsoup.parser.TokeniserState p2)
    {
        this.reader.advance();
        this.state = p2;
        return;
    }

    String appropriateEndTagName()
    {
        return this.lastStartTag.tagName;
    }

    Character consumeCharacterReference(Character p11, boolean p12)
    {
        Character v7_0 = 0;
        if ((!this.reader.isEmpty()) && ((p11 == null) || (p11.charValue() != this.reader.current()))) {
            int v9_2 = new char[5];
            v9_2 = {9, 10, 12, 60, 38};
            if (!this.reader.matchesAny(v9_2)) {
                this.reader.mark();
                if (!this.reader.matchConsume("#")) {
                    String v5 = this.reader.consumeLetterSequence();
                    boolean v4 = this.reader.matches(59);
                    int v2 = 0;
                    while ((v5.length() > 0) && (v2 == 0)) {
                        if (!org.jsoup.nodes.Entities.isNamedEntity(v5)) {
                            v5 = v5.substring(0, (v5.length() - 1));
                            this.reader.unconsume();
                        } else {
                            v2 = 1;
                        }
                    }
                    if (v2 != 0) {
                        if ((!p12) || ((!this.reader.matchesLetter()) && ((!this.reader.matchesDigit()) && (!this.reader.matches(61))))) {
                            if (!this.reader.matchConsume(";")) {
                                this.characterReferenceError();
                            }
                            v7_0 = org.jsoup.nodes.Entities.getCharacterByName(v5);
                        } else {
                            this.reader.rewindToMark();
                        }
                    } else {
                        if (v4) {
                            this.characterReferenceError();
                        }
                        this.reader.rewindToMark();
                    }
                } else {
                    String v6;
                    boolean v3 = this.reader.matchConsumeIgnoreCase("X");
                    if (!v3) {
                        v6 = this.reader.consumeDigitSequence();
                    } else {
                        v6 = this.reader.consumeHexSequence();
                    }
                    if (v6.length() != 0) {
                        if (!this.reader.matchConsume(";")) {
                            this.characterReferenceError();
                        }
                        int v0;
                        if (!v3) {
                            v0 = 10;
                        } else {
                            v0 = 16;
                        }
                        try {
                            int v1 = Integer.valueOf(v6, v0).intValue();
                        } catch (Character v7) {
                        }
                        if (((v1 != -1) && ((v1 < 55296) || (v1 > 57343))) && (v1 <= 1114111)) {
                            v7_0 = Character.valueOf(((char) v1));
                        } else {
                            this.characterReferenceError();
                            v7_0 = Character.valueOf(65533);
                        }
                    } else {
                        this.characterReferenceError();
                        this.reader.rewindToMark();
                    }
                }
            }
        }
        return v7_0;
    }

    void createCommentPending()
    {
        this.commentPending = new org.jsoup.parser.Token$Comment();
        return;
    }

    void createDoctypePending()
    {
        this.doctypePending = new org.jsoup.parser.Token$Doctype();
        return;
    }

    org.jsoup.parser.Token$Tag createTagPending(boolean p2)
    {
        org.jsoup.parser.Token$Tag v0_1;
        if (!p2) {
            v0_1 = new org.jsoup.parser.Token$EndTag();
        } else {
            v0_1 = new org.jsoup.parser.Token$StartTag();
        }
        this.tagPending = v0_1;
        return this.tagPending;
    }

    void createTempBuffer()
    {
        this.dataBuffer = new StringBuilder();
        return;
    }

    boolean currentNodeInHtmlNS()
    {
        return 1;
    }

    void emit(char p2)
    {
        this.charBuffer.append(p2);
        return;
    }

    void emit(String p2)
    {
        this.charBuffer.append(p2);
        return;
    }

    void emit(org.jsoup.parser.Token p5)
    {
        org.jsoup.helper.Validate.isFalse(this.isEmitPending, "There is an unread token pending!");
        this.emitPending = p5;
        this.isEmitPending = 1;
        if (p5.type != org.jsoup.parser.Token$TokenType.StartTag) {
            if ((p5.type == org.jsoup.parser.Token$TokenType.EndTag) && (((org.jsoup.parser.Token$EndTag) p5).attributes.size() > 0)) {
                this.error("Attributes incorrectly present on end tag");
            }
        } else {
            this.lastStartTag = ((org.jsoup.parser.Token$StartTag) p5);
            if (((org.jsoup.parser.Token$StartTag) p5).selfClosing) {
                this.selfClosingFlagAcknowledged = 0;
            }
        }
        return;
    }

    void emitCommentPending()
    {
        this.emit(this.commentPending);
        return;
    }

    void emitDoctypePending()
    {
        this.emit(this.doctypePending);
        return;
    }

    void emitTagPending()
    {
        this.tagPending.finaliseTag();
        this.emit(this.tagPending);
        return;
    }

    void eofError(org.jsoup.parser.TokeniserState p5)
    {
        if (this.trackErrors) {
            this.errors.add(new org.jsoup.parser.ParseError("Unexpectedly reached end of file (EOF)", p5, this.reader.pos()));
        }
        return;
    }

    void error(org.jsoup.parser.TokeniserState p6)
    {
        if (this.trackErrors) {
            this.errors.add(new org.jsoup.parser.ParseError("Unexpected character in input", this.reader.current(), p6, this.reader.pos()));
        }
        return;
    }

    org.jsoup.parser.TokeniserState getState()
    {
        return this.state;
    }

    boolean isAppropriateEndTagToken()
    {
        return this.tagPending.tagName.equals(this.lastStartTag.tagName);
    }

    boolean isTrackErrors()
    {
        return this.trackErrors;
    }

    org.jsoup.parser.Token read()
    {
        if (!this.selfClosingFlagAcknowledged) {
            this.error("Self closing flag not acknowledged");
            this.selfClosingFlagAcknowledged = 1;
        }
        while (!this.isEmitPending) {
            this.state.read(this, this.reader);
        }
        org.jsoup.parser.Token v1_2;
        if (this.charBuffer.length() <= 0) {
            this.isEmitPending = 0;
            v1_2 = this.emitPending;
        } else {
            String v0 = this.charBuffer.toString();
            this.charBuffer.delete(0, this.charBuffer.length());
            v1_2 = new org.jsoup.parser.Token$Character(v0);
        }
        return v1_2;
    }

    void setTrackErrors(boolean p1)
    {
        this.trackErrors = p1;
        return;
    }

    void transition(org.jsoup.parser.TokeniserState p1)
    {
        this.state = p1;
        return;
    }
}
package org.jsoup.parser;
abstract enum class TokeniserState extends java.lang.Enum {
    private static final synthetic org.jsoup.parser.TokeniserState[] $VALUES = None;
    public static final enum org.jsoup.parser.TokeniserState AfterAttributeName = None;
    public static final enum org.jsoup.parser.TokeniserState AfterAttributeValue_quoted = None;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeName = None;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier = None;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword = None;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier = None;
    public static final enum org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword = None;
    public static final enum org.jsoup.parser.TokeniserState AttributeName = None;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_singleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState AttributeValue_unquoted = None;
    public static final enum org.jsoup.parser.TokeniserState BeforeAttributeName = None;
    public static final enum org.jsoup.parser.TokeniserState BeforeAttributeValue = None;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypeName = None;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier = None;
    public static final enum org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier = None;
    public static final enum org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers = None;
    public static final enum org.jsoup.parser.TokeniserState BogusComment = None;
    public static final enum org.jsoup.parser.TokeniserState BogusDoctype = None;
    public static final enum org.jsoup.parser.TokeniserState CdataSection = None;
    public static final enum org.jsoup.parser.TokeniserState CharacterReferenceInData = None;
    public static final enum org.jsoup.parser.TokeniserState CharacterReferenceInRcdata = None;
    public static final enum org.jsoup.parser.TokeniserState Comment = None;
    public static final enum org.jsoup.parser.TokeniserState CommentEnd = None;
    public static final enum org.jsoup.parser.TokeniserState CommentEndBang = None;
    public static final enum org.jsoup.parser.TokeniserState CommentEndDash = None;
    public static final enum org.jsoup.parser.TokeniserState CommentStart = None;
    public static final enum org.jsoup.parser.TokeniserState CommentStartDash = None;
    public static final enum org.jsoup.parser.TokeniserState Data = None;
    public static final enum org.jsoup.parser.TokeniserState Doctype = None;
    public static final enum org.jsoup.parser.TokeniserState DoctypeName = None;
    public static final enum org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted = None;
    public static final enum org.jsoup.parser.TokeniserState EndTagOpen = None;
    public static final enum org.jsoup.parser.TokeniserState MarkupDeclarationOpen = None;
    public static final enum org.jsoup.parser.TokeniserState PLAINTEXT = None;
    public static final enum org.jsoup.parser.TokeniserState RCDATAEndTagName = None;
    public static final enum org.jsoup.parser.TokeniserState RCDATAEndTagOpen = None;
    public static final enum org.jsoup.parser.TokeniserState Rawtext = None;
    public static final enum org.jsoup.parser.TokeniserState RawtextEndTagName = None;
    public static final enum org.jsoup.parser.TokeniserState RawtextEndTagOpen = None;
    public static final enum org.jsoup.parser.TokeniserState RawtextLessthanSign = None;
    public static final enum org.jsoup.parser.TokeniserState Rcdata = None;
    public static final enum org.jsoup.parser.TokeniserState RcdataLessthanSign = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptData = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEndTagName = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEndTagOpen = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapeStart = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscaped = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedDash = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign = None;
    public static final enum org.jsoup.parser.TokeniserState ScriptDataLessthanSign = None;
    public static final enum org.jsoup.parser.TokeniserState SelfClosingStartTag = None;
    public static final enum org.jsoup.parser.TokeniserState TagName = None;
    public static final enum org.jsoup.parser.TokeniserState TagOpen = None;
    private static final char eof = 65535;
    private static final char nullChar = 0;
    private static final char replacementChar = 65533;
    private static final String replacementStr;

    static TokeniserState()
    {
        org.jsoup.parser.TokeniserState.Data = new org.jsoup.parser.TokeniserState$1("Data", 0);
        org.jsoup.parser.TokeniserState.CharacterReferenceInData = new org.jsoup.parser.TokeniserState$2("CharacterReferenceInData", 1);
        org.jsoup.parser.TokeniserState.Rcdata = new org.jsoup.parser.TokeniserState$3("Rcdata", 2);
        org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata = new org.jsoup.parser.TokeniserState$4("CharacterReferenceInRcdata", 3);
        org.jsoup.parser.TokeniserState.Rawtext = new org.jsoup.parser.TokeniserState$5("Rawtext", 4);
        org.jsoup.parser.TokeniserState.ScriptData = new org.jsoup.parser.TokeniserState$6("ScriptData", 5);
        org.jsoup.parser.TokeniserState.PLAINTEXT = new org.jsoup.parser.TokeniserState$7("PLAINTEXT", 6);
        org.jsoup.parser.TokeniserState.TagOpen = new org.jsoup.parser.TokeniserState$8("TagOpen", 7);
        org.jsoup.parser.TokeniserState.EndTagOpen = new org.jsoup.parser.TokeniserState$9("EndTagOpen", 8);
        org.jsoup.parser.TokeniserState.TagName = new org.jsoup.parser.TokeniserState$10("TagName", 9);
        org.jsoup.parser.TokeniserState.RcdataLessthanSign = new org.jsoup.parser.TokeniserState$11("RcdataLessthanSign", 10);
        org.jsoup.parser.TokeniserState.RCDATAEndTagOpen = new org.jsoup.parser.TokeniserState$12("RCDATAEndTagOpen", 11);
        org.jsoup.parser.TokeniserState.RCDATAEndTagName = new org.jsoup.parser.TokeniserState$13("RCDATAEndTagName", 12);
        org.jsoup.parser.TokeniserState.RawtextLessthanSign = new org.jsoup.parser.TokeniserState$14("RawtextLessthanSign", 13);
        org.jsoup.parser.TokeniserState.RawtextEndTagOpen = new org.jsoup.parser.TokeniserState$15("RawtextEndTagOpen", 14);
        org.jsoup.parser.TokeniserState.RawtextEndTagName = new org.jsoup.parser.TokeniserState$16("RawtextEndTagName", 15);
        org.jsoup.parser.TokeniserState.ScriptDataLessthanSign = new org.jsoup.parser.TokeniserState$17("ScriptDataLessthanSign", 16);
        org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen = new org.jsoup.parser.TokeniserState$18("ScriptDataEndTagOpen", 17);
        org.jsoup.parser.TokeniserState.ScriptDataEndTagName = new org.jsoup.parser.TokeniserState$19("ScriptDataEndTagName", 18);
        org.jsoup.parser.TokeniserState.ScriptDataEscapeStart = new org.jsoup.parser.TokeniserState$20("ScriptDataEscapeStart", 19);
        org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash = new org.jsoup.parser.TokeniserState$21("ScriptDataEscapeStartDash", 20);
        org.jsoup.parser.TokeniserState.ScriptDataEscaped = new org.jsoup.parser.TokeniserState$22("ScriptDataEscaped", 21);
        org.jsoup.parser.TokeniserState.ScriptDataEscapedDash = new org.jsoup.parser.TokeniserState$23("ScriptDataEscapedDash", 22);
        org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash = new org.jsoup.parser.TokeniserState$24("ScriptDataEscapedDashDash", 23);
        org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign = new org.jsoup.parser.TokeniserState$25("ScriptDataEscapedLessthanSign", 24);
        org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen = new org.jsoup.parser.TokeniserState$26("ScriptDataEscapedEndTagOpen", 25);
        org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName = new org.jsoup.parser.TokeniserState$27("ScriptDataEscapedEndTagName", 26);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart = new org.jsoup.parser.TokeniserState$28("ScriptDataDoubleEscapeStart", 27);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped = new org.jsoup.parser.TokeniserState$29("ScriptDataDoubleEscaped", 28);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash = new org.jsoup.parser.TokeniserState$30("ScriptDataDoubleEscapedDash", 29);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash = new org.jsoup.parser.TokeniserState$31("ScriptDataDoubleEscapedDashDash", 30);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign = new org.jsoup.parser.TokeniserState$32("ScriptDataDoubleEscapedLessthanSign", 31);
        org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd = new org.jsoup.parser.TokeniserState$33("ScriptDataDoubleEscapeEnd", 32);
        org.jsoup.parser.TokeniserState.BeforeAttributeName = new org.jsoup.parser.TokeniserState$34("BeforeAttributeName", 33);
        org.jsoup.parser.TokeniserState.AttributeName = new org.jsoup.parser.TokeniserState$35("AttributeName", 34);
        org.jsoup.parser.TokeniserState.AfterAttributeName = new org.jsoup.parser.TokeniserState$36("AfterAttributeName", 35);
        org.jsoup.parser.TokeniserState.BeforeAttributeValue = new org.jsoup.parser.TokeniserState$37("BeforeAttributeValue", 36);
        org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted = new org.jsoup.parser.TokeniserState$38("AttributeValue_doubleQuoted", 37);
        org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted = new org.jsoup.parser.TokeniserState$39("AttributeValue_singleQuoted", 38);
        org.jsoup.parser.TokeniserState.AttributeValue_unquoted = new org.jsoup.parser.TokeniserState$40("AttributeValue_unquoted", 39);
        org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted = new org.jsoup.parser.TokeniserState$41("AfterAttributeValue_quoted", 40);
        org.jsoup.parser.TokeniserState.SelfClosingStartTag = new org.jsoup.parser.TokeniserState$42("SelfClosingStartTag", 41);
        org.jsoup.parser.TokeniserState.BogusComment = new org.jsoup.parser.TokeniserState$43("BogusComment", 42);
        org.jsoup.parser.TokeniserState.MarkupDeclarationOpen = new org.jsoup.parser.TokeniserState$44("MarkupDeclarationOpen", 43);
        org.jsoup.parser.TokeniserState.CommentStart = new org.jsoup.parser.TokeniserState$45("CommentStart", 44);
        org.jsoup.parser.TokeniserState.CommentStartDash = new org.jsoup.parser.TokeniserState$46("CommentStartDash", 45);
        org.jsoup.parser.TokeniserState.Comment = new org.jsoup.parser.TokeniserState$47("Comment", 46);
        org.jsoup.parser.TokeniserState.CommentEndDash = new org.jsoup.parser.TokeniserState$48("CommentEndDash", 47);
        org.jsoup.parser.TokeniserState.CommentEnd = new org.jsoup.parser.TokeniserState$49("CommentEnd", 48);
        org.jsoup.parser.TokeniserState.CommentEndBang = new org.jsoup.parser.TokeniserState$50("CommentEndBang", 49);
        org.jsoup.parser.TokeniserState.Doctype = new org.jsoup.parser.TokeniserState$51("Doctype", 50);
        org.jsoup.parser.TokeniserState.BeforeDoctypeName = new org.jsoup.parser.TokeniserState$52("BeforeDoctypeName", 51);
        org.jsoup.parser.TokeniserState.DoctypeName = new org.jsoup.parser.TokeniserState$53("DoctypeName", 52);
        org.jsoup.parser.TokeniserState.AfterDoctypeName = new org.jsoup.parser.TokeniserState$54("AfterDoctypeName", 53);
        org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword = new org.jsoup.parser.TokeniserState$55("AfterDoctypePublicKeyword", 54);
        org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier = new org.jsoup.parser.TokeniserState$56("BeforeDoctypePublicIdentifier", 55);
        org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted = new org.jsoup.parser.TokeniserState$57("DoctypePublicIdentifier_doubleQuoted", 56);
        org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted = new org.jsoup.parser.TokeniserState$58("DoctypePublicIdentifier_singleQuoted", 57);
        org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier = new org.jsoup.parser.TokeniserState$59("AfterDoctypePublicIdentifier", 58);
        org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers = new org.jsoup.parser.TokeniserState$60("BetweenDoctypePublicAndSystemIdentifiers", 59);
        org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword = new org.jsoup.parser.TokeniserState$61("AfterDoctypeSystemKeyword", 60);
        org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier = new org.jsoup.parser.TokeniserState$62("BeforeDoctypeSystemIdentifier", 61);
        org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted = new org.jsoup.parser.TokeniserState$63("DoctypeSystemIdentifier_doubleQuoted", 62);
        org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted = new org.jsoup.parser.TokeniserState$64("DoctypeSystemIdentifier_singleQuoted", 63);
        org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier = new org.jsoup.parser.TokeniserState$65("AfterDoctypeSystemIdentifier", 64);
        org.jsoup.parser.TokeniserState.BogusDoctype = new org.jsoup.parser.TokeniserState$66("BogusDoctype", 65);
        org.jsoup.parser.TokeniserState.CdataSection = new org.jsoup.parser.TokeniserState$67("CdataSection", 66);
        String v0_106 = new org.jsoup.parser.TokeniserState[67];
        v0_106[0] = org.jsoup.parser.TokeniserState.Data;
        v0_106[1] = org.jsoup.parser.TokeniserState.CharacterReferenceInData;
        v0_106[2] = org.jsoup.parser.TokeniserState.Rcdata;
        v0_106[3] = org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata;
        v0_106[4] = org.jsoup.parser.TokeniserState.Rawtext;
        v0_106[5] = org.jsoup.parser.TokeniserState.ScriptData;
        v0_106[6] = org.jsoup.parser.TokeniserState.PLAINTEXT;
        v0_106[7] = org.jsoup.parser.TokeniserState.TagOpen;
        v0_106[8] = org.jsoup.parser.TokeniserState.EndTagOpen;
        v0_106[9] = org.jsoup.parser.TokeniserState.TagName;
        v0_106[10] = org.jsoup.parser.TokeniserState.RcdataLessthanSign;
        v0_106[11] = org.jsoup.parser.TokeniserState.RCDATAEndTagOpen;
        v0_106[12] = org.jsoup.parser.TokeniserState.RCDATAEndTagName;
        v0_106[13] = org.jsoup.parser.TokeniserState.RawtextLessthanSign;
        v0_106[14] = org.jsoup.parser.TokeniserState.RawtextEndTagOpen;
        v0_106[15] = org.jsoup.parser.TokeniserState.RawtextEndTagName;
        v0_106[16] = org.jsoup.parser.TokeniserState.ScriptDataLessthanSign;
        v0_106[17] = org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen;
        v0_106[18] = org.jsoup.parser.TokeniserState.ScriptDataEndTagName;
        v0_106[19] = org.jsoup.parser.TokeniserState.ScriptDataEscapeStart;
        v0_106[20] = org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash;
        v0_106[21] = org.jsoup.parser.TokeniserState.ScriptDataEscaped;
        v0_106[22] = org.jsoup.parser.TokeniserState.ScriptDataEscapedDash;
        v0_106[23] = org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash;
        v0_106[24] = org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign;
        v0_106[25] = org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen;
        v0_106[26] = org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName;
        v0_106[27] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart;
        v0_106[28] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped;
        v0_106[29] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash;
        v0_106[30] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash;
        v0_106[31] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign;
        v0_106[32] = org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd;
        v0_106[33] = org.jsoup.parser.TokeniserState.BeforeAttributeName;
        v0_106[34] = org.jsoup.parser.TokeniserState.AttributeName;
        v0_106[35] = org.jsoup.parser.TokeniserState.AfterAttributeName;
        v0_106[36] = org.jsoup.parser.TokeniserState.BeforeAttributeValue;
        v0_106[37] = org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted;
        v0_106[38] = org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted;
        v0_106[39] = org.jsoup.parser.TokeniserState.AttributeValue_unquoted;
        v0_106[40] = org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted;
        v0_106[41] = org.jsoup.parser.TokeniserState.SelfClosingStartTag;
        v0_106[42] = org.jsoup.parser.TokeniserState.BogusComment;
        v0_106[43] = org.jsoup.parser.TokeniserState.MarkupDeclarationOpen;
        v0_106[44] = org.jsoup.parser.TokeniserState.CommentStart;
        v0_106[45] = org.jsoup.parser.TokeniserState.CommentStartDash;
        v0_106[46] = org.jsoup.parser.TokeniserState.Comment;
        v0_106[47] = org.jsoup.parser.TokeniserState.CommentEndDash;
        v0_106[48] = org.jsoup.parser.TokeniserState.CommentEnd;
        v0_106[49] = org.jsoup.parser.TokeniserState.CommentEndBang;
        v0_106[50] = org.jsoup.parser.TokeniserState.Doctype;
        v0_106[51] = org.jsoup.parser.TokeniserState.BeforeDoctypeName;
        v0_106[52] = org.jsoup.parser.TokeniserState.DoctypeName;
        v0_106[53] = org.jsoup.parser.TokeniserState.AfterDoctypeName;
        v0_106[54] = org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword;
        v0_106[55] = org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier;
        v0_106[56] = org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted;
        v0_106[57] = org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted;
        v0_106[58] = org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier;
        v0_106[59] = org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers;
        v0_106[60] = org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword;
        v0_106[61] = org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier;
        v0_106[62] = org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted;
        v0_106[63] = org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted;
        v0_106[64] = org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier;
        v0_106[65] = org.jsoup.parser.TokeniserState.BogusDoctype;
        v0_106[66] = org.jsoup.parser.TokeniserState.CdataSection;
        org.jsoup.parser.TokeniserState.$VALUES = v0_106;
        org.jsoup.parser.TokeniserState.replacementStr = String.valueOf(65533);
        return;
    }

    private TokeniserState(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    synthetic TokeniserState(String p1, int p2, org.jsoup.parser.TokeniserState$1 p3)
    {
        this(p1, p2);
        return;
    }

    static synthetic String access$100()
    {
        return org.jsoup.parser.TokeniserState.replacementStr;
    }

    public static org.jsoup.parser.TokeniserState valueOf(String p1)
    {
        return ((org.jsoup.parser.TokeniserState) Enum.valueOf(org.jsoup.parser.TokeniserState, p1));
    }

    public static org.jsoup.parser.TokeniserState[] values()
    {
        return ((org.jsoup.parser.TokeniserState[]) org.jsoup.parser.TokeniserState.$VALUES.clone());
    }

    abstract void read();
}
package org.jsoup.parser;
final enum class TokeniserState$10 extends org.jsoup.parser.TokeniserState {

    TokeniserState$10(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        org.jsoup.parser.TokeniserState v1_1 = new char[7];
        v1_1 = {9, 10, 12, 32, 47, 62, 0};
        p4.tagPending.appendTagName(p5.consumeToAny(v1_1).toLowerCase());
        switch (p5.consume()) {
            case 0:
                p4.tagPending.appendTagName(org.jsoup.parser.TokeniserState.access$100());
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                p4.transition(org.jsoup.parser.TokeniserState$10.BeforeAttributeName);
                break;
            case 47:
                p4.transition(org.jsoup.parser.TokeniserState$10.SelfClosingStartTag);
                break;
            case 62:
                p4.emitTagPending();
                p4.transition(org.jsoup.parser.TokeniserState$10.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.transition(org.jsoup.parser.TokeniserState$10.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$11 extends org.jsoup.parser.TokeniserState {

    TokeniserState$11(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matches(47)) {
            if ((!p4.matchesLetter()) || (p4.containsIgnoreCase(new StringBuilder().append("</").append(p3.appropriateEndTagName()).toString()))) {
                p3.emit("<");
                p3.transition(org.jsoup.parser.TokeniserState$11.Rcdata);
            } else {
                p3.tagPending = new org.jsoup.parser.Token$EndTag(p3.appropriateEndTagName());
                p3.emitTagPending();
                p4.unconsume();
                p3.transition(org.jsoup.parser.TokeniserState$11.Data);
            }
        } else {
            p3.createTempBuffer();
            p3.advanceTransition(org.jsoup.parser.TokeniserState$11.RCDATAEndTagOpen);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$12 extends org.jsoup.parser.TokeniserState {

    TokeniserState$12(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matchesLetter()) {
            p3.emit("</");
            p3.transition(org.jsoup.parser.TokeniserState$12.Rcdata);
        } else {
            p3.createTagPending(0);
            p3.tagPending.appendTagName(Character.toLowerCase(p4.current()));
            p3.dataBuffer.append(Character.toLowerCase(p4.current()));
            p3.advanceTransition(org.jsoup.parser.TokeniserState$12.RCDATAEndTagName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$13 extends org.jsoup.parser.TokeniserState {

    TokeniserState$13(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        p3.emit(new StringBuilder().append("</").append(p3.dataBuffer.toString()).toString());
        p3.transition(org.jsoup.parser.TokeniserState$13.Rcdata);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            switch (p6.consume()) {
                case 9:
                case 10:
                case 12:
                case 32:
                    if (!p5.isAppropriateEndTagToken()) {
                        this.anythingElse(p5, p6);
                    } else {
                        p5.transition(org.jsoup.parser.TokeniserState$13.BeforeAttributeName);
                    }
                    break;
                case 47:
                    if (!p5.isAppropriateEndTagToken()) {
                        this.anythingElse(p5, p6);
                    } else {
                        p5.transition(org.jsoup.parser.TokeniserState$13.SelfClosingStartTag);
                    }
                    break;
                case 62:
                    if (!p5.isAppropriateEndTagToken()) {
                        this.anythingElse(p5, p6);
                    } else {
                        p5.emitTagPending();
                        p5.transition(org.jsoup.parser.TokeniserState$13.Data);
                    }
                    break;
                default:
                    this.anythingElse(p5, p6);
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.tagPending.appendTagName(v1.toLowerCase());
            p5.dataBuffer.append(v1);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$14 extends org.jsoup.parser.TokeniserState {

    TokeniserState$14(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        if (!p3.matches(47)) {
            p2.emit(60);
            p2.transition(org.jsoup.parser.TokeniserState$14.Rawtext);
        } else {
            p2.createTempBuffer();
            p2.advanceTransition(org.jsoup.parser.TokeniserState$14.RawtextEndTagOpen);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$15 extends org.jsoup.parser.TokeniserState {

    TokeniserState$15(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        if (!p3.matchesLetter()) {
            p2.emit("</");
            p2.transition(org.jsoup.parser.TokeniserState$15.Rawtext);
        } else {
            p2.createTagPending(0);
            p2.transition(org.jsoup.parser.TokeniserState$15.RawtextEndTagName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$16 extends org.jsoup.parser.TokeniserState {

    TokeniserState$16(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        p3.emit(new StringBuilder().append("</").append(p3.dataBuffer.toString()).toString());
        p3.transition(org.jsoup.parser.TokeniserState$16.Rawtext);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            if ((!p5.isAppropriateEndTagToken()) || (p6.isEmpty())) {
                this.anythingElse(p5, p6);
            } else {
                char v0 = p6.consume();
                switch (v0) {
                    case 9:
                    case 10:
                    case 12:
                    case 32:
                        p5.transition(org.jsoup.parser.TokeniserState$16.BeforeAttributeName);
                        break;
                    case 47:
                        p5.transition(org.jsoup.parser.TokeniserState$16.SelfClosingStartTag);
                        break;
                    case 62:
                        p5.emitTagPending();
                        p5.transition(org.jsoup.parser.TokeniserState$16.Data);
                        break;
                    default:
                        p5.dataBuffer.append(v0);
                        this.anythingElse(p5, p6);
                }
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.tagPending.appendTagName(v1.toLowerCase());
            p5.dataBuffer.append(v1);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$17 extends org.jsoup.parser.TokeniserState {

    TokeniserState$17(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        switch (p3.consume()) {
            case 33:
                p2.emit("<!");
                p2.transition(org.jsoup.parser.TokeniserState$17.ScriptDataEscapeStart);
                break;
            case 47:
                p2.createTempBuffer();
                p2.transition(org.jsoup.parser.TokeniserState$17.ScriptDataEndTagOpen);
                break;
            default:
                p2.emit("<");
                p3.unconsume();
                p2.transition(org.jsoup.parser.TokeniserState$17.ScriptData);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$18 extends org.jsoup.parser.TokeniserState {

    TokeniserState$18(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        if (!p3.matchesLetter()) {
            p2.emit("</");
            p2.transition(org.jsoup.parser.TokeniserState$18.ScriptData);
        } else {
            p2.createTagPending(0);
            p2.transition(org.jsoup.parser.TokeniserState$18.ScriptDataEndTagName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$19 extends org.jsoup.parser.TokeniserState {

    TokeniserState$19(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        p3.emit(new StringBuilder().append("</").append(p3.dataBuffer.toString()).toString());
        p3.transition(org.jsoup.parser.TokeniserState$19.ScriptData);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            if ((!p5.isAppropriateEndTagToken()) || (p6.isEmpty())) {
                this.anythingElse(p5, p6);
            } else {
                char v0 = p6.consume();
                switch (v0) {
                    case 9:
                    case 10:
                    case 12:
                    case 32:
                        p5.transition(org.jsoup.parser.TokeniserState$19.BeforeAttributeName);
                        break;
                    case 47:
                        p5.transition(org.jsoup.parser.TokeniserState$19.SelfClosingStartTag);
                        break;
                    case 62:
                        p5.emitTagPending();
                        p5.transition(org.jsoup.parser.TokeniserState$19.Data);
                        break;
                    default:
                        p5.dataBuffer.append(v0);
                        this.anythingElse(p5, p6);
                }
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.tagPending.appendTagName(v1.toLowerCase());
            p5.dataBuffer.append(v1);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$1 extends org.jsoup.parser.TokeniserState {

    TokeniserState$1(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.current()) {
            case 0:
                p3.error(this);
                p3.emit(p4.consume());
                break;
            case 38:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$1.CharacterReferenceInData);
                break;
            case 60:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$1.TagOpen);
                break;
            case 65535:
                p3.emit(new org.jsoup.parser.Token$EOF());
                break;
            default:
                org.jsoup.parser.Token$EOF v1_3 = new char[3];
                v1_3 = {38, 60, 0};
                p3.emit(p4.consumeToAny(v1_3));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$20 extends org.jsoup.parser.TokeniserState {

    TokeniserState$20(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matches(45)) {
            p3.transition(org.jsoup.parser.TokeniserState$20.ScriptData);
        } else {
            p3.emit(45);
            p3.advanceTransition(org.jsoup.parser.TokeniserState$20.ScriptDataEscapeStartDash);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$21 extends org.jsoup.parser.TokeniserState {

    TokeniserState$21(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matches(45)) {
            p3.transition(org.jsoup.parser.TokeniserState$21.ScriptData);
        } else {
            p3.emit(45);
            p3.advanceTransition(org.jsoup.parser.TokeniserState$21.ScriptDataEscapedDashDash);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$22 extends org.jsoup.parser.TokeniserState {

    TokeniserState$22(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.isEmpty()) {
            switch (p4.current()) {
                case 0:
                    p3.error(this);
                    p4.advance();
                    p3.emit(65533);
                    break;
                case 45:
                    p3.emit(45);
                    p3.advanceTransition(org.jsoup.parser.TokeniserState$22.ScriptDataEscapedDash);
                    break;
                case 60:
                    p3.advanceTransition(org.jsoup.parser.TokeniserState$22.ScriptDataEscapedLessthanSign);
                    break;
                default:
                    org.jsoup.parser.TokeniserState v1_4 = new char[3];
                    v1_4 = {45, 60, 0};
                    p3.emit(p4.consumeToAny(v1_4));
            }
        } else {
            p3.eofError(this);
            p3.transition(org.jsoup.parser.TokeniserState$22.Data);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$23 extends org.jsoup.parser.TokeniserState {

    TokeniserState$23(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.isEmpty()) {
            char v0 = p4.consume();
            switch (v0) {
                case 0:
                    p3.error(this);
                    p3.emit(65533);
                    p3.transition(org.jsoup.parser.TokeniserState$23.ScriptDataEscaped);
                    break;
                case 45:
                    p3.emit(v0);
                    p3.transition(org.jsoup.parser.TokeniserState$23.ScriptDataEscapedDashDash);
                    break;
                case 60:
                    p3.transition(org.jsoup.parser.TokeniserState$23.ScriptDataEscapedLessthanSign);
                    break;
                default:
                    p3.emit(v0);
                    p3.transition(org.jsoup.parser.TokeniserState$23.ScriptDataEscaped);
            }
        } else {
            p3.eofError(this);
            p3.transition(org.jsoup.parser.TokeniserState$23.Data);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$24 extends org.jsoup.parser.TokeniserState {

    TokeniserState$24(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.isEmpty()) {
            char v0 = p4.consume();
            switch (v0) {
                case 0:
                    p3.error(this);
                    p3.emit(65533);
                    p3.transition(org.jsoup.parser.TokeniserState$24.ScriptDataEscaped);
                    break;
                case 45:
                    p3.emit(v0);
                    break;
                case 60:
                    p3.transition(org.jsoup.parser.TokeniserState$24.ScriptDataEscapedLessthanSign);
                    break;
                case 62:
                    p3.emit(v0);
                    p3.transition(org.jsoup.parser.TokeniserState$24.ScriptData);
                    break;
                default:
                    p3.emit(v0);
                    p3.transition(org.jsoup.parser.TokeniserState$24.ScriptDataEscaped);
            }
        } else {
            p3.eofError(this);
            p3.transition(org.jsoup.parser.TokeniserState$24.Data);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$25 extends org.jsoup.parser.TokeniserState {

    TokeniserState$25(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matchesLetter()) {
            if (!p4.matches(47)) {
                p3.emit(60);
                p3.transition(org.jsoup.parser.TokeniserState$25.ScriptDataEscaped);
            } else {
                p3.createTempBuffer();
                p3.advanceTransition(org.jsoup.parser.TokeniserState$25.ScriptDataEscapedEndTagOpen);
            }
        } else {
            p3.createTempBuffer();
            p3.dataBuffer.append(Character.toLowerCase(p4.current()));
            p3.emit(new StringBuilder().append("<").append(p4.current()).toString());
            p3.advanceTransition(org.jsoup.parser.TokeniserState$25.ScriptDataDoubleEscapeStart);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$26 extends org.jsoup.parser.TokeniserState {

    TokeniserState$26(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matchesLetter()) {
            p3.emit("</");
            p3.transition(org.jsoup.parser.TokeniserState$26.ScriptDataEscaped);
        } else {
            p3.createTagPending(0);
            p3.tagPending.appendTagName(Character.toLowerCase(p4.current()));
            p3.dataBuffer.append(p4.current());
            p3.advanceTransition(org.jsoup.parser.TokeniserState$26.ScriptDataEscapedEndTagName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$27 extends org.jsoup.parser.TokeniserState {

    TokeniserState$27(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        p3.emit(new StringBuilder().append("</").append(p3.dataBuffer.toString()).toString());
        p3.transition(org.jsoup.parser.TokeniserState$27.ScriptDataEscaped);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            if ((!p5.isAppropriateEndTagToken()) || (p6.isEmpty())) {
                this.anythingElse(p5, p6);
            } else {
                char v0 = p6.consume();
                switch (v0) {
                    case 9:
                    case 10:
                    case 12:
                    case 32:
                        p5.transition(org.jsoup.parser.TokeniserState$27.BeforeAttributeName);
                        break;
                    case 47:
                        p5.transition(org.jsoup.parser.TokeniserState$27.SelfClosingStartTag);
                        break;
                    case 62:
                        p5.emitTagPending();
                        p5.transition(org.jsoup.parser.TokeniserState$27.Data);
                        break;
                    default:
                        p5.dataBuffer.append(v0);
                        this.anythingElse(p5, p6);
                }
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.tagPending.appendTagName(v1.toLowerCase());
            p5.dataBuffer.append(v1);
            p6.advance();
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$28 extends org.jsoup.parser.TokeniserState {

    TokeniserState$28(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            char v0 = p6.consume();
            switch (v0) {
                case 9:
                case 10:
                case 12:
                case 32:
                case 47:
                case 62:
                    if (!p5.dataBuffer.toString().equals("script")) {
                        p5.transition(org.jsoup.parser.TokeniserState$28.ScriptDataEscaped);
                    } else {
                        p5.transition(org.jsoup.parser.TokeniserState$28.ScriptDataDoubleEscaped);
                    }
                    p5.emit(v0);
                    break;
                default:
                    p6.unconsume();
                    p5.transition(org.jsoup.parser.TokeniserState$28.ScriptDataEscaped);
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.dataBuffer.append(v1.toLowerCase());
            p5.emit(v1);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$29 extends org.jsoup.parser.TokeniserState {

    TokeniserState$29(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.current();
        switch (v0) {
            case 0:
                p4.error(this);
                p5.advance();
                p4.emit(65533);
                break;
            case 45:
                p4.emit(v0);
                p4.advanceTransition(org.jsoup.parser.TokeniserState$29.ScriptDataDoubleEscapedDash);
                break;
            case 60:
                p4.emit(v0);
                p4.advanceTransition(org.jsoup.parser.TokeniserState$29.ScriptDataDoubleEscapedLessthanSign);
                break;
            case 65535:
                p4.eofError(this);
                p4.transition(org.jsoup.parser.TokeniserState$29.Data);
                break;
            default:
                org.jsoup.parser.TokeniserState v2_3 = new char[3];
                v2_3 = {45, 60, 0};
                p4.emit(p5.consumeToAny(v2_3));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$2 extends org.jsoup.parser.TokeniserState {

    TokeniserState$2(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        Character v0 = p4.consumeCharacterReference(0, 0);
        if (v0 != null) {
            p4.emit(v0.charValue());
        } else {
            p4.emit(38);
        }
        p4.transition(org.jsoup.parser.TokeniserState$2.Data);
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$30 extends org.jsoup.parser.TokeniserState {

    TokeniserState$30(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        char v0 = p4.consume();
        switch (v0) {
            case 0:
                p3.error(this);
                p3.emit(65533);
                p3.transition(org.jsoup.parser.TokeniserState$30.ScriptDataDoubleEscaped);
                break;
            case 45:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$30.ScriptDataDoubleEscapedDashDash);
                break;
            case 60:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$30.ScriptDataDoubleEscapedLessthanSign);
                break;
            case 65535:
                p3.eofError(this);
                p3.transition(org.jsoup.parser.TokeniserState$30.Data);
                break;
            default:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$30.ScriptDataDoubleEscaped);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$31 extends org.jsoup.parser.TokeniserState {

    TokeniserState$31(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        char v0 = p4.consume();
        switch (v0) {
            case 0:
                p3.error(this);
                p3.emit(65533);
                p3.transition(org.jsoup.parser.TokeniserState$31.ScriptDataDoubleEscaped);
                break;
            case 45:
                p3.emit(v0);
                break;
            case 60:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$31.ScriptDataDoubleEscapedLessthanSign);
                break;
            case 62:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$31.ScriptData);
                break;
            case 65535:
                p3.eofError(this);
                p3.transition(org.jsoup.parser.TokeniserState$31.Data);
                break;
            default:
                p3.emit(v0);
                p3.transition(org.jsoup.parser.TokeniserState$31.ScriptDataDoubleEscaped);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$32 extends org.jsoup.parser.TokeniserState {

    TokeniserState$32(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.matches(47)) {
            p3.transition(org.jsoup.parser.TokeniserState$32.ScriptDataDoubleEscaped);
        } else {
            p3.emit(47);
            p3.createTempBuffer();
            p3.advanceTransition(org.jsoup.parser.TokeniserState$32.ScriptDataDoubleEscapeEnd);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$33 extends org.jsoup.parser.TokeniserState {

    TokeniserState$33(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            char v0 = p6.consume();
            switch (v0) {
                case 9:
                case 10:
                case 12:
                case 32:
                case 47:
                case 62:
                    if (!p5.dataBuffer.toString().equals("script")) {
                        p5.transition(org.jsoup.parser.TokeniserState$33.ScriptDataDoubleEscaped);
                    } else {
                        p5.transition(org.jsoup.parser.TokeniserState$33.ScriptDataEscaped);
                    }
                    p5.emit(v0);
                    break;
                default:
                    p6.unconsume();
                    p5.transition(org.jsoup.parser.TokeniserState$33.ScriptDataDoubleEscaped);
            }
        } else {
            String v1 = p6.consumeLetterSequence();
            p5.dataBuffer.append(v1.toLowerCase());
            p5.emit(v1);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$34 extends org.jsoup.parser.TokeniserState {

    TokeniserState$34(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        char v0 = p4.consume();
        switch (v0) {
            case 0:
                p3.error(this);
                p3.tagPending.newAttribute();
                p4.unconsume();
                p3.transition(org.jsoup.parser.TokeniserState$34.AttributeName);
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
            case 39:
            case 60:
            case 61:
                p3.error(this);
                p3.tagPending.newAttribute();
                p3.tagPending.appendAttributeName(v0);
                p3.transition(org.jsoup.parser.TokeniserState$34.AttributeName);
                break;
            case 47:
                p3.transition(org.jsoup.parser.TokeniserState$34.SelfClosingStartTag);
                break;
            case 62:
                p3.emitTagPending();
                p3.transition(org.jsoup.parser.TokeniserState$34.Data);
                break;
            case 65535:
                p3.eofError(this);
                p3.transition(org.jsoup.parser.TokeniserState$34.Data);
                break;
            default:
                p3.tagPending.newAttribute();
                p4.unconsume();
                p3.transition(org.jsoup.parser.TokeniserState$34.AttributeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$35 extends org.jsoup.parser.TokeniserState {

    TokeniserState$35(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        org.jsoup.parser.TokeniserState v2_1 = new char[11];
        v2_1 = {9, 10, 12, 32, 47, 61, 62, 0, 34, 39, 60};
        p5.tagPending.appendAttributeName(p6.consumeToAny(v2_1).toLowerCase());
        char v0 = p6.consume();
        switch (v0) {
            case 0:
                p5.error(this);
                p5.tagPending.appendAttributeName(65533);
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                p5.transition(org.jsoup.parser.TokeniserState$35.AfterAttributeName);
                break;
            case 34:
            case 39:
            case 60:
                p5.error(this);
                p5.tagPending.appendAttributeName(v0);
                break;
            case 47:
                p5.transition(org.jsoup.parser.TokeniserState$35.SelfClosingStartTag);
                break;
            case 61:
                p5.transition(org.jsoup.parser.TokeniserState$35.BeforeAttributeValue);
                break;
            case 62:
                p5.emitTagPending();
                p5.transition(org.jsoup.parser.TokeniserState$35.Data);
                break;
            case 65535:
                p5.eofError(this);
                p5.transition(org.jsoup.parser.TokeniserState$35.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$36 extends org.jsoup.parser.TokeniserState {

    TokeniserState$36(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.tagPending.appendAttributeName(65533);
                p4.transition(org.jsoup.parser.TokeniserState$36.AttributeName);
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
            case 39:
            case 60:
                p4.error(this);
                p4.tagPending.newAttribute();
                p4.tagPending.appendAttributeName(v0);
                p4.transition(org.jsoup.parser.TokeniserState$36.AttributeName);
                break;
            case 47:
                p4.transition(org.jsoup.parser.TokeniserState$36.SelfClosingStartTag);
                break;
            case 61:
                p4.transition(org.jsoup.parser.TokeniserState$36.BeforeAttributeValue);
                break;
            case 62:
                p4.emitTagPending();
                p4.transition(org.jsoup.parser.TokeniserState$36.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.transition(org.jsoup.parser.TokeniserState$36.Data);
                break;
            default:
                p4.tagPending.newAttribute();
                p5.unconsume();
                p4.transition(org.jsoup.parser.TokeniserState$36.AttributeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$37 extends org.jsoup.parser.TokeniserState {

    TokeniserState$37(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.tagPending.appendAttributeValue(65533);
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_unquoted);
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_doubleQuoted);
                break;
            case 38:
                p5.unconsume();
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_unquoted);
                break;
            case 39:
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_singleQuoted);
                break;
            case 60:
            case 61:
            case 96:
                p4.error(this);
                p4.tagPending.appendAttributeValue(v0);
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_unquoted);
                break;
            case 62:
                p4.error(this);
                p4.emitTagPending();
                p4.transition(org.jsoup.parser.TokeniserState$37.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.transition(org.jsoup.parser.TokeniserState$37.Data);
                break;
            default:
                p5.unconsume();
                p4.transition(org.jsoup.parser.TokeniserState$37.AttributeValue_unquoted);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$38 extends org.jsoup.parser.TokeniserState {

    TokeniserState$38(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p6, org.jsoup.parser.CharacterReader p7)
    {
        org.jsoup.parser.Token$Tag v3_1 = new char[3];
        v3_1 = {34, 38, 0};
        String v2 = p7.consumeToAny(v3_1);
        if (v2.length() > 0) {
            p6.tagPending.appendAttributeValue(v2);
        }
        switch (p7.consume()) {
            case 0:
                p6.error(this);
                p6.tagPending.appendAttributeValue(65533);
                break;
            case 34:
                p6.transition(org.jsoup.parser.TokeniserState$38.AfterAttributeValue_quoted);
                break;
            case 38:
                Character v1 = p6.consumeCharacterReference(Character.valueOf(34), 1);
                if (v1 == null) {
                    p6.tagPending.appendAttributeValue(38);
                } else {
                    p6.tagPending.appendAttributeValue(v1.charValue());
                }
                break;
            case 65535:
                p6.eofError(this);
                p6.transition(org.jsoup.parser.TokeniserState$38.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$39 extends org.jsoup.parser.TokeniserState {

    TokeniserState$39(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p6, org.jsoup.parser.CharacterReader p7)
    {
        org.jsoup.parser.Token$Tag v3_1 = new char[3];
        v3_1 = {39, 38, 0};
        String v2 = p7.consumeToAny(v3_1);
        if (v2.length() > 0) {
            p6.tagPending.appendAttributeValue(v2);
        }
        switch (p7.consume()) {
            case 0:
                p6.error(this);
                p6.tagPending.appendAttributeValue(65533);
                break;
            case 38:
                Character v1 = p6.consumeCharacterReference(Character.valueOf(39), 1);
                if (v1 == null) {
                    p6.tagPending.appendAttributeValue(38);
                } else {
                    p6.tagPending.appendAttributeValue(v1.charValue());
                }
                break;
            case 39:
                p6.transition(org.jsoup.parser.TokeniserState$39.AfterAttributeValue_quoted);
                break;
            case 65535:
                p6.eofError(this);
                p6.transition(org.jsoup.parser.TokeniserState$39.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$3 extends org.jsoup.parser.TokeniserState {

    TokeniserState$3(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.current()) {
            case 0:
                p3.error(this);
                p4.advance();
                p3.emit(65533);
                break;
            case 38:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$3.CharacterReferenceInRcdata);
                break;
            case 60:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$3.RcdataLessthanSign);
                break;
            case 65535:
                p3.emit(new org.jsoup.parser.Token$EOF());
                break;
            default:
                org.jsoup.parser.Token$EOF v1_3 = new char[3];
                v1_3 = {38, 60, 0};
                p3.emit(p4.consumeToAny(v1_3));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$40 extends org.jsoup.parser.TokeniserState {

    TokeniserState$40(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p6, org.jsoup.parser.CharacterReader p7)
    {
        org.jsoup.parser.Token$Tag v3_1 = new char[12];
        v3_1 = {9, 10, 12, 32, 38, 62, 0, 34, 39, 60, 61, 96};
        String v2 = p7.consumeToAny(v3_1);
        if (v2.length() > 0) {
            p6.tagPending.appendAttributeValue(v2);
        }
        char v0 = p7.consume();
        switch (v0) {
            case 0:
                p6.error(this);
                p6.tagPending.appendAttributeValue(65533);
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                p6.transition(org.jsoup.parser.TokeniserState$40.BeforeAttributeName);
                break;
            case 34:
            case 39:
            case 60:
            case 61:
            case 96:
                p6.error(this);
                p6.tagPending.appendAttributeValue(v0);
                break;
            case 38:
                Character v1 = p6.consumeCharacterReference(Character.valueOf(62), 1);
                if (v1 == null) {
                    p6.tagPending.appendAttributeValue(38);
                } else {
                    p6.tagPending.appendAttributeValue(v1.charValue());
                }
                break;
            case 62:
                p6.emitTagPending();
                p6.transition(org.jsoup.parser.TokeniserState$40.Data);
                break;
            case 65535:
                p6.eofError(this);
                p6.transition(org.jsoup.parser.TokeniserState$40.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$41 extends org.jsoup.parser.TokeniserState {

    TokeniserState$41(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                p3.transition(org.jsoup.parser.TokeniserState$41.BeforeAttributeName);
                break;
            case 47:
                p3.transition(org.jsoup.parser.TokeniserState$41.SelfClosingStartTag);
                break;
            case 62:
                p3.emitTagPending();
                p3.transition(org.jsoup.parser.TokeniserState$41.Data);
                break;
            case 65535:
                p3.eofError(this);
                p3.transition(org.jsoup.parser.TokeniserState$41.Data);
                break;
            default:
                p3.error(this);
                p4.unconsume();
                p3.transition(org.jsoup.parser.TokeniserState$41.BeforeAttributeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$42 extends org.jsoup.parser.TokeniserState {

    TokeniserState$42(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 62:
                p4.tagPending.selfClosing = 1;
                p4.emitTagPending();
                p4.transition(org.jsoup.parser.TokeniserState$42.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.transition(org.jsoup.parser.TokeniserState$42.Data);
                break;
            default:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$42.BeforeAttributeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$43 extends org.jsoup.parser.TokeniserState {

    TokeniserState$43(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        p5.unconsume();
        org.jsoup.parser.Token$Comment v0_1 = new org.jsoup.parser.Token$Comment();
        v0_1.data.append(p5.consumeTo(62));
        p4.emit(v0_1);
        p4.advanceTransition(org.jsoup.parser.TokeniserState$43.Data);
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$44 extends org.jsoup.parser.TokeniserState {

    TokeniserState$44(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        if (!p3.matchConsume("--")) {
            if (!p3.matchConsumeIgnoreCase("DOCTYPE")) {
                if (!p3.matchConsume("[CDATA[")) {
                    p2.error(this);
                    p2.advanceTransition(org.jsoup.parser.TokeniserState$44.BogusComment);
                } else {
                    p2.transition(org.jsoup.parser.TokeniserState$44.CdataSection);
                }
            } else {
                p2.transition(org.jsoup.parser.TokeniserState$44.Doctype);
            }
        } else {
            p2.createCommentPending();
            p2.transition(org.jsoup.parser.TokeniserState$44.CommentStart);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$45 extends org.jsoup.parser.TokeniserState {

    TokeniserState$45(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append(65533);
                p4.transition(org.jsoup.parser.TokeniserState$45.Comment);
                break;
            case 45:
                p4.transition(org.jsoup.parser.TokeniserState$45.CommentStartDash);
                break;
            case 62:
                p4.error(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$45.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$45.Data);
                break;
            default:
                p4.commentPending.data.append(v0);
                p4.transition(org.jsoup.parser.TokeniserState$45.Comment);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$46 extends org.jsoup.parser.TokeniserState {

    TokeniserState$46(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append(65533);
                p4.transition(org.jsoup.parser.TokeniserState$46.Comment);
                break;
            case 45:
                p4.transition(org.jsoup.parser.TokeniserState$46.CommentStartDash);
                break;
            case 62:
                p4.error(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$46.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$46.Data);
                break;
            default:
                p4.commentPending.data.append(v0);
                p4.transition(org.jsoup.parser.TokeniserState$46.Comment);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$47 extends org.jsoup.parser.TokeniserState {

    TokeniserState$47(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.current()) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append(65533);
                break;
            case 45:
                p4.advanceTransition(org.jsoup.parser.TokeniserState$47.CommentEndDash);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$47.Data);
                break;
            default:
                int v2_2 = new char[2];
                v2_2 = {45, 0};
                p4.commentPending.data.append(p5.consumeToAny(v2_2));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$48 extends org.jsoup.parser.TokeniserState {

    TokeniserState$48(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append(45).append(65533);
                p4.transition(org.jsoup.parser.TokeniserState$48.Comment);
                break;
            case 45:
                p4.transition(org.jsoup.parser.TokeniserState$48.CommentEnd);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$48.Data);
                break;
            default:
                p4.commentPending.data.append(45).append(v0);
                p4.transition(org.jsoup.parser.TokeniserState$48.Comment);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$49 extends org.jsoup.parser.TokeniserState {

    TokeniserState$49(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append("--").append(65533);
                p4.transition(org.jsoup.parser.TokeniserState$49.Comment);
                break;
            case 33:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$49.CommentEndBang);
                break;
            case 45:
                p4.error(this);
                p4.commentPending.data.append(45);
                break;
            case 62:
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$49.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$49.Data);
                break;
            default:
                p4.error(this);
                p4.commentPending.data.append("--").append(v0);
                p4.transition(org.jsoup.parser.TokeniserState$49.Comment);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$4 extends org.jsoup.parser.TokeniserState {

    TokeniserState$4(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        Character v0 = p4.consumeCharacterReference(0, 0);
        if (v0 != null) {
            p4.emit(v0.charValue());
        } else {
            p4.emit(38);
        }
        p4.transition(org.jsoup.parser.TokeniserState$4.Rcdata);
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$50 extends org.jsoup.parser.TokeniserState {

    TokeniserState$50(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.commentPending.data.append("--!").append(65533);
                p4.transition(org.jsoup.parser.TokeniserState$50.Comment);
                break;
            case 45:
                p4.commentPending.data.append("--!");
                p4.transition(org.jsoup.parser.TokeniserState$50.CommentEndDash);
                break;
            case 62:
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$50.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.emitCommentPending();
                p4.transition(org.jsoup.parser.TokeniserState$50.Data);
                break;
            default:
                p4.commentPending.data.append("--!").append(v0);
                p4.transition(org.jsoup.parser.TokeniserState$50.Comment);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$51 extends org.jsoup.parser.TokeniserState {

    TokeniserState$51(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                p4.transition(org.jsoup.parser.TokeniserState$51.BeforeDoctypeName);
                break;
            case 65535:
                p4.eofError(this);
                p4.createDoctypePending();
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$51.Data);
                break;
            default:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$51.BeforeDoctypeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$52 extends org.jsoup.parser.TokeniserState {

    TokeniserState$52(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        if (!p5.matchesLetter()) {
            char v0 = p5.consume();
            switch (v0) {
                case 0:
                    p4.error(this);
                    p4.doctypePending.name.append(65533);
                    p4.transition(org.jsoup.parser.TokeniserState$52.DoctypeName);
                case 9:
                case 10:
                case 12:
                case 32:
                    break;
                case 9:
                case 10:
                case 12:
                case 32:
                    break;
                case 9:
                case 10:
                case 12:
                case 32:
                    break;
                case 9:
                case 10:
                case 12:
                case 32:
                    break;
                case 65535:
                    p4.eofError(this);
                    p4.createDoctypePending();
                    p4.doctypePending.forceQuirks = 1;
                    p4.emitDoctypePending();
                    p4.transition(org.jsoup.parser.TokeniserState$52.Data);
                    break;
                default:
                    p4.createDoctypePending();
                    p4.doctypePending.name.append(v0);
                    p4.transition(org.jsoup.parser.TokeniserState$52.DoctypeName);
            }
        } else {
            p4.createDoctypePending();
            p4.transition(org.jsoup.parser.TokeniserState$52.DoctypeName);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$53 extends org.jsoup.parser.TokeniserState {

    TokeniserState$53(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p5, org.jsoup.parser.CharacterReader p6)
    {
        if (!p6.matchesLetter()) {
            char v0 = p6.consume();
            switch (v0) {
                case 0:
                    p5.error(this);
                    p5.doctypePending.name.append(65533);
                    break;
                case 9:
                case 10:
                case 12:
                case 32:
                    p5.transition(org.jsoup.parser.TokeniserState$53.AfterDoctypeName);
                    break;
                case 62:
                    p5.emitDoctypePending();
                    p5.transition(org.jsoup.parser.TokeniserState$53.Data);
                    break;
                case 65535:
                    p5.eofError(this);
                    p5.doctypePending.forceQuirks = 1;
                    p5.emitDoctypePending();
                    p5.transition(org.jsoup.parser.TokeniserState$53.Data);
                    break;
                default:
                    p5.doctypePending.name.append(v0);
            }
        } else {
            p5.doctypePending.name.append(p6.consumeLetterSequence().toLowerCase());
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$54 extends org.jsoup.parser.TokeniserState {

    TokeniserState$54(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        if (!p4.isEmpty()) {
            if (!p4.matches(62)) {
                if (!p4.matchConsumeIgnoreCase("PUBLIC")) {
                    if (!p4.matchConsumeIgnoreCase("SYSTEM")) {
                        p3.error(this);
                        p3.doctypePending.forceQuirks = 1;
                        p3.advanceTransition(org.jsoup.parser.TokeniserState$54.BogusDoctype);
                    } else {
                        p3.transition(org.jsoup.parser.TokeniserState$54.AfterDoctypeSystemKeyword);
                    }
                } else {
                    p3.transition(org.jsoup.parser.TokeniserState$54.AfterDoctypePublicKeyword);
                }
            } else {
                p3.emitDoctypePending();
                p3.advanceTransition(org.jsoup.parser.TokeniserState$54.Data);
            }
        } else {
            p3.eofError(this);
            p3.doctypePending.forceQuirks = 1;
            p3.emitDoctypePending();
            p3.transition(org.jsoup.parser.TokeniserState$54.Data);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$55 extends org.jsoup.parser.TokeniserState {

    TokeniserState$55(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                p4.transition(org.jsoup.parser.TokeniserState$55.BeforeDoctypePublicIdentifier);
                break;
            case 34:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$55.DoctypePublicIdentifier_doubleQuoted);
                break;
            case 39:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$55.DoctypePublicIdentifier_singleQuoted);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$55.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$55.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.transition(org.jsoup.parser.TokeniserState$55.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$56 extends org.jsoup.parser.TokeniserState {

    TokeniserState$56(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
                p4.transition(org.jsoup.parser.TokeniserState$56.DoctypePublicIdentifier_doubleQuoted);
                break;
            case 39:
                p4.transition(org.jsoup.parser.TokeniserState$56.DoctypePublicIdentifier_singleQuoted);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$56.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$56.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.transition(org.jsoup.parser.TokeniserState$56.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$57 extends org.jsoup.parser.TokeniserState {

    TokeniserState$57(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.doctypePending.publicIdentifier.append(65533);
                break;
            case 34:
                p4.transition(org.jsoup.parser.TokeniserState$57.AfterDoctypePublicIdentifier);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$57.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$57.Data);
                break;
            default:
                p4.doctypePending.publicIdentifier.append(v0);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$58 extends org.jsoup.parser.TokeniserState {

    TokeniserState$58(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.doctypePending.publicIdentifier.append(65533);
                break;
            case 39:
                p4.transition(org.jsoup.parser.TokeniserState$58.AfterDoctypePublicIdentifier);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$58.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$58.Data);
                break;
            default:
                p4.doctypePending.publicIdentifier.append(v0);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$59 extends org.jsoup.parser.TokeniserState {

    TokeniserState$59(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                p4.transition(org.jsoup.parser.TokeniserState$59.BetweenDoctypePublicAndSystemIdentifiers);
                break;
            case 34:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$59.DoctypeSystemIdentifier_doubleQuoted);
                break;
            case 39:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$59.DoctypeSystemIdentifier_singleQuoted);
                break;
            case 62:
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$59.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$59.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.transition(org.jsoup.parser.TokeniserState$59.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$5 extends org.jsoup.parser.TokeniserState {

    TokeniserState$5(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.current()) {
            case 0:
                p3.error(this);
                p4.advance();
                p3.emit(65533);
                break;
            case 60:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$5.RawtextLessthanSign);
                break;
            case 65535:
                p3.emit(new org.jsoup.parser.Token$EOF());
                break;
            default:
                org.jsoup.parser.Token$EOF v1_3 = new char[2];
                v1_3 = {60, 0};
                p3.emit(p4.consumeToAny(v1_3));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$60 extends org.jsoup.parser.TokeniserState {

    TokeniserState$60(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$60.DoctypeSystemIdentifier_doubleQuoted);
                break;
            case 39:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$60.DoctypeSystemIdentifier_singleQuoted);
                break;
            case 62:
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$60.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$60.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.transition(org.jsoup.parser.TokeniserState$60.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$61 extends org.jsoup.parser.TokeniserState {

    TokeniserState$61(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                p4.transition(org.jsoup.parser.TokeniserState$61.BeforeDoctypeSystemIdentifier);
                break;
            case 34:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$61.DoctypeSystemIdentifier_doubleQuoted);
                break;
            case 39:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$61.DoctypeSystemIdentifier_singleQuoted);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$61.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$61.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$62 extends org.jsoup.parser.TokeniserState {

    TokeniserState$62(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 34:
                p4.transition(org.jsoup.parser.TokeniserState$62.DoctypeSystemIdentifier_doubleQuoted);
                break;
            case 39:
                p4.transition(org.jsoup.parser.TokeniserState$62.DoctypeSystemIdentifier_singleQuoted);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$62.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$62.Data);
                break;
            default:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.transition(org.jsoup.parser.TokeniserState$62.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$63 extends org.jsoup.parser.TokeniserState {

    TokeniserState$63(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.doctypePending.systemIdentifier.append(65533);
                break;
            case 34:
                p4.transition(org.jsoup.parser.TokeniserState$63.AfterDoctypeSystemIdentifier);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$63.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$63.Data);
                break;
            default:
                p4.doctypePending.systemIdentifier.append(v0);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$64 extends org.jsoup.parser.TokeniserState {

    TokeniserState$64(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        char v0 = p5.consume();
        switch (v0) {
            case 0:
                p4.error(this);
                p4.doctypePending.systemIdentifier.append(65533);
                break;
            case 39:
                p4.transition(org.jsoup.parser.TokeniserState$64.AfterDoctypeSystemIdentifier);
                break;
            case 62:
                p4.error(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$64.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$64.Data);
                break;
            default:
                p4.doctypePending.systemIdentifier.append(v0);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$65 extends org.jsoup.parser.TokeniserState {

    TokeniserState$65(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p4, org.jsoup.parser.CharacterReader p5)
    {
        switch (p5.consume()) {
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 9:
            case 10:
            case 12:
            case 32:
                break;
            case 62:
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$65.Data);
                break;
            case 65535:
                p4.eofError(this);
                p4.doctypePending.forceQuirks = 1;
                p4.emitDoctypePending();
                p4.transition(org.jsoup.parser.TokeniserState$65.Data);
                break;
            default:
                p4.error(this);
                p4.transition(org.jsoup.parser.TokeniserState$65.BogusDoctype);
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$66 extends org.jsoup.parser.TokeniserState {

    TokeniserState$66(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.consume()) {
            case 62:
                p3.emitDoctypePending();
                p3.transition(org.jsoup.parser.TokeniserState$66.Data);
                break;
            case 65535:
                p3.emitDoctypePending();
                p3.transition(org.jsoup.parser.TokeniserState$66.Data);
                break;
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$67 extends org.jsoup.parser.TokeniserState {

    TokeniserState$67(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        p3.emit(p4.consumeTo("]]>"));
        p4.matchConsume("]]>");
        p3.transition(org.jsoup.parser.TokeniserState$67.Data);
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$6 extends org.jsoup.parser.TokeniserState {

    TokeniserState$6(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.current()) {
            case 0:
                p3.error(this);
                p4.advance();
                p3.emit(65533);
                break;
            case 60:
                p3.advanceTransition(org.jsoup.parser.TokeniserState$6.ScriptDataLessthanSign);
                break;
            case 65535:
                p3.emit(new org.jsoup.parser.Token$EOF());
                break;
            default:
                org.jsoup.parser.Token$EOF v1_3 = new char[2];
                v1_3 = {60, 0};
                p3.emit(p4.consumeToAny(v1_3));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$7 extends org.jsoup.parser.TokeniserState {

    TokeniserState$7(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p3, org.jsoup.parser.CharacterReader p4)
    {
        switch (p4.current()) {
            case 0:
                p3.error(this);
                p4.advance();
                p3.emit(65533);
                break;
            case 65535:
                p3.emit(new org.jsoup.parser.Token$EOF());
                break;
            default:
                p3.emit(p4.consumeTo(0));
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$8 extends org.jsoup.parser.TokeniserState {

    TokeniserState$8(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        switch (p3.current()) {
            case 33:
                p2.advanceTransition(org.jsoup.parser.TokeniserState$8.MarkupDeclarationOpen);
                break;
            case 47:
                p2.advanceTransition(org.jsoup.parser.TokeniserState$8.EndTagOpen);
                break;
            case 63:
                p2.advanceTransition(org.jsoup.parser.TokeniserState$8.BogusComment);
                break;
            default:
                if (!p3.matchesLetter()) {
                    p2.error(this);
                    p2.emit(60);
                    p2.transition(org.jsoup.parser.TokeniserState$8.Data);
                } else {
                    p2.createTagPending(1);
                    p2.transition(org.jsoup.parser.TokeniserState$8.TagName);
                }
        }
        return;
    }
}
package org.jsoup.parser;
final enum class TokeniserState$9 extends org.jsoup.parser.TokeniserState {

    TokeniserState$9(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    void read(org.jsoup.parser.Tokeniser p2, org.jsoup.parser.CharacterReader p3)
    {
        if (!p3.isEmpty()) {
            if (!p3.matchesLetter()) {
                if (!p3.matches(62)) {
                    p2.error(this);
                    p2.advanceTransition(org.jsoup.parser.TokeniserState$9.BogusComment);
                } else {
                    p2.error(this);
                    p2.advanceTransition(org.jsoup.parser.TokeniserState$9.Data);
                }
            } else {
                p2.createTagPending(0);
                p2.transition(org.jsoup.parser.TokeniserState$9.TagName);
            }
        } else {
            p2.eofError(this);
            p2.emit("</");
            p2.transition(org.jsoup.parser.TokeniserState$9.Data);
        }
        return;
    }
}
package org.jsoup.parser;
 class TreeBuilder {
    static final synthetic boolean $assertionsDisabled;
    private String baseUri;
    private org.jsoup.nodes.Element contextElement;
    private org.jsoup.parser.Token currentToken;
    private org.jsoup.nodes.Document doc;
    private java.util.List errors;
    private org.jsoup.nodes.Element formElement;
    private org.jsoup.helper.DescendableLinkedList formattingElements;
    private boolean fosterInserts;
    private boolean fragmentParsing;
    private boolean framesetOk;
    private org.jsoup.nodes.Element headElement;
    private org.jsoup.parser.TreeBuilderState originalState;
    private java.util.List pendingTableCharacters;
    org.jsoup.parser.CharacterReader reader;
    private org.jsoup.helper.DescendableLinkedList stack;
    private org.jsoup.parser.TreeBuilderState state;
    org.jsoup.parser.Tokeniser tokeniser;
    private boolean trackErrors;

    static TreeBuilder()
    {
        int v0_2;
        if (org.jsoup.parser.TreeBuilder.desiredAssertionStatus()) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        org.jsoup.parser.TreeBuilder.$assertionsDisabled = v0_2;
        return;
    }

    TreeBuilder()
    {
        this.formattingElements = new org.jsoup.helper.DescendableLinkedList();
        this.pendingTableCharacters = new java.util.ArrayList();
        this.framesetOk = 1;
        this.fosterInserts = 0;
        this.fragmentParsing = 0;
        this.trackErrors = 0;
        this.errors = new java.util.ArrayList();
        return;
    }

    private varargs void clearStackToContext(String[] p5)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            org.jsoup.nodes.Element v1_1 = ((org.jsoup.nodes.Element) v0.next());
            if ((org.jsoup.helper.StringUtil.in(v1_1.nodeName(), p5)) || (v1_1.nodeName().equals("html"))) {
                break;
            }
            v0.remove();
        }
        return;
    }

    private boolean inSpecificScope(String p3, String[] p4, String[] p5)
    {
        boolean v0_1 = new String[1];
        v0_1[0] = p3;
        return this.inSpecificScope(v0_1, p4, p5);
    }

    private boolean inSpecificScope(String[] p6, String[] p7, String[] p8)
    {
        int v3 = 0;
        java.util.Iterator v2 = this.stack.descendingIterator();
        while (v2.hasNext()) {
            String v1 = ((org.jsoup.nodes.Element) v2.next()).nodeName();
            if (!org.jsoup.helper.StringUtil.in(v1, p6)) {
                if ((org.jsoup.helper.StringUtil.in(v1, p7)) || ((p8 != null) && (org.jsoup.helper.StringUtil.in(v1, p8)))) {
                }
            } else {
                v3 = 1;
            }
            return v3;
        }
        org.jsoup.helper.Validate.fail("Should not be reachable");
        return v3;
    }

    private void initialiseParse(String p3, String p4)
    {
        this.doc = new org.jsoup.nodes.Document(p4);
        this.reader = new org.jsoup.parser.CharacterReader(p3);
        this.tokeniser = new org.jsoup.parser.Tokeniser(this.reader);
        this.stack = new org.jsoup.helper.DescendableLinkedList();
        this.baseUri = p4;
        return;
    }

    private void insertNode(org.jsoup.nodes.Node p2)
    {
        if (this.stack.size() != 0) {
            if (!this.isFosterInserts()) {
                this.currentElement().appendChild(p2);
            } else {
                this.insertInFosterParent(p2);
            }
        } else {
            this.doc.appendChild(p2);
        }
        return;
    }

    private boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList p4, org.jsoup.nodes.Element p5)
    {
        java.util.Iterator v0 = p4.descendingIterator();
        while (v0.hasNext()) {
            if (((org.jsoup.nodes.Element) v0.next()) == p5) {
                int v2_0 = 1;
            }
            return v2_0;
        }
        v2_0 = 0;
        return v2_0;
    }

    private boolean isSameFormattingElement(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p3.nodeName().equals(p4.nodeName())) || (!p3.attributes().equals(p4.attributes()))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    private void replaceInQueue(java.util.LinkedList p3, org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        int v1_1;
        int v0 = p3.lastIndexOf(p4);
        if (v0 == -1) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v1_1);
        p3.remove(v0);
        p3.add(v0, p5);
        return;
    }

    private void runParser()
    {
        do {
            org.jsoup.parser.Token v0 = this.tokeniser.read();
            this.process(v0);
        } while(v0.type != org.jsoup.parser.Token$TokenType.EOF);
        return;
    }

    org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element p4)
    {
        if ((org.jsoup.parser.TreeBuilder.$assertionsDisabled) || (this.onStack(p4))) {
            java.util.Iterator v0 = this.stack.descendingIterator();
            while (v0.hasNext()) {
                if (((org.jsoup.nodes.Element) v0.next()) == p4) {
                    org.jsoup.nodes.Element v2_1 = ((org.jsoup.nodes.Element) v0.next());
                }
                return v2_1;
            }
            v2_1 = 0;
            return v2_1;
        } else {
            throw new AssertionError();
        }
    }

    void clearFormattingElementsToLastMarker()
    {
        if ((org.jsoup.nodes.Element v0_1 == null) || (this.formattingElements.isEmpty())) {
            return;
        } else {
            v0_1 = ((org.jsoup.nodes.Element) this.formattingElements.peekLast());
            this.formattingElements.removeLast();
        }
    }

    void clearStackToTableBodyContext()
    {
        String[] v0_1 = new String[3];
        v0_1[0] = "tbody";
        v0_1[1] = "tfoot";
        v0_1[2] = "thead";
        this.clearStackToContext(v0_1);
        return;
    }

    void clearStackToTableContext()
    {
        String[] v0_1 = new String[1];
        v0_1[0] = "table";
        this.clearStackToContext(v0_1);
        return;
    }

    void clearStackToTableRowContext()
    {
        String[] v0_1 = new String[1];
        v0_1[0] = "tr";
        this.clearStackToContext(v0_1);
        return;
    }

    org.jsoup.nodes.Element currentElement()
    {
        return ((org.jsoup.nodes.Element) this.stack.getLast());
    }

    void error(org.jsoup.parser.TreeBuilderState p6)
    {
        if (this.trackErrors) {
            this.errors.add(new org.jsoup.parser.ParseError("Unexpected token", p6, this.currentToken, this.reader.pos()));
        }
        return;
    }

    void framesetOk(boolean p1)
    {
        this.framesetOk = p1;
        return;
    }

    boolean framesetOk()
    {
        return this.framesetOk;
    }

    void generateImpliedEndTags()
    {
        this.generateImpliedEndTags(0);
        return;
    }

    void generateImpliedEndTags(String p5)
    {
        while ((p5 != null) && (!this.currentElement().nodeName().equals(p5))) {
            boolean v0_0 = this.currentElement().nodeName();
            String[] v1_1 = new String[8];
            v1_1[0] = "dd";
            v1_1[1] = "dt";
            v1_1[2] = "li";
            v1_1[3] = "option";
            v1_1[4] = "optgroup";
            v1_1[5] = "p";
            v1_1[6] = "rp";
            v1_1[7] = "rt";
            if (!org.jsoup.helper.StringUtil.in(v0_0, v1_1)) {
                break;
            }
            this.pop();
        }
        return;
    }

    org.jsoup.nodes.Element getActiveFormattingElement(String p4)
    {
        java.util.Iterator v0 = this.formattingElements.descendingIterator();
        while (v0.hasNext()) {
            int v1_0 = ((org.jsoup.nodes.Element) v0.next());
            if (v1_0 == 0) {
                break;
            }
            if (v1_0.nodeName().equals(p4)) {
            }
            return v1_0;
        }
        v1_0 = 0;
        return v1_0;
    }

    String getBaseUri()
    {
        return this.baseUri;
    }

    org.jsoup.nodes.Document getDocument()
    {
        return this.doc;
    }

    org.jsoup.nodes.Element getFormElement()
    {
        return this.formElement;
    }

    org.jsoup.nodes.Element getFromStack(String p4)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            int v1_0 = ((org.jsoup.nodes.Element) v0.next());
            if (v1_0.nodeName().equals(p4)) {
            }
            return v1_0;
        }
        v1_0 = 0;
        return v1_0;
    }

    org.jsoup.nodes.Element getHeadElement()
    {
        return this.headElement;
    }

    java.util.List getPendingTableCharacters()
    {
        return this.pendingTableCharacters;
    }

    org.jsoup.helper.DescendableLinkedList getStack()
    {
        return this.stack;
    }

    boolean inButtonScope(String p4)
    {
        boolean v0_1 = new String[1];
        v0_1[0] = "button";
        return this.inScope(p4, v0_1);
    }

    boolean inListItemScope(String p4)
    {
        boolean v0_1 = new String[2];
        v0_1[0] = "ol";
        v0_1[1] = "ul";
        return this.inScope(p4, v0_1);
    }

    boolean inScope(String p2)
    {
        return this.inScope(p2, 0);
    }

    boolean inScope(String p4, String[] p5)
    {
        boolean v0_1 = new String[8];
        v0_1[0] = "applet";
        v0_1[1] = "caption";
        v0_1[2] = "html";
        v0_1[3] = "table";
        v0_1[4] = "td";
        v0_1[5] = "th";
        v0_1[6] = "marquee";
        v0_1[7] = "object";
        return this.inSpecificScope(p4, v0_1, p5);
    }

    boolean inScope(String[] p4)
    {
        boolean v0_1 = new String[8];
        v0_1[0] = "applet";
        v0_1[1] = "caption";
        v0_1[2] = "html";
        v0_1[3] = "table";
        v0_1[4] = "td";
        v0_1[5] = "th";
        v0_1[6] = "marquee";
        v0_1[7] = "object";
        return this.inSpecificScope(p4, v0_1, 0);
    }

    boolean inSelectScope(String p8)
    {
        int v3_0 = 1;
        java.util.Iterator v2 = this.stack.descendingIterator();
        while (v2.hasNext()) {
            String v1 = ((org.jsoup.nodes.Element) v2.next()).nodeName();
            if (!v1.equals(p8)) {
                boolean v5_3 = new String[2];
                v5_3[0] = "optgroup";
                v5_3[1] = "option";
                if (!org.jsoup.helper.StringUtil.in(v1, v5_3)) {
                    v3_0 = 0;
                }
            }
            return v3_0;
        }
        org.jsoup.helper.Validate.fail("Should not be reachable");
        v3_0 = 0;
        return v3_0;
    }

    boolean inTableScope(String p4)
    {
        boolean v0_1 = new String[2];
        v0_1[0] = "html";
        v0_1[1] = "table";
        return this.inSpecificScope(p4, v0_1, 0);
    }

    org.jsoup.nodes.Element insert(String p4)
    {
        org.jsoup.nodes.Element v0_1 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(p4), this.baseUri);
        this.insert(v0_1);
        return v0_1;
    }

    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag p6)
    {
        if ((!p6.isSelfClosing()) || (org.jsoup.parser.Tag.isKnownTag(p6.name()))) {
            org.jsoup.nodes.Element v0_0 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(p6.name()), this.baseUri, p6.attributes);
            this.insert(v0_0);
            org.jsoup.nodes.Element v1 = v0_0;
        } else {
            org.jsoup.nodes.Element v0_1 = this.insertEmpty(p6);
            this.process(new org.jsoup.parser.Token$EndTag(v0_1.tagName()));
            v1 = v0_1;
        }
        return v1;
    }

    void insert(org.jsoup.nodes.Element p2)
    {
        this.insertNode(p2);
        this.stack.add(p2);
        return;
    }

    void insert(org.jsoup.parser.Token$Character p6)
    {
        org.jsoup.nodes.TextNode v0_1;
        org.jsoup.nodes.Element v1_5 = this.currentElement().tagName();
        String v2_3 = new String[2];
        v2_3[0] = "script";
        v2_3[1] = "style";
        if (!org.jsoup.helper.StringUtil.in(v1_5, v2_3)) {
            v0_1 = new org.jsoup.nodes.TextNode(p6.getData(), this.baseUri);
        } else {
            v0_1 = new org.jsoup.nodes.DataNode(p6.getData(), this.baseUri);
        }
        this.currentElement().appendChild(v0_1);
        return;
    }

    void insert(org.jsoup.parser.Token$Comment p4)
    {
        this.insertNode(new org.jsoup.nodes.Comment(p4.getData(), this.baseUri));
        return;
    }

    org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag p5)
    {
        org.jsoup.parser.Tag v1 = org.jsoup.parser.Tag.valueOf(p5.name());
        org.jsoup.nodes.Element v0_1 = new org.jsoup.nodes.Element(v1, this.baseUri, p5.attributes);
        this.insertNode(v0_1);
        if (p5.isSelfClosing()) {
            this.tokeniser.acknowledgeSelfClosingFlag();
            if (!v1.isKnownTag()) {
                v1.setSelfClosing();
            }
        }
        return v0_1;
    }

    void insertInFosterParent(org.jsoup.nodes.Node p6)
    {
        org.jsoup.nodes.Element v0_0;
        org.jsoup.nodes.Element v2 = this.getFromStack("table");
        int v1 = 0;
        if (v2 == null) {
            v0_0 = ((org.jsoup.nodes.Element) this.stack.get(0));
        } else {
            if (v2.parent() == null) {
                v0_0 = this.aboveOnStack(v2);
            } else {
                v0_0 = v2.parent();
                v1 = 1;
            }
        }
        if (v1 == 0) {
            v0_0.appendChild(p6);
        } else {
            org.jsoup.helper.Validate.notNull(v2);
            v2.before(p6);
        }
        return;
    }

    void insertMarkerToFormattingElements()
    {
        this.formattingElements.add(0);
        return;
    }

    void insertOnStackAfter(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        org.jsoup.helper.DescendableLinkedList v1_2;
        int v0 = this.stack.lastIndexOf(p4);
        if (v0 == -1) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        org.jsoup.helper.Validate.isTrue(v1_2);
        this.stack.add((v0 + 1), p5);
        return;
    }

    boolean isFosterInserts()
    {
        return this.fosterInserts;
    }

    boolean isFragmentParsing()
    {
        return this.fragmentParsing;
    }

    boolean isInActiveFormattingElements(org.jsoup.nodes.Element p2)
    {
        return this.isElementInQueue(this.formattingElements, p2);
    }

    boolean isSpecial(org.jsoup.nodes.Element p5)
    {
        String v0 = p5.nodeName();
        boolean v1_2 = new String[79];
        v1_2[0] = "address";
        v1_2[1] = "applet";
        v1_2[2] = "area";
        v1_2[3] = "article";
        v1_2[4] = "aside";
        v1_2[5] = "base";
        v1_2[6] = "basefont";
        v1_2[7] = "bgsound";
        v1_2[8] = "blockquote";
        v1_2[9] = "body";
        v1_2[10] = "br";
        v1_2[11] = "button";
        v1_2[12] = "caption";
        v1_2[13] = "center";
        v1_2[14] = "col";
        v1_2[15] = "colgroup";
        v1_2[16] = "command";
        v1_2[17] = "dd";
        v1_2[18] = "details";
        v1_2[19] = "dir";
        v1_2[20] = "div";
        v1_2[21] = "dl";
        v1_2[22] = "dt";
        v1_2[23] = "embed";
        v1_2[24] = "fieldset";
        v1_2[25] = "figcaption";
        v1_2[26] = "figure";
        v1_2[27] = "footer";
        v1_2[28] = "form";
        v1_2[29] = "frame";
        v1_2[30] = "frameset";
        v1_2[31] = "h1";
        v1_2[32] = "h2";
        v1_2[33] = "h3";
        v1_2[34] = "h4";
        v1_2[35] = "h5";
        v1_2[36] = "h6";
        v1_2[37] = "head";
        v1_2[38] = "header";
        v1_2[39] = "hgroup";
        v1_2[40] = "hr";
        v1_2[41] = "html";
        v1_2[42] = "iframe";
        v1_2[43] = "img";
        v1_2[44] = "input";
        v1_2[45] = "isindex";
        v1_2[46] = "li";
        v1_2[47] = "link";
        v1_2[48] = "listing";
        v1_2[49] = "marquee";
        v1_2[50] = "menu";
        v1_2[51] = "meta";
        v1_2[52] = "nav";
        v1_2[53] = "noembed";
        v1_2[54] = "noframes";
        v1_2[55] = "noscript";
        v1_2[56] = "object";
        v1_2[57] = "ol";
        v1_2[58] = "p";
        v1_2[59] = "param";
        v1_2[60] = "plaintext";
        v1_2[61] = "pre";
        v1_2[62] = "script";
        v1_2[63] = "section";
        v1_2[64] = "select";
        v1_2[65] = "style";
        v1_2[66] = "summary";
        v1_2[67] = "table";
        v1_2[68] = "tbody";
        v1_2[69] = "td";
        v1_2[70] = "textarea";
        v1_2[71] = "tfoot";
        v1_2[72] = "th";
        v1_2[73] = "thead";
        v1_2[74] = "title";
        v1_2[75] = "tr";
        v1_2[76] = "ul";
        v1_2[77] = "wbr";
        v1_2[78] = "xmp";
        return org.jsoup.helper.StringUtil.in(v0, v1_2);
    }

    void markInsertionMode()
    {
        this.originalState = this.state;
        return;
    }

    void newPendingTableCharacters()
    {
        this.pendingTableCharacters = new java.util.ArrayList();
        return;
    }

    boolean onStack(org.jsoup.nodes.Element p2)
    {
        return this.isElementInQueue(this.stack, p2);
    }

    org.jsoup.parser.TreeBuilderState originalState()
    {
        return this.originalState;
    }

    org.jsoup.nodes.Document parse(String p2, String p3)
    {
        this.state = org.jsoup.parser.TreeBuilderState.Initial;
        this.initialiseParse(p2, p3);
        this.runParser();
        return this.doc;
    }

    java.util.List parseFragment(String p8, org.jsoup.nodes.Element p9, String p10)
    {
        this.initialiseParse(p8, p10);
        this.contextElement = p9;
        this.fragmentParsing = 1;
        org.jsoup.nodes.Element v1_0 = 0;
        if (p9 != null) {
            if (p9.ownerDocument() != null) {
                this.doc.quirksMode(p9.ownerDocument().quirksMode());
            }
            String v0 = p9.tagName();
            org.jsoup.parser.Tokeniser v2_1 = new String[2];
            v2_1[0] = "title";
            v2_1[1] = "textarea";
            if (!org.jsoup.helper.StringUtil.in(v0, v2_1)) {
                org.jsoup.parser.Tokeniser v2_4 = new String[5];
                v2_4[0] = "iframe";
                v2_4[1] = "noembed";
                v2_4[2] = "noframes";
                v2_4[3] = "style";
                v2_4[4] = "xmp";
                if (!org.jsoup.helper.StringUtil.in(v0, v2_4)) {
                    if (!v0.equals("script")) {
                        if (!v0.equals("noscript")) {
                            if (!v0.equals("plaintext")) {
                                this.tokeniser.transition(org.jsoup.parser.TokeniserState.Data);
                            } else {
                                this.tokeniser.transition(org.jsoup.parser.TokeniserState.Data);
                            }
                        } else {
                            this.tokeniser.transition(org.jsoup.parser.TokeniserState.Data);
                        }
                    } else {
                        this.tokeniser.transition(org.jsoup.parser.TokeniserState.ScriptData);
                    }
                } else {
                    this.tokeniser.transition(org.jsoup.parser.TokeniserState.Rawtext);
                }
            } else {
                this.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);
            }
            v1_0 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf("html"), p10);
            this.doc.appendChild(v1_0);
            this.stack.push(v1_0);
            this.resetInsertionMode();
        }
        org.jsoup.parser.Tokeniser v2_23;
        this.runParser();
        if (p9 == null) {
            v2_23 = this.doc.childNodes();
        } else {
            v2_23 = v1_0.childNodes();
        }
        return v2_23;
    }

    org.jsoup.nodes.Element pop()
    {
        if ((((org.jsoup.nodes.Element) this.stack.peekLast()).nodeName().equals("td")) && (!this.state.name().equals("InCell"))) {
            org.jsoup.helper.Validate.isFalse(1, "pop td not in cell");
        }
        if (((org.jsoup.nodes.Element) this.stack.peekLast()).nodeName().equals("html")) {
            org.jsoup.helper.Validate.isFalse(1, "popping html!");
        }
        return ((org.jsoup.nodes.Element) this.stack.pollLast());
    }

    void popStackToBefore(String p4)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while ((v0.hasNext()) && (!((org.jsoup.nodes.Element) v0.next()).nodeName().equals(p4))) {
            v0.remove();
        }
        return;
    }

    void popStackToClose(String p4)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            if (!((org.jsoup.nodes.Element) v0.next()).nodeName().equals(p4)) {
                v0.remove();
            } else {
                v0.remove();
                break;
            }
        }
        return;
    }

    varargs void popStackToClose(String[] p4)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            if (!org.jsoup.helper.StringUtil.in(((org.jsoup.nodes.Element) v0.next()).nodeName(), p4)) {
                v0.remove();
            } else {
                v0.remove();
                break;
            }
        }
        return;
    }

    boolean process(org.jsoup.parser.Token p2)
    {
        this.currentToken = p2;
        return this.state.process(p2, this);
    }

    boolean process(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilderState p3)
    {
        this.currentToken = p2;
        return p3.process(p2, this);
    }

    void push(org.jsoup.nodes.Element p2)
    {
        this.stack.add(p2);
        return;
    }

    void pushActiveFormattingElements(org.jsoup.nodes.Element p5)
    {
        int v2 = 0;
        java.util.Iterator v1 = this.formattingElements.descendingIterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) v1.next());
            if (v0_1 == null) {
                break;
            }
            if (this.isSameFormattingElement(p5, v0_1)) {
                v2++;
            }
            if (v2 == 3) {
                v1.remove();
                break;
            }
        }
        this.formattingElements.add(p5);
        return;
    }

    void reconstructFormattingElements()
    {
        int v3 = this.formattingElements.size();
        if ((v3 != 0) && ((this.formattingElements.getLast() != null) && (!this.onStack(((org.jsoup.nodes.Element) this.formattingElements.getLast()))))) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) this.formattingElements.getLast());
            int v2 = (v3 - 1);
            int v4 = 0;
            while (v2 != 0) {
                v2--;
                v0_1 = ((org.jsoup.nodes.Element) this.formattingElements.get(v2));
                if ((v0_1 == null) || (this.onStack(v0_1))) {
                }
                do {
                    if (v4 == 0) {
                        v2++;
                        v0_1 = ((org.jsoup.nodes.Element) this.formattingElements.get(v2));
                    }
                    org.jsoup.helper.Validate.notNull(v0_1);
                    v4 = 0;
                    org.jsoup.nodes.Element v1 = this.insert(v0_1.nodeName());
                    v1.attributes().addAll(v0_1.attributes());
                    this.formattingElements.add(v2, v1);
                    this.formattingElements.remove((v2 + 1));
                } while(v2 != (v3 - 1));
            }
            v4 = 1;
        }
        return;
    }

    void removeFromActiveFormattingElements(org.jsoup.nodes.Element p4)
    {
        java.util.Iterator v0 = this.formattingElements.descendingIterator();
        while (v0.hasNext()) {
            if (((org.jsoup.nodes.Element) v0.next()) == p4) {
                v0.remove();
                break;
            }
        }
        return;
    }

    boolean removeFromStack(org.jsoup.nodes.Element p4)
    {
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            if (((org.jsoup.nodes.Element) v0.next()) == p4) {
                v0.remove();
                int v2_1 = 1;
            }
            return v2_1;
        }
        v2_1 = 0;
        return v2_1;
    }

    void replaceActiveFormattingElement(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        this.replaceInQueue(this.formattingElements, p2, p3);
        return;
    }

    void replaceOnStack(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        this.replaceInQueue(this.stack, p2, p3);
        return;
    }

    void resetInsertionMode()
    {
        int v1 = 0;
        java.util.Iterator v0 = this.stack.descendingIterator();
        while (v0.hasNext()) {
            org.jsoup.nodes.Element v3_0 = ((org.jsoup.nodes.Element) v0.next());
            if (!v0.hasNext()) {
                v1 = 1;
                v3_0 = this.contextElement;
            }
            String v2 = v3_0.nodeName();
            if (!"select".equals(v2)) {
                if ((!"td".equals(v2)) && ((!"td".equals(v2)) || (v1 != 0))) {
                    if (!"tr".equals(v2)) {
                        if ((!"tbody".equals(v2)) && ((!"thead".equals(v2)) && (!"tfoot".equals(v2)))) {
                            if (!"caption".equals(v2)) {
                                if (!"colgroup".equals(v2)) {
                                    if (!"table".equals(v2)) {
                                        if (!"head".equals(v2)) {
                                            if (!"body".equals(v2)) {
                                                if (!"frameset".equals(v2)) {
                                                    if (!"html".equals(v2)) {
                                                        if (v1 != 0) {
                                                            this.transition(org.jsoup.parser.TreeBuilderState.InBody);
                                                            break;
                                                        }
                                                    } else {
                                                        this.transition(org.jsoup.parser.TreeBuilderState.BeforeHead);
                                                        break;
                                                    }
                                                } else {
                                                    this.transition(org.jsoup.parser.TreeBuilderState.InFrameset);
                                                    break;
                                                }
                                            } else {
                                                this.transition(org.jsoup.parser.TreeBuilderState.InBody);
                                                break;
                                            }
                                        } else {
                                            this.transition(org.jsoup.parser.TreeBuilderState.InBody);
                                            break;
                                        }
                                    } else {
                                        this.transition(org.jsoup.parser.TreeBuilderState.InTable);
                                        break;
                                    }
                                } else {
                                    this.transition(org.jsoup.parser.TreeBuilderState.InColumnGroup);
                                    break;
                                }
                            } else {
                                this.transition(org.jsoup.parser.TreeBuilderState.InCaption);
                                break;
                            }
                        } else {
                            this.transition(org.jsoup.parser.TreeBuilderState.InTableBody);
                            break;
                        }
                    } else {
                        this.transition(org.jsoup.parser.TreeBuilderState.InRow);
                        break;
                    }
                } else {
                    this.transition(org.jsoup.parser.TreeBuilderState.InCell);
                    break;
                }
            } else {
                this.transition(org.jsoup.parser.TreeBuilderState.InSelect);
                break;
            }
        }
        return;
    }

    void setBaseUri(org.jsoup.nodes.Element p3)
    {
        String v0 = p3.absUrl("href");
        if (v0.length() != 0) {
            this.baseUri = v0;
            this.doc.setBaseUri(v0);
        }
        return;
    }

    void setFormElement(org.jsoup.nodes.Element p1)
    {
        this.formElement = p1;
        return;
    }

    void setFosterInserts(boolean p1)
    {
        this.fosterInserts = p1;
        return;
    }

    void setHeadElement(org.jsoup.nodes.Element p1)
    {
        this.headElement = p1;
        return;
    }

    void setPendingTableCharacters(java.util.List p1)
    {
        this.pendingTableCharacters = p1;
        return;
    }

    org.jsoup.parser.TreeBuilderState state()
    {
        return this.state;
    }

    public String toString()
    {
        return new StringBuilder().append("TreeBuilder{currentToken=").append(this.currentToken).append(", state=").append(this.state).append(", currentElement=").append(this.currentElement()).append(125).toString();
    }

    void transition(org.jsoup.parser.TreeBuilderState p1)
    {
        this.state = p1;
        return;
    }
}
package org.jsoup.parser;
abstract enum class TreeBuilderState extends java.lang.Enum {
    private static final synthetic org.jsoup.parser.TreeBuilderState[] $VALUES;
    public static final enum org.jsoup.parser.TreeBuilderState AfterAfterBody;
    public static final enum org.jsoup.parser.TreeBuilderState AfterAfterFrameset;
    public static final enum org.jsoup.parser.TreeBuilderState AfterBody;
    public static final enum org.jsoup.parser.TreeBuilderState AfterFrameset;
    public static final enum org.jsoup.parser.TreeBuilderState AfterHead;
    public static final enum org.jsoup.parser.TreeBuilderState BeforeHead;
    public static final enum org.jsoup.parser.TreeBuilderState BeforeHtml;
    public static final enum org.jsoup.parser.TreeBuilderState ForeignContent;
    public static final enum org.jsoup.parser.TreeBuilderState InBody;
    public static final enum org.jsoup.parser.TreeBuilderState InCaption;
    public static final enum org.jsoup.parser.TreeBuilderState InCell;
    public static final enum org.jsoup.parser.TreeBuilderState InColumnGroup;
    public static final enum org.jsoup.parser.TreeBuilderState InFrameset;
    public static final enum org.jsoup.parser.TreeBuilderState InHead;
    public static final enum org.jsoup.parser.TreeBuilderState InHeadNoscript;
    public static final enum org.jsoup.parser.TreeBuilderState InRow;
    public static final enum org.jsoup.parser.TreeBuilderState InSelect;
    public static final enum org.jsoup.parser.TreeBuilderState InSelectInTable;
    public static final enum org.jsoup.parser.TreeBuilderState InTable;
    public static final enum org.jsoup.parser.TreeBuilderState InTableBody;
    public static final enum org.jsoup.parser.TreeBuilderState InTableText;
    public static final enum org.jsoup.parser.TreeBuilderState Initial;
    public static final enum org.jsoup.parser.TreeBuilderState Text;
    private static String nullString;

    static TreeBuilderState()
    {
        org.jsoup.parser.TreeBuilderState.Initial = new org.jsoup.parser.TreeBuilderState$1("Initial", 0);
        org.jsoup.parser.TreeBuilderState.BeforeHtml = new org.jsoup.parser.TreeBuilderState$2("BeforeHtml", 1);
        org.jsoup.parser.TreeBuilderState.BeforeHead = new org.jsoup.parser.TreeBuilderState$3("BeforeHead", 2);
        org.jsoup.parser.TreeBuilderState.InHead = new org.jsoup.parser.TreeBuilderState$4("InHead", 3);
        org.jsoup.parser.TreeBuilderState.InHeadNoscript = new org.jsoup.parser.TreeBuilderState$5("InHeadNoscript", 4);
        org.jsoup.parser.TreeBuilderState.AfterHead = new org.jsoup.parser.TreeBuilderState$6("AfterHead", 5);
        org.jsoup.parser.TreeBuilderState.InBody = new org.jsoup.parser.TreeBuilderState$7("InBody", 6);
        org.jsoup.parser.TreeBuilderState.Text = new org.jsoup.parser.TreeBuilderState$8("Text", 7);
        org.jsoup.parser.TreeBuilderState.InTable = new org.jsoup.parser.TreeBuilderState$9("InTable", 8);
        org.jsoup.parser.TreeBuilderState.InTableText = new org.jsoup.parser.TreeBuilderState$10("InTableText", 9);
        org.jsoup.parser.TreeBuilderState.InCaption = new org.jsoup.parser.TreeBuilderState$11("InCaption", 10);
        org.jsoup.parser.TreeBuilderState.InColumnGroup = new org.jsoup.parser.TreeBuilderState$12("InColumnGroup", 11);
        org.jsoup.parser.TreeBuilderState.InTableBody = new org.jsoup.parser.TreeBuilderState$13("InTableBody", 12);
        org.jsoup.parser.TreeBuilderState.InRow = new org.jsoup.parser.TreeBuilderState$14("InRow", 13);
        org.jsoup.parser.TreeBuilderState.InCell = new org.jsoup.parser.TreeBuilderState$15("InCell", 14);
        org.jsoup.parser.TreeBuilderState.InSelect = new org.jsoup.parser.TreeBuilderState$16("InSelect", 15);
        org.jsoup.parser.TreeBuilderState.InSelectInTable = new org.jsoup.parser.TreeBuilderState$17("InSelectInTable", 16);
        org.jsoup.parser.TreeBuilderState.AfterBody = new org.jsoup.parser.TreeBuilderState$18("AfterBody", 17);
        org.jsoup.parser.TreeBuilderState.InFrameset = new org.jsoup.parser.TreeBuilderState$19("InFrameset", 18);
        org.jsoup.parser.TreeBuilderState.AfterFrameset = new org.jsoup.parser.TreeBuilderState$20("AfterFrameset", 19);
        org.jsoup.parser.TreeBuilderState.AfterAfterBody = new org.jsoup.parser.TreeBuilderState$21("AfterAfterBody", 20);
        org.jsoup.parser.TreeBuilderState.AfterAfterFrameset = new org.jsoup.parser.TreeBuilderState$22("AfterAfterFrameset", 21);
        org.jsoup.parser.TreeBuilderState.ForeignContent = new org.jsoup.parser.TreeBuilderState$23("ForeignContent", 22);
        String v0_8 = new org.jsoup.parser.TreeBuilderState[23];
        v0_8[0] = org.jsoup.parser.TreeBuilderState.Initial;
        v0_8[1] = org.jsoup.parser.TreeBuilderState.BeforeHtml;
        v0_8[2] = org.jsoup.parser.TreeBuilderState.BeforeHead;
        v0_8[3] = org.jsoup.parser.TreeBuilderState.InHead;
        v0_8[4] = org.jsoup.parser.TreeBuilderState.InHeadNoscript;
        v0_8[5] = org.jsoup.parser.TreeBuilderState.AfterHead;
        v0_8[6] = org.jsoup.parser.TreeBuilderState.InBody;
        v0_8[7] = org.jsoup.parser.TreeBuilderState.Text;
        v0_8[8] = org.jsoup.parser.TreeBuilderState.InTable;
        v0_8[9] = org.jsoup.parser.TreeBuilderState.InTableText;
        v0_8[10] = org.jsoup.parser.TreeBuilderState.InCaption;
        v0_8[11] = org.jsoup.parser.TreeBuilderState.InColumnGroup;
        v0_8[12] = org.jsoup.parser.TreeBuilderState.InTableBody;
        v0_8[13] = org.jsoup.parser.TreeBuilderState.InRow;
        v0_8[14] = org.jsoup.parser.TreeBuilderState.InCell;
        v0_8[15] = org.jsoup.parser.TreeBuilderState.InSelect;
        v0_8[16] = org.jsoup.parser.TreeBuilderState.InSelectInTable;
        v0_8[17] = org.jsoup.parser.TreeBuilderState.AfterBody;
        v0_8[18] = org.jsoup.parser.TreeBuilderState.InFrameset;
        v0_8[19] = org.jsoup.parser.TreeBuilderState.AfterFrameset;
        v0_8[20] = org.jsoup.parser.TreeBuilderState.AfterAfterBody;
        v0_8[21] = org.jsoup.parser.TreeBuilderState.AfterAfterFrameset;
        v0_8[22] = org.jsoup.parser.TreeBuilderState.ForeignContent;
        org.jsoup.parser.TreeBuilderState.$VALUES = v0_8;
        org.jsoup.parser.TreeBuilderState.nullString = String.valueOf(0);
        return;
    }

    private TreeBuilderState(String p1, int p2)
    {
        super(p1, p2);
        return;
    }

    synthetic TreeBuilderState(String p1, int p2, org.jsoup.parser.TreeBuilderState$1 p3)
    {
        this(p1, p2);
        return;
    }

    static synthetic boolean access$100(org.jsoup.parser.Token p1)
    {
        return org.jsoup.parser.TreeBuilderState.isWhitespace(p1);
    }

    static synthetic void access$200(org.jsoup.parser.Token$StartTag p0, org.jsoup.parser.TreeBuilder p1)
    {
        org.jsoup.parser.TreeBuilderState.handleRcData(p0, p1);
        return;
    }

    static synthetic void access$300(org.jsoup.parser.Token$StartTag p0, org.jsoup.parser.TreeBuilder p1)
    {
        org.jsoup.parser.TreeBuilderState.handleRawtext(p0, p1);
        return;
    }

    static synthetic String access$400()
    {
        return org.jsoup.parser.TreeBuilderState.nullString;
    }

    private static void handleRawtext(org.jsoup.parser.Token$StartTag p2, org.jsoup.parser.TreeBuilder p3)
    {
        p3.insert(p2);
        p3.tokeniser.transition(org.jsoup.parser.TokeniserState.Rawtext);
        p3.markInsertionMode();
        p3.transition(org.jsoup.parser.TreeBuilderState.Text);
        return;
    }

    private static void handleRcData(org.jsoup.parser.Token$StartTag p2, org.jsoup.parser.TreeBuilder p3)
    {
        p3.insert(p2);
        p3.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);
        p3.markInsertionMode();
        p3.transition(org.jsoup.parser.TreeBuilderState.Text);
        return;
    }

    private static boolean isWhitespace(org.jsoup.parser.Token p5)
    {
        int v3 = 0;
        if (p5.isCharacter()) {
            String v1 = p5.asCharacter().getData();
            int v2 = 0;
            while (v2 < v1.length()) {
                if (Character.isWhitespace(v1.charAt(v2))) {
                    v2++;
                }
            }
            v3 = 1;
        }
        return v3;
    }

    public static org.jsoup.parser.TreeBuilderState valueOf(String p1)
    {
        return ((org.jsoup.parser.TreeBuilderState) Enum.valueOf(org.jsoup.parser.TreeBuilderState, p1));
    }

    public static org.jsoup.parser.TreeBuilderState[] values()
    {
        return ((org.jsoup.parser.TreeBuilderState[]) org.jsoup.parser.TreeBuilderState.$VALUES.clone());
    }

    abstract boolean process();
}
package org.jsoup.parser;
final enum class TreeBuilderState$10 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$10(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p10, org.jsoup.parser.TreeBuilder p11)
    {
        int v3_0 = 0;
        switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p10.type.ordinal()]) {
            case 5:
                org.jsoup.parser.Token$Character v0 = p10.asCharacter();
                if (!v0.getData().equals(org.jsoup.parser.TreeBuilderState.access$400())) {
                    p11.getPendingTableCharacters().add(v0);
                    v3_0 = 1;
                } else {
                    p11.error(this);
                }
                break;
            default:
                if (p11.getPendingTableCharacters().size() > 0) {
                    java.util.Iterator v2 = p11.getPendingTableCharacters().iterator();
                    while (v2.hasNext()) {
                        org.jsoup.parser.Token$Character v1_1 = ((org.jsoup.parser.Token$Character) v2.next());
                        if (org.jsoup.parser.TreeBuilderState.access$100(v1_1)) {
                            p11.insert(v1_1);
                        } else {
                            p11.error(this);
                            org.jsoup.parser.TreeBuilderState v5_9 = p11.currentElement().nodeName();
                            String[] v6_4 = new String[5];
                            v6_4[0] = "table";
                            v6_4[1] = "tbody";
                            v6_4[2] = "tfoot";
                            v6_4[3] = "thead";
                            v6_4[4] = "tr";
                            if (!org.jsoup.helper.StringUtil.in(v5_9, v6_4)) {
                                p11.process(v1_1, org.jsoup.parser.TreeBuilderState$10.InBody);
                            } else {
                                p11.setFosterInserts(1);
                                p11.process(v1_1, org.jsoup.parser.TreeBuilderState$10.InBody);
                                p11.setFosterInserts(0);
                            }
                        }
                    }
                    p11.newPendingTableCharacters();
                }
                p11.transition(p11.originalState());
                v3_0 = p11.process(p10);
        }
        return v3_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$11 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$11(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p13, org.jsoup.parser.TreeBuilder p14)
    {
        boolean v3_0 = 0;
        if ((!p13.isEndTag()) || (!p13.asEndTag().name().equals("caption"))) {
            if (!p13.isStartTag()) {
                if ((!p13.isEndTag()) || (!p13.asEndTag().name().equals("table"))) {
                    if (p13.isEndTag()) {
                        String v5_16 = p13.asEndTag().name();
                        String[] v6_5 = new String[10];
                        v6_5[0] = "body";
                        v6_5[1] = "col";
                        v6_5[2] = "colgroup";
                        v6_5[3] = "html";
                        v6_5[4] = "tbody";
                        v6_5[5] = "td";
                        v6_5[6] = "tfoot";
                        v6_5[7] = "th";
                        v6_5[8] = "thead";
                        v6_5[9] = "tr";
                        if (org.jsoup.helper.StringUtil.in(v5_16, v6_5)) {
                            p14.error(this);
                            return v3_0;
                        }
                    }
                    v3_0 = p14.process(p13, org.jsoup.parser.TreeBuilderState$11.InBody);
                    return v3_0;
                }
            } else {
                String v5_7 = p13.asStartTag().name();
                String[] v6_2 = new String[9];
                v6_2[0] = "caption";
                v6_2[1] = "col";
                v6_2[2] = "colgroup";
                v6_2[3] = "tbody";
                v6_2[4] = "td";
                v6_2[5] = "tfoot";
                v6_2[6] = "th";
                v6_2[7] = "thead";
                v6_2[8] = "tr";
                if (!org.jsoup.helper.StringUtil.in(v5_7, v6_2)) {
                }
            }
            p14.error(this);
            if (!p14.process(new org.jsoup.parser.Token$EndTag("caption"))) {
                v3_0 = 1;
            } else {
                v3_0 = p14.process(p13);
            }
        } else {
            if (p14.inTableScope(p13.asEndTag().name())) {
                p14.generateImpliedEndTags();
                if (!p14.currentElement().nodeName().equals("caption")) {
                    p14.error(this);
                }
                p14.popStackToClose("caption");
                p14.clearFormattingElementsToLastMarker();
                p14.transition(org.jsoup.parser.TreeBuilderState$11.InTable);
            } else {
                p14.error(this);
            }
        }
        return v3_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$12 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$12(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p4, org.jsoup.parser.TreeBuilder p5)
    {
        int v1_2;
        if (!p5.process(new org.jsoup.parser.Token$EndTag("colgroup"))) {
            v1_2 = 1;
        } else {
            v1_2 = p5.process(p4);
        }
        return v1_2;
    }

    boolean process(org.jsoup.parser.Token p7, org.jsoup.parser.TreeBuilder p8)
    {
        int v3_0 = 1;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p7)) {
            switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p7.type.ordinal()]) {
                case 1:
                    p8.insert(p7.asComment());
                    break;
                case 2:
                    p8.error(this);
                    break;
                case 3:
                    org.jsoup.parser.Token$StartTag v2 = p7.asStartTag();
                    String v1_1 = v2.name();
                    if (!v1_1.equals("html")) {
                        if (!v1_1.equals("col")) {
                            v3_0 = this.anythingElse(p7, p8);
                        } else {
                            p8.insertEmpty(v2);
                        }
                    } else {
                        v3_0 = p8.process(p7, org.jsoup.parser.TreeBuilderState$12.InBody);
                    }
                    break;
                case 4:
                    if (!p7.asEndTag().name().equals("colgroup")) {
                        v3_0 = this.anythingElse(p7, p8);
                    } else {
                        if (!p8.currentElement().nodeName().equals("html")) {
                            p8.pop();
                            p8.transition(org.jsoup.parser.TreeBuilderState$12.InTable);
                        } else {
                            p8.error(this);
                            v3_0 = 0;
                        }
                    }
                    break;
                case 5:
                default:
                    v3_0 = this.anythingElse(p7, p8);
                    break;
                case 6:
                    if (!p8.currentElement().nodeName().equals("html")) {
                        v3_0 = this.anythingElse(p7, p8);
                    }
                    break;
            }
        } else {
            p8.insert(p7.asCharacter());
        }
        return v3_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$13 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$13(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        return p3.process(p2, org.jsoup.parser.TreeBuilderState$13.InTable);
    }

    private boolean exitTableBody(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        if ((p4.inTableScope("tbody")) || ((p4.inTableScope("thead")) || (p4.inScope("tfoot")))) {
            p4.clearStackToTableBodyContext();
            p4.process(new org.jsoup.parser.Token$EndTag(p4.currentElement().nodeName()));
            int v0_5 = p4.process(p3);
        } else {
            p4.error(this);
            v0_5 = 0;
        }
        return v0_5;
    }

    boolean process(org.jsoup.parser.Token p11, org.jsoup.parser.TreeBuilder p12)
    {
        boolean v3_0 = 0;
        switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p11.type.ordinal()]) {
            case 3:
                org.jsoup.parser.Token$StartTag v2 = p11.asStartTag();
                String v1_1 = v2.name();
                if (!v1_1.equals("tr")) {
                    String[] v5_10 = new String[2];
                    v5_10[0] = "th";
                    v5_10[1] = "td";
                    if (!org.jsoup.helper.StringUtil.in(v1_1, v5_10)) {
                        String[] v5_13 = new String[6];
                        v5_13[0] = "caption";
                        v5_13[1] = "col";
                        v5_13[2] = "colgroup";
                        v5_13[3] = "tbody";
                        v5_13[4] = "tfoot";
                        v5_13[5] = "thead";
                        if (!org.jsoup.helper.StringUtil.in(v1_1, v5_13)) {
                            v3_0 = this.anythingElse(p11, p12);
                        } else {
                            v3_0 = this.exitTableBody(p11, p12);
                        }
                    } else {
                        p12.error(this);
                        p12.process(new org.jsoup.parser.Token$StartTag("tr"));
                        v3_0 = p12.process(v2);
                    }
                } else {
                    p12.clearStackToTableBodyContext();
                    p12.insert(v2);
                    p12.transition(org.jsoup.parser.TreeBuilderState$13.InRow);
                    v3_0 = 1;
                }
                break;
            case 4:
                String v1_0 = p11.asEndTag().name();
                String[] v5_0 = new String[3];
                v5_0[0] = "tbody";
                v5_0[1] = "tfoot";
                v5_0[2] = "thead";
                if (!org.jsoup.helper.StringUtil.in(v1_0, v5_0)) {
                    if (!v1_0.equals("table")) {
                        String[] v5_5 = new String[8];
                        v5_5[0] = "body";
                        v5_5[1] = "caption";
                        v5_5[2] = "col";
                        v5_5[3] = "colgroup";
                        v5_5[4] = "html";
                        v5_5[5] = "td";
                        v5_5[6] = "th";
                        v5_5[7] = "tr";
                        if (!org.jsoup.helper.StringUtil.in(v1_0, v5_5)) {
                            v3_0 = this.anythingElse(p11, p12);
                        } else {
                            p12.error(this);
                        }
                    } else {
                        v3_0 = this.exitTableBody(p11, p12);
                    }
                } else {
                    if (p12.inTableScope(v1_0)) {
                        p12.clearStackToTableBodyContext();
                        p12.pop();
                        p12.transition(org.jsoup.parser.TreeBuilderState$13.InTable);
                    } else {
                        p12.error(this);
                    }
                }
                break;
            default:
                v3_0 = this.anythingElse(p11, p12);
        }
        return v3_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$14 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$14(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        return p3.process(p2, org.jsoup.parser.TreeBuilderState$14.InTable);
    }

    private boolean handleMissingTr(org.jsoup.parser.Token p4, org.jsoup.parser.TreeBuilder p5)
    {
        int v1_2;
        if (!p5.process(new org.jsoup.parser.Token$EndTag("tr"))) {
            v1_2 = 0;
        } else {
            v1_2 = p5.process(p4);
        }
        return v1_2;
    }

    boolean process(org.jsoup.parser.Token p11, org.jsoup.parser.TreeBuilder p12)
    {
        boolean v3_4 = 0;
        if (!p11.isStartTag()) {
            if (!p11.isEndTag()) {
                v3_4 = this.anythingElse(p11, p12);
            } else {
                String v1_0 = p11.asEndTag().name();
                if (!v1_0.equals("tr")) {
                    if (!v1_0.equals("table")) {
                        String[] v5_4 = new String[3];
                        v5_4[0] = "tbody";
                        v5_4[1] = "tfoot";
                        v5_4[2] = "thead";
                        if (!org.jsoup.helper.StringUtil.in(v1_0, v5_4)) {
                            String[] v5_7 = new String[7];
                            v5_7[0] = "body";
                            v5_7[1] = "caption";
                            v5_7[2] = "col";
                            v5_7[3] = "colgroup";
                            v5_7[4] = "html";
                            v5_7[5] = "td";
                            v5_7[6] = "th";
                            if (!org.jsoup.helper.StringUtil.in(v1_0, v5_7)) {
                                v3_4 = this.anythingElse(p11, p12);
                            } else {
                                p12.error(this);
                            }
                        } else {
                            if (p12.inTableScope(v1_0)) {
                                p12.process(new org.jsoup.parser.Token$EndTag("tr"));
                                v3_4 = p12.process(p11);
                            } else {
                                p12.error(this);
                            }
                        }
                    } else {
                        v3_4 = this.handleMissingTr(p11, p12);
                    }
                } else {
                    if (p12.inTableScope(v1_0)) {
                        p12.clearStackToTableRowContext();
                        p12.pop();
                        p12.transition(org.jsoup.parser.TreeBuilderState$14.InTableBody);
                        v3_4 = 1;
                    } else {
                        p12.error(this);
                    }
                }
            }
        } else {
            org.jsoup.parser.Token$StartTag v2 = p11.asStartTag();
            String v1_1 = v2.name();
            String[] v5_10 = new String[2];
            v5_10[0] = "th";
            v5_10[1] = "td";
            if (!org.jsoup.helper.StringUtil.in(v1_1, v5_10)) {
                String[] v5_14 = new String[7];
                v5_14[0] = "caption";
                v5_14[1] = "col";
                v5_14[2] = "colgroup";
                v5_14[3] = "tbody";
                v5_14[4] = "tfoot";
                v5_14[5] = "thead";
                v5_14[6] = "tr";
                if (!org.jsoup.helper.StringUtil.in(v1_1, v5_14)) {
                    v3_4 = this.anythingElse(p11, p12);
                } else {
                    v3_4 = this.handleMissingTr(p11, p12);
                }
            } else {
                p12.clearStackToTableRowContext();
                p12.insert(v2);
                p12.transition(org.jsoup.parser.TreeBuilderState$14.InCell);
                p12.insertMarkerToFormattingElements();
            }
        }
        return v3_4;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$15 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$15(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        return p3.process(p2, org.jsoup.parser.TreeBuilderState$15.InBody);
    }

    private void closeCell(org.jsoup.parser.TreeBuilder p3)
    {
        if (!p3.inTableScope("td")) {
            p3.process(new org.jsoup.parser.Token$EndTag("th"));
        } else {
            p3.process(new org.jsoup.parser.Token$EndTag("td"));
        }
        return;
    }

    boolean process(org.jsoup.parser.Token p11, org.jsoup.parser.TreeBuilder p12)
    {
        boolean v2_0 = 0;
        if (!p11.isEndTag()) {
            if (p11.isStartTag()) {
                String[] v4_2 = p11.asStartTag().name();
                String v5_1 = new String[9];
                v5_1[0] = "caption";
                v5_1[1] = "col";
                v5_1[2] = "colgroup";
                v5_1[3] = "tbody";
                v5_1[4] = "td";
                v5_1[5] = "tfoot";
                v5_1[6] = "th";
                v5_1[7] = "thead";
                v5_1[8] = "tr";
                if (org.jsoup.helper.StringUtil.in(v4_2, v5_1)) {
                    if ((p12.inTableScope("td")) || (p12.inTableScope("th"))) {
                        this.closeCell(p12);
                        v2_0 = p12.process(p11);
                        return v2_0;
                    } else {
                        p12.error(this);
                        return v2_0;
                    }
                }
            }
            v2_0 = this.anythingElse(p11, p12);
        } else {
            String v1 = p11.asEndTag().name();
            String[] v4_4 = new String[2];
            v4_4[0] = "td";
            v4_4[1] = "th";
            if (!org.jsoup.helper.StringUtil.in(v1, v4_4)) {
                String[] v4_7 = new String[5];
                v4_7[0] = "body";
                v4_7[1] = "caption";
                v4_7[2] = "col";
                v4_7[3] = "colgroup";
                v4_7[4] = "html";
                if (!org.jsoup.helper.StringUtil.in(v1, v4_7)) {
                    String[] v4_10 = new String[5];
                    v4_10[0] = "table";
                    v4_10[1] = "tbody";
                    v4_10[2] = "tfoot";
                    v4_10[3] = "thead";
                    v4_10[4] = "tr";
                    if (!org.jsoup.helper.StringUtil.in(v1, v4_10)) {
                        v2_0 = this.anythingElse(p11, p12);
                    } else {
                        if (p12.inTableScope(v1)) {
                            this.closeCell(p12);
                            v2_0 = p12.process(p11);
                        } else {
                            p12.error(this);
                        }
                    }
                } else {
                    p12.error(this);
                }
            } else {
                if (p12.inTableScope(v1)) {
                    p12.generateImpliedEndTags();
                    if (!p12.currentElement().nodeName().equals(v1)) {
                        p12.error(this);
                    }
                    p12.popStackToClose(v1);
                    p12.clearFormattingElementsToLastMarker();
                    p12.transition(org.jsoup.parser.TreeBuilderState$15.InRow);
                    v2_0 = 1;
                } else {
                    p12.error(this);
                    p12.transition(org.jsoup.parser.TreeBuilderState$15.InRow);
                }
            }
        }
        return v2_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$16 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$16(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        p3.error(this);
        return 0;
    }

    boolean process(org.jsoup.parser.Token p9, org.jsoup.parser.TreeBuilder p10)
    {
        boolean v4_0 = 0;
        switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p9.type.ordinal()]) {
            case 1:
                p10.insert(p9.asComment());
                v4_0 = 1;
                break;
            case 2:
                p10.error(this);
                break;
            case 3:
                org.jsoup.parser.Token$StartTag v3 = p9.asStartTag();
                String v2_0 = v3.name();
                if (!v2_0.equals("html")) {
                    if (!v2_0.equals("option")) {
                        if (!v2_0.equals("optgroup")) {
                            if (!v2_0.equals("select")) {
                                String v6_10 = new String[3];
                                v6_10[0] = "input";
                                v6_10[1] = "keygen";
                                v6_10[2] = "textarea";
                                if (!org.jsoup.helper.StringUtil.in(v2_0, v6_10)) {
                                    if (!v2_0.equals("script")) {
                                        v4_0 = this.anythingElse(p9, p10);
                                    } else {
                                        v4_0 = p10.process(p9, org.jsoup.parser.TreeBuilderState$16.InHead);
                                    }
                                } else {
                                    p10.error(this);
                                    if (!p10.inSelectScope("select")) {
                                    } else {
                                        p10.process(new org.jsoup.parser.Token$EndTag("select"));
                                        v4_0 = p10.process(v3);
                                    }
                                }
                            } else {
                                p10.error(this);
                                v4_0 = p10.process(new org.jsoup.parser.Token$EndTag("select"));
                            }
                        } else {
                            if (!p10.currentElement().nodeName().equals("option")) {
                                if (p10.currentElement().nodeName().equals("optgroup")) {
                                    p10.process(new org.jsoup.parser.Token$EndTag("optgroup"));
                                }
                            } else {
                                p10.process(new org.jsoup.parser.Token$EndTag("option"));
                            }
                            p10.insert(v3);
                        }
                    } else {
                        p10.process(new org.jsoup.parser.Token$EndTag("option"));
                        p10.insert(v3);
                    }
                } else {
                    v4_0 = p10.process(v3, org.jsoup.parser.TreeBuilderState$16.InBody);
                }
                break;
            case 4:
                String v2_1 = p9.asEndTag().name();
                if (!v2_1.equals("optgroup")) {
                    if (!v2_1.equals("option")) {
                        if (!v2_1.equals("select")) {
                            v4_0 = this.anythingElse(p9, p10);
                        } else {
                            if (p10.inSelectScope(v2_1)) {
                                p10.popStackToClose(v2_1);
                                p10.resetInsertionMode();
                            } else {
                                p10.error(this);
                            }
                        }
                    } else {
                        if (!p10.currentElement().nodeName().equals("option")) {
                            p10.error(this);
                        } else {
                            p10.pop();
                        }
                    }
                } else {
                    if ((p10.currentElement().nodeName().equals("option")) && ((p10.aboveOnStack(p10.currentElement()) != null) && (p10.aboveOnStack(p10.currentElement()).nodeName().equals("optgroup")))) {
                        p10.process(new org.jsoup.parser.Token$EndTag("option"));
                    }
                    if (!p10.currentElement().nodeName().equals("optgroup")) {
                        p10.error(this);
                    } else {
                        p10.pop();
                    }
                }
                break;
            case 5:
                org.jsoup.parser.Token$Character v0 = p9.asCharacter();
                if (!v0.getData().equals(org.jsoup.parser.TreeBuilderState.access$400())) {
                    p10.insert(v0);
                } else {
                    p10.error(this);
                }
                break;
            case 6:
                if (p10.currentElement().nodeName().equals("html")) {
                } else {
                    p10.error(this);
                }
                break;
            default:
                v4_0 = this.anythingElse(p9, p10);
        }
        return v4_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$17 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$17(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p10, org.jsoup.parser.TreeBuilder p11)
    {
        boolean v0_0 = 0;
        if (!p10.isStartTag()) {
            if (p10.isEndTag()) {
                String v1_4 = p10.asEndTag().name();
                String[] v2_3 = new String[8];
                v2_3[0] = "caption";
                v2_3[1] = "table";
                v2_3[2] = "tbody";
                v2_3[3] = "tfoot";
                v2_3[4] = "thead";
                v2_3[5] = "tr";
                v2_3[6] = "td";
                v2_3[7] = "th";
                if (org.jsoup.helper.StringUtil.in(v1_4, v2_3)) {
                    p11.error(this);
                    if (!p11.inTableScope(p10.asEndTag().name())) {
                        return v0_0;
                    } else {
                        p11.process(new org.jsoup.parser.Token$EndTag("select"));
                        v0_0 = p11.process(p10);
                        return v0_0;
                    }
                }
            }
            v0_0 = p11.process(p10, org.jsoup.parser.TreeBuilderState$17.InSelect);
        } else {
            String v1_0 = p10.asStartTag().name();
            String[] v2_1 = new String[8];
            v2_1[0] = "caption";
            v2_1[1] = "table";
            v2_1[2] = "tbody";
            v2_1[3] = "tfoot";
            v2_1[4] = "thead";
            v2_1[5] = "tr";
            v2_1[6] = "td";
            v2_1[7] = "th";
            if (!org.jsoup.helper.StringUtil.in(v1_0, v2_1)) {
            } else {
                p11.error(this);
                p11.process(new org.jsoup.parser.Token$EndTag("select"));
                v0_0 = p11.process(p10);
            }
        }
        return v0_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$18 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$18(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p4, org.jsoup.parser.TreeBuilder p5)
    {
        org.jsoup.parser.TreeBuilderState v0_0 = 0;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p4)) {
            if (!p4.isComment()) {
                if (!p4.isDoctype()) {
                    if ((!p4.isStartTag()) || (!p4.asStartTag().name().equals("html"))) {
                        if ((!p4.isEndTag()) || (!p4.asEndTag().name().equals("html"))) {
                            if (!p4.isEOF()) {
                                p5.error(this);
                                p5.transition(org.jsoup.parser.TreeBuilderState$18.InBody);
                                v0_0 = p5.process(p4);
                                return v0_0;
                            }
                        } else {
                            if (!p5.isFragmentParsing()) {
                                p5.transition(org.jsoup.parser.TreeBuilderState$18.AfterAfterBody);
                            } else {
                                p5.error(this);
                                return v0_0;
                            }
                        }
                    } else {
                        v0_0 = p5.process(p4, org.jsoup.parser.TreeBuilderState$18.InBody);
                        return v0_0;
                    }
                } else {
                    p5.error(this);
                    return v0_0;
                }
            } else {
                p5.insert(p4.asComment());
            }
            v0_0 = 1;
        } else {
            v0_0 = p5.process(p4, org.jsoup.parser.TreeBuilderState$18.InBody);
        }
        return v0_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$19 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$19(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p7, org.jsoup.parser.TreeBuilder p8)
    {
        org.jsoup.parser.TreeBuilderState v2_0 = 0;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p7)) {
            if (!p7.isComment()) {
                if (!p7.isDoctype()) {
                    if (!p7.isStartTag()) {
                        if ((!p7.isEndTag()) || (!p7.asEndTag().name().equals("frameset"))) {
                            if (!p7.isEOF()) {
                                p8.error(this);
                            } else {
                                if (p8.currentElement().nodeName().equals("html")) {
                                    v2_0 = 1;
                                } else {
                                    p8.error(this);
                                    v2_0 = 1;
                                }
                            }
                        } else {
                            if (!p8.currentElement().nodeName().equals("html")) {
                                p8.pop();
                                if ((p8.isFragmentParsing()) || (p8.currentElement().nodeName().equals("frameset"))) {
                                } else {
                                    p8.transition(org.jsoup.parser.TreeBuilderState$19.AfterFrameset);
                                }
                            } else {
                                p8.error(this);
                            }
                        }
                    } else {
                        org.jsoup.parser.Token$StartTag v1 = p7.asStartTag();
                        String v0 = v1.name();
                        if (!v0.equals("html")) {
                            if (!v0.equals("frameset")) {
                                if (!v0.equals("frame")) {
                                    if (!v0.equals("noframes")) {
                                        p8.error(this);
                                    } else {
                                        v2_0 = p8.process(v1, org.jsoup.parser.TreeBuilderState$19.InHead);
                                    }
                                } else {
                                    p8.insertEmpty(v1);
                                }
                            } else {
                                p8.insert(v1);
                            }
                        } else {
                            v2_0 = p8.process(v1, org.jsoup.parser.TreeBuilderState$19.InBody);
                        }
                    }
                } else {
                    p8.error(this);
                }
            } else {
                p8.insert(p7.asComment());
            }
        } else {
            p8.insert(p7.asCharacter());
        }
        return v2_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$1 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$1(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p8, org.jsoup.parser.TreeBuilder p9)
    {
        boolean v2_0 = 1;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p8)) {
            if (!p8.isComment()) {
                if (!p8.isDoctype()) {
                    p9.transition(org.jsoup.parser.TreeBuilderState$1.BeforeHtml);
                    v2_0 = p9.process(p8);
                } else {
                    org.jsoup.parser.Token$Doctype v0 = p8.asDoctype();
                    p9.getDocument().appendChild(new org.jsoup.nodes.DocumentType(v0.getName(), v0.getPublicIdentifier(), v0.getSystemIdentifier(), p9.getBaseUri()));
                    if (v0.isForceQuirks()) {
                        p9.getDocument().quirksMode(org.jsoup.nodes.Document$QuirksMode.quirks);
                    }
                    p9.transition(org.jsoup.parser.TreeBuilderState$1.BeforeHtml);
                }
            } else {
                p9.insert(p8.asComment());
            }
        }
        return v2_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$20 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$20(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p4, org.jsoup.parser.TreeBuilder p5)
    {
        boolean v0_0 = 0;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p4)) {
            if (!p4.isComment()) {
                if (!p4.isDoctype()) {
                    if ((!p4.isStartTag()) || (!p4.asStartTag().name().equals("html"))) {
                        if ((!p4.isEndTag()) || (!p4.asEndTag().name().equals("html"))) {
                            if ((!p4.isStartTag()) || (!p4.asStartTag().name().equals("noframes"))) {
                                if (p4.isEOF()) {
                                    v0_0 = 1;
                                } else {
                                    p5.error(this);
                                }
                            } else {
                                v0_0 = p5.process(p4, org.jsoup.parser.TreeBuilderState$20.InHead);
                            }
                        } else {
                            p5.transition(org.jsoup.parser.TreeBuilderState$20.AfterAfterFrameset);
                        }
                    } else {
                        v0_0 = p5.process(p4, org.jsoup.parser.TreeBuilderState$20.InBody);
                    }
                } else {
                    p5.error(this);
                }
            } else {
                p5.insert(p4.asComment());
            }
        } else {
            p5.insert(p4.asCharacter());
        }
        return v0_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$21 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$21(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        boolean v0_7;
        if (!p3.isComment()) {
            if ((!p3.isDoctype()) && ((!org.jsoup.parser.TreeBuilderState.access$100(p3)) && ((!p3.isStartTag()) || (!p3.asStartTag().name().equals("html"))))) {
                if (p3.isEOF()) {
                    v0_7 = 1;
                } else {
                    p4.error(this);
                    p4.transition(org.jsoup.parser.TreeBuilderState$21.InBody);
                    v0_7 = p4.process(p3);
                }
            } else {
                v0_7 = p4.process(p3, org.jsoup.parser.TreeBuilderState$21.InBody);
            }
        } else {
            p4.insert(p3.asComment());
        }
        return v0_7;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$22 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$22(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        boolean v0_11;
        if (!p3.isComment()) {
            if ((!p3.isDoctype()) && ((!org.jsoup.parser.TreeBuilderState.access$100(p3)) && ((!p3.isStartTag()) || (!p3.asStartTag().name().equals("html"))))) {
                if (p3.isEOF()) {
                    v0_11 = 1;
                } else {
                    if ((!p3.isStartTag()) || (!p3.asStartTag().name().equals("nofrmes"))) {
                        p4.error(this);
                        p4.transition(org.jsoup.parser.TreeBuilderState$22.InBody);
                        v0_11 = p4.process(p3);
                    } else {
                        v0_11 = p4.process(p3, org.jsoup.parser.TreeBuilderState$22.InHead);
                    }
                }
            } else {
                v0_11 = p4.process(p3, org.jsoup.parser.TreeBuilderState$22.InBody);
            }
        } else {
            p4.insert(p3.asComment());
        }
        return v0_11;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$23 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$23(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        return 1;
    }
}
package org.jsoup.parser;
synthetic class TreeBuilderState$24 {
    static final synthetic int[] $SwitchMap$org$jsoup$parser$Token$TokenType;

    static TreeBuilderState$24()
    {
        NoSuchFieldError v0_5 = new int[org.jsoup.parser.Token$TokenType.values().length];
        org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType = v0_5;
        try {
            org.jsoup.parser.Token$TokenType.Comment.ordinal()[int v1_11] = 1;
            try {
                org.jsoup.parser.Token$TokenType.Doctype.ordinal()[int v1_1] = 2;
                try {
                    org.jsoup.parser.Token$TokenType.StartTag.ordinal()[int v1_3] = 3;
                    try {
                        org.jsoup.parser.Token$TokenType.EndTag.ordinal()[int v1_5] = 4;
                        try {
                            org.jsoup.parser.Token$TokenType.Character.ordinal()[int v1_7] = 5;
                            try {
                                org.jsoup.parser.Token$TokenType.EOF.ordinal()[int v1_9] = 6;
                            } catch (NoSuchFieldError v0) {
                            }
                            return;
                        } catch (NoSuchFieldError v0) {
                        }
                    } catch (NoSuchFieldError v0) {
                    }
                } catch (NoSuchFieldError v0) {
                }
            } catch (NoSuchFieldError v0) {
            }
        } catch (NoSuchFieldError v0) {
        }
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$2 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$2(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        p3.insert("html");
        p3.transition(org.jsoup.parser.TreeBuilderState$2.BeforeHead);
        return p3.process(p2);
    }

    boolean process(org.jsoup.parser.Token p6, org.jsoup.parser.TreeBuilder p7)
    {
        boolean v0_0 = 0;
        if (!p6.isDoctype()) {
            if (!p6.isComment()) {
                if (!org.jsoup.parser.TreeBuilderState.access$100(p6)) {
                    if ((!p6.isStartTag()) || (!p6.asStartTag().name().equals("html"))) {
                        if (p6.isEndTag()) {
                            String v2_6 = p6.asEndTag().name();
                            String[] v3_2 = new String[4];
                            v3_2[0] = "head";
                            v3_2[1] = "body";
                            v3_2[2] = "html";
                            v3_2[3] = "br";
                            if (org.jsoup.helper.StringUtil.in(v2_6, v3_2)) {
                                v0_0 = this.anythingElse(p6, p7);
                                return v0_0;
                            }
                        }
                        if (!p6.isEndTag()) {
                            v0_0 = this.anythingElse(p6, p7);
                            return v0_0;
                        } else {
                            p7.error(this);
                            return v0_0;
                        }
                    } else {
                        p7.insert(p6.asStartTag());
                        p7.transition(org.jsoup.parser.TreeBuilderState$2.BeforeHead);
                    }
                } else {
                    v0_0 = 1;
                    return v0_0;
                }
            } else {
                p7.insert(p6.asComment());
            }
            v0_0 = 1;
        } else {
            p7.error(this);
        }
        return v0_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$3 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$3(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p7, org.jsoup.parser.TreeBuilder p8)
    {
        boolean v1_0 = 1;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p7)) {
            if (!p7.isComment()) {
                if (!p7.isDoctype()) {
                    if ((!p7.isStartTag()) || (!p7.asStartTag().name().equals("html"))) {
                        if ((!p7.isStartTag()) || (!p7.asStartTag().name().equals("head"))) {
                            if (p7.isEndTag()) {
                                String v3_11 = p7.asEndTag().name();
                                String[] v4_3 = new String[4];
                                v4_3[0] = "head";
                                v4_3[1] = "body";
                                v4_3[2] = "html";
                                v4_3[3] = "br";
                                if (org.jsoup.helper.StringUtil.in(v3_11, v4_3)) {
                                    p8.process(new org.jsoup.parser.Token$StartTag("head"));
                                    v1_0 = p8.process(p7);
                                    return v1_0;
                                }
                            }
                            if (!p7.isEndTag()) {
                                p8.process(new org.jsoup.parser.Token$StartTag("head"));
                                v1_0 = p8.process(p7);
                            } else {
                                p8.error(this);
                                v1_0 = 0;
                            }
                        } else {
                            p8.setHeadElement(p8.insert(p7.asStartTag()));
                            p8.transition(org.jsoup.parser.TreeBuilderState$3.InHead);
                        }
                    } else {
                        v1_0 = org.jsoup.parser.TreeBuilderState$3.InBody.process(p7, p8);
                    }
                } else {
                    p8.error(this);
                    v1_0 = 0;
                }
            } else {
                p8.insert(p7.asComment());
            }
        }
        return v1_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$4 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$4(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        p4.process(new org.jsoup.parser.Token$EndTag("head"));
        return p4.process(p3);
    }

    boolean process(org.jsoup.parser.Token p11, org.jsoup.parser.TreeBuilder p12)
    {
        boolean v4_1 = 1;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p11)) {
            switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p11.type.ordinal()]) {
                case 1:
                    p12.insert(p11.asComment());
                    break;
                case 2:
                    p12.error(this);
                    v4_1 = 0;
                    break;
                case 3:
                    org.jsoup.parser.Token$StartTag v3 = p11.asStartTag();
                    String v2_1 = v3.name();
                    if (!v2_1.equals("html")) {
                        org.jsoup.parser.TokeniserState v6_7 = new String[5];
                        v6_7[0] = "base";
                        v6_7[1] = "basefont";
                        v6_7[2] = "bgsound";
                        v6_7[3] = "command";
                        v6_7[4] = "link";
                        if (!org.jsoup.helper.StringUtil.in(v2_1, v6_7)) {
                            if (!v2_1.equals("meta")) {
                                if (!v2_1.equals("title")) {
                                    org.jsoup.parser.TokeniserState v6_15 = new String[2];
                                    v6_15[0] = "noframes";
                                    v6_15[1] = "style";
                                    if (!org.jsoup.helper.StringUtil.in(v2_1, v6_15)) {
                                        if (!v2_1.equals("noscript")) {
                                            if (!v2_1.equals("script")) {
                                                if (!v2_1.equals("head")) {
                                                    v4_1 = this.anythingElse(p11, p12);
                                                } else {
                                                    p12.error(this);
                                                    v4_1 = 0;
                                                }
                                            } else {
                                                p12.insert(v3);
                                                p12.tokeniser.transition(org.jsoup.parser.TokeniserState.ScriptData);
                                                p12.markInsertionMode();
                                                p12.transition(org.jsoup.parser.TreeBuilderState$4.Text);
                                            }
                                        } else {
                                            p12.insert(v3);
                                            p12.transition(org.jsoup.parser.TreeBuilderState$4.InHeadNoscript);
                                        }
                                    } else {
                                        org.jsoup.parser.TreeBuilderState.access$300(v3, p12);
                                    }
                                } else {
                                    org.jsoup.parser.TreeBuilderState.access$200(v3, p12);
                                }
                            } else {
                                p12.insertEmpty(v3);
                            }
                        } else {
                            org.jsoup.nodes.Element v0 = p12.insertEmpty(v3);
                            if ((v2_1.equals("base")) && (v0.hasAttr("href"))) {
                                p12.setBaseUri(v0);
                            }
                        }
                    } else {
                        v4_1 = org.jsoup.parser.TreeBuilderState$4.InBody.process(p11, p12);
                    }
                    break;
                case 4:
                    String v2_0 = p11.asEndTag().name();
                    if (!v2_0.equals("head")) {
                        org.jsoup.parser.TokeniserState v6_3 = new String[3];
                        v6_3[0] = "body";
                        v6_3[1] = "html";
                        v6_3[2] = "br";
                        if (!org.jsoup.helper.StringUtil.in(v2_0, v6_3)) {
                            p12.error(this);
                            v4_1 = 0;
                        } else {
                            v4_1 = this.anythingElse(p11, p12);
                        }
                    } else {
                        p12.pop();
                        p12.transition(org.jsoup.parser.TreeBuilderState$4.AfterHead);
                    }
                    break;
                default:
                    v4_1 = this.anythingElse(p11, p12);
            }
        } else {
            p12.insert(p11.asCharacter());
        }
        return v4_1;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$5 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$5(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        p4.error(this);
        p4.process(new org.jsoup.parser.Token$EndTag("noscript"));
        return p4.process(p3);
    }

    boolean process(org.jsoup.parser.Token p8, org.jsoup.parser.TreeBuilder p9)
    {
        boolean v0_1 = 0;
        if (!p8.isDoctype()) {
            if ((!p8.isStartTag()) || (!p8.asStartTag().name().equals("html"))) {
                if ((!p8.isEndTag()) || (!p8.asEndTag().name().equals("noscript"))) {
                    if ((!org.jsoup.parser.TreeBuilderState.access$100(p8)) && (!p8.isComment())) {
                        if (p8.isStartTag()) {
                            String v2_12 = p8.asStartTag().name();
                            String[] v3_3 = new String[6];
                            v3_3[0] = "basefont";
                            v3_3[1] = "bgsound";
                            v3_3[2] = "link";
                            v3_3[3] = "meta";
                            v3_3[4] = "noframes";
                            v3_3[5] = "style";
                            if (org.jsoup.helper.StringUtil.in(v2_12, v3_3)) {
                                v0_1 = p9.process(p8, org.jsoup.parser.TreeBuilderState$5.InHead);
                                return v0_1;
                            }
                        }
                        if ((!p8.isEndTag()) || (!p8.asEndTag().name().equals("br"))) {
                            if (!p8.isStartTag()) {
                                if (!p8.isEndTag()) {
                                    v0_1 = this.anythingElse(p8, p9);
                                    return v0_1;
                                }
                            } else {
                                String v2_21 = p8.asStartTag().name();
                                String[] v3_5 = new String[2];
                                v3_5[0] = "head";
                                v3_5[1] = "noscript";
                                if (!org.jsoup.helper.StringUtil.in(v2_21, v3_5)) {
                                }
                            }
                            p9.error(this);
                            return v0_1;
                        } else {
                            v0_1 = this.anythingElse(p8, p9);
                            return v0_1;
                        }
                    }
                } else {
                    p9.pop();
                    p9.transition(org.jsoup.parser.TreeBuilderState$5.InHead);
                    v0_1 = 1;
                }
            } else {
                v0_1 = p9.process(p8, org.jsoup.parser.TreeBuilderState$5.InBody);
            }
        } else {
            p9.error(this);
        }
        return v0_1;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$6 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$6(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token p3, org.jsoup.parser.TreeBuilder p4)
    {
        p4.process(new org.jsoup.parser.Token$StartTag("body"));
        p4.framesetOk(1);
        return p4.process(p3);
    }

    boolean process(org.jsoup.parser.Token p9, org.jsoup.parser.TreeBuilder p10)
    {
        org.jsoup.parser.TreeBuilderState v3_0 = 0;
        if (!org.jsoup.parser.TreeBuilderState.access$100(p9)) {
            if (!p9.isComment()) {
                if (!p9.isDoctype()) {
                    if (!p9.isStartTag()) {
                        if (!p9.isEndTag()) {
                            this.anythingElse(p9, p10);
                            v3_0 = 1;
                        } else {
                            boolean v5_4 = p9.asEndTag().name();
                            int v6_0 = new String[2];
                            v6_0[0] = "body";
                            v6_0[1] = "html";
                            if (!org.jsoup.helper.StringUtil.in(v5_4, v6_0)) {
                                p10.error(this);
                            } else {
                                this.anythingElse(p9, p10);
                            }
                        }
                    } else {
                        org.jsoup.parser.Token$StartTag v2 = p9.asStartTag();
                        String v1 = v2.name();
                        if (!v1.equals("html")) {
                            if (!v1.equals("body")) {
                                if (!v1.equals("frameset")) {
                                    boolean v5_14 = new String[9];
                                    v5_14[0] = "base";
                                    v5_14[1] = "basefont";
                                    v5_14[2] = "bgsound";
                                    v5_14[3] = "link";
                                    v5_14[4] = "meta";
                                    v5_14[5] = "noframes";
                                    v5_14[6] = "script";
                                    v5_14[7] = "style";
                                    v5_14[8] = "title";
                                    if (!org.jsoup.helper.StringUtil.in(v1, v5_14)) {
                                        if (!v1.equals("head")) {
                                            this.anythingElse(p9, p10);
                                        } else {
                                            p10.error(this);
                                        }
                                    } else {
                                        p10.error(this);
                                        org.jsoup.nodes.Element v0 = p10.getHeadElement();
                                        p10.push(v0);
                                        p10.process(p9, org.jsoup.parser.TreeBuilderState$6.InHead);
                                        p10.removeFromStack(v0);
                                    }
                                } else {
                                    p10.insert(v2);
                                    p10.transition(org.jsoup.parser.TreeBuilderState$6.InFrameset);
                                }
                            } else {
                                p10.insert(v2);
                                p10.framesetOk(0);
                                p10.transition(org.jsoup.parser.TreeBuilderState$6.InBody);
                            }
                        } else {
                            v3_0 = p10.process(p9, org.jsoup.parser.TreeBuilderState$6.InBody);
                        }
                    }
                } else {
                    p10.error(this);
                }
            } else {
                p10.insert(p9.asComment());
            }
        } else {
            p10.insert(p9.asCharacter());
        }
        return v3_0;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$7 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$7(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean anyOtherEndTag(org.jsoup.parser.Token p6, org.jsoup.parser.TreeBuilder p7)
    {
        String v1 = p6.asEndTag().name();
        java.util.Iterator v0 = p7.getStack().descendingIterator();
        while (v0.hasNext()) {
            org.jsoup.nodes.Element v2_1 = ((org.jsoup.nodes.Element) v0.next());
            if (!v2_1.nodeName().equals(v1)) {
                if (p7.isSpecial(v2_1)) {
                    p7.error(this);
                    int v4_4 = 0;
                }
            } else {
                p7.generateImpliedEndTags(v1);
                if (!v1.equals(p7.currentElement().nodeName())) {
                    p7.error(this);
                }
                p7.popStackToClose(v1);
                break;
            }
            return v4_4;
        }
        v4_4 = 1;
        return v4_4;
    }

    boolean process(org.jsoup.parser.Token p43, org.jsoup.parser.TreeBuilder p44)
    {
        int v38_49;
        switch (org.jsoup.parser.TreeBuilderState$24.$SwitchMap$org$jsoup$parser$Token$TokenType[p43.type.ordinal()]) {
            case 1:
                p44.insert(p43.asComment());
                v38_49 = 1;
                break;
            case 2:
                p44.error(this);
                v38_49 = 0;
                break;
            case 3:
                org.jsoup.parser.Token$StartTag v36 = p43.asStartTag();
                String v26_1 = v36.name();
                if (!v26_1.equals("html")) {
                    org.jsoup.parser.TreeBuilder v0_322 = new String[10];
                    int v38_332 = v0_322;
                    v38_332[0] = "base";
                    v38_332[1] = "basefont";
                    v38_332[2] = "bgsound";
                    v38_332[3] = "command";
                    v38_332[4] = "link";
                    v38_332[5] = "meta";
                    v38_332[6] = "noframes";
                    v38_332[7] = "script";
                    v38_332[8] = "style";
                    v38_332[9] = "title";
                    if (!org.jsoup.helper.StringUtil.in(v26_1, v38_332)) {
                        if (!v26_1.equals("body")) {
                            if (!v26_1.equals("frameset")) {
                                org.jsoup.parser.TreeBuilder v0_327 = new String[22];
                                int v38_339 = v0_327;
                                v38_339[0] = "address";
                                v38_339[1] = "article";
                                v38_339[2] = "aside";
                                v38_339[3] = "blockquote";
                                v38_339[4] = "center";
                                v38_339[5] = "details";
                                v38_339[6] = "dir";
                                v38_339[7] = "div";
                                v38_339[8] = "dl";
                                v38_339[9] = "fieldset";
                                v38_339[10] = "figcaption";
                                v38_339[11] = "figure";
                                v38_339[12] = "footer";
                                v38_339[13] = "header";
                                v38_339[14] = "hgroup";
                                v38_339[15] = "menu";
                                v38_339[16] = "nav";
                                v38_339[17] = "ol";
                                v38_339[18] = "p";
                                v38_339[19] = "section";
                                v38_339[20] = "summary";
                                v38_339[21] = "ul";
                                if (!org.jsoup.helper.StringUtil.in(v26_1, v38_339)) {
                                    org.jsoup.parser.TreeBuilder v0_330 = new String[6];
                                    int v38_342 = v0_330;
                                    v38_342[0] = "h1";
                                    v38_342[1] = "h2";
                                    v38_342[2] = "h3";
                                    v38_342[3] = "h4";
                                    v38_342[4] = "h5";
                                    v38_342[5] = "h6";
                                    if (!org.jsoup.helper.StringUtil.in(v26_1, v38_342)) {
                                        org.jsoup.parser.TreeBuilder v0_333 = new String[2];
                                        int v38_345 = v0_333;
                                        v38_345[0] = "pre";
                                        v38_345[1] = "listing";
                                        if (!org.jsoup.helper.StringUtil.in(v26_1, v38_345)) {
                                            if (!v26_1.equals("form")) {
                                                if (!v26_1.equals("li")) {
                                                    org.jsoup.parser.TreeBuilder v0_338 = new String[2];
                                                    int v38_352 = v0_338;
                                                    v38_352[0] = "dd";
                                                    v38_352[1] = "dt";
                                                    if (!org.jsoup.helper.StringUtil.in(v26_1, v38_352)) {
                                                        if (!v26_1.equals("plaintext")) {
                                                            if (!v26_1.equals("button")) {
                                                                if (!v26_1.equals("a")) {
                                                                    org.jsoup.parser.TreeBuilder v0_3 = new String[12];
                                                                    int v38_4 = v0_3;
                                                                    v38_4[0] = "b";
                                                                    v38_4[1] = "big";
                                                                    v38_4[2] = "code";
                                                                    v38_4[3] = "em";
                                                                    v38_4[4] = "font";
                                                                    v38_4[5] = "i";
                                                                    v38_4[6] = "s";
                                                                    v38_4[7] = "small";
                                                                    v38_4[8] = "strike";
                                                                    v38_4[9] = "strong";
                                                                    v38_4[10] = "tt";
                                                                    v38_4[11] = "u";
                                                                    if (!org.jsoup.helper.StringUtil.in(v26_1, v38_4)) {
                                                                        if (!v26_1.equals("nobr")) {
                                                                            org.jsoup.parser.TreeBuilder v0_7 = new String[3];
                                                                            int v38_9 = v0_7;
                                                                            v38_9[0] = "applet";
                                                                            v38_9[1] = "marquee";
                                                                            v38_9[2] = "object";
                                                                            if (!org.jsoup.helper.StringUtil.in(v26_1, v38_9)) {
                                                                                if (!v26_1.equals("table")) {
                                                                                    org.jsoup.parser.TreeBuilder v0_11 = new String[6];
                                                                                    int v38_14 = v0_11;
                                                                                    v38_14[0] = "area";
                                                                                    v38_14[1] = "br";
                                                                                    v38_14[2] = "embed";
                                                                                    v38_14[3] = "img";
                                                                                    v38_14[4] = "keygen";
                                                                                    v38_14[5] = "wbr";
                                                                                    if (!org.jsoup.helper.StringUtil.in(v26_1, v38_14)) {
                                                                                        if (!v26_1.equals("input")) {
                                                                                            org.jsoup.parser.TreeBuilder v0_15 = new String[3];
                                                                                            int v38_20 = v0_15;
                                                                                            v38_20[0] = "param";
                                                                                            v38_20[1] = "source";
                                                                                            v38_20[2] = "track";
                                                                                            if (!org.jsoup.helper.StringUtil.in(v26_1, v38_20)) {
                                                                                                if (!v26_1.equals("hr")) {
                                                                                                    if (!v26_1.equals("image")) {
                                                                                                        if (!v26_1.equals("isindex")) {
                                                                                                            if (!v26_1.equals("textarea")) {
                                                                                                                if (!v26_1.equals("xmp")) {
                                                                                                                    if (!v26_1.equals("iframe")) {
                                                                                                                        if (!v26_1.equals("noembed")) {
                                                                                                                            if (!v26_1.equals("select")) {
                                                                                                                                org.jsoup.parser.TreeBuilder v0_26 = new String[1];
                                                                                                                                int v39_31 = v0_26;
                                                                                                                                v39_31[0] = "option";
                                                                                                                                if (!org.jsoup.helper.StringUtil.in("optgroup", v39_31)) {
                                                                                                                                    org.jsoup.parser.TreeBuilder v0_28 = new String[1];
                                                                                                                                    int v39_33 = v0_28;
                                                                                                                                    v39_33[0] = "rt";
                                                                                                                                    if (!org.jsoup.helper.StringUtil.in("rp", v39_33)) {
                                                                                                                                        if (!v26_1.equals("math")) {
                                                                                                                                            if (!v26_1.equals("svg")) {
                                                                                                                                                org.jsoup.parser.TreeBuilder v0_32 = new String[11];
                                                                                                                                                int v38_47 = v0_32;
                                                                                                                                                v38_47[0] = "caption";
                                                                                                                                                v38_47[1] = "col";
                                                                                                                                                v38_47[2] = "colgroup";
                                                                                                                                                v38_47[3] = "frame";
                                                                                                                                                v38_47[4] = "head";
                                                                                                                                                v38_47[5] = "tbody";
                                                                                                                                                v38_47[6] = "td";
                                                                                                                                                v38_47[7] = "tfoot";
                                                                                                                                                v38_47[8] = "th";
                                                                                                                                                v38_47[9] = "thead";
                                                                                                                                                v38_47[10] = "tr";
                                                                                                                                                if (!org.jsoup.helper.StringUtil.in(v26_1, v38_47)) {
                                                                                                                                                    p44.reconstructFormattingElements();
                                                                                                                                                    p44.insert(v36);
                                                                                                                                                } else {
                                                                                                                                                    p44.error(this);
                                                                                                                                                    v38_49 = 0;
                                                                                                                                                }
                                                                                                                                            } else {
                                                                                                                                                p44.reconstructFormattingElements();
                                                                                                                                                p44.insert(v36);
                                                                                                                                                p44.tokeniser.acknowledgeSelfClosingFlag();
                                                                                                                                            }
                                                                                                                                        } else {
                                                                                                                                            p44.reconstructFormattingElements();
                                                                                                                                            p44.insert(v36);
                                                                                                                                            p44.tokeniser.acknowledgeSelfClosingFlag();
                                                                                                                                        }
                                                                                                                                    } else {
                                                                                                                                        if (!p44.inScope("ruby")) {
                                                                                                                                        } else {
                                                                                                                                            p44.generateImpliedEndTags();
                                                                                                                                            if (!p44.currentElement().nodeName().equals("ruby")) {
                                                                                                                                                p44.error(this);
                                                                                                                                                p44.popStackToBefore("ruby");
                                                                                                                                            }
                                                                                                                                            p44.insert(v36);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                } else {
                                                                                                                                    if (p44.currentElement().nodeName().equals("option")) {
                                                                                                                                        p44.process(new org.jsoup.parser.Token$EndTag("option"));
                                                                                                                                    }
                                                                                                                                    p44.reconstructFormattingElements();
                                                                                                                                    p44.insert(v36);
                                                                                                                                }
                                                                                                                            } else {
                                                                                                                                p44.reconstructFormattingElements();
                                                                                                                                p44.insert(v36);
                                                                                                                                p44.framesetOk(0);
                                                                                                                                org.jsoup.parser.TreeBuilderState v37 = p44.state();
                                                                                                                                if ((!v37.equals(org.jsoup.parser.TreeBuilderState$7.InTable)) && ((!v37.equals(org.jsoup.parser.TreeBuilderState$7.InCaption)) && ((!v37.equals(org.jsoup.parser.TreeBuilderState$7.InTableBody)) && ((!v37.equals(org.jsoup.parser.TreeBuilderState$7.InRow)) && (!v37.equals(org.jsoup.parser.TreeBuilderState$7.InCell)))))) {
                                                                                                                                    p44.transition(org.jsoup.parser.TreeBuilderState$7.InSelect);
                                                                                                                                } else {
                                                                                                                                    p44.transition(org.jsoup.parser.TreeBuilderState$7.InSelectInTable);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        } else {
                                                                                                                            org.jsoup.parser.TreeBuilderState.access$300(v36, p44);
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        p44.framesetOk(0);
                                                                                                                        org.jsoup.parser.TreeBuilderState.access$300(v36, p44);
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    if (p44.inButtonScope("p")) {
                                                                                                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                                                                                    }
                                                                                                                    p44.reconstructFormattingElements();
                                                                                                                    p44.framesetOk(0);
                                                                                                                    org.jsoup.parser.TreeBuilderState.access$300(v36, p44);
                                                                                                                }
                                                                                                            } else {
                                                                                                                p44.insert(v36);
                                                                                                                p44.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);
                                                                                                                p44.markInsertionMode();
                                                                                                                p44.framesetOk(0);
                                                                                                                p44.transition(org.jsoup.parser.TreeBuilderState$7.Text);
                                                                                                            }
                                                                                                        } else {
                                                                                                            p44.error(this);
                                                                                                            if (p44.getFormElement() == null) {
                                                                                                                p44.tokeniser.acknowledgeSelfClosingFlag();
                                                                                                                p44.process(new org.jsoup.parser.Token$StartTag("form"));
                                                                                                                if (v36.attributes.hasKey("action")) {
                                                                                                                    p44.getFormElement().attr("action", v36.attributes.get("action"));
                                                                                                                }
                                                                                                                String v29;
                                                                                                                p44.process(new org.jsoup.parser.Token$StartTag("hr"));
                                                                                                                p44.process(new org.jsoup.parser.Token$StartTag("label"));
                                                                                                                if (!v36.attributes.hasKey("prompt")) {
                                                                                                                    v29 = "This is a searchable index. Enter search keywords: ";
                                                                                                                } else {
                                                                                                                    v29 = v36.attributes.get("prompt");
                                                                                                                }
                                                                                                                int v38_106 = new org.jsoup.parser.Token$Character;
                                                                                                                v38_106(v29);
                                                                                                                p44.process(v38_106);
                                                                                                                org.jsoup.nodes.Attributes v22_1 = new org.jsoup.nodes.Attributes();
                                                                                                                java.util.Iterator v21_0 = v36.attributes.iterator();
                                                                                                                while (v21_0.hasNext()) {
                                                                                                                    org.jsoup.nodes.Attribute v6_1 = ((org.jsoup.nodes.Attribute) v21_0.next());
                                                                                                                    int v38_120 = v6_1.getKey();
                                                                                                                    org.jsoup.parser.TreeBuilder v0_96 = new String[3];
                                                                                                                    int v39_67 = v0_96;
                                                                                                                    v39_67[0] = "name";
                                                                                                                    v39_67[1] = "action";
                                                                                                                    v39_67[2] = "prompt";
                                                                                                                    if (!org.jsoup.helper.StringUtil.in(v38_120, v39_67)) {
                                                                                                                        v22_1.put(v6_1);
                                                                                                                    }
                                                                                                                }
                                                                                                                v22_1.put("name", "isindex");
                                                                                                                int v38_111 = new org.jsoup.parser.Token$StartTag;
                                                                                                                v38_111("input", v22_1);
                                                                                                                p44.process(v38_111);
                                                                                                                p44.process(new org.jsoup.parser.Token$EndTag("label"));
                                                                                                                p44.process(new org.jsoup.parser.Token$StartTag("hr"));
                                                                                                                p44.process(new org.jsoup.parser.Token$EndTag("form"));
                                                                                                            } else {
                                                                                                                v38_49 = 0;
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        v36.name("img");
                                                                                                        v38_49 = p44.process(v36);
                                                                                                    }
                                                                                                } else {
                                                                                                    if (p44.inButtonScope("p")) {
                                                                                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                                                                    }
                                                                                                    p44.insertEmpty(v36);
                                                                                                    p44.framesetOk(0);
                                                                                                }
                                                                                            } else {
                                                                                                p44.insertEmpty(v36);
                                                                                            }
                                                                                        } else {
                                                                                            p44.reconstructFormattingElements();
                                                                                            if (p44.insertEmpty(v36).attr("type").equalsIgnoreCase("hidden")) {
                                                                                            } else {
                                                                                                p44.framesetOk(0);
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        p44.reconstructFormattingElements();
                                                                                        p44.insertEmpty(v36);
                                                                                        p44.framesetOk(0);
                                                                                    }
                                                                                } else {
                                                                                    if ((p44.getDocument().quirksMode() != org.jsoup.nodes.Document$QuirksMode.quirks) && (p44.inButtonScope("p"))) {
                                                                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                                                    }
                                                                                    p44.insert(v36);
                                                                                    p44.framesetOk(0);
                                                                                    p44.transition(org.jsoup.parser.TreeBuilderState$7.InTable);
                                                                                }
                                                                            } else {
                                                                                p44.reconstructFormattingElements();
                                                                                p44.insert(v36);
                                                                                p44.insertMarkerToFormattingElements();
                                                                                p44.framesetOk(0);
                                                                            }
                                                                        } else {
                                                                            p44.reconstructFormattingElements();
                                                                            if (p44.inScope("nobr")) {
                                                                                p44.error(this);
                                                                                p44.process(new org.jsoup.parser.Token$EndTag("nobr"));
                                                                                p44.reconstructFormattingElements();
                                                                            }
                                                                            p44.pushActiveFormattingElements(p44.insert(v36));
                                                                        }
                                                                    } else {
                                                                        p44.reconstructFormattingElements();
                                                                        p44.pushActiveFormattingElements(p44.insert(v36));
                                                                    }
                                                                } else {
                                                                    if (p44.getActiveFormattingElement("a") != null) {
                                                                        p44.error(this);
                                                                        p44.process(new org.jsoup.parser.Token$EndTag("a"));
                                                                        org.jsoup.nodes.Element v30 = p44.getFromStack("a");
                                                                        if (v30 != null) {
                                                                            p44.removeFromActiveFormattingElements(v30);
                                                                            p44.removeFromStack(v30);
                                                                        }
                                                                    }
                                                                    p44.reconstructFormattingElements();
                                                                    p44.pushActiveFormattingElements(p44.insert(v36));
                                                                }
                                                            } else {
                                                                if (!p44.inButtonScope("button")) {
                                                                    p44.reconstructFormattingElements();
                                                                    p44.insert(v36);
                                                                    p44.framesetOk(0);
                                                                } else {
                                                                    p44.error(this);
                                                                    p44.process(new org.jsoup.parser.Token$EndTag("button"));
                                                                    p44.process(v36);
                                                                }
                                                            }
                                                        } else {
                                                            if (p44.inButtonScope("p")) {
                                                                p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                            }
                                                            p44.insert(v36);
                                                            p44.tokeniser.transition(org.jsoup.parser.TokeniserState.PLAINTEXT);
                                                        }
                                                    } else {
                                                        p44.framesetOk(0);
                                                        org.jsoup.helper.DescendableLinkedList v35_0 = p44.getStack();
                                                        int v20_0 = (v35_0.size() - 1);
                                                        while (v20_0 > 0) {
                                                            org.jsoup.nodes.Element v14_4 = ((org.jsoup.nodes.Element) v35_0.get(v20_0));
                                                            int v38_166 = v14_4.nodeName();
                                                            org.jsoup.parser.TreeBuilder v0_150 = new String[2];
                                                            int v39_83 = v0_150;
                                                            v39_83[0] = "dd";
                                                            v39_83[1] = "dt";
                                                            if (!org.jsoup.helper.StringUtil.in(v38_166, v39_83)) {
                                                                if (p44.isSpecial(v14_4)) {
                                                                    int v38_169 = v14_4.nodeName();
                                                                    org.jsoup.parser.TreeBuilder v0_153 = new String[3];
                                                                    int v39_86 = v0_153;
                                                                    v39_86[0] = "address";
                                                                    v39_86[1] = "div";
                                                                    v39_86[2] = "p";
                                                                    if (!org.jsoup.helper.StringUtil.in(v38_169, v39_86)) {
                                                                        break;
                                                                    }
                                                                }
                                                                v20_0--;
                                                            } else {
                                                                p44.process(new org.jsoup.parser.Token$EndTag(v14_4.nodeName()));
                                                                break;
                                                            }
                                                        }
                                                        if (p44.inButtonScope("p")) {
                                                            p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                        }
                                                        p44.insert(v36);
                                                    }
                                                } else {
                                                    p44.framesetOk(0);
                                                    org.jsoup.helper.DescendableLinkedList v35_1 = p44.getStack();
                                                    int v20_1 = (v35_1.size() - 1);
                                                    while (v20_1 > 0) {
                                                        org.jsoup.nodes.Element v14_6 = ((org.jsoup.nodes.Element) v35_1.get(v20_1));
                                                        if (!v14_6.nodeName().equals("li")) {
                                                            if (p44.isSpecial(v14_6)) {
                                                                int v38_183 = v14_6.nodeName();
                                                                org.jsoup.parser.TreeBuilder v0_162 = new String[3];
                                                                int v39_93 = v0_162;
                                                                v39_93[0] = "address";
                                                                v39_93[1] = "div";
                                                                v39_93[2] = "p";
                                                                if (!org.jsoup.helper.StringUtil.in(v38_183, v39_93)) {
                                                                    break;
                                                                }
                                                            }
                                                            v20_1--;
                                                        } else {
                                                            p44.process(new org.jsoup.parser.Token$EndTag("li"));
                                                            break;
                                                        }
                                                    }
                                                    if (p44.inButtonScope("p")) {
                                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                    }
                                                    p44.insert(v36);
                                                }
                                            } else {
                                                if (p44.getFormElement() == null) {
                                                    if (p44.inButtonScope("p")) {
                                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                                    }
                                                    p44.setFormElement(p44.insert(v36));
                                                } else {
                                                    p44.error(this);
                                                    v38_49 = 0;
                                                }
                                            }
                                        } else {
                                            if (p44.inButtonScope("p")) {
                                                p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                            }
                                            p44.insert(v36);
                                            p44.framesetOk(0);
                                        }
                                    } else {
                                        if (p44.inButtonScope("p")) {
                                            p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                        }
                                        int v38_208 = p44.currentElement().nodeName();
                                        org.jsoup.parser.TreeBuilder v0_181 = new String[6];
                                        int v39_100 = v0_181;
                                        v39_100[0] = "h1";
                                        v39_100[1] = "h2";
                                        v39_100[2] = "h3";
                                        v39_100[3] = "h4";
                                        v39_100[4] = "h5";
                                        v39_100[5] = "h6";
                                        if (org.jsoup.helper.StringUtil.in(v38_208, v39_100)) {
                                            p44.error(this);
                                            p44.pop();
                                        }
                                        p44.insert(v36);
                                    }
                                } else {
                                    if (p44.inButtonScope("p")) {
                                        p44.process(new org.jsoup.parser.Token$EndTag("p"));
                                    }
                                    p44.insert(v36);
                                }
                            } else {
                                p44.error(this);
                                org.jsoup.helper.DescendableLinkedList v35_2 = p44.getStack();
                                if ((v35_2.size() != 1) && ((v35_2.size() <= 2) || (((org.jsoup.nodes.Element) v35_2.get(1)).nodeName().equals("body")))) {
                                    if (p44.framesetOk()) {
                                        org.jsoup.nodes.Element v32_1 = ((org.jsoup.nodes.Element) v35_2.get(1));
                                        if (v32_1.parent() != null) {
                                            v32_1.remove();
                                        }
                                        while (v35_2.size() > 1) {
                                            v35_2.removeLast();
                                        }
                                        p44.insert(v36);
                                        p44.transition(org.jsoup.parser.TreeBuilderState$7.InFrameset);
                                    } else {
                                        v38_49 = 0;
                                    }
                                } else {
                                    v38_49 = 0;
                                }
                            }
                        } else {
                            p44.error(this);
                            org.jsoup.helper.DescendableLinkedList v35_3 = p44.getStack();
                            if ((v35_3.size() != 1) && ((v35_3.size() <= 2) || (((org.jsoup.nodes.Element) v35_3.get(1)).nodeName().equals("body")))) {
                                p44.framesetOk(0);
                                org.jsoup.nodes.Element v8_1 = ((org.jsoup.nodes.Element) v35_3.get(1));
                                java.util.Iterator v21_1 = v36.getAttributes().iterator();
                                while (v21_1.hasNext()) {
                                    org.jsoup.nodes.Attribute v7_1 = ((org.jsoup.nodes.Attribute) v21_1.next());
                                    if (!v8_1.hasAttr(v7_1.getKey())) {
                                        v8_1.attributes().put(v7_1);
                                    }
                                }
                            } else {
                                v38_49 = 0;
                            }
                        }
                    } else {
                        v38_49 = p44.process(p43, org.jsoup.parser.TreeBuilderState$7.InHead);
                    }
                } else {
                    p44.error(this);
                    org.jsoup.nodes.Element v19_1 = ((org.jsoup.nodes.Element) p44.getStack().getFirst());
                    java.util.Iterator v21_2 = v36.getAttributes().iterator();
                    while (v21_2.hasNext()) {
                        org.jsoup.nodes.Attribute v7_3 = ((org.jsoup.nodes.Attribute) v21_2.next());
                        if (!v19_1.hasAttr(v7_3.getKey())) {
                            v19_1.attributes().put(v7_3);
                        }
                    }
                }
                break;
            case 4:
                org.jsoup.parser.Token$EndTag v15 = p43.asEndTag();
                String v26_0 = v15.name();
                if (!v26_0.equals("body")) {
                    if (!v26_0.equals("html")) {
                        org.jsoup.parser.TreeBuilder v0_269 = new String[24];
                        int v38_292 = v0_269;
                        v38_292[0] = "address";
                        v38_292[1] = "article";
                        v38_292[2] = "aside";
                        v38_292[3] = "blockquote";
                        v38_292[4] = "button";
                        v38_292[5] = "center";
                        v38_292[6] = "details";
                        v38_292[7] = "dir";
                        v38_292[8] = "div";
                        v38_292[9] = "dl";
                        v38_292[10] = "fieldset";
                        v38_292[11] = "figcaption";
                        v38_292[12] = "figure";
                        v38_292[13] = "footer";
                        v38_292[14] = "header";
                        v38_292[15] = "hgroup";
                        v38_292[16] = "listing";
                        v38_292[17] = "menu";
                        v38_292[18] = "nav";
                        v38_292[19] = "ol";
                        v38_292[20] = "pre";
                        v38_292[21] = "section";
                        v38_292[22] = "summary";
                        v38_292[23] = "ul";
                        if (!org.jsoup.helper.StringUtil.in(v26_0, v38_292)) {
                            if (!v26_0.equals("form")) {
                                if (!v26_0.equals("p")) {
                                    if (!v26_0.equals("li")) {
                                        org.jsoup.parser.TreeBuilder v0_92 = new String[2];
                                        int v38_119 = v0_92;
                                        v38_119[0] = "dd";
                                        v38_119[1] = "dt";
                                        if (!org.jsoup.helper.StringUtil.in(v26_0, v38_119)) {
                                            org.jsoup.parser.TreeBuilder v0_124 = new String[6];
                                            int v38_149 = v0_124;
                                            v38_149[0] = "h1";
                                            v38_149[1] = "h2";
                                            v38_149[2] = "h3";
                                            v38_149[3] = "h4";
                                            v38_149[4] = "h5";
                                            v38_149[5] = "h6";
                                            if (!org.jsoup.helper.StringUtil.in(v26_0, v38_149)) {
                                                if (!v26_0.equals("sarcasm")) {
                                                    org.jsoup.parser.TreeBuilder v0_186 = new String[14];
                                                    int v38_216 = v0_186;
                                                    v38_216[0] = "a";
                                                    v38_216[1] = "b";
                                                    v38_216[2] = "big";
                                                    v38_216[3] = "code";
                                                    v38_216[4] = "em";
                                                    v38_216[5] = "font";
                                                    v38_216[6] = "i";
                                                    v38_216[7] = "nobr";
                                                    v38_216[8] = "s";
                                                    v38_216[9] = "small";
                                                    v38_216[10] = "strike";
                                                    v38_216[11] = "strong";
                                                    v38_216[12] = "tt";
                                                    v38_216[13] = "u";
                                                    if (!org.jsoup.helper.StringUtil.in(v26_0, v38_216)) {
                                                        org.jsoup.parser.TreeBuilder v0_216 = new String[3];
                                                        int v38_254 = v0_216;
                                                        v38_254[0] = "applet";
                                                        v38_254[1] = "marquee";
                                                        v38_254[2] = "object";
                                                        if (!org.jsoup.helper.StringUtil.in(v26_0, v38_254)) {
                                                            if (!v26_0.equals("br")) {
                                                                v38_49 = this.anyOtherEndTag(p43, p44);
                                                            } else {
                                                                p44.error(this);
                                                                p44.process(new org.jsoup.parser.Token$StartTag("br"));
                                                                v38_49 = 0;
                                                            }
                                                        } else {
                                                            if (p44.inScope("name")) {
                                                            } else {
                                                                if (p44.inScope(v26_0)) {
                                                                    p44.generateImpliedEndTags();
                                                                    if (!p44.currentElement().nodeName().equals(v26_0)) {
                                                                        p44.error(this);
                                                                    }
                                                                    p44.popStackToClose(v26_0);
                                                                    p44.clearFormattingElementsToLastMarker();
                                                                } else {
                                                                    p44.error(this);
                                                                    v38_49 = 0;
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        int v20_2 = 0;
                                                        while (v20_2 < 8) {
                                                            org.jsoup.nodes.Element v17 = p44.getActiveFormattingElement(v26_0);
                                                            if (v17 != null) {
                                                                if (p44.onStack(v17)) {
                                                                    if (p44.inScope(v17.nodeName())) {
                                                                        if (p44.currentElement() != v17) {
                                                                            p44.error(this);
                                                                        }
                                                                        org.jsoup.nodes.Element v18 = 0;
                                                                        org.jsoup.nodes.Element v12_0 = 0;
                                                                        int v33 = 0;
                                                                        org.jsoup.helper.DescendableLinkedList v35_4 = p44.getStack();
                                                                        int v34 = 0;
                                                                        while (v34 < v35_4.size()) {
                                                                            org.jsoup.nodes.Element v14_8 = ((org.jsoup.nodes.Element) v35_4.get(v34));
                                                                            if (v14_8 != v17) {
                                                                                if ((v33 != 0) && (p44.isSpecial(v14_8))) {
                                                                                    v18 = v14_8;
                                                                                    break;
                                                                                }
                                                                            } else {
                                                                                v12_0 = ((org.jsoup.nodes.Element) v35_4.get((v34 - 1)));
                                                                                v33 = 1;
                                                                            }
                                                                            v34++;
                                                                        }
                                                                        if (v18 != null) {
                                                                            org.jsoup.nodes.Element v27 = v18;
                                                                            org.jsoup.nodes.Element v24 = v18;
                                                                            int v23 = 0;
                                                                            while (v23 < 3) {
                                                                                if (p44.onStack(v27)) {
                                                                                    v27 = p44.aboveOnStack(v27);
                                                                                }
                                                                                if (p44.isInActiveFormattingElements(v27)) {
                                                                                    if (v27 == v17) {
                                                                                        break;
                                                                                    }
                                                                                    org.jsoup.nodes.Element v31 = new org.jsoup.nodes.Element;
                                                                                    v31(org.jsoup.parser.Tag.valueOf(v27.nodeName()), p44.getBaseUri());
                                                                                    p44.replaceActiveFormattingElement(v27, v31);
                                                                                    p44.replaceOnStack(v27, v31);
                                                                                    v27 = v31;
                                                                                    // Both branches of the condition point to the same code.
                                                                                    // if (v24 != v18) {
                                                                                        if (v24.parent() != null) {
                                                                                            v24.remove();
                                                                                        }
                                                                                        v27.appendChild(v24);
                                                                                        v24 = v27;
                                                                                    // }
                                                                                } else {
                                                                                    p44.removeFromStack(v27);
                                                                                }
                                                                                v23++;
                                                                            }
                                                                            int v38_281 = v12_0.nodeName();
                                                                            org.jsoup.parser.TreeBuilder v0_251 = new String[5];
                                                                            int v39_130 = v0_251;
                                                                            v39_130[0] = "table";
                                                                            v39_130[1] = "tbody";
                                                                            v39_130[2] = "tfoot";
                                                                            v39_130[3] = "thead";
                                                                            v39_130[4] = "tr";
                                                                            if (!org.jsoup.helper.StringUtil.in(v38_281, v39_130)) {
                                                                                if (v24.parent() != null) {
                                                                                    v24.remove();
                                                                                }
                                                                                v12_0.appendChild(v24);
                                                                            } else {
                                                                                if (v24.parent() != null) {
                                                                                    v24.remove();
                                                                                }
                                                                                p44.insertInFosterParent(v24);
                                                                            }
                                                                            org.jsoup.nodes.Element v4_1 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(v26_0), p44.getBaseUri());
                                                                            org.jsoup.parser.TreeBuilder v0_257 = new org.jsoup.nodes.Node[v18.childNodes().size()];
                                                                            org.jsoup.nodes.Node[] v5 = ((org.jsoup.nodes.Node[]) v18.childNodes().toArray(v0_257));
                                                                            int v25 = v5.length;
                                                                            java.util.Iterator v21_3 = 0;
                                                                            while (v21_3 < v25) {
                                                                                v4_1.appendChild(v5[v21_3]);
                                                                                v21_3++;
                                                                            }
                                                                            v18.appendChild(v4_1);
                                                                            p44.removeFromActiveFormattingElements(v17);
                                                                            p44.removeFromStack(v17);
                                                                            p44.insertOnStackAfter(v18, v4_1);
                                                                            v20_2++;
                                                                        } else {
                                                                            p44.popStackToClose(v17.nodeName());
                                                                            p44.removeFromActiveFormattingElements(v17);
                                                                            v38_49 = 1;
                                                                        }
                                                                    } else {
                                                                        p44.error(this);
                                                                        v38_49 = 0;
                                                                    }
                                                                } else {
                                                                    p44.error(this);
                                                                    p44.removeFromActiveFormattingElements(v17);
                                                                    v38_49 = 1;
                                                                }
                                                            } else {
                                                                v38_49 = this.anyOtherEndTag(p43, p44);
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    v38_49 = this.anyOtherEndTag(p43, p44);
                                                }
                                            } else {
                                                org.jsoup.parser.TreeBuilder v0_274 = new String[6];
                                                int v38_294 = v0_274;
                                                v38_294[0] = "h1";
                                                v38_294[1] = "h2";
                                                v38_294[2] = "h3";
                                                v38_294[3] = "h4";
                                                v38_294[4] = "h5";
                                                v38_294[5] = "h6";
                                                if (p44.inScope(v38_294)) {
                                                    p44.generateImpliedEndTags(v26_0);
                                                    if (!p44.currentElement().nodeName().equals(v26_0)) {
                                                        p44.error(this);
                                                    }
                                                    org.jsoup.parser.TreeBuilder v0_280 = new String[6];
                                                    int v38_300 = v0_280;
                                                    v38_300[0] = "h1";
                                                    v38_300[1] = "h2";
                                                    v38_300[2] = "h3";
                                                    v38_300[3] = "h4";
                                                    v38_300[4] = "h5";
                                                    v38_300[5] = "h6";
                                                    p44.popStackToClose(v38_300);
                                                } else {
                                                    p44.error(this);
                                                    v38_49 = 0;
                                                }
                                            }
                                        } else {
                                            if (p44.inScope(v26_0)) {
                                                p44.generateImpliedEndTags(v26_0);
                                                if (!p44.currentElement().nodeName().equals(v26_0)) {
                                                    p44.error(this);
                                                }
                                                p44.popStackToClose(v26_0);
                                            } else {
                                                p44.error(this);
                                                v38_49 = 0;
                                            }
                                        }
                                    } else {
                                        if (p44.inListItemScope(v26_0)) {
                                            p44.generateImpliedEndTags(v26_0);
                                            if (!p44.currentElement().nodeName().equals(v26_0)) {
                                                p44.error(this);
                                            }
                                            p44.popStackToClose(v26_0);
                                        } else {
                                            p44.error(this);
                                            v38_49 = 0;
                                        }
                                    }
                                } else {
                                    if (p44.inButtonScope(v26_0)) {
                                        p44.generateImpliedEndTags(v26_0);
                                        if (!p44.currentElement().nodeName().equals(v26_0)) {
                                            p44.error(this);
                                        }
                                        p44.popStackToClose(v26_0);
                                    } else {
                                        p44.error(this);
                                        int v38_314 = new org.jsoup.parser.Token$StartTag;
                                        v38_314(v26_0);
                                        p44.process(v38_314);
                                        v38_49 = p44.process(v15);
                                    }
                                }
                            } else {
                                org.jsoup.nodes.Element v13 = p44.getFormElement();
                                p44.setFormElement(0);
                                if ((v13 != null) && (p44.inScope(v26_0))) {
                                    p44.generateImpliedEndTags();
                                    if (!p44.currentElement().nodeName().equals(v26_0)) {
                                        p44.error(this);
                                    }
                                    p44.removeFromStack(v13);
                                } else {
                                    p44.error(this);
                                    v38_49 = 0;
                                }
                            }
                        } else {
                            if (p44.inScope(v26_0)) {
                                p44.generateImpliedEndTags();
                                if (!p44.currentElement().nodeName().equals(v26_0)) {
                                    p44.error(this);
                                }
                                p44.popStackToClose(v26_0);
                            } else {
                                p44.error(this);
                                v38_49 = 0;
                            }
                        }
                    } else {
                        if (!p44.process(new org.jsoup.parser.Token$EndTag("body"))) {
                        } else {
                            v38_49 = p44.process(v15);
                        }
                    }
                } else {
                    if (p44.inScope("body")) {
                        p44.transition(org.jsoup.parser.TreeBuilderState$7.AfterBody);
                    } else {
                        p44.error(this);
                        v38_49 = 0;
                    }
                }
                break;
            case 5:
                org.jsoup.parser.Token$Character v9 = p43.asCharacter();
                if (!v9.getData().equals(org.jsoup.parser.TreeBuilderState.access$400())) {
                    if (!org.jsoup.parser.TreeBuilderState.access$100(v9)) {
                        p44.reconstructFormattingElements();
                        p44.insert(v9);
                        p44.framesetOk(0);
                    } else {
                        p44.reconstructFormattingElements();
                        p44.insert(v9);
                    }
                } else {
                    p44.error(this);
                    v38_49 = 0;
                }
                break;
            default:
        }
        return v38_49;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$8 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$8(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean process(org.jsoup.parser.Token p2, org.jsoup.parser.TreeBuilder p3)
    {
        org.jsoup.parser.TreeBuilderState v0_3;
        if (!p2.isCharacter()) {
            if (!p2.isEOF()) {
                if (!p2.isEndTag()) {
                    v0_3 = 1;
                } else {
                    p3.pop();
                    p3.transition(p3.originalState());
                }
            } else {
                p3.error(this);
                p3.pop();
                p3.transition(p3.originalState());
                v0_3 = p3.process(p2);
            }
        } else {
            p3.insert(p2.asCharacter());
        }
        return v0_3;
    }
}
package org.jsoup.parser;
final enum class TreeBuilderState$9 extends org.jsoup.parser.TreeBuilderState {

    TreeBuilderState$9(String p2, int p3)
    {
        super(p2, p3, 0);
        return;
    }

    boolean anythingElse(org.jsoup.parser.Token p8, org.jsoup.parser.TreeBuilder p9)
    {
        boolean v0;
        p9.error(this);
        org.jsoup.parser.TreeBuilderState v1_4 = p9.currentElement().nodeName();
        String[] v2_1 = new String[5];
        v2_1[0] = "table";
        v2_1[1] = "tbody";
        v2_1[2] = "tfoot";
        v2_1[3] = "thead";
        v2_1[4] = "tr";
        if (!org.jsoup.helper.StringUtil.in(v1_4, v2_1)) {
            v0 = p9.process(p8, org.jsoup.parser.TreeBuilderState$9.InBody);
        } else {
            p9.setFosterInserts(1);
            v0 = p9.process(p8, org.jsoup.parser.TreeBuilderState$9.InBody);
            p9.setFosterInserts(0);
        }
        return v0;
    }

    boolean process(org.jsoup.parser.Token p12, org.jsoup.parser.TreeBuilder p13)
    {
        boolean v5_0 = 0;
        if (!p12.isCharacter()) {
            if (!p12.isComment()) {
                if (!p12.isDoctype()) {
                    if (!p12.isStartTag()) {
                        if (!p12.isEndTag()) {
                            if (p12.isEOF()) {
                                if (p13.currentElement().nodeName().equals("html")) {
                                    p13.error(this);
                                }
                                v5_0 = 1;
                                return v5_0;
                            }
                        } else {
                            String v2_0 = p12.asEndTag().name();
                            if (!v2_0.equals("table")) {
                                String[] v7_14 = new String[11];
                                v7_14[0] = "body";
                                v7_14[1] = "caption";
                                v7_14[2] = "col";
                                v7_14[3] = "colgroup";
                                v7_14[4] = "html";
                                v7_14[5] = "tbody";
                                v7_14[6] = "td";
                                v7_14[7] = "tfoot";
                                v7_14[8] = "th";
                                v7_14[9] = "thead";
                                v7_14[10] = "tr";
                                if (!org.jsoup.helper.StringUtil.in(v2_0, v7_14)) {
                                    v5_0 = this.anythingElse(p12, p13);
                                    return v5_0;
                                } else {
                                    p13.error(this);
                                    return v5_0;
                                }
                            } else {
                                if (p13.inTableScope(v2_0)) {
                                    p13.popStackToClose("table");
                                    p13.resetInsertionMode();
                                } else {
                                    p13.error(this);
                                    return v5_0;
                                }
                            }
                        }
                    } else {
                        org.jsoup.parser.Token$StartTag v4 = p12.asStartTag();
                        String v2_1 = v4.name();
                        if (!v2_1.equals("caption")) {
                            if (!v2_1.equals("colgroup")) {
                                if (!v2_1.equals("col")) {
                                    String[] v7_0 = new String[3];
                                    v7_0[0] = "tbody";
                                    v7_0[1] = "tfoot";
                                    v7_0[2] = "thead";
                                    if (!org.jsoup.helper.StringUtil.in(v2_1, v7_0)) {
                                        String[] v7_3 = new String[3];
                                        v7_3[0] = "td";
                                        v7_3[1] = "th";
                                        v7_3[2] = "tr";
                                        if (!org.jsoup.helper.StringUtil.in(v2_1, v7_3)) {
                                            if (!v2_1.equals("table")) {
                                                String[] v7_7 = new String[2];
                                                v7_7[0] = "style";
                                                v7_7[1] = "script";
                                                if (!org.jsoup.helper.StringUtil.in(v2_1, v7_7)) {
                                                    if (!v2_1.equals("input")) {
                                                        if (!v2_1.equals("form")) {
                                                            v5_0 = this.anythingElse(p12, p13);
                                                            return v5_0;
                                                        } else {
                                                            p13.error(this);
                                                            if (p13.getFormElement() != null) {
                                                                return v5_0;
                                                            } else {
                                                                p13.setFormElement(p13.insertEmpty(v4));
                                                            }
                                                        }
                                                    } else {
                                                        if (v4.attributes.get("type").equalsIgnoreCase("hidden")) {
                                                            p13.insertEmpty(v4);
                                                        } else {
                                                            v5_0 = this.anythingElse(p12, p13);
                                                            return v5_0;
                                                        }
                                                    }
                                                } else {
                                                    v5_0 = p13.process(p12, org.jsoup.parser.TreeBuilderState$9.InHead);
                                                    return v5_0;
                                                }
                                            } else {
                                                p13.error(this);
                                                if (p13.process(new org.jsoup.parser.Token$EndTag("table"))) {
                                                    v5_0 = p13.process(p12);
                                                    return v5_0;
                                                }
                                            }
                                        } else {
                                            p13.process(new org.jsoup.parser.Token$StartTag("tbody"));
                                            v5_0 = p13.process(p12);
                                            return v5_0;
                                        }
                                    } else {
                                        p13.clearStackToTableContext();
                                        p13.insert(v4);
                                        p13.transition(org.jsoup.parser.TreeBuilderState$9.InTableBody);
                                    }
                                } else {
                                    p13.process(new org.jsoup.parser.Token$StartTag("colgroup"));
                                    v5_0 = p13.process(p12);
                                    return v5_0;
                                }
                            } else {
                                p13.clearStackToTableContext();
                                p13.insert(v4);
                                p13.transition(org.jsoup.parser.TreeBuilderState$9.InColumnGroup);
                            }
                        } else {
                            p13.clearStackToTableContext();
                            p13.insertMarkerToFormattingElements();
                            p13.insert(v4);
                            p13.transition(org.jsoup.parser.TreeBuilderState$9.InCaption);
                        }
                    }
                } else {
                    p13.error(this);
                    return v5_0;
                }
            } else {
                p13.insert(p12.asComment());
            }
            v5_0 = this.anythingElse(p12, p13);
        } else {
            p13.newPendingTableCharacters();
            p13.markInsertionMode();
            p13.transition(org.jsoup.parser.TreeBuilderState$9.InTableText);
            v5_0 = p13.process(p12);
        }
        return v5_0;
    }
}
package org.jsoup.safety;
 class Cleaner$ElementMeta {
    org.jsoup.nodes.Element el;
    int numAttribsDiscarded;

    Cleaner$ElementMeta(org.jsoup.nodes.Element p1, int p2)
    {
        this.el = p1;
        this.numAttribsDiscarded = p2;
        return;
    }
}
package org.jsoup.safety;
public class Cleaner {
    private org.jsoup.safety.Whitelist whitelist;

    public Cleaner(org.jsoup.safety.Whitelist p1)
    {
        org.jsoup.helper.Validate.notNull(p1);
        this.whitelist = p1;
        return;
    }

    private int copySafeNodes(org.jsoup.nodes.Element p12, org.jsoup.nodes.Element p13)
    {
        int v4_0 = 0;
        java.util.Iterator v2 = p12.childNodes().iterator();
        while (v2.hasNext()) {
            org.jsoup.nodes.Node v5_1 = ((org.jsoup.nodes.Node) v2.next());
            if (!(v5_1 instanceof org.jsoup.nodes.Element)) {
                if ((v5_1 instanceof org.jsoup.nodes.TextNode)) {
                    p13.appendChild(new org.jsoup.nodes.TextNode(((org.jsoup.nodes.TextNode) v5_1).getWholeText(), v5_1.baseUri()));
                }
            } else {
                org.jsoup.nodes.Element v7_1 = ((org.jsoup.nodes.Element) v5_1);
                if (!this.whitelist.isSafeTag(v7_1.tagName())) {
                    v4_0 = ((v4_0 + 1) + this.copySafeNodes(v7_1, p13));
                } else {
                    org.jsoup.safety.Cleaner$ElementMeta v3 = this.createSafeElement(v7_1);
                    org.jsoup.nodes.Element v0 = v3.el;
                    p13.appendChild(v0);
                    v4_0 = ((v4_0 + v3.numAttribsDiscarded) + this.copySafeNodes(v7_1, v0));
                }
            }
        }
        return v4_0;
    }

    private org.jsoup.safety.Cleaner$ElementMeta createSafeElement(org.jsoup.nodes.Element p11)
    {
        String v7 = p11.tagName();
        org.jsoup.nodes.Attributes v1_1 = new org.jsoup.nodes.Attributes();
        org.jsoup.nodes.Element v0_1 = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(v7), p11.baseUri(), v1_1);
        int v4 = 0;
        java.util.Iterator v3 = p11.attributes().iterator();
        while (v3.hasNext()) {
            org.jsoup.nodes.Attribute v5_1 = ((org.jsoup.nodes.Attribute) v3.next());
            if (!this.whitelist.isSafeAttribute(v7, p11, v5_1)) {
                v4++;
            } else {
                v1_1.put(v5_1);
            }
        }
        v1_1.addAll(this.whitelist.getEnforcedAttributes(v7));
        return new org.jsoup.safety.Cleaner$ElementMeta(v0_1, v4);
    }

    public org.jsoup.nodes.Document clean(org.jsoup.nodes.Document p4)
    {
        org.jsoup.helper.Validate.notNull(p4);
        org.jsoup.nodes.Document v0 = org.jsoup.nodes.Document.createShell(p4.baseUri());
        this.copySafeNodes(p4.body(), v0.body());
        return v0;
    }

    public boolean isValid(org.jsoup.nodes.Document p5)
    {
        int v2_0;
        org.jsoup.helper.Validate.notNull(p5);
        if (this.copySafeNodes(p5.body(), org.jsoup.nodes.Document.createShell(p5.baseUri()).body()) != 0) {
            v2_0 = 0;
        } else {
            v2_0 = 1;
        }
        return v2_0;
    }
}
package org.jsoup.safety;
abstract class Whitelist$TypedValue {
    private String value;

    Whitelist$TypedValue(String p1)
    {
        org.jsoup.helper.Validate.notNull(p1);
        this.value = p1;
        return;
    }

    public boolean equals(Object p6)
    {
        int v1 = 1;
        if (this != p6) {
            if (p6 != null) {
                if (this.getClass() == p6.getClass()) {
                    if (this.value != null) {
                        if (!this.value.equals(((org.jsoup.safety.Whitelist$TypedValue) p6).value)) {
                            v1 = 0;
                        }
                    } else {
                        if (((org.jsoup.safety.Whitelist$TypedValue) p6).value != null) {
                            v1 = 0;
                        }
                    }
                } else {
                    v1 = 0;
                }
            } else {
                v1 = 0;
            }
        }
        return v1;
    }

    public int hashCode()
    {
        int v2_2;
        int v1 = 1;
        if (this.value != null) {
            v2_2 = this.value.hashCode();
        } else {
            v2_2 = 0;
        }
        return (v2_2 + 31);
    }

    public String toString()
    {
        return this.value;
    }
}
package org.jsoup.safety;
 class Whitelist$AttributeKey extends org.jsoup.safety.Whitelist$TypedValue {

    Whitelist$AttributeKey(String p1)
    {
        super(p1);
        return;
    }

    static org.jsoup.safety.Whitelist$AttributeKey valueOf(String p1)
    {
        return new org.jsoup.safety.Whitelist$AttributeKey(p1);
    }
}
package org.jsoup.safety;
 class Whitelist$AttributeValue extends org.jsoup.safety.Whitelist$TypedValue {

    Whitelist$AttributeValue(String p1)
    {
        super(p1);
        return;
    }

    static org.jsoup.safety.Whitelist$AttributeValue valueOf(String p1)
    {
        return new org.jsoup.safety.Whitelist$AttributeValue(p1);
    }
}
package org.jsoup.safety;
 class Whitelist$Protocol extends org.jsoup.safety.Whitelist$TypedValue {

    Whitelist$Protocol(String p1)
    {
        super(p1);
        return;
    }

    static org.jsoup.safety.Whitelist$Protocol valueOf(String p1)
    {
        return new org.jsoup.safety.Whitelist$Protocol(p1);
    }
}
package org.jsoup.safety;
 class Whitelist$TagName extends org.jsoup.safety.Whitelist$TypedValue {

    Whitelist$TagName(String p1)
    {
        super(p1);
        return;
    }

    static org.jsoup.safety.Whitelist$TagName valueOf(String p1)
    {
        return new org.jsoup.safety.Whitelist$TagName(p1);
    }
}
package org.jsoup.safety;
public class Whitelist {
    private java.util.Map attributes;
    private java.util.Map enforcedAttributes;
    private java.util.Map protocols;
    private java.util.Set tagNames;

    public Whitelist()
    {
        this.tagNames = new java.util.HashSet();
        this.attributes = new java.util.HashMap();
        this.enforcedAttributes = new java.util.HashMap();
        this.protocols = new java.util.HashMap();
        return;
    }

    public static org.jsoup.safety.Whitelist basic()
    {
        org.jsoup.safety.Whitelist v0_5 = new org.jsoup.safety.Whitelist();
        String v1_5 = new String[23];
        v1_5[0] = "a";
        v1_5[1] = "b";
        v1_5[2] = "blockquote";
        v1_5[3] = "br";
        v1_5[4] = "cite";
        v1_5[5] = "code";
        v1_5[6] = "dd";
        v1_5[7] = "dl";
        v1_5[8] = "dt";
        v1_5[9] = "em";
        v1_5[10] = "i";
        v1_5[11] = "li";
        v1_5[12] = "ol";
        v1_5[13] = "p";
        v1_5[14] = "pre";
        v1_5[15] = "q";
        v1_5[16] = "small";
        v1_5[17] = "strike";
        v1_5[18] = "strong";
        v1_5[19] = "sub";
        v1_5[20] = "sup";
        v1_5[21] = "u";
        v1_5[22] = "ul";
        org.jsoup.safety.Whitelist v0_6 = v0_5.addTags(v1_5);
        String v2_25 = new String[1];
        v2_25[0] = "href";
        org.jsoup.safety.Whitelist v0_7 = v0_6.addAttributes("a", v2_25);
        String v2_26 = new String[1];
        v2_26[0] = "cite";
        org.jsoup.safety.Whitelist v0_8 = v0_7.addAttributes("blockquote", v2_26);
        String v2_27 = new String[1];
        v2_27[0] = "cite";
        org.jsoup.safety.Whitelist v0_9 = v0_8.addAttributes("q", v2_27);
        String v3_24 = new String[4];
        v3_24[0] = "ftp";
        v3_24[1] = "http";
        v3_24[2] = "https";
        v3_24[3] = "mailto";
        org.jsoup.safety.Whitelist v0_0 = v0_9.addProtocols("a", "href", v3_24);
        String v3_0 = new String[2];
        v3_0[0] = "http";
        v3_0[1] = "https";
        org.jsoup.safety.Whitelist v0_1 = v0_0.addProtocols("blockquote", "cite", v3_0);
        String v3_1 = new String[2];
        v3_1[0] = "http";
        v3_1[1] = "https";
        return v0_1.addProtocols("cite", "cite", v3_1).addEnforcedAttribute("a", "rel", "nofollow");
    }

    public static org.jsoup.safety.Whitelist basicWithImages()
    {
        org.jsoup.safety.Whitelist v0_2 = org.jsoup.safety.Whitelist.basic();
        String v1_2 = new String[1];
        v1_2[0] = "img";
        org.jsoup.safety.Whitelist v0_3 = v0_2.addTags(v1_2);
        String v2_1 = new String[6];
        v2_1[0] = "align";
        v2_1[1] = "alt";
        v2_1[2] = "height";
        v2_1[3] = "src";
        v2_1[4] = "title";
        v2_1[5] = "width";
        org.jsoup.safety.Whitelist v0_0 = v0_3.addAttributes("img", v2_1);
        String[] v3_6 = new String[2];
        v3_6[0] = "http";
        v3_6[1] = "https";
        return v0_0.addProtocols("img", "src", v3_6);
    }

    public static org.jsoup.safety.Whitelist none()
    {
        return new org.jsoup.safety.Whitelist();
    }

    public static org.jsoup.safety.Whitelist relaxed()
    {
        org.jsoup.safety.Whitelist v0_17 = new org.jsoup.safety.Whitelist();
        String v1_16 = new String[41];
        v1_16[0] = "a";
        v1_16[1] = "b";
        v1_16[2] = "blockquote";
        v1_16[3] = "br";
        v1_16[4] = "caption";
        v1_16[5] = "cite";
        v1_16[6] = "code";
        v1_16[7] = "col";
        v1_16[8] = "colgroup";
        v1_16[9] = "dd";
        v1_16[10] = "div";
        v1_16[11] = "dl";
        v1_16[12] = "dt";
        v1_16[13] = "em";
        v1_16[14] = "h1";
        v1_16[15] = "h2";
        v1_16[16] = "h3";
        v1_16[17] = "h4";
        v1_16[18] = "h5";
        v1_16[19] = "h6";
        v1_16[20] = "i";
        v1_16[21] = "img";
        v1_16[22] = "li";
        v1_16[23] = "ol";
        v1_16[24] = "p";
        v1_16[25] = "pre";
        v1_16[26] = "q";
        v1_16[27] = "small";
        v1_16[28] = "strike";
        v1_16[29] = "strong";
        v1_16[30] = "sub";
        v1_16[31] = "sup";
        v1_16[32] = "table";
        v1_16[33] = "tbody";
        v1_16[34] = "td";
        v1_16[35] = "tfoot";
        v1_16[36] = "th";
        v1_16[37] = "thead";
        v1_16[38] = "tr";
        v1_16[39] = "u";
        v1_16[40] = "ul";
        org.jsoup.safety.Whitelist v0_0 = v0_17.addTags(v1_16);
        String v2_11 = new String[2];
        v2_11[0] = "href";
        v2_11[1] = "title";
        org.jsoup.safety.Whitelist v0_1 = v0_0.addAttributes("a", v2_11);
        String v2_12 = new String[1];
        v2_12[0] = "cite";
        org.jsoup.safety.Whitelist v0_2 = v0_1.addAttributes("blockquote", v2_12);
        String v2_13 = new String[2];
        v2_13[0] = "span";
        v2_13[1] = "width";
        org.jsoup.safety.Whitelist v0_3 = v0_2.addAttributes("col", v2_13);
        String v2_15 = new String[2];
        v2_15[0] = "span";
        v2_15[1] = "width";
        org.jsoup.safety.Whitelist v0_4 = v0_3.addAttributes("colgroup", v2_15);
        String v2_17 = new String[6];
        v2_17[0] = "align";
        v2_17[1] = "alt";
        v2_17[2] = "height";
        v2_17[3] = "src";
        v2_17[4] = "title";
        v2_17[5] = "width";
        org.jsoup.safety.Whitelist v0_5 = v0_4.addAttributes("img", v2_17);
        String v2_19 = new String[2];
        v2_19[0] = "start";
        v2_19[1] = "type";
        org.jsoup.safety.Whitelist v0_6 = v0_5.addAttributes("ol", v2_19);
        String v2_20 = new String[1];
        v2_20[0] = "cite";
        org.jsoup.safety.Whitelist v0_7 = v0_6.addAttributes("q", v2_20);
        String v2_22 = new String[2];
        v2_22[0] = "summary";
        v2_22[1] = "width";
        org.jsoup.safety.Whitelist v0_8 = v0_7.addAttributes("table", v2_22);
        String v2_24 = new String[5];
        v2_24[0] = "abbr";
        v2_24[1] = "axis";
        v2_24[2] = "colspan";
        v2_24[3] = "rowspan";
        v2_24[4] = "width";
        org.jsoup.safety.Whitelist v0_9 = v0_8.addAttributes("td", v2_24);
        String v2_26 = new String[6];
        v2_26[0] = "abbr";
        v2_26[1] = "axis";
        v2_26[2] = "colspan";
        v2_26[3] = "rowspan";
        v2_26[4] = "scope";
        v2_26[5] = "width";
        org.jsoup.safety.Whitelist v0_10 = v0_9.addAttributes("th", v2_26);
        String v2_28 = new String[1];
        v2_28[0] = "type";
        org.jsoup.safety.Whitelist v0_11 = v0_10.addAttributes("ul", v2_28);
        String[] v3_41 = new String[4];
        v3_41[0] = "ftp";
        v3_41[1] = "http";
        v3_41[2] = "https";
        v3_41[3] = "mailto";
        org.jsoup.safety.Whitelist v0_12 = v0_11.addProtocols("a", "href", v3_41);
        String[] v3_42 = new String[2];
        v3_42[0] = "http";
        v3_42[1] = "https";
        org.jsoup.safety.Whitelist v0_13 = v0_12.addProtocols("blockquote", "cite", v3_42);
        String[] v3_44 = new String[2];
        v3_44[0] = "http";
        v3_44[1] = "https";
        org.jsoup.safety.Whitelist v0_14 = v0_13.addProtocols("img", "src", v3_44);
        String[] v3_45 = new String[2];
        v3_45[0] = "http";
        v3_45[1] = "https";
        return v0_14.addProtocols("q", "cite", v3_45);
    }

    public static org.jsoup.safety.Whitelist simpleText()
    {
        org.jsoup.safety.Whitelist v0_1 = new org.jsoup.safety.Whitelist();
        String[] v1_1 = new String[5];
        v1_1[0] = "b";
        v1_1[1] = "em";
        v1_1[2] = "i";
        v1_1[3] = "strong";
        v1_1[4] = "u";
        return v0_1.addTags(v1_1);
    }

    private boolean testValidProtocol(org.jsoup.nodes.Element p7, org.jsoup.nodes.Attribute p8, java.util.Set p9)
    {
        String v3 = p7.absUrl(p8.getKey());
        p8.setValue(v3);
        java.util.Iterator v0 = p9.iterator();
        while (v0.hasNext()) {
            if (v3.toLowerCase().startsWith(new StringBuilder().append(((org.jsoup.safety.Whitelist$Protocol) v0.next()).toString()).append(":").toString())) {
                int v4_1 = 1;
            }
            return v4_1;
        }
        v4_1 = 0;
        return v4_1;
    }

    public varargs org.jsoup.safety.Whitelist addAttributes(String p9, String[] p10)
    {
        org.jsoup.helper.Validate.notEmpty(p9);
        org.jsoup.helper.Validate.notNull(p10);
        org.jsoup.safety.Whitelist$TagName v6 = org.jsoup.safety.Whitelist$TagName.valueOf(p9);
        java.util.HashSet v1_1 = new java.util.HashSet();
        int v5 = p10.length;
        int v3 = 0;
        while (v3 < v5) {
            String v4 = p10[v3];
            org.jsoup.helper.Validate.notEmpty(v4);
            v1_1.add(org.jsoup.safety.Whitelist$AttributeKey.valueOf(v4));
            v3++;
        }
        if (!this.attributes.containsKey(v6)) {
            this.attributes.put(v6, v1_1);
        } else {
            ((java.util.Set) this.attributes.get(v6)).addAll(v1_1);
        }
        return this;
    }

    public org.jsoup.safety.Whitelist addEnforcedAttribute(String p6, String p7, String p8)
    {
        org.jsoup.helper.Validate.notEmpty(p6);
        org.jsoup.helper.Validate.notEmpty(p7);
        org.jsoup.helper.Validate.notEmpty(p8);
        org.jsoup.safety.Whitelist$TagName v3 = org.jsoup.safety.Whitelist$TagName.valueOf(p6);
        org.jsoup.safety.Whitelist$AttributeKey v0 = org.jsoup.safety.Whitelist$AttributeKey.valueOf(p7);
        org.jsoup.safety.Whitelist$AttributeValue v2 = org.jsoup.safety.Whitelist$AttributeValue.valueOf(p8);
        if (!this.enforcedAttributes.containsKey(v3)) {
            java.util.HashMap v1_1 = new java.util.HashMap();
            v1_1.put(v0, v2);
            this.enforcedAttributes.put(v3, v1_1);
        } else {
            ((java.util.Map) this.enforcedAttributes.get(v3)).put(v0, v2);
        }
        return this;
    }

    public varargs org.jsoup.safety.Whitelist addProtocols(String p11, String p12, String[] p13)
    {
        java.util.HashMap v2_1;
        org.jsoup.helper.Validate.notEmpty(p11);
        org.jsoup.helper.Validate.notEmpty(p12);
        org.jsoup.helper.Validate.notNull(p13);
        org.jsoup.safety.Whitelist$TagName v8 = org.jsoup.safety.Whitelist$TagName.valueOf(p11);
        org.jsoup.safety.Whitelist$AttributeKey v1 = org.jsoup.safety.Whitelist$AttributeKey.valueOf(p12);
        if (!this.protocols.containsKey(v8)) {
            v2_1 = new java.util.HashMap();
            this.protocols.put(v8, v2_1);
        } else {
            v2_1 = ((java.util.Map) this.protocols.get(v8));
        }
        java.util.HashSet v6_1;
        if (!v2_1.containsKey(v1)) {
            v6_1 = new java.util.HashSet();
            v2_1.put(v1, v6_1);
        } else {
            v6_1 = ((java.util.Set) v2_1.get(v1));
        }
        int v4 = p13.length;
        int v3 = 0;
        while (v3 < v4) {
            String v7 = p13[v3];
            org.jsoup.helper.Validate.notEmpty(v7);
            v6_1.add(org.jsoup.safety.Whitelist$Protocol.valueOf(v7));
            v3++;
        }
        return this;
    }

    public varargs org.jsoup.safety.Whitelist addTags(String[] p7)
    {
        org.jsoup.helper.Validate.notNull(p7);
        int v2 = p7.length;
        int v1 = 0;
        while (v1 < v2) {
            String v3 = p7[v1];
            org.jsoup.helper.Validate.notEmpty(v3);
            this.tagNames.add(org.jsoup.safety.Whitelist$TagName.valueOf(v3));
            v1++;
        }
        return this;
    }

    org.jsoup.nodes.Attributes getEnforcedAttributes(String p8)
    {
        org.jsoup.nodes.Attributes v0_1 = new org.jsoup.nodes.Attributes();
        org.jsoup.safety.Whitelist$TagName v4 = org.jsoup.safety.Whitelist$TagName.valueOf(p8);
        if (this.enforcedAttributes.containsKey(v4)) {
            java.util.Iterator v2 = ((java.util.Map) this.enforcedAttributes.get(v4)).entrySet().iterator();
            while (v2.hasNext()) {
                java.util.Map$Entry v1_1 = ((java.util.Map$Entry) v2.next());
                v0_1.put(((org.jsoup.safety.Whitelist$AttributeKey) v1_1.getKey()).toString(), ((org.jsoup.safety.Whitelist$AttributeValue) v1_1.getValue()).toString());
            }
        }
        return v0_1;
    }

    boolean isSafeAttribute(String p7, org.jsoup.nodes.Element p8, org.jsoup.nodes.Attribute p9)
    {
        int v5 = 1;
        org.jsoup.safety.Whitelist$TagName v2 = org.jsoup.safety.Whitelist$TagName.valueOf(p7);
        org.jsoup.safety.Whitelist$AttributeKey v1 = org.jsoup.safety.Whitelist$AttributeKey.valueOf(p9.getKey());
        if (!this.attributes.containsKey(v2)) {
            if ((p7.equals(":all")) || (!this.isSafeAttribute(":all", p8, p9))) {
                v5 = 0;
            }
        } else {
            if (!((java.util.Set) this.attributes.get(v2)).contains(v1)) {
                v5 = 0;
            } else {
                if (this.protocols.containsKey(v2)) {
                    int v3_16;
                    java.util.Map v0_1 = ((java.util.Map) this.protocols.get(v2));
                    if ((v0_1.containsKey(v1)) && (!this.testValidProtocol(p8, p9, ((java.util.Set) v0_1.get(v1))))) {
                        v3_16 = 0;
                    } else {
                        v3_16 = 1;
                    }
                    v5 = v3_16;
                }
            }
        }
        return v5;
    }

    boolean isSafeTag(String p3)
    {
        return this.tagNames.contains(org.jsoup.safety.Whitelist$TagName.valueOf(p3));
    }
}
package org.jsoup.select;
 class Collector$Accumulator implements org.jsoup.select.NodeVisitor {
    private final org.jsoup.select.Elements elements;
    private final org.jsoup.select.Evaluator eval;
    private final org.jsoup.nodes.Element root;

    Collector$Accumulator(org.jsoup.nodes.Element p1, org.jsoup.select.Elements p2, org.jsoup.select.Evaluator p3)
    {
        this.root = p1;
        this.elements = p2;
        this.eval = p3;
        return;
    }

    public void head(org.jsoup.nodes.Node p4, int p5)
    {
        if (((p4 instanceof org.jsoup.nodes.Element)) && (this.eval.matches(this.root, ((org.jsoup.nodes.Element) p4)))) {
            this.elements.add(((org.jsoup.nodes.Element) p4));
        }
        return;
    }

    public void tail(org.jsoup.nodes.Node p1, int p2)
    {
        return;
    }
}
package org.jsoup.select;
public class Collector {

    private Collector()
    {
        return;
    }

    public static org.jsoup.select.Elements collect(org.jsoup.select.Evaluator p3, org.jsoup.nodes.Element p4)
    {
        org.jsoup.select.Elements v0_1 = new org.jsoup.select.Elements();
        new org.jsoup.select.NodeTraversor(new org.jsoup.select.Collector$Accumulator(p4, v0_1, p3)).traverse(p4);
        return v0_1;
    }
}
package org.jsoup.select;
public abstract class Evaluator {

    Evaluator()
    {
        return;
    }

    public abstract boolean matches();
}
package org.jsoup.select;
abstract class CombiningEvaluator extends org.jsoup.select.Evaluator {
    final java.util.List evaluators;

    CombiningEvaluator()
    {
        this.evaluators = new java.util.ArrayList();
        return;
    }

    CombiningEvaluator(java.util.Collection p2)
    {
        this.evaluators.addAll(p2);
        return;
    }
}
package org.jsoup.select;
final class CombiningEvaluator$And extends org.jsoup.select.CombiningEvaluator {

    CombiningEvaluator$And(java.util.Collection p1)
    {
        super(p1);
        return;
    }

    varargs CombiningEvaluator$And(org.jsoup.select.Evaluator[] p2)
    {
        this(java.util.Arrays.asList(p2));
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        java.util.Iterator v0 = this.evaluators.iterator();
        while (v0.hasNext()) {
            if (!((org.jsoup.select.Evaluator) v0.next()).matches(p4, p5)) {
                int v2_2 = 0;
            }
            return v2_2;
        }
        v2_2 = 1;
        return v2_2;
    }

    public String toString()
    {
        return org.jsoup.helper.StringUtil.join(this.evaluators, " ");
    }
}
package org.jsoup.select;
final class CombiningEvaluator$Or extends org.jsoup.select.CombiningEvaluator {

    CombiningEvaluator$Or(java.util.Collection p3)
    {
        if (p3.size() <= 1) {
            this.evaluators.addAll(p3);
        } else {
            this.evaluators.add(new org.jsoup.select.CombiningEvaluator$And(p3));
        }
        return;
    }

    public void add(org.jsoup.select.Evaluator p2)
    {
        this.evaluators.add(p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        java.util.Iterator v0 = this.evaluators.iterator();
        while (v0.hasNext()) {
            if (((org.jsoup.select.Evaluator) v0.next()).matches(p4, p5)) {
                int v2_2 = 1;
            }
            return v2_2;
        }
        v2_2 = 0;
        return v2_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluators;
        return String.format(":or%s", v1_1);
    }
}
package org.jsoup.select;
public class Elements implements java.util.List, java.lang.Cloneable {
    private java.util.List contents;

    public Elements()
    {
        this.contents = new java.util.ArrayList();
        return;
    }

    public Elements(java.util.Collection p2)
    {
        this.contents = new java.util.ArrayList(p2);
        return;
    }

    public Elements(java.util.List p1)
    {
        this.contents = p1;
        return;
    }

    public varargs Elements(org.jsoup.nodes.Element[] p2)
    {
        this(java.util.Arrays.asList(p2));
        return;
    }

    public bridge synthetic void add(int p1, Object p2)
    {
        this.add(p1, ((org.jsoup.nodes.Element) p2));
        return;
    }

    public void add(int p2, org.jsoup.nodes.Element p3)
    {
        this.contents.add(p2, p3);
        return;
    }

    public bridge synthetic boolean add(Object p2)
    {
        return this.add(((org.jsoup.nodes.Element) p2));
    }

    public boolean add(org.jsoup.nodes.Element p2)
    {
        return this.contents.add(p2);
    }

    public boolean addAll(int p2, java.util.Collection p3)
    {
        return this.contents.addAll(p2, p3);
    }

    public boolean addAll(java.util.Collection p2)
    {
        return this.contents.addAll(p2);
    }

    public org.jsoup.select.Elements addClass(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).addClass(p4);
        }
        return this;
    }

    public org.jsoup.select.Elements after(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).after(p4);
        }
        return this;
    }

    public org.jsoup.select.Elements append(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).append(p4);
        }
        return this;
    }

    public String attr(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) v1.next());
            if (v0_1.hasAttr(p4)) {
                String v2_2 = v0_1.attr(p4);
            }
            return v2_2;
        }
        v2_2 = "";
        return v2_2;
    }

    public org.jsoup.select.Elements attr(String p4, String p5)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).attr(p4, p5);
        }
        return this;
    }

    public org.jsoup.select.Elements before(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).before(p4);
        }
        return this;
    }

    public void clear()
    {
        this.contents.clear();
        return;
    }

    public bridge synthetic Object clone()
    {
        return this.clone();
    }

    public org.jsoup.select.Elements clone()
    {
        java.util.ArrayList v1_1 = new java.util.ArrayList();
        java.util.Iterator v2 = this.contents.iterator();
        while (v2.hasNext()) {
            v1_1.add(((org.jsoup.nodes.Element) v2.next()).clone());
        }
        return new org.jsoup.select.Elements(v1_1);
    }

    public boolean contains(Object p2)
    {
        return this.contents.contains(p2);
    }

    public boolean containsAll(java.util.Collection p2)
    {
        return this.contents.containsAll(p2);
    }

    public org.jsoup.select.Elements empty()
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).empty();
        }
        return this;
    }

    public org.jsoup.select.Elements eq(int p5)
    {
        org.jsoup.select.Elements v0_1;
        if (this.contents.size() <= p5) {
            v0_1 = new org.jsoup.select.Elements();
        } else {
            org.jsoup.nodes.Element[] v1_1 = new org.jsoup.nodes.Element[1];
            v1_1[0] = this.get(p5);
            v0_1 = new org.jsoup.select.Elements(v1_1);
        }
        return v0_1;
    }

    public boolean equals(Object p2)
    {
        return this.contents.equals(p2);
    }

    public org.jsoup.nodes.Element first()
    {
        org.jsoup.nodes.Element v0_4;
        if (!this.contents.isEmpty()) {
            v0_4 = ((org.jsoup.nodes.Element) this.contents.get(0));
        } else {
            v0_4 = 0;
        }
        return v0_4;
    }

    public bridge synthetic Object get(int p2)
    {
        return this.get(p2);
    }

    public org.jsoup.nodes.Element get(int p2)
    {
        return ((org.jsoup.nodes.Element) this.contents.get(p2));
    }

    public boolean hasAttr(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            if (((org.jsoup.nodes.Element) v1.next()).hasAttr(p4)) {
                int v2_2 = 1;
            }
            return v2_2;
        }
        v2_2 = 0;
        return v2_2;
    }

    public boolean hasClass(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            if (((org.jsoup.nodes.Element) v1.next()).hasClass(p4)) {
                int v2_2 = 1;
            }
            return v2_2;
        }
        v2_2 = 0;
        return v2_2;
    }

    public boolean hasText()
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            if (((org.jsoup.nodes.Element) v1.next()).hasText()) {
                int v2_2 = 1;
            }
            return v2_2;
        }
        v2_2 = 0;
        return v2_2;
    }

    public int hashCode()
    {
        return this.contents.hashCode();
    }

    public String html()
    {
        StringBuilder v2_1 = new StringBuilder();
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) v1.next());
            if (v2_1.length() != 0) {
                v2_1.append("\n");
            }
            v2_1.append(v0_1.html());
        }
        return v2_1.toString();
    }

    public org.jsoup.select.Elements html(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).html(p4);
        }
        return this;
    }

    public int indexOf(Object p2)
    {
        return this.contents.indexOf(p2);
    }

    public boolean is(String p3)
    {
        int v1_1;
        if (this.select(p3).isEmpty()) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        return v1_1;
    }

    public boolean isEmpty()
    {
        return this.contents.isEmpty();
    }

    public java.util.Iterator iterator()
    {
        return this.contents.iterator();
    }

    public org.jsoup.nodes.Element last()
    {
        org.jsoup.nodes.Element v0_2;
        if (!this.contents.isEmpty()) {
            v0_2 = ((org.jsoup.nodes.Element) this.contents.get((this.contents.size() - 1)));
        } else {
            v0_2 = 0;
        }
        return v0_2;
    }

    public int lastIndexOf(Object p2)
    {
        return this.contents.lastIndexOf(p2);
    }

    public java.util.ListIterator listIterator()
    {
        return this.contents.listIterator();
    }

    public java.util.ListIterator listIterator(int p2)
    {
        return this.contents.listIterator(p2);
    }

    public org.jsoup.select.Elements not(String p3)
    {
        return org.jsoup.select.Selector.filterOut(this, org.jsoup.select.Selector.select(p3, this));
    }

    public String outerHtml()
    {
        StringBuilder v2_1 = new StringBuilder();
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) v1.next());
            if (v2_1.length() != 0) {
                v2_1.append("\n");
            }
            v2_1.append(v0_1.outerHtml());
        }
        return v2_1.toString();
    }

    public org.jsoup.select.Elements parents()
    {
        java.util.LinkedHashSet v0_1 = new java.util.LinkedHashSet();
        java.util.Iterator v2 = this.contents.iterator();
        while (v2.hasNext()) {
            v0_1.addAll(((org.jsoup.nodes.Element) v2.next()).parents());
        }
        return new org.jsoup.select.Elements(v0_1);
    }

    public org.jsoup.select.Elements prepend(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).prepend(p4);
        }
        return this;
    }

    public bridge synthetic Object remove(int p2)
    {
        return this.remove(p2);
    }

    public org.jsoup.nodes.Element remove(int p2)
    {
        return ((org.jsoup.nodes.Element) this.contents.remove(p2));
    }

    public org.jsoup.select.Elements remove()
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).remove();
        }
        return this;
    }

    public boolean remove(Object p2)
    {
        return this.contents.remove(p2);
    }

    public boolean removeAll(java.util.Collection p2)
    {
        return this.contents.removeAll(p2);
    }

    public org.jsoup.select.Elements removeAttr(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).removeAttr(p4);
        }
        return this;
    }

    public org.jsoup.select.Elements removeClass(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).removeClass(p4);
        }
        return this;
    }

    public boolean retainAll(java.util.Collection p2)
    {
        return this.contents.retainAll(p2);
    }

    public org.jsoup.select.Elements select(String p2)
    {
        return org.jsoup.select.Selector.select(p2, this);
    }

    public bridge synthetic Object set(int p2, Object p3)
    {
        return this.set(p2, ((org.jsoup.nodes.Element) p3));
    }

    public org.jsoup.nodes.Element set(int p2, org.jsoup.nodes.Element p3)
    {
        return ((org.jsoup.nodes.Element) this.contents.set(p2, p3));
    }

    public int size()
    {
        return this.contents.size();
    }

    public java.util.List subList(int p2, int p3)
    {
        return this.contents.subList(p2, p3);
    }

    public org.jsoup.select.Elements tagName(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).tagName(p4);
        }
        return this;
    }

    public String text()
    {
        StringBuilder v2_1 = new StringBuilder();
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_1 = ((org.jsoup.nodes.Element) v1.next());
            if (v2_1.length() != 0) {
                v2_1.append(" ");
            }
            v2_1.append(v0_1.text());
        }
        return v2_1.toString();
    }

    public Object[] toArray()
    {
        return this.contents.toArray();
    }

    public Object[] toArray(Object[] p2)
    {
        return this.contents.toArray(p2);
    }

    public String toString()
    {
        return this.outerHtml();
    }

    public org.jsoup.select.Elements toggleClass(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).toggleClass(p4);
        }
        return this;
    }

    public org.jsoup.select.Elements unwrap()
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).unwrap();
        }
        return this;
    }

    public String val()
    {
        String v0_1;
        if (this.size() <= 0) {
            v0_1 = "";
        } else {
            v0_1 = this.first().val();
        }
        return v0_1;
    }

    public org.jsoup.select.Elements val(String p4)
    {
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).val(p4);
        }
        return this;
    }

    public org.jsoup.select.Elements wrap(String p4)
    {
        org.jsoup.helper.Validate.notEmpty(p4);
        java.util.Iterator v1 = this.contents.iterator();
        while (v1.hasNext()) {
            ((org.jsoup.nodes.Element) v1.next()).wrap(p4);
        }
        return this;
    }
}
package org.jsoup.select;
public final class Evaluator$AllElements extends org.jsoup.select.Evaluator {

    public Evaluator$AllElements()
    {
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        return 1;
    }

    public String toString()
    {
        return "*";
    }
}
package org.jsoup.select;
public final class Evaluator$Attribute extends org.jsoup.select.Evaluator {
    private String key;

    public Evaluator$Attribute(String p1)
    {
        this.key = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        return p3.hasAttr(this.key);
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.key;
        return String.format("[%s]", v1_1);
    }
}
package org.jsoup.select;
public abstract class Evaluator$AttributeKeyPair extends org.jsoup.select.Evaluator {
    String key;
    String value;

    public Evaluator$AttributeKeyPair(String p2, String p3)
    {
        org.jsoup.helper.Validate.notEmpty(p2);
        org.jsoup.helper.Validate.notEmpty(p3);
        this.key = p2.trim().toLowerCase();
        this.value = p3.trim().toLowerCase();
        return;
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeStarting extends org.jsoup.select.Evaluator {
    private String keyPrefix;

    public Evaluator$AttributeStarting(String p1)
    {
        this.keyPrefix = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p6, org.jsoup.nodes.Element p7)
    {
        java.util.Iterator v1 = p7.attributes().asList().iterator();
        while (v1.hasNext()) {
            if (((org.jsoup.nodes.Attribute) v1.next()).getKey().startsWith(this.keyPrefix)) {
                int v3_3 = 1;
            }
            return v3_3;
        }
        v3_3 = 0;
        return v3_3;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.keyPrefix;
        return String.format("[^%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValue extends org.jsoup.select.Evaluator$AttributeKeyPair {

    public Evaluator$AttributeWithValue(String p1, String p2)
    {
        super(p1, p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p4.hasAttr(this.key)) || (!this.value.equalsIgnoreCase(p4.attr(this.key)))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.value;
        return String.format("[%s=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValueContaining extends org.jsoup.select.Evaluator$AttributeKeyPair {

    public Evaluator$AttributeWithValueContaining(String p1, String p2)
    {
        super(p1, p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p4.hasAttr(this.key)) || (!p4.attr(this.key).toLowerCase().contains(this.value))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.value;
        return String.format("[%s*=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValueEnding extends org.jsoup.select.Evaluator$AttributeKeyPair {

    public Evaluator$AttributeWithValueEnding(String p1, String p2)
    {
        super(p1, p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p4.hasAttr(this.key)) || (!p4.attr(this.key).toLowerCase().endsWith(this.value))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.value;
        return String.format("[%s$=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValueMatching extends org.jsoup.select.Evaluator {
    String key;
    java.util.regex.Pattern pattern;

    public Evaluator$AttributeWithValueMatching(String p2, java.util.regex.Pattern p3)
    {
        this.key = p2.trim().toLowerCase();
        this.pattern = p3;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p4.hasAttr(this.key)) || (!this.pattern.matcher(p4.attr(this.key)).find())) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.pattern.toString();
        return String.format("[%s~=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValueNot extends org.jsoup.select.Evaluator$AttributeKeyPair {

    public Evaluator$AttributeWithValueNot(String p1, String p2)
    {
        super(p1, p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        int v0_2;
        if (this.value.equalsIgnoreCase(p4.attr(this.key))) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.value;
        return String.format("[%s!=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$AttributeWithValueStarting extends org.jsoup.select.Evaluator$AttributeKeyPair {

    public Evaluator$AttributeWithValueStarting(String p1, String p2)
    {
        super(p1, p2);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        if ((!p4.hasAttr(this.key)) || (!p4.attr(this.key).toLowerCase().startsWith(this.value))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[2];
        v1_1[0] = this.key;
        v1_1[1] = this.value;
        return String.format("[%s^=%s]", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$Class extends org.jsoup.select.Evaluator {
    private String className;

    public Evaluator$Class(String p1)
    {
        this.className = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        return p3.hasClass(this.className);
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.className;
        return String.format(".%s", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$ContainsOwnText extends org.jsoup.select.Evaluator {
    private String searchText;

    public Evaluator$ContainsOwnText(String p2)
    {
        this.searchText = p2.toLowerCase();
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        return p4.ownText().toLowerCase().contains(this.searchText);
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.searchText;
        return String.format(":containsOwn(%s", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$ContainsText extends org.jsoup.select.Evaluator {
    private String searchText;

    public Evaluator$ContainsText(String p2)
    {
        this.searchText = p2.toLowerCase();
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        return p4.text().toLowerCase().contains(this.searchText);
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.searchText;
        return String.format(":contains(%s", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$Id extends org.jsoup.select.Evaluator {
    private String id;

    public Evaluator$Id(String p1)
    {
        this.id = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        return this.id.equals(p4.id());
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.id;
        return String.format("#%s", v1_1);
    }
}
package org.jsoup.select;
public abstract class Evaluator$IndexEvaluator extends org.jsoup.select.Evaluator {
    int index;

    public Evaluator$IndexEvaluator(int p1)
    {
        this.index = p1;
        return;
    }
}
package org.jsoup.select;
public final class Evaluator$IndexEquals extends org.jsoup.select.Evaluator$IndexEvaluator {

    public Evaluator$IndexEquals(int p1)
    {
        super(p1);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        int v0_2;
        if (p4.elementSiblingIndex().intValue() != this.index) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = Integer.valueOf(this.index);
        return String.format(":eq(%d)", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$IndexGreaterThan extends org.jsoup.select.Evaluator$IndexEvaluator {

    public Evaluator$IndexGreaterThan(int p1)
    {
        super(p1);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        int v0_2;
        if (p4.elementSiblingIndex().intValue() <= this.index) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = Integer.valueOf(this.index);
        return String.format(":gt(%d)", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$IndexLessThan extends org.jsoup.select.Evaluator$IndexEvaluator {

    public Evaluator$IndexLessThan(int p1)
    {
        super(p1);
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        int v0_2;
        if (p4.elementSiblingIndex().intValue() >= this.index) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = Integer.valueOf(this.index);
        return String.format(":lt(%d)", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$Matches extends org.jsoup.select.Evaluator {
    private java.util.regex.Pattern pattern;

    public Evaluator$Matches(java.util.regex.Pattern p1)
    {
        this.pattern = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        return this.pattern.matcher(p5.text()).find();
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.pattern;
        return String.format(":matches(%s", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$MatchesOwn extends org.jsoup.select.Evaluator {
    private java.util.regex.Pattern pattern;

    public Evaluator$MatchesOwn(java.util.regex.Pattern p1)
    {
        this.pattern = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        return this.pattern.matcher(p5.ownText()).find();
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.pattern;
        return String.format(":matchesOwn(%s", v1_1);
    }
}
package org.jsoup.select;
public final class Evaluator$Tag extends org.jsoup.select.Evaluator {
    private String tagName;

    public Evaluator$Tag(String p1)
    {
        this.tagName = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p3, org.jsoup.nodes.Element p4)
    {
        return p4.tagName().equals(this.tagName);
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.tagName;
        return String.format("%s", v1_1);
    }
}
package org.jsoup.select;
public class NodeTraversor {
    private org.jsoup.select.NodeVisitor visitor;

    public NodeTraversor(org.jsoup.select.NodeVisitor p1)
    {
        this.visitor = p1;
        return;
    }

    public void traverse(org.jsoup.nodes.Node p4)
    {
        org.jsoup.nodes.Node v1 = p4;
        int v0 = 0;
        while (v1 != null) {
            this.visitor.head(v1, v0);
            if (v1.childNodes().size() > 0) {
                v1 = v1.childNode(0);
                v0++;
            }
            while ((v1.nextSibling() == null) && (v0 > 0)) {
                this.visitor.tail(v1, v0);
                v1 = v1.parent();
                v0--;
            }
            this.visitor.tail(v1, v0);
            if (v1 == p4) {
                break;
            }
            v1 = v1.nextSibling();
        }
        return;
    }
}
package org.jsoup.select;
 class QueryParser {
    private static final String[] combinators;
    private java.util.List evals;
    private String query;
    private org.jsoup.parser.TokenQueue tq;

    static QueryParser()
    {
        String[] v0_1 = new String[5];
        v0_1[0] = ",";
        v0_1[1] = ">";
        v0_1[2] = "+";
        v0_1[3] = "~";
        v0_1[4] = " ";
        org.jsoup.select.QueryParser.combinators = v0_1;
        return;
    }

    private QueryParser(String p2)
    {
        this.evals = new java.util.ArrayList();
        this.query = p2;
        this.tq = new org.jsoup.parser.TokenQueue(p2);
        return;
    }

    private void allElements()
    {
        this.evals.add(new org.jsoup.select.Evaluator$AllElements());
        return;
    }

    private void byAttribute()
    {
        org.jsoup.parser.TokenQueue v0_1 = new org.jsoup.parser.TokenQueue(this.tq.chompBalanced(91, 93));
        org.jsoup.select.Selector$SelectorParseException v2_4 = new String[6];
        v2_4[0] = "=";
        v2_4[1] = "!=";
        v2_4[2] = "^=";
        v2_4[3] = "$=";
        v2_4[4] = "*=";
        v2_4[5] = "~=";
        String v1 = v0_1.consumeToAny(v2_4);
        org.jsoup.helper.Validate.notEmpty(v1);
        v0_1.consumeWhitespace();
        if (!v0_1.isEmpty()) {
            if (!v0_1.matchChomp("=")) {
                if (!v0_1.matchChomp("!=")) {
                    if (!v0_1.matchChomp("^=")) {
                        if (!v0_1.matchChomp("$=")) {
                            if (!v0_1.matchChomp("*=")) {
                                if (!v0_1.matchChomp("~=")) {
                                    Object[] v4_6 = new Object[2];
                                    v4_6[0] = this.query;
                                    v4_6[1] = v0_1.remainder();
                                    throw new org.jsoup.select.Selector$SelectorParseException("Could not parse attribute query \'%s\': unexpected token at \'%s\'", v4_6);
                                } else {
                                    this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValueMatching(v1, java.util.regex.Pattern.compile(v0_1.remainder())));
                                }
                            } else {
                                this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValueContaining(v1, v0_1.remainder()));
                            }
                        } else {
                            this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValueEnding(v1, v0_1.remainder()));
                        }
                    } else {
                        this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValueStarting(v1, v0_1.remainder()));
                    }
                } else {
                    this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValueNot(v1, v0_1.remainder()));
                }
            } else {
                this.evals.add(new org.jsoup.select.Evaluator$AttributeWithValue(v1, v0_1.remainder()));
            }
        } else {
            if (!v1.startsWith("^")) {
                this.evals.add(new org.jsoup.select.Evaluator$Attribute(v1));
            } else {
                this.evals.add(new org.jsoup.select.Evaluator$AttributeStarting(v1.substring(1)));
            }
        }
        return;
    }

    private void byClass()
    {
        String v0 = this.tq.consumeCssIdentifier();
        org.jsoup.helper.Validate.notEmpty(v0);
        this.evals.add(new org.jsoup.select.Evaluator$Class(v0.trim().toLowerCase()));
        return;
    }

    private void byId()
    {
        String v0 = this.tq.consumeCssIdentifier();
        org.jsoup.helper.Validate.notEmpty(v0);
        this.evals.add(new org.jsoup.select.Evaluator$Id(v0));
        return;
    }

    private void byTag()
    {
        String v0 = this.tq.consumeElementSelector();
        org.jsoup.helper.Validate.notEmpty(v0);
        if (v0.contains("|")) {
            v0 = v0.replace("|", ":");
        }
        this.evals.add(new org.jsoup.select.Evaluator$Tag(v0.trim().toLowerCase()));
        return;
    }

    private void combinator(char p9)
    {
        org.jsoup.select.CombiningEvaluator$And v0_1;
        this.tq.consumeWhitespace();
        String v2 = this.consumeSubQuery();
        if (this.evals.size() != 1) {
            v0_1 = new org.jsoup.select.CombiningEvaluator$And(this.evals);
        } else {
            v0_1 = ((org.jsoup.select.Evaluator) this.evals.get(0));
        }
        this.evals.clear();
        org.jsoup.select.Evaluator v1 = org.jsoup.select.QueryParser.parse(v2);
        if (p9 != 62) {
            if (p9 != 32) {
                if (p9 != 43) {
                    if (p9 != 126) {
                        Object[] v5_2 = new Object[0];
                        throw new org.jsoup.select.Selector$SelectorParseException(new StringBuilder().append("Unknown combinator: ").append(p9).toString(), v5_2);
                    } else {
                        org.jsoup.select.Selector$SelectorParseException v3_10 = this.evals;
                        Object[] v5_3 = new org.jsoup.select.Evaluator[2];
                        v5_3[0] = v1;
                        v5_3[1] = new org.jsoup.select.StructuralEvaluator$PreviousSibling(v0_1);
                        v3_10.add(new org.jsoup.select.CombiningEvaluator$And(v5_3));
                    }
                } else {
                    org.jsoup.select.Selector$SelectorParseException v3_11 = this.evals;
                    Object[] v5_4 = new org.jsoup.select.Evaluator[2];
                    v5_4[0] = v1;
                    v5_4[1] = new org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling(v0_1);
                    v3_11.add(new org.jsoup.select.CombiningEvaluator$And(v5_4));
                }
            } else {
                org.jsoup.select.Selector$SelectorParseException v3_12 = this.evals;
                Object[] v5_5 = new org.jsoup.select.Evaluator[2];
                v5_5[0] = v1;
                v5_5[1] = new org.jsoup.select.StructuralEvaluator$Parent(v0_1);
                v3_12.add(new org.jsoup.select.CombiningEvaluator$And(v5_5));
            }
        } else {
            org.jsoup.select.Selector$SelectorParseException v3_14 = this.evals;
            Object[] v5_6 = new org.jsoup.select.Evaluator[2];
            v5_6[0] = v1;
            v5_6[1] = new org.jsoup.select.StructuralEvaluator$ImmediateParent(v0_1);
            v3_14.add(new org.jsoup.select.CombiningEvaluator$And(v5_6));
        }
        return;
    }

    private int consumeIndex()
    {
        String v0 = this.tq.chompTo(")").trim();
        org.jsoup.helper.Validate.isTrue(org.jsoup.helper.StringUtil.isNumeric(v0), "Index must be numeric");
        return Integer.parseInt(v0);
    }

    private String consumeSubQuery()
    {
        StringBuilder v0_1 = new StringBuilder();
        while (!this.tq.isEmpty()) {
            if (!this.tq.matches("(")) {
                if (!this.tq.matches("[")) {
                    if (this.tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {
                        break;
                    }
                    v0_1.append(this.tq.consume());
                } else {
                    v0_1.append("[").append(this.tq.chompBalanced(91, 93)).append("]");
                }
            } else {
                v0_1.append("(").append(this.tq.chompBalanced(40, 41)).append(")");
            }
        }
        return v0_1.toString();
    }

    private void contains(boolean p5)
    {
        java.util.List v1_3;
        if (!p5) {
            v1_3 = ":contains";
        } else {
            v1_3 = ":containsOwn";
        }
        this.tq.consume(v1_3);
        String v0 = org.jsoup.parser.TokenQueue.unescape(this.tq.chompBalanced(40, 41));
        org.jsoup.helper.Validate.notEmpty(v0, ":contains(text) query must not be empty");
        if (!p5) {
            this.evals.add(new org.jsoup.select.Evaluator$ContainsText(v0));
        } else {
            this.evals.add(new org.jsoup.select.Evaluator$ContainsOwnText(v0));
        }
        return;
    }

    private void findElements()
    {
        if (!this.tq.matchChomp("#")) {
            if (!this.tq.matchChomp(".")) {
                if (!this.tq.matchesWord()) {
                    if (!this.tq.matches("[")) {
                        if (!this.tq.matchChomp("*")) {
                            if (!this.tq.matchChomp(":lt(")) {
                                if (!this.tq.matchChomp(":gt(")) {
                                    if (!this.tq.matchChomp(":eq(")) {
                                        if (!this.tq.matches(":has(")) {
                                            if (!this.tq.matches(":contains(")) {
                                                if (!this.tq.matches(":containsOwn(")) {
                                                    if (!this.tq.matches(":matches(")) {
                                                        if (!this.tq.matches(":matchesOwn(")) {
                                                            if (!this.tq.matches(":not(")) {
                                                                Object[] v2_1 = new Object[2];
                                                                v2_1[0] = this.query;
                                                                v2_1[1] = this.tq.remainder();
                                                                throw new org.jsoup.select.Selector$SelectorParseException("Could not parse query \'%s\': unexpected token at \'%s\'", v2_1);
                                                            } else {
                                                                this.not();
                                                            }
                                                        } else {
                                                            this.matches(1);
                                                        }
                                                    } else {
                                                        this.matches(0);
                                                    }
                                                } else {
                                                    this.contains(1);
                                                }
                                            } else {
                                                this.contains(0);
                                            }
                                        } else {
                                            this.has();
                                        }
                                    } else {
                                        this.indexEquals();
                                    }
                                } else {
                                    this.indexGreaterThan();
                                }
                            } else {
                                this.indexLessThan();
                            }
                        } else {
                            this.allElements();
                        }
                    } else {
                        this.byAttribute();
                    }
                } else {
                    this.byTag();
                }
            } else {
                this.byClass();
            }
        } else {
            this.byId();
        }
        return;
    }

    private void has()
    {
        this.tq.consume(":has");
        String v0 = this.tq.chompBalanced(40, 41);
        org.jsoup.helper.Validate.notEmpty(v0, ":has(el) subselect must not be empty");
        this.evals.add(new org.jsoup.select.StructuralEvaluator$Has(org.jsoup.select.QueryParser.parse(v0)));
        return;
    }

    private void indexEquals()
    {
        this.evals.add(new org.jsoup.select.Evaluator$IndexEquals(this.consumeIndex()));
        return;
    }

    private void indexGreaterThan()
    {
        this.evals.add(new org.jsoup.select.Evaluator$IndexGreaterThan(this.consumeIndex()));
        return;
    }

    private void indexLessThan()
    {
        this.evals.add(new org.jsoup.select.Evaluator$IndexLessThan(this.consumeIndex()));
        return;
    }

    private void matches(boolean p5)
    {
        java.util.List v1_3;
        if (!p5) {
            v1_3 = ":matches";
        } else {
            v1_3 = ":matchesOwn";
        }
        this.tq.consume(v1_3);
        String v0 = this.tq.chompBalanced(40, 41);
        org.jsoup.helper.Validate.notEmpty(v0, ":matches(regex) query must not be empty");
        if (!p5) {
            this.evals.add(new org.jsoup.select.Evaluator$Matches(java.util.regex.Pattern.compile(v0)));
        } else {
            this.evals.add(new org.jsoup.select.Evaluator$MatchesOwn(java.util.regex.Pattern.compile(v0)));
        }
        return;
    }

    private void not()
    {
        this.tq.consume(":not");
        String v0 = this.tq.chompBalanced(40, 41);
        org.jsoup.helper.Validate.notEmpty(v0, ":not(selector) subselect must not be empty");
        this.evals.add(new org.jsoup.select.StructuralEvaluator$Not(org.jsoup.select.QueryParser.parse(v0)));
        return;
    }

    public static org.jsoup.select.Evaluator parse(String p2)
    {
        return new org.jsoup.select.QueryParser(p2).parse();
    }

    org.jsoup.select.Evaluator parse()
    {
        this.tq.consumeWhitespace();
        if (!this.tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {
            this.findElements();
        } else {
            this.evals.add(new org.jsoup.select.StructuralEvaluator$Root());
            this.combinator(this.tq.consume());
        }
        while (!this.tq.isEmpty()) {
            boolean v1 = this.tq.consumeWhitespace();
            if (!this.tq.matchChomp(",")) {
                if (!this.tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {
                    if (!v1) {
                        this.findElements();
                    } else {
                        this.combinator(32);
                    }
                } else {
                    this.combinator(this.tq.consume());
                }
            } else {
                org.jsoup.select.CombiningEvaluator$Or v0_1 = new org.jsoup.select.CombiningEvaluator$Or(this.evals);
                this.evals.clear();
                this.evals.add(v0_1);
                while (!this.tq.isEmpty()) {
                    v0_1.add(org.jsoup.select.QueryParser.parse(this.tq.chompTo(",")));
                }
            }
        }
        int v3_9;
        if (this.evals.size() != 1) {
            v3_9 = new org.jsoup.select.CombiningEvaluator$And(this.evals);
        } else {
            v3_9 = ((org.jsoup.select.Evaluator) this.evals.get(0));
        }
        return v3_9;
    }
}
package org.jsoup.select;
public class Selector$SelectorParseException extends java.lang.IllegalStateException {

    public varargs Selector$SelectorParseException(String p2, Object[] p3)
    {
        super(String.format(p2, p3));
        return;
    }
}
package org.jsoup.select;
public class Selector {
    private final org.jsoup.select.Evaluator evaluator;
    private final org.jsoup.nodes.Element root;

    private Selector(String p2, org.jsoup.nodes.Element p3)
    {
        org.jsoup.helper.Validate.notNull(p2);
        String v2_1 = p2.trim();
        org.jsoup.helper.Validate.notEmpty(v2_1);
        org.jsoup.helper.Validate.notNull(p3);
        this.evaluator = org.jsoup.select.QueryParser.parse(v2_1);
        this.root = p3;
        return;
    }

    static org.jsoup.select.Elements filterOut(java.util.Collection p7, java.util.Collection p8)
    {
        org.jsoup.select.Elements v5_1 = new org.jsoup.select.Elements();
        java.util.Iterator v2 = p7.iterator();
        while (v2.hasNext()) {
            org.jsoup.nodes.Element v0_0 = ((org.jsoup.nodes.Element) v2.next());
            int v1 = 0;
            java.util.Iterator v3 = p8.iterator();
            while (v3.hasNext()) {
                if (v0_0.equals(((org.jsoup.nodes.Element) v3.next()))) {
                    v1 = 1;
                    break;
                }
            }
            if (v1 == 0) {
                v5_1.add(v0_0);
            }
        }
        return v5_1;
    }

    private org.jsoup.select.Elements select()
    {
        return org.jsoup.select.Collector.collect(this.evaluator, this.root);
    }

    public static org.jsoup.select.Elements select(String p4, Iterable p5)
    {
        org.jsoup.helper.Validate.notEmpty(p4);
        org.jsoup.helper.Validate.notNull(p5);
        java.util.LinkedHashSet v0_1 = new java.util.LinkedHashSet();
        java.util.Iterator v1 = p5.iterator();
        while (v1.hasNext()) {
            v0_1.addAll(org.jsoup.select.Selector.select(p4, ((org.jsoup.nodes.Element) v1.next())));
        }
        return new org.jsoup.select.Elements(v0_1);
    }

    public static org.jsoup.select.Elements select(String p1, org.jsoup.nodes.Element p2)
    {
        return new org.jsoup.select.Selector(p1, p2).select();
    }
}
package org.jsoup.select;
abstract class StructuralEvaluator extends org.jsoup.select.Evaluator {
    org.jsoup.select.Evaluator evaluator;

    StructuralEvaluator()
    {
        return;
    }
}
package org.jsoup.select;
 class StructuralEvaluator$Has extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$Has(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        java.util.Iterator v1 = p5.getAllElements().iterator();
        while (v1.hasNext()) {
            org.jsoup.nodes.Element v0_0 = ((org.jsoup.nodes.Element) v1.next());
            if ((v0_0 != p5) && (this.evaluator.matches(p4, v0_0))) {
                int v2_3 = 1;
            }
            return v2_3;
        }
        v2_3 = 0;
        return v2_3;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluator;
        return String.format(":has(%s)", v1_1);
    }
}
package org.jsoup.select;
 class StructuralEvaluator$ImmediateParent extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$ImmediateParent(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        int v1 = 0;
        if (p4 != p5) {
            org.jsoup.nodes.Element v0 = p5.parent();
            if ((v0 != null) && (this.evaluator.matches(p4, v0))) {
                v1 = 1;
            }
        }
        return v1;
    }
}
package org.jsoup.select;
 class StructuralEvaluator$ImmediatePreviousSibling extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$ImmediatePreviousSibling(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        int v1 = 0;
        if (p4 != p5) {
            org.jsoup.nodes.Element v0 = p5.previousElementSibling();
            if ((v0 != null) && (this.evaluator.matches(p4, v0))) {
                v1 = 1;
            }
        }
        return v1;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluator;
        return String.format(":prev%s", v1_1);
    }
}
package org.jsoup.select;
 class StructuralEvaluator$Not extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$Not(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        int v0_2;
        if (this.evaluator.matches(p2, p3)) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluator;
        return String.format(":not%s", v1_1);
    }
}
package org.jsoup.select;
 class StructuralEvaluator$Parent extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$Parent(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        int v1 = 0;
        if (p4 != p5) {
            org.jsoup.nodes.Element v0 = p5.parent();
            while (v0 != p4) {
                if (!this.evaluator.matches(p4, v0)) {
                    v0 = v0.parent();
                } else {
                    v1 = 1;
                    break;
                }
            }
        }
        return v1;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluator;
        return String.format(":parent%s", v1_1);
    }
}
package org.jsoup.select;
 class StructuralEvaluator$PreviousSibling extends org.jsoup.select.StructuralEvaluator {

    public StructuralEvaluator$PreviousSibling(org.jsoup.select.Evaluator p1)
    {
        this.evaluator = p1;
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p4, org.jsoup.nodes.Element p5)
    {
        int v1 = 0;
        if (p4 != p5) {
            org.jsoup.nodes.Element v0 = p5.previousElementSibling();
            while (v0 != null) {
                if (!this.evaluator.matches(p4, v0)) {
                    v0 = v0.previousElementSibling();
                } else {
                    v1 = 1;
                    break;
                }
            }
        }
        return v1;
    }

    public String toString()
    {
        Object[] v1_1 = new Object[1];
        v1_1[0] = this.evaluator;
        return String.format(":prev*%s", v1_1);
    }
}
package org.jsoup.select;
 class StructuralEvaluator$Root extends org.jsoup.select.Evaluator {

    StructuralEvaluator$Root()
    {
        return;
    }

    public boolean matches(org.jsoup.nodes.Element p2, org.jsoup.nodes.Element p3)
    {
        int v0;
        if (p2 != p3) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        return v0;
    }
}
