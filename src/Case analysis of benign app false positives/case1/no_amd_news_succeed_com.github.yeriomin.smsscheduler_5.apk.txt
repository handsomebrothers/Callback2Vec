package com.github.yeriomin.smsscheduler;
public class BootReceiver extends android.content.BroadcastReceiver {

    public BootReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p7, android.content.Intent p8)
    {
        android.util.Log.i(this.getClass().getName(), "Rescheduling all the sms");
        String v0 = p8.getAction();
        if ((!android.text.TextUtils.isEmpty(v0)) && (v0.equals("android.intent.action.BOOT_COMPLETED"))) {
            java.util.Iterator v1 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(p7).get("PENDING").iterator();
            com.github.yeriomin.smsscheduler.Scheduler v3_1 = new com.github.yeriomin.smsscheduler.Scheduler(p7);
            while (v1.hasNext()) {
                v3_1.schedule(((com.github.yeriomin.smsscheduler.SmsModel) v1.next()));
            }
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class CalendarResolver {
    private java.util.Calendar calendar;
    private String recurringMode;

    public CalendarResolver()
    {
        return;
    }

    private boolean past()
    {
        int v0_1;
        if (java.util.Calendar.getInstance().getTimeInMillis() <= this.calendar.getTimeInMillis()) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    private void step()
    {
        boolean v3_4 = this.recurringMode;
        String v0_0 = -1;
        switch (v3_4.hashCode()) {
            case -828189629:
                if (!v3_4.equals("RECURRING_WEEKLY")) {
                } else {
                    v0_0 = 1;
                }
                break;
            case -771043764:
                if (!v3_4.equals("RECURRING_YEARLY")) {
                } else {
                    v0_0 = 3;
                }
                break;
            case -737114633:
                if (!v3_4.equals("RECURRING_DAILY")) {
                } else {
                    v0_0 = 0;
                }
                break;
            case 105690219:
                if (!v3_4.equals("RECURRING_MONTHLY")) {
                } else {
                    v0_0 = 2;
                }
                break;
        }
        switch (v0_0) {
            case 0:
                this.calendar.add(5, 1);
                break;
            case 1:
                this.calendar.add(5, 7);
                break;
            case 2:
                this.calendar.add(2, 1);
                break;
            case 3:
                this.calendar.add(1, 1);
                break;
            default:
                throw new IllegalArgumentException(new StringBuilder().append("Unsupported recurring mode: ").append(this.recurringMode).toString());
        }
        return;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver advance()
    {
        while (this.past()) {
            try {
                this.step();
            } catch (IllegalArgumentException v0) {
                android.util.Log.w(this.getClass().getName(), v0.getMessage());
                break;
            }
        }
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver reset()
    {
        this.calendar.set(5, java.util.Calendar.getInstance().get(5));
        this.calendar.set(2, java.util.Calendar.getInstance().get(2));
        this.calendar.set(1, java.util.Calendar.getInstance().get(1));
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver setCalendar(java.util.Calendar p1)
    {
        this.calendar = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver setDayOfMonth(int p3)
    {
        this.calendar.set(5, p3);
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver setMonth(int p6)
    {
        java.util.Calendar v0 = java.util.Calendar.getInstance();
        v0.set(1, this.calendar.get(1));
        v0.set(2, (p6 - 1));
        if (this.calendar.get(5) > v0.getActualMaximum(5)) {
            this.calendar.set(5, v0.getActualMaximum(5));
        }
        this.calendar.set(2, (p6 - 1));
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver setRecurringMode(String p1)
    {
        this.recurringMode = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.CalendarResolver setWeekDay(int p6)
    {
        if ((p6 >= 1) && (p6 <= 7)) {
            this.calendar.set(5, java.util.Calendar.getInstance().get(5));
            while ((this.past()) || (this.calendar.get(7) != p6)) {
                this.calendar.add(5, 1);
            }
        } else {
            android.util.Log.e(this.getClass().getName(), "Week day number must be from 1 to 7");
        }
        return this;
    }
}
package com.github.yeriomin.smsscheduler;
public class DbHelper extends android.database.sqlite.SQLiteOpenHelper {
    private static com.github.yeriomin.smsscheduler.DbHelper dbHelper;

    public DbHelper(android.content.Context p4)
    {
        super(p4, "SmsScheduler.db", 0, 2);
        return;
    }

    public static void closeDbHelper()
    {
        if (com.github.yeriomin.smsscheduler.DbHelper.dbHelper != null) {
            com.github.yeriomin.smsscheduler.DbHelper.dbHelper.close();
        }
        return;
    }

    public static com.github.yeriomin.smsscheduler.DbHelper getDbHelper(android.content.Context p1)
    {
        if (com.github.yeriomin.smsscheduler.DbHelper.dbHelper == null) {
            com.github.yeriomin.smsscheduler.DbHelper.dbHelper = new com.github.yeriomin.smsscheduler.DbHelper(p1);
        }
        return com.github.yeriomin.smsscheduler.DbHelper.dbHelper;
    }

    private java.util.ArrayList getObjects(android.database.Cursor p15)
    {
        java.util.ArrayList v10_1 = new java.util.ArrayList();
        int v7 = p15.getColumnIndex("datetimeCreated");
        int v8 = p15.getColumnIndex("datetimeScheduled");
        int v2 = p15.getColumnIndex("recipientNumber");
        int v1 = p15.getColumnIndex("recipientName");
        int v0 = p15.getColumnIndex("message");
        int v5 = p15.getColumnIndex("status");
        int v4 = p15.getColumnIndex("result");
        int v6 = p15.getColumnIndex("subscriptionId");
        int v3 = p15.getColumnIndex("recurringMode");
        while (p15.moveToNext()) {
            com.github.yeriomin.smsscheduler.SmsModel v9_1 = new com.github.yeriomin.smsscheduler.SmsModel();
            v9_1.setTimestampCreated(p15.getLong(v7));
            v9_1.setTimestampScheduled(p15.getLong(v8));
            v9_1.setRecipientNumber(p15.getString(v2));
            v9_1.setRecipientName(p15.getString(v1));
            v9_1.setMessage(p15.getString(v0));
            v9_1.setStatus(p15.getString(v5));
            v9_1.setResult(p15.getString(v4));
            v9_1.setSubscriptionId(p15.getInt(v6));
            v9_1.setRecurringMode(p15.getString(v3));
            v10_1.add(v9_1);
        }
        return v10_1;
    }

    private void onUpgradeV2(android.database.sqlite.SQLiteDatabase p2)
    {
        p2.execSQL("ALTER TABLE sms ADD COLUMN subscriptionId INTEGER NOT NULL DEFAULT 0");
        p2.execSQL("ALTER TABLE sms ADD COLUMN recurringMode TEXT NOT NULL DEFAULT \"RECURRING_NO\"");
        return;
    }

    public void delete(Long p5)
    {
        String[] v1 = new String[1];
        v1[0] = p5.toString();
        com.github.yeriomin.smsscheduler.DbHelper.dbHelper.getReadableDatabase().delete("sms", "datetimeCreated=?", v1);
        return;
    }

    public com.github.yeriomin.smsscheduler.SmsModel get(long p14)
    {
        com.github.yeriomin.smsscheduler.SmsModel v0_2;
        com.github.yeriomin.smsscheduler.SmsModel v0_4 = com.github.yeriomin.smsscheduler.DbHelper.dbHelper.getReadableDatabase();
        String[] v3_1 = new String[2];
        v3_1[0] = "*";
        v3_1[1] = "datetimeCreated AS _id";
        String[] v5_1 = new String[1];
        v5_1[0] = Long.toString(p14);
        android.database.Cursor v10 = v0_4.query(0, "sms", v3_1, "datetimeCreated=?", v5_1, 0, 0, 0, "1");
        if (v10 == null) {
            v0_2 = 0;
        } else {
            java.util.ArrayList v11 = this.getObjects(v10);
            v10.close();
            if (v11.size() <= 0) {
            } else {
                v0_2 = ((com.github.yeriomin.smsscheduler.SmsModel) v11.get(0));
            }
        }
        return v0_2;
    }

    public java.util.ArrayList get(String p3)
    {
        int v1;
        android.database.Cursor v0 = this.getCursor(p3);
        if (v0 == null) {
            v1 = 0;
        } else {
            v1 = this.getObjects(v0);
            v0.close();
        }
        return v1;
    }

    public android.database.Cursor getCursor()
    {
        return this.getCursor("");
    }

    public android.database.Cursor getCursor(String p9)
    {
        String[] v2 = new String[2];
        v2[0] = "*";
        v2[1] = "datetimeCreated AS _id";
        String v3 = "";
        String[] v4 = new String[0];
        if ((p9 != null) && (p9.length() > 0)) {
            v3 = "status=?";
            v4 = new String[1];
            v4[0] = p9;
        }
        return com.github.yeriomin.smsscheduler.DbHelper.dbHelper.getReadableDatabase().query("sms", v2, v3, v4, 0, 0, "datetimeCreated DESC");
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase p2)
    {
        p2.execSQL("CREATE TABLE sms(datetimeCreated BIGINTEGER PRIMARY KEY,datetimeScheduled BIGINTEGER,recipientNumber TEXT,recipientName TEXT,message TEXT,status TEXT,result TEXT,subscriptionId INTEGER,recurringMode TEXT)");
        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase p3, int p4, int p5)
    {
        if (p5 > p4) {
            if ((p4 == 1) && (p5 >= 2)) {
                android.util.Log.i(this.getClass().getName(), "Upgrading DB! oldVersion == 1 && newVersion >= 2");
                this.onUpgradeV2(p3);
                android.util.Log.i(this.getClass().getName(), "Done");
            }
        } else {
            android.util.Log.i(this.getClass().getName(), "newVersion <= oldVersion");
        }
        return;
    }

    public void save(com.github.yeriomin.smsscheduler.SmsModel p11)
    {
        android.content.ContentValues v2_1 = new android.content.ContentValues();
        v2_1.put("datetimeScheduled", p11.getTimestampScheduled());
        v2_1.put("recipientName", p11.getRecipientName());
        v2_1.put("recipientNumber", p11.getRecipientNumber());
        v2_1.put("message", p11.getMessage());
        v2_1.put("status", p11.getStatus());
        v2_1.put("result", p11.getResult());
        v2_1.put("subscriptionId", Integer.valueOf(p11.getSubscriptionId()));
        v2_1.put("recurringMode", p11.getRecurringMode());
        if (p11.getTimestampCreated().longValue() <= 0) {
            long v0 = System.currentTimeMillis();
            p11.setTimestampCreated(v0);
            v2_1.put("datetimeCreated", Long.valueOf(v0));
            com.github.yeriomin.smsscheduler.DbHelper.dbHelper.getWritableDatabase().insert("sms", 0, v2_1);
        } else {
            String[] v3 = new String[1];
            v3[0] = p11.getTimestampCreated().toString();
            com.github.yeriomin.smsscheduler.DbHelper.dbHelper.getWritableDatabase().update("sms", v2_1, "datetimeCreated=?", v3);
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public abstract class WakefulBroadcastReceiver extends android.content.BroadcastReceiver {
    private static final android.util.SparseArray mActiveWakeLocks;
    private static int mNextId;

    static WakefulBroadcastReceiver()
    {
        com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mActiveWakeLocks = new android.util.SparseArray();
        com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId = 1;
        return;
    }

    public WakefulBroadcastReceiver()
    {
        return;
    }

    public static boolean completeWakefulIntent(android.content.Intent p7)
    {
        int v2_0 = 0;
        int v0 = p7.getIntExtra("android.support.content.wakelockid", 0);
        if (v0 != 0) {
            try {
                android.os.PowerManager$WakeLock v1_0 = ((android.os.PowerManager$WakeLock) com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mActiveWakeLocks.get(v0));
            } catch (int v2_3) {
                throw v2_3;
            }
            if (v1_0 == null) {
                android.util.Log.w("WakefulBroadcastReceive", new StringBuilder().append("No active wake lock id #").append(v0).toString());
                v2_0 = 1;
            } else {
                v1_0.release();
                com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mActiveWakeLocks.remove(v0);
                v2_0 = 1;
            }
        }
        return v2_0;
    }

    public static android.content.ComponentName startWakefulService(android.content.Context p8, android.content.Intent p9)
    {
        try {
            int v1 = com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId;
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId = (com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId + 1);
        } catch (android.util.SparseArray v4_6) {
            throw v4_6;
        }
        if (com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId <= 0) {
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mNextId = 1;
        }
        p9.putExtra("android.support.content.wakelockid", v1);
        int v0 = p8.startService(p9);
        if (v0 != 0) {
            android.os.PowerManager$WakeLock v3 = ((android.os.PowerManager) p8.getSystemService("power")).newWakeLock(1, new StringBuilder().append("wake:").append(v0.flattenToShortString()).toString());
            v3.setReferenceCounted(0);
            v3.acquire(60000);
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.mActiveWakeLocks.put(v1, v3);
        } else {
            v0 = 0;
        }
        return v0;
    }

    protected abstract Class getServiceClass();

    public void onReceive(android.content.Context p4, android.content.Intent p5)
    {
        android.util.Log.i(this.getClass().getName(), "Received intent");
        android.content.Intent v0_1 = new android.content.Intent(p4, this.getServiceClass());
        if (p5.getExtras() != null) {
            v0_1.putExtras(p5.getExtras());
        }
        v0_1.putExtra("resultCode", this.getResultCode());
        com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.startWakefulService(p4, v0_1);
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class ReminderReceiver extends com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver {

    public ReminderReceiver()
    {
        return;
    }

    protected Class getServiceClass()
    {
        return com.github.yeriomin.smsscheduler.ReminderService;
    }
}
package com.github.yeriomin.smsscheduler;
public abstract class SmsIntentService extends android.app.IntentService {
    protected long timestampCreated;

    public SmsIntentService(String p1)
    {
        super(p1);
        return;
    }

    protected void onHandleIntent(android.content.Intent p5)
    {
        android.util.Log.i(this.getClass().getName(), "Handling intent");
        this.timestampCreated = p5.getLongExtra("datetimeCreated", 0);
        if (this.timestampCreated == 0) {
            android.util.Log.i(this.getClass().getName(), "Cannot identify sms: no creation timestamp provided");
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class ReminderService extends com.github.yeriomin.smsscheduler.SmsIntentService {

    public ReminderService()
    {
        super("ReminderService");
        return;
    }

    private static void remind(android.content.Context p8, com.github.yeriomin.smsscheduler.SmsModel p9)
    {
        android.content.Intent v0_1 = new android.content.Intent(p8, com.github.yeriomin.smsscheduler.UnscheduleService);
        v0_1.putExtra("datetimeCreated", p9.getTimestampCreated());
        com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper v1_3 = new com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper(p8);
        int v2_1 = (p9.getId() + 1);
        android.app.Notification v3_1 = com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper.getBuilder(p8).setTitle(p8.getString(2131099682));
        int v5_1 = new Object[1];
        v5_1[0] = p9.getRecipientName();
        v1_3.show(v2_1, v3_1.setMessage(p8.getString(2131099681, v5_1)).setIntent(new android.content.Intent(p8, com.github.yeriomin.smsscheduler.activity.SmsListActivity)).addAction(17301560, 2131099654, android.app.PendingIntent.getService(p8, p9.getId(), v0_1, 0)).build());
        return;
    }

    protected void onHandleIntent(android.content.Intent p7)
    {
        super.onHandleIntent(p7);
        if (this.timestampCreated != 0) {
            com.github.yeriomin.smsscheduler.SmsModel v0 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this.getApplicationContext()).get(this.timestampCreated);
            if (v0 != null) {
                android.util.Log.i(this.getClass().getName(), new StringBuilder().append("Reminding about sms ").append(this.timestampCreated).toString());
                com.github.yeriomin.smsscheduler.ReminderService.remind(this.getApplicationContext(), v0);
                com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.completeWakefulIntent(p7);
            } else {
                android.util.Log.i(this.getClass().getName(), new StringBuilder().append("No sms created at ").append(this.timestampCreated).append(" found").toString());
            }
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class Scheduler {
    private android.app.AlarmManager alarmManager;
    private android.content.Context context;

    public Scheduler(android.content.Context p2)
    {
        this.context = p2;
        this.alarmManager = ((android.app.AlarmManager) p2.getSystemService("alarm"));
        return;
    }

    private android.app.PendingIntent getAlarmPendingIntent(long p6, Class p8)
    {
        android.content.Intent v0_1 = new android.content.Intent(this.context, p8);
        v0_1.putExtra("datetimeCreated", p6);
        return android.app.PendingIntent.getBroadcast(this.context, ((int) (p6 / 1000)), v0_1, 0);
    }

    private void setAlarm(long p4, android.app.PendingIntent p6)
    {
        if (android.os.Build$VERSION.SDK_INT < 23) {
            if (android.os.Build$VERSION.SDK_INT < 19) {
                this.alarmManager.set(0, p4, p6);
            } else {
                this.alarmManager.setExact(0, p4, p6);
            }
        } else {
            this.alarmManager.setExactAndAllowWhileIdle(0, p4, p6);
        }
        return;
    }

    public void schedule(com.github.yeriomin.smsscheduler.SmsModel p6)
    {
        if (this.alarmManager != null) {
            android.util.Log.i(this.getClass().getName(), new StringBuilder().append("Scheduling sms to ").append(java.text.DateFormat.getDateTimeInstance().format(p6.getCalendar().getTime())).toString());
            this.setAlarm(p6.getTimestampScheduled().longValue(), this.getAlarmPendingIntent(p6.getTimestampCreated().longValue(), com.github.yeriomin.smsscheduler.SmsSenderReceiver));
            if (android.preference.PreferenceManager.getDefaultSharedPreferences(this.context).getBoolean("PREFERENCE_REMINDERS", 0)) {
                this.setAlarm((p6.getTimestampScheduled().longValue() - 3600000), this.getAlarmPendingIntent(p6.getTimestampCreated().longValue(), com.github.yeriomin.smsscheduler.ReminderReceiver));
            }
        }
        return;
    }

    public void unschedule(long p4)
    {
        if (this.alarmManager != null) {
            this.alarmManager.cancel(this.getAlarmPendingIntent(p4, com.github.yeriomin.smsscheduler.SmsSenderReceiver));
            this.alarmManager.cancel(this.getAlarmPendingIntent(p4, com.github.yeriomin.smsscheduler.ReminderReceiver));
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsDeliveredReceiver extends com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver {

    public SmsDeliveredReceiver()
    {
        return;
    }

    protected Class getServiceClass()
    {
        return com.github.yeriomin.smsscheduler.SmsDeliveredService;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsDeliveredService extends com.github.yeriomin.smsscheduler.SmsIntentService {

    public SmsDeliveredService()
    {
        super("SmsDeliveredService");
        return;
    }

    protected void onHandleIntent(android.content.Intent p7)
    {
        super.onHandleIntent(p7);
        if (this.timestampCreated != 0) {
            com.github.yeriomin.smsscheduler.SmsModel v0 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).get(this.timestampCreated);
            v0.setStatus("DELIVERED");
            com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).save(v0);
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.completeWakefulIntent(p7);
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
final class SmsModel$1 implements android.os.Parcelable$Creator {

    SmsModel$1()
    {
        return;
    }

    public com.github.yeriomin.smsscheduler.SmsModel createFromParcel(android.os.Parcel p2)
    {
        return new com.github.yeriomin.smsscheduler.SmsModel(p2);
    }

    public bridge synthetic Object createFromParcel(android.os.Parcel p2)
    {
        return this.createFromParcel(p2);
    }

    public com.github.yeriomin.smsscheduler.SmsModel[] newArray(int p2)
    {
        com.github.yeriomin.smsscheduler.SmsModel[] v0 = new com.github.yeriomin.smsscheduler.SmsModel[p2];
        return v0;
    }

    public bridge synthetic Object[] newArray(int p2)
    {
        return this.newArray(p2);
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsModel implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator CREATOR;
    private java.util.Calendar calendar;
    private String message;
    private String recipientName;
    private String recipientNumber;
    private String recurringMode;
    private String result;
    private String status;
    private int subscriptionId;
    private long timestampCreated;

    static SmsModel()
    {
        com.github.yeriomin.smsscheduler.SmsModel.CREATOR = new com.github.yeriomin.smsscheduler.SmsModel$1();
        return;
    }

    public SmsModel()
    {
        this.status = "PENDING";
        this.recurringMode = "RECURRING_NO";
        this.result = "";
        this.calendar = java.util.Calendar.getInstance();
        this.calendar.set(13, 0);
        this.calendar.set(14, 1);
        return;
    }

    public SmsModel(android.os.Parcel p5)
    {
        this.status = "PENDING";
        this.recurringMode = "RECURRING_NO";
        this.result = "";
        this.calendar = java.util.Calendar.getInstance();
        this.timestampCreated = p5.readLong();
        this.calendar.setTimeInMillis(p5.readLong());
        this.recipientNumber = p5.readString();
        this.recipientName = p5.readString();
        this.message = p5.readString();
        this.status = p5.readString();
        this.result = p5.readString();
        this.subscriptionId = p5.readInt();
        this.recurringMode = p5.readString();
        return;
    }

    public int describeContents()
    {
        return 0;
    }

    public java.util.Calendar getCalendar()
    {
        return this.calendar;
    }

    public int getId()
    {
        return ((int) (this.getTimestampCreated().longValue() / 1000));
    }

    public String getMessage()
    {
        return this.message;
    }

    public String getRecipientName()
    {
        return this.recipientName;
    }

    public String getRecipientNumber()
    {
        return this.recipientNumber;
    }

    public String getRecurringMode()
    {
        return this.recurringMode;
    }

    public String getResult()
    {
        return this.result;
    }

    public String getStatus()
    {
        return this.status;
    }

    public int getSubscriptionId()
    {
        return this.subscriptionId;
    }

    public Long getTimestampCreated()
    {
        return Long.valueOf(this.timestampCreated);
    }

    public Long getTimestampScheduled()
    {
        return Long.valueOf(this.calendar.getTimeInMillis());
    }

    public void setMessage(String p1)
    {
        this.message = p1;
        return;
    }

    public void setRecipientName(String p1)
    {
        this.recipientName = p1;
        return;
    }

    public void setRecipientNumber(String p1)
    {
        this.recipientNumber = p1;
        return;
    }

    public void setRecurringMode(String p1)
    {
        this.recurringMode = p1;
        return;
    }

    public void setResult(String p1)
    {
        this.result = p1;
        return;
    }

    public void setStatus(String p1)
    {
        this.status = p1;
        return;
    }

    public void setSubscriptionId(int p1)
    {
        this.subscriptionId = p1;
        return;
    }

    public void setTimestampCreated(long p2)
    {
        this.timestampCreated = p2;
        return;
    }

    public void setTimestampScheduled(long p2)
    {
        this.calendar.setTimeInMillis(p2);
        return;
    }

    public void writeToParcel(android.os.Parcel p3, int p4)
    {
        p3.writeLong(this.timestampCreated);
        p3.writeLong(this.calendar.getTimeInMillis());
        p3.writeString(this.recipientNumber);
        p3.writeString(this.recipientName);
        p3.writeString(this.message);
        p3.writeString(this.status);
        p3.writeString(this.result);
        p3.writeInt(this.subscriptionId);
        p3.writeString(this.recurringMode);
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsSenderReceiver extends com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver {

    public SmsSenderReceiver()
    {
        return;
    }

    protected Class getServiceClass()
    {
        return com.github.yeriomin.smsscheduler.SmsSenderService;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsSenderService extends com.github.yeriomin.smsscheduler.SmsIntentService {

    public SmsSenderService()
    {
        super("SmsSenderService");
        return;
    }

    private android.app.PendingIntent getPendingIntent(long p4, Class p6)
    {
        android.content.Intent v0_1 = new android.content.Intent(this, p6);
        v0_1.setAction(Long.toString(p4));
        v0_1.putExtra("datetimeCreated", p4);
        return android.app.PendingIntent.getBroadcast(this, 0, v0_1, 0);
    }

    private android.telephony.SmsManager getSmsManager(int p5)
    {
        android.telephony.SmsManager v0 = android.telephony.SmsManager.getDefault();
        if (android.os.Build$VERSION.SDK_INT >= 22) {
            android.telephony.SubscriptionManager v1_1 = ((android.telephony.SubscriptionManager) this.getSystemService("telephony_subscription_service"));
            if ((v1_1 != null) && (v1_1.getActiveSubscriptionInfo(p5) != null)) {
                v0 = android.telephony.SmsManager.getSmsManagerForSubscriptionId(p5);
            }
        }
        return v0;
    }

    private void scheduleNextSms(com.github.yeriomin.smsscheduler.SmsModel p5)
    {
        long v0 = p5.getTimestampScheduled().longValue();
        new com.github.yeriomin.smsscheduler.CalendarResolver().setCalendar(p5.getCalendar()).setRecurringMode(p5.getRecurringMode()).advance();
        if (v0 != p5.getTimestampScheduled().longValue()) {
            com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).save(p5);
            new com.github.yeriomin.smsscheduler.Scheduler(this.getApplicationContext()).schedule(p5);
        } else {
            android.util.Log.w(this.getClass().getName(), "No valid next date found");
        }
        return;
    }

    private void sendSms(com.github.yeriomin.smsscheduler.SmsModel p15)
    {
        java.util.ArrayList v4_1 = new java.util.ArrayList();
        java.util.ArrayList v7_1 = new java.util.ArrayList();
        android.app.PendingIntent v10 = this.getPendingIntent(p15.getTimestampCreated().longValue(), com.github.yeriomin.smsscheduler.SmsSentReceiver);
        android.app.PendingIntent v6 = this.getPendingIntent(p15.getTimestampCreated().longValue(), com.github.yeriomin.smsscheduler.SmsDeliveredReceiver);
        android.telephony.SmsManager v0 = this.getSmsManager(p15.getSubscriptionId());
        java.util.ArrayList v3 = v0.divideMessage(p15.getMessage());
        boolean v8 = android.preference.PreferenceManager.getDefaultSharedPreferences(this.getApplicationContext()).getBoolean("PREFERENCE_DELIVERY_REPORTS", 0);
        int v9 = 0;
        while (v9 < v3.size()) {
            v4_1.add(v9, v10);
            if (v8) {
                v7_1.add(v9, v6);
            }
            v9++;
        }
        int v5_1;
        String v1_7 = p15.getRecipientNumber();
        if (!v8) {
            v5_1 = 0;
        } else {
            v5_1 = v7_1;
        }
        v0.sendMultipartTextMessage(v1_7, 0, v3, v4_1, v5_1);
        return;
    }

    protected void onHandleIntent(android.content.Intent p7)
    {
        super.onHandleIntent(p7);
        if (this.timestampCreated != 0) {
            com.github.yeriomin.smsscheduler.SmsModel v1 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).get(this.timestampCreated);
            android.util.Log.i(this.getClass().getName(), new StringBuilder().append("Sending sms ").append(this.timestampCreated).toString());
            this.sendSms(v1);
            String v0 = v1.getRecurringMode();
            if ((!android.text.TextUtils.isEmpty(v0)) && (!v0.equals("RECURRING_NO"))) {
                android.util.Log.i(this.getClass().getName(), "Scheduling next sms");
                this.scheduleNextSms(v1);
            }
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.completeWakefulIntent(p7);
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsSentReceiver extends com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver {

    public SmsSentReceiver()
    {
        return;
    }

    protected Class getServiceClass()
    {
        return com.github.yeriomin.smsscheduler.SmsSentService;
    }
}
package com.github.yeriomin.smsscheduler;
public class SmsSentService extends com.github.yeriomin.smsscheduler.SmsIntentService {

    public SmsSentService()
    {
        super("SmsSentService");
        return;
    }

    private void notify(android.content.Context p5, String p6, String p7, int p8)
    {
        new com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper(p5).show(p8, com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper.getBuilder(p5).setIntent(new android.content.Intent(p5, com.github.yeriomin.smsscheduler.activity.SmsListActivity)).setMessage(p7).setTitle(p6).build());
        return;
    }

    protected void onHandleIntent(android.content.Intent p13)
    {
        super.onHandleIntent(p13);
        if (this.timestampCreated != 0) {
            android.util.Log.i(this.getClass().getName(), new StringBuilder().append("Notifying that sms ").append(this.timestampCreated).append(" is sent").toString());
            com.github.yeriomin.smsscheduler.SmsModel v3 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).get(this.timestampCreated);
            String v0 = "";
            String v1 = "";
            String v4 = this.getString(2131099668);
            String v2 = "";
            v3.setStatus("FAILED");
            switch (p13.getIntExtra("resultCode", 0)) {
                case -1:
                    v4 = this.getString(2131099669);
                    Object[] v6_8 = new Object[1];
                    v6_8[0] = v3.getRecipientName();
                    v2 = this.getString(2131099667, v6_8);
                    v3.setStatus("SENT");
                    break;
                case 0:
                default:
                    v0 = "UNKNOWN";
                    v1 = this.getString(2131099652);
                    break;
                case 1:
                    v0 = "GENERIC";
                    v1 = this.getString(2131099648);
                    break;
                case 2:
                    v0 = "RADIO_OFF";
                    v1 = this.getString(2131099651);
                    break;
                case 3:
                    v0 = "NULL_PDU";
                    v1 = this.getString(2131099650);
                    break;
                case 4:
                    v0 = "NO_SERVICE";
                    v1 = this.getString(2131099649);
                    break;
            }
            if (v0.length() > 0) {
                v3.setResult(v0);
                Object[] v6_10 = new Object[2];
                v6_10[0] = v3.getRecipientName();
                v6_10[1] = v1;
                v2 = this.getString(2131099666, v6_10);
            }
            com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).save(v3);
            this.notify(this, v4, v2, v3.getId());
            com.github.yeriomin.smsscheduler.WakefulBroadcastReceiver.completeWakefulIntent(p13);
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler;
public class UnscheduleService extends com.github.yeriomin.smsscheduler.SmsIntentService {

    public UnscheduleService()
    {
        super("UnscheduleService");
        return;
    }

    private static void unschedule(android.content.Context p5, long p6)
    {
        new com.github.yeriomin.smsscheduler.Scheduler(p5).unschedule(p6);
        com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(p5).delete(Long.valueOf(p6));
        int v0 = (((int) (p6 / 1000)) + 1);
        android.util.Log.i(com.github.yeriomin.smsscheduler.UnscheduleService.getName(), new StringBuilder().append("Deleting notification with id ").append(v0).toString());
        new com.github.yeriomin.smsscheduler.notification.NotificationManagerWrapper(p5).cancel(v0);
        return;
    }

    protected void onHandleIntent(android.content.Intent p5)
    {
        super.onHandleIntent(p5);
        if (this.timestampCreated != 0) {
            android.util.Log.i(this.getClass().getName(), new StringBuilder().append("Removing sms ").append(this.timestampCreated).toString());
            com.github.yeriomin.smsscheduler.UnscheduleService.unschedule(this.getApplicationContext(), this.timestampCreated);
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler.activity;
public class AddSmsActivity extends android.app.Activity {
    private java.util.ArrayList permissionsGranted;
    private final String[] permissionsRequired;
    private com.github.yeriomin.smsscheduler.SmsModel sms;

    public AddSmsActivity()
    {
        java.util.ArrayList v0_3 = new String[3];
        v0_3[0] = "android.permission.READ_PHONE_STATE";
        v0_3[1] = "android.permission.SEND_SMS";
        v0_3[2] = "android.permission.READ_CONTACTS";
        this.permissionsRequired = v0_3;
        this.permissionsGranted = new java.util.ArrayList();
        return;
    }

    private void buildForm()
    {
        android.widget.EditText v1_1 = ((android.widget.EditText) this.findViewById(2131296265));
        android.widget.AutoCompleteTextView v0_1 = ((android.widget.AutoCompleteTextView) this.findViewById(2131296264));
        com.github.yeriomin.smsscheduler.view.EmptinessTextWatcher v2_0 = new com.github.yeriomin.smsscheduler.view.EmptinessTextWatcher(this, v0_1, v1_1);
        v0_1.addTextChangedListener(v2_0);
        v1_1.addTextChangedListener(v2_0);
        new com.github.yeriomin.smsscheduler.view.BuilderMessage().setView(v1_1).setSms(this.sms).build();
        new com.github.yeriomin.smsscheduler.view.BuilderContact().setView(v0_1).setSms(this.sms).setActivity(this).build();
        new com.github.yeriomin.smsscheduler.view.BuilderSimCard().setActivity(this).setView(this.findViewById(2131296261)).setSms(this.sms).build();
        new com.github.yeriomin.smsscheduler.view.BuilderRecurringMode().setRecurringDayView(((android.widget.Spinner) this.findViewById(2131296259))).setRecurringMonthView(((android.widget.Spinner) this.findViewById(2131296260))).setDateView(((android.widget.DatePicker) this.findViewById(2131296258))).setActivity(this).setView(this.findViewById(2131296257)).setSms(this.sms).build();
        new com.github.yeriomin.smsscheduler.view.BuilderTime().setActivity(this).setView(this.findViewById(2131296256)).setSms(this.sms).build();
        new com.github.yeriomin.smsscheduler.view.BuilderDate().setActivity(this).setView(this.findViewById(2131296258)).setSms(this.sms).build();
        new com.github.yeriomin.smsscheduler.view.BuilderCancel().setView(this.findViewById(2131296266)).setSms(this.sms).build();
        return;
    }

    private boolean permissionsGranted()
    {
        int v0 = 1;
        if (android.os.Build$VERSION.SDK_INT >= 23) {
            java.util.ArrayList v2_1 = new java.util.ArrayList();
            String[] v5_1 = this.permissionsRequired;
            int v6 = v5_1.length;
            int v4_5 = 0;
            while (v4_5 < v6) {
                String v3 = v5_1[v4_5];
                if (this.checkSelfPermission(v3) == 0) {
                    this.permissionsGranted.add(v3);
                } else {
                    v2_1.add(v3);
                }
                v4_5++;
            }
            if (v2_1.size() > 0) {
                v0 = 0;
                int v4_3 = new String[v2_1.size()];
                this.requestPermissions(((String[]) v2_1.toArray(v4_3)), 124);
            }
        }
        return v0;
    }

    private boolean validateForm()
    {
        int v0 = 1;
        if (this.sms.getTimestampScheduled().longValue() < java.util.GregorianCalendar.getInstance().getTimeInMillis()) {
            android.widget.Toast.makeText(this.getApplicationContext(), this.getString(2131099658), 0).show();
            v0 = 0;
        }
        if (android.text.TextUtils.isEmpty(this.sms.getRecipientNumber())) {
            ((android.widget.AutoCompleteTextView) this.findViewById(2131296264)).setError(this.getString(2131099679));
            v0 = 0;
        }
        if (android.text.TextUtils.isEmpty(this.sms.getMessage())) {
            ((android.widget.EditText) this.findViewById(2131296265)).setError(this.getString(2131099680));
            v0 = 0;
        }
        return v0;
    }

    protected void onCreate(android.os.Bundle p7)
    {
        super.onCreate(p7);
        this.setContentView(2130968576);
        long v0 = this.getIntent().getLongExtra("INTENT_SMS_ID", 0);
        if (v0 <= 0) {
            if (p7 != null) {
                this.sms = ((com.github.yeriomin.smsscheduler.SmsModel) p7.getParcelable("SMS_STATE"));
            }
        } else {
            this.sms = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).get(v0);
        }
        if (this.sms == null) {
            this.sms = new com.github.yeriomin.smsscheduler.SmsModel();
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131230720, p3);
        return 1;
    }

    protected void onDestroy()
    {
        super.onDestroy();
        com.github.yeriomin.smsscheduler.DbHelper.closeDbHelper();
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p4)
    {
        switch (p4.getItemId()) {
            case 2131296271:
                this.startActivityForResult(new android.content.Intent(this, com.github.yeriomin.smsscheduler.activity.SmsSchedulerPreferenceActivity), 1);
                break;
        }
        return 1;
    }

    protected void onPause()
    {
        super.onPause();
        com.github.yeriomin.smsscheduler.DbHelper.closeDbHelper();
        return;
    }

    public void onRequestPermissionsResult(int p6, String[] p7, int[] p8)
    {
        switch (p6) {
            case 124:
                java.util.List v2 = java.util.Arrays.asList(this.permissionsRequired);
                int v0 = 0;
                while (v0 < p7.length) {
                    String v1 = p7[v0];
                    if ((v2.contains(v1)) && (p8[v0] == 0)) {
                        this.permissionsGranted.add(v1);
                    }
                    v0++;
                }
                if (this.permissionsGranted.size() != this.permissionsRequired.length) {
                } else {
                    this.buildForm();
                }
                break;
            default:
                super.onRequestPermissionsResult(p6, p7, p8);
        }
        return;
    }

    protected void onRestoreInstanceState(android.os.Bundle p2)
    {
        super.onRestoreInstanceState(p2);
        if (this.sms == null) {
            this.sms = ((com.github.yeriomin.smsscheduler.SmsModel) p2.getParcelable("SMS_STATE"));
        }
        if (this.sms == null) {
            this.sms = new com.github.yeriomin.smsscheduler.SmsModel();
        }
        return;
    }

    protected void onResume()
    {
        super.onResume();
        if (this.permissionsGranted()) {
            this.buildForm();
        }
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle p3)
    {
        super.onSaveInstanceState(p3);
        if (this.sms != null) {
            p3.putParcelable("SMS_STATE", this.sms);
        }
        return;
    }

    public void scheduleSms(android.view.View p3)
    {
        if (this.validateForm()) {
            this.sms.setStatus("PENDING");
            com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).save(this.sms);
            new com.github.yeriomin.smsscheduler.Scheduler(this.getApplicationContext()).schedule(this.sms);
            this.setResult(1, new android.content.Intent());
            this.finish();
        }
        return;
    }

    public void unscheduleSms(android.view.View p5)
    {
        com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).delete(this.sms.getTimestampCreated());
        new com.github.yeriomin.smsscheduler.Scheduler(this.getApplicationContext()).unschedule(this.sms.getTimestampCreated().longValue());
        this.setResult(2, new android.content.Intent());
        this.finish();
        return;
    }
}
package com.github.yeriomin.smsscheduler.activity;
 class SmsListActivity$1 implements android.widget.AdapterView$OnItemClickListener {
    final synthetic com.github.yeriomin.smsscheduler.activity.SmsListActivity this$0;

    SmsListActivity$1(com.github.yeriomin.smsscheduler.activity.SmsListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onItemClick(android.widget.AdapterView p5, android.view.View p6, int p7, long p8)
    {
        android.content.Intent v0_1 = new android.content.Intent(this.this$0.getApplicationContext(), com.github.yeriomin.smsscheduler.activity.AddSmsActivity);
        v0_1.putExtra("INTENT_SMS_ID", p8);
        this.this$0.startActivityForResult(v0_1, 1);
        return;
    }
}
package com.github.yeriomin.smsscheduler.activity;
 class SmsListActivity$2 implements android.widget.SimpleCursorAdapter$ViewBinder {
    final synthetic com.github.yeriomin.smsscheduler.activity.SmsListActivity this$0;

    SmsListActivity$2(com.github.yeriomin.smsscheduler.activity.SmsListActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean setViewValue(android.view.View p4, android.database.Cursor p5, int p6)
    {
        int v1_0;
        if (((android.widget.TextView) p4).getId() != 16908309) {
            v1_0 = 0;
        } else {
            ((android.widget.TextView) p4).setText(com.github.yeriomin.smsscheduler.activity.SmsListActivity.access$000(this.this$0, p5));
            v1_0 = 1;
        }
        return v1_0;
    }
}
package com.github.yeriomin.smsscheduler.activity;
public class SmsListActivity extends android.app.ListActivity {

    public SmsListActivity()
    {
        return;
    }

    static synthetic String access$000(com.github.yeriomin.smsscheduler.activity.SmsListActivity p1, android.database.Cursor p2)
    {
        return p1.getFormattedSmsInfo(p2);
    }

    private String getFormattedSmsInfo(android.database.Cursor p13)
    {
        String v1;
        String v2 = p13.getString(p13.getColumnIndex("recipientName"));
        String vtmp4 = p13.getString(p13.getColumnIndex("recipientNumber"));
        if (v2.length() <= 0) {
            v1 = vtmp4;
        } else {
            v1 = v2;
        }
        Object[] v9_0 = p13.getString(p13.getColumnIndex("status"));
        String v5_4 = -1;
        switch (v9_0.hashCode()) {
            case -1750699932:
                if (!v9_0.equals("DELIVERED")) {
                } else {
                    v5_4 = 2;
                }
                break;
            case 2541464:
                if (!v9_0.equals("SENT")) {
                } else {
                    v5_4 = 1;
                }
                break;
            case 35394935:
                if (!v9_0.equals("PENDING")) {
                } else {
                    v5_4 = 0;
                }
                break;
        }
        String v4;
        switch (v5_4) {
            case 0:
                v4 = this.getString(2131099663);
                break;
            case 1:
                v4 = this.getString(2131099664);
                break;
            case 2:
                v4 = this.getString(2131099661);
                break;
            default:
                v4 = this.getString(2131099662);
        }
        String v0 = android.text.format.DateUtils.formatDateTime(this, p13.getLong(p13.getColumnIndex("datetimeScheduled")), 17);
        Object[] v9_5 = new Object[3];
        v9_5[0] = v4;
        v9_5[1] = v1;
        v9_5[2] = v0;
        return this.getString(2131099660, v9_5);
    }

    private android.widget.SimpleCursorAdapter getSmsListAdapter()
    {
        android.database.Cursor v3 = com.github.yeriomin.smsscheduler.DbHelper.getDbHelper(this).getCursor();
        String[] v4 = new String[2];
        v4[0] = "message";
        v4[1] = "recipientName";
        int[] v5_1 = new int[2];
        v5_1 = {16908308, 16908309};
        android.widget.SimpleCursorAdapter v0_1 = new android.widget.SimpleCursorAdapter(this, 17367044, v3, v4, v5_1);
        v0_1.setViewBinder(new com.github.yeriomin.smsscheduler.activity.SmsListActivity$2(this));
        return v0_1;
    }

    public void gotoNextActivity(android.view.View p4)
    {
        this.startActivityForResult(new android.content.Intent(this.getApplicationContext(), com.github.yeriomin.smsscheduler.activity.AddSmsActivity), 1);
        return;
    }

    protected void onActivityResult(int p5, int p6, android.content.Intent p7)
    {
        if ((p5 == 1) && (p6 != 0)) {
            int v0;
            switch (p6) {
                case 1:
                    v0 = 2131099672;
                    break;
                case 2:
                    v0 = 2131099673;
                    break;
                default:
                    v0 = 2131099648;
            }
            android.widget.Toast.makeText(this.getApplicationContext(), this.getString(v0), 0).show();
        }
        return;
    }

    protected void onCreate(android.os.Bundle p6)
    {
        super.onCreate(p6);
        android.view.View v0 = this.getLayoutInflater().inflate(2130968577, this.getListView(), 0);
        v0.setClickable(1);
        this.getListView().addHeaderView(v0);
        this.getListView().setOnItemClickListener(new com.github.yeriomin.smsscheduler.activity.SmsListActivity$1(this));
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131230720, p3);
        return 1;
    }

    protected void onDestroy()
    {
        super.onDestroy();
        ((android.widget.SimpleCursorAdapter) this.getListAdapter()).getCursor().close();
        com.github.yeriomin.smsscheduler.DbHelper.closeDbHelper();
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p4)
    {
        if (p4.getItemId() == 2131296271) {
            this.startActivityForResult(new android.content.Intent(this, com.github.yeriomin.smsscheduler.activity.SmsSchedulerPreferenceActivity), 1);
        }
        return 1;
    }

    protected void onPause()
    {
        super.onPause();
        ((android.widget.SimpleCursorAdapter) this.getListAdapter()).getCursor().close();
        com.github.yeriomin.smsscheduler.DbHelper.closeDbHelper();
        return;
    }

    protected void onResume()
    {
        super.onResume();
        this.setListAdapter(this.getSmsListAdapter());
        return;
    }
}
package com.github.yeriomin.smsscheduler.activity;
public class SmsSchedulerPreferenceActivity extends android.preference.PreferenceActivity {

    public SmsSchedulerPreferenceActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p2)
    {
        super.onCreate(p2);
        this.addPreferencesFromResource(2131034113);
        return;
    }
}
package com.github.yeriomin.smsscheduler.notification;
public abstract class NotificationBuilder {
    protected android.content.Context context;

    public NotificationBuilder(android.content.Context p1)
    {
        this.context = p1;
        return;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder addAction(int p1, int p2, android.app.PendingIntent p3)
    {
        return this;
    }

    public abstract android.app.Notification build();

    protected android.app.PendingIntent getPendingIntent(android.content.Intent p4)
    {
        return android.app.PendingIntent.getActivity(this.context, 1, p4, 0);
    }

    public abstract com.github.yeriomin.smsscheduler.notification.NotificationBuilder setIntent();

    public abstract com.github.yeriomin.smsscheduler.notification.NotificationBuilder setMessage();

    public abstract com.github.yeriomin.smsscheduler.notification.NotificationBuilder setTitle();
}
package com.github.yeriomin.smsscheduler.notification;
 class NotificationBuilderHoneycomb extends com.github.yeriomin.smsscheduler.notification.NotificationBuilder {
    protected android.app.Notification$Builder builder;

    public NotificationBuilderHoneycomb(android.content.Context p3)
    {
        super(p3);
        super.builder = new android.app.Notification$Builder(p3).setSmallIcon(2130837505).setAutoCancel(1);
        return;
    }

    public android.app.Notification build()
    {
        return this.builder.getNotification();
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setIntent(android.content.Intent p3)
    {
        this.builder.setContentIntent(this.getPendingIntent(p3));
        return this;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setMessage(String p2)
    {
        this.builder.setContentText(p2);
        return this;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setTitle(String p2)
    {
        this.builder.setContentTitle(p2);
        return this;
    }
}
package com.github.yeriomin.smsscheduler.notification;
 class NotificationBuilderJellybean extends com.github.yeriomin.smsscheduler.notification.NotificationBuilderHoneycomb {

    public NotificationBuilderJellybean(android.content.Context p1)
    {
        super(p1);
        return;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder addAction(int p3, int p4, android.app.PendingIntent p5)
    {
        this.builder.addAction(p3, this.context.getString(p4), p5);
        return this;
    }
}
package com.github.yeriomin.smsscheduler.notification;
 class NotificationBuilderLegacy extends com.github.yeriomin.smsscheduler.notification.NotificationBuilder {
    private android.content.Intent intent;
    private String message;
    private String title;

    public NotificationBuilderLegacy(android.content.Context p1)
    {
        super(p1);
        return;
    }

    public android.app.Notification build()
    {
        android.app.Notification v1_1 = new android.app.Notification(2130837505, "", System.currentTimeMillis());
        try {
            Exception v2_5 = v1_1.getClass();
            android.app.PendingIntent v4_0 = new Class[4];
            v4_0[0] = android.content.Context;
            v4_0[1] = CharSequence;
            v4_0[2] = CharSequence;
            v4_0[3] = android.app.PendingIntent;
            reflect.Method v0 = v2_5.getMethod("setLatestEventInfo", v4_0);
            Exception v2_2 = new Object[4];
            v2_2[0] = this.context;
            v2_2[1] = this.title;
            v2_2[2] = this.message;
            v2_2[3] = this.getPendingIntent(this.intent);
            v0.invoke(v1_1, v2_2);
            v1_1.flags = (v1_1.flags | 16);
        } catch (Exception v2) {
        }
        return v1_1;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setIntent(android.content.Intent p1)
    {
        this.intent = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setMessage(String p1)
    {
        this.message = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.notification.NotificationBuilder setTitle(String p1)
    {
        this.title = p1;
        return this;
    }
}
package com.github.yeriomin.smsscheduler.notification;
 class NotificationBuilderO extends com.github.yeriomin.smsscheduler.notification.NotificationBuilderJellybean {

    public NotificationBuilderO(android.content.Context p7)
    {
        super(p7);
        android.app.NotificationManager v1_1 = ((android.app.NotificationManager) p7.getSystemService("notification"));
        if (v1_1.getNotificationChannel("com.github.yeriomin.smsscheduler") == null) {
            v1_1.createNotificationChannel(new android.app.NotificationChannel("com.github.yeriomin.smsscheduler", p7.getString(2131099686), 3));
        }
        super.builder.setChannelId("com.github.yeriomin.smsscheduler");
        return;
    }
}
package com.github.yeriomin.smsscheduler.notification;
public class NotificationManagerWrapper {
    private android.app.NotificationManager manager;

    public NotificationManagerWrapper(android.content.Context p2)
    {
        this.manager = ((android.app.NotificationManager) p2.getSystemService("notification"));
        return;
    }

    public static com.github.yeriomin.smsscheduler.notification.NotificationBuilder getBuilder(android.content.Context p2)
    {
        com.github.yeriomin.smsscheduler.notification.NotificationBuilderLegacy v0_1;
        if (android.os.Build$VERSION.SDK_INT < 26) {
            if (android.os.Build$VERSION.SDK_INT < 16) {
                if (android.os.Build$VERSION.SDK_INT < 11) {
                    v0_1 = new com.github.yeriomin.smsscheduler.notification.NotificationBuilderLegacy(p2);
                } else {
                    v0_1 = new com.github.yeriomin.smsscheduler.notification.NotificationBuilderHoneycomb(p2);
                }
            } else {
                v0_1 = new com.github.yeriomin.smsscheduler.notification.NotificationBuilderJellybean(p2);
            }
        } else {
            v0_1 = new com.github.yeriomin.smsscheduler.notification.NotificationBuilderO(p2);
        }
        return v0_1;
    }

    public void cancel(int p2)
    {
        this.manager.cancel(p2);
        return;
    }

    public void show(int p2, android.app.Notification p3)
    {
        this.manager.notify(p2, p3);
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public abstract class Builder {
    protected com.github.yeriomin.smsscheduler.activity.AddSmsActivity activity;
    protected com.github.yeriomin.smsscheduler.SmsModel sms;
    protected android.view.View view;

    public Builder()
    {
        return;
    }

    public abstract android.view.View build();

    public com.github.yeriomin.smsscheduler.view.Builder setActivity(com.github.yeriomin.smsscheduler.activity.AddSmsActivity p1)
    {
        this.activity = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.view.Builder setSms(com.github.yeriomin.smsscheduler.SmsModel p1)
    {
        this.sms = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.view.Builder setView(android.view.View p1)
    {
        this.view = p1;
        return this;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderCancel extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderCancel()
    {
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.Button build()
    {
        android.widget.Button v0_0;
        android.widget.Button v1_0 = this.getView();
        if (this.sms.getTimestampCreated().longValue() <= 0) {
            v0_0 = 8;
        } else {
            v0_0 = 0;
        }
        android.widget.Button v0_5;
        v1_0.setVisibility(v0_0);
        android.widget.Button v1_1 = this.getView();
        if (!this.sms.getStatus().contentEquals("PENDING")) {
            v0_5 = 2131099655;
        } else {
            v0_5 = 2131099654;
        }
        v1_1.setText(v0_5);
        return this.getView();
    }

    protected android.widget.Button getView()
    {
        return ((android.widget.Button) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderContact$1 implements android.widget.AdapterView$OnItemClickListener {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderContact this$0;

    BuilderContact$1(com.github.yeriomin.smsscheduler.view.BuilderContact p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onItemClick(android.widget.AdapterView p9, android.view.View p10, int p11, long p12)
    {
        java.util.HashMap v2_1 = ((java.util.HashMap) p9.getItemAtPosition(p11));
        String v0_1 = ((String) v2_1.get("Name"));
        String v1_0 = ((String) v2_1.get("Phone"));
        com.github.yeriomin.smsscheduler.SmsModel v3_1 = this.this$0.getView();
        String v4_1 = this.this$0.activity;
        Object[] v6_1 = new Object[2];
        v6_1[0] = v0_1;
        v6_1[1] = v1_0;
        v3_1.setText(v4_1.getString(2131099687, v6_1));
        this.this$0.sms.setRecipientName(v0_1);
        this.this$0.sms.setRecipientNumber(v1_0);
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderContact$2 implements android.text.TextWatcher {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderContact this$0;

    BuilderContact$2(com.github.yeriomin.smsscheduler.view.BuilderContact p1)
    {
        this.this$0 = p1;
        return;
    }

    public void afterTextChanged(android.text.Editable p1)
    {
        return;
    }

    public void beforeTextChanged(CharSequence p1, int p2, int p3, int p4)
    {
        return;
    }

    public void onTextChanged(CharSequence p3, int p4, int p5, int p6)
    {
        if (!this.this$0.getView().isPerformingCompletion()) {
            this.this$0.sms.setRecipientName("");
            this.this$0.sms.setRecipientNumber(String.valueOf(p3));
        }
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderContact extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderContact()
    {
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.AutoCompleteTextView build()
    {
        android.widget.AutoCompleteTextView v1_4;
        com.github.yeriomin.smsscheduler.view.ContactsTask v0_1 = new com.github.yeriomin.smsscheduler.view.ContactsTask();
        v0_1.setActivity(this.activity);
        v0_1.setContactsView(this.getView());
        android.widget.AutoCompleteTextView v1_11 = new Void[0];
        v0_1.execute(v1_11);
        com.github.yeriomin.smsscheduler.view.BuilderContact$2 v2_0 = this.getView();
        if (android.text.TextUtils.isEmpty(this.sms.getRecipientName())) {
            v1_4 = this.sms.getRecipientNumber();
        } else {
            android.widget.AutoCompleteTextView v1_5 = this.activity;
            Object[] v4_1 = new Object[2];
            v4_1[0] = this.sms.getRecipientName();
            v4_1[1] = this.sms.getRecipientNumber();
            v1_4 = v1_5.getString(2131099687, v4_1);
        }
        v2_0.setText(v1_4);
        this.getView().setOnItemClickListener(new com.github.yeriomin.smsscheduler.view.BuilderContact$1(this));
        this.getView().addTextChangedListener(new com.github.yeriomin.smsscheduler.view.BuilderContact$2(this));
        return this.getView();
    }

    protected android.widget.AutoCompleteTextView getView()
    {
        return ((android.widget.AutoCompleteTextView) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderDate$1 implements android.widget.DatePicker$OnDateChangedListener {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderDate this$0;

    BuilderDate$1(com.github.yeriomin.smsscheduler.view.BuilderDate p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onDateChanged(android.widget.DatePicker p3, int p4, int p5, int p6)
    {
        this.this$0.sms.getCalendar().set(1, p4);
        this.this$0.sms.getCalendar().set(2, p5);
        this.this$0.sms.getCalendar().set(5, p6);
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderDate extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderDate()
    {
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.DatePicker build()
    {
        this.getView().init(this.sms.getCalendar().get(1), this.sms.getCalendar().get(2), this.sms.getCalendar().get(5), new com.github.yeriomin.smsscheduler.view.BuilderDate$1(this));
        return this.getView();
    }

    protected android.widget.DatePicker getView()
    {
        return ((android.widget.DatePicker) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderMessage$1 implements android.text.TextWatcher {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderMessage this$0;

    BuilderMessage$1(com.github.yeriomin.smsscheduler.view.BuilderMessage p1)
    {
        this.this$0 = p1;
        return;
    }

    public void afterTextChanged(android.text.Editable p1)
    {
        return;
    }

    public void beforeTextChanged(CharSequence p1, int p2, int p3, int p4)
    {
        return;
    }

    public void onTextChanged(CharSequence p3, int p4, int p5, int p6)
    {
        this.this$0.sms.setMessage(String.valueOf(p3));
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderMessage extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderMessage()
    {
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.EditText build()
    {
        this.getView().setText(this.sms.getMessage());
        this.getView().addTextChangedListener(new com.github.yeriomin.smsscheduler.view.BuilderMessage$1(this));
        return this.getView();
    }

    protected android.widget.EditText getView()
    {
        return ((android.widget.EditText) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
abstract class BuilderSpinner extends com.github.yeriomin.smsscheduler.view.Builder {
    protected java.util.Map keys;
    protected java.util.List values;

    BuilderSpinner()
    {
        this.keys = new java.util.HashMap();
        this.values = new java.util.ArrayList();
        return;
    }

    public android.view.View build()
    {
        if (!this.shouldBeVisible()) {
            this.getView().setVisibility(8);
        } else {
            this.getView().setVisibility(0);
            this.getView().setAdapter(this.getAdapter());
            this.getView().setSelection(this.getSelection(), 0);
            this.getView().setOnItemSelectedListener(new com.github.yeriomin.smsscheduler.view.BuilderSpinner$1(this));
        }
        return this.getView();
    }

    protected android.widget.ArrayAdapter getAdapter()
    {
        return new android.widget.ArrayAdapter(this.activity, 2130968579, new java.util.ArrayList(this.values));
    }

    protected abstract int getSelection();

    protected android.widget.Spinner getView()
    {
        return ((android.widget.Spinner) this.view);
    }

    protected abstract void onAdapterItemSelected();

    protected abstract boolean shouldBeVisible();
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderRecurringDay extends com.github.yeriomin.smsscheduler.view.BuilderSpinner {

    public BuilderRecurringDay()
    {
        return;
    }

    private void initMonthDays()
    {
        this.values.clear();
        int v0 = 1;
        while (v0 <= 31) {
            this.values.add(Integer.toString(v0));
            v0++;
        }
        return;
    }

    private void initWeekDays()
    {
        this.values.clear();
        String[] v2 = new java.text.DateFormatSymbols().getWeekdays();
        int v3 = v2.length;
        int v1_1 = 0;
        while (v1_1 < v3) {
            String v0 = v2[v1_1];
            if (!android.text.TextUtils.isEmpty(v0)) {
                this.values.add(v0);
            }
            v1_1++;
        }
        return;
    }

    private boolean isWeekly()
    {
        return this.sms.getRecurringMode().equals("RECURRING_WEEKLY");
    }

    public android.view.View build()
    {
        if (!this.isWeekly()) {
            this.initMonthDays();
        } else {
            this.initWeekDays();
        }
        return super.build();
    }

    protected int getSelection()
    {
        int v0_4;
        if (!this.isWeekly()) {
            v0_4 = (this.sms.getCalendar().get(5) - 1);
        } else {
            v0_4 = (this.sms.getCalendar().get(7) - 1);
        }
        return v0_4;
    }

    protected void onAdapterItemSelected(android.widget.AdapterView p4, android.view.View p5, int p6, long p7)
    {
        com.github.yeriomin.smsscheduler.CalendarResolver v0 = new com.github.yeriomin.smsscheduler.CalendarResolver().setCalendar(this.sms.getCalendar()).setRecurringMode(this.sms.getRecurringMode()).reset();
        if (!this.isWeekly()) {
            v0.setDayOfMonth((p6 + 1));
        } else {
            v0.setWeekDay((p6 + 1));
        }
        v0.advance();
        return;
    }

    protected boolean shouldBeVisible()
    {
        if ((this.sms.getRecurringMode().equals("RECURRING_NO")) || (this.sms.getRecurringMode().equals("RECURRING_DAILY"))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderRecurringMode extends com.github.yeriomin.smsscheduler.view.BuilderSpinner {
    private static final String[] modes;
    private android.widget.DatePicker dateView;
    private android.widget.Spinner recurringDayView;
    private android.widget.Spinner recurringMonthView;

    static BuilderRecurringMode()
    {
        String[] v0_1 = new String[5];
        v0_1[0] = "RECURRING_NO";
        v0_1[1] = "RECURRING_DAILY";
        v0_1[2] = "RECURRING_WEEKLY";
        v0_1[3] = "RECURRING_MONTHLY";
        v0_1[4] = "RECURRING_YEARLY";
        com.github.yeriomin.smsscheduler.view.BuilderRecurringMode.modes = v0_1;
        return;
    }

    public BuilderRecurringMode()
    {
        int v0 = 0;
        while (v0 < com.github.yeriomin.smsscheduler.view.BuilderRecurringMode.modes.length) {
            this.keys.put(com.github.yeriomin.smsscheduler.view.BuilderRecurringMode.modes[v0], Integer.valueOf(v0));
            v0++;
        }
        return;
    }

    private void refreshDependants()
    {
        int v0_10;
        new com.github.yeriomin.smsscheduler.view.BuilderRecurringDay().setActivity(this.activity).setSms(this.sms).setView(this.recurringDayView).build();
        new com.github.yeriomin.smsscheduler.view.BuilderRecurringMonth().setActivity(this.activity).setSms(this.sms).setView(this.recurringMonthView).build();
        if (!"RECURRING_NO".equals(this.sms.getRecurringMode())) {
            v0_10 = 8;
        } else {
            v0_10 = 0;
        }
        this.dateView.setVisibility(v0_10);
        return;
    }

    public android.view.View build()
    {
        this.refreshDependants();
        return super.build();
    }

    protected int getSelection()
    {
        return ((Integer) this.keys.get(this.sms.getRecurringMode())).intValue();
    }

    protected void onAdapterItemSelected(android.widget.AdapterView p3, android.view.View p4, int p5, long p6)
    {
        this.sms.setRecurringMode(com.github.yeriomin.smsscheduler.view.BuilderRecurringMode.modes[p5]);
        new com.github.yeriomin.smsscheduler.CalendarResolver().setCalendar(this.sms.getCalendar()).setRecurringMode(this.sms.getRecurringMode()).reset().advance();
        this.refreshDependants();
        return;
    }

    public com.github.yeriomin.smsscheduler.view.Builder setActivity(com.github.yeriomin.smsscheduler.activity.AddSmsActivity p3)
    {
        this.values.add(p3.getString(2131099676));
        this.values.add(p3.getString(2131099674));
        this.values.add(p3.getString(2131099677));
        this.values.add(p3.getString(2131099675));
        this.values.add(p3.getString(2131099678));
        return super.setActivity(p3);
    }

    public com.github.yeriomin.smsscheduler.view.BuilderRecurringMode setDateView(android.widget.DatePicker p1)
    {
        this.dateView = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.view.BuilderRecurringMode setRecurringDayView(android.widget.Spinner p1)
    {
        this.recurringDayView = p1;
        return this;
    }

    public com.github.yeriomin.smsscheduler.view.BuilderRecurringMode setRecurringMonthView(android.widget.Spinner p1)
    {
        this.recurringMonthView = p1;
        return this;
    }

    protected boolean shouldBeVisible()
    {
        return 1;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderRecurringMonth extends com.github.yeriomin.smsscheduler.view.BuilderSpinner {

    public BuilderRecurringMonth()
    {
        return;
    }

    public android.view.View build()
    {
        this.values.clear();
        String[] v2 = new java.text.DateFormatSymbols().getMonths();
        int v3 = v2.length;
        int v1_2 = 0;
        while (v1_2 < v3) {
            String v0 = v2[v1_2];
            if (!android.text.TextUtils.isEmpty(v0)) {
                this.values.add(v0);
            }
            v1_2++;
        }
        return super.build();
    }

    protected int getSelection()
    {
        return this.sms.getCalendar().get(2);
    }

    protected void onAdapterItemSelected(android.widget.AdapterView p4, android.view.View p5, int p6, long p7)
    {
        this.sms.getCalendar().set(1, java.util.Calendar.getInstance().get(1));
        new com.github.yeriomin.smsscheduler.CalendarResolver().setCalendar(this.sms.getCalendar()).setRecurringMode(this.sms.getRecurringMode()).setMonth((p6 + 1)).advance();
        return;
    }

    protected boolean shouldBeVisible()
    {
        return this.sms.getRecurringMode().equals("RECURRING_YEARLY");
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderSimCard$RadioOnClickListener implements android.view.View$OnClickListener {
    private com.github.yeriomin.smsscheduler.SmsModel sms;

    public BuilderSimCard$RadioOnClickListener(com.github.yeriomin.smsscheduler.SmsModel p1)
    {
        this.sms = p1;
        return;
    }

    public void onClick(android.view.View p3)
    {
        this.sms.setSubscriptionId(((Integer) p3.getTag()).intValue());
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderSimCard extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderSimCard()
    {
        return;
    }

    private void prepareRadioButton(android.widget.RadioButton p3, android.util.Pair p4)
    {
        p3.setTag(p4.first);
        p3.setText(((CharSequence) p4.second));
        p3.setOnClickListener(new com.github.yeriomin.smsscheduler.view.BuilderSimCard$RadioOnClickListener(this.sms));
        if (((Integer) p4.first).equals(Integer.valueOf(this.sms.getSubscriptionId()))) {
            p3.setChecked(1);
        }
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.RadioGroup build()
    {
        android.widget.RadioGroup v5_14;
        if (android.os.Build$VERSION.SDK_INT >= 22) {
            android.telephony.SubscriptionManager v4_1 = ((android.telephony.SubscriptionManager) this.activity.getSystemService("telephony_subscription_service"));
            if (v4_1 != null) {
                if (v4_1.getActiveSubscriptionInfoCount() >= 2) {
                    this.getView().setVisibility(0);
                    java.util.ArrayList v3_1 = new java.util.ArrayList();
                    android.widget.RadioGroup v5_4 = v4_1.getActiveSubscriptionInfoList().iterator();
                    while (v5_4.hasNext()) {
                        android.telephony.SubscriptionInfo v0_1 = ((android.telephony.SubscriptionInfo) v5_4.next());
                        v3_1.add(new android.util.Pair(Integer.valueOf(v0_1.getSubscriptionId()), v0_1.getCarrierName().toString()));
                    }
                    android.widget.RadioButton v1_1 = ((android.widget.RadioButton) this.getView().findViewById(2131296262));
                    android.widget.RadioButton v2_1 = ((android.widget.RadioButton) this.getView().findViewById(2131296263));
                    this.prepareRadioButton(v1_1, ((android.util.Pair) v3_1.get(0)));
                    this.prepareRadioButton(v2_1, ((android.util.Pair) v3_1.get(1)));
                    if ((!v1_1.isChecked()) && (!v2_1.isChecked())) {
                        v1_1.setChecked(1);
                    }
                    v5_14 = this.getView();
                } else {
                    this.sms.setSubscriptionId(((android.telephony.SubscriptionInfo) v4_1.getActiveSubscriptionInfoList().get(0)).getSubscriptionId());
                    v5_14 = this.getView();
                }
            } else {
                v5_14 = this.getView();
            }
        } else {
            v5_14 = this.getView();
        }
        return v5_14;
    }

    protected android.widget.RadioGroup getView()
    {
        return ((android.widget.RadioGroup) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderSpinner$1 implements android.widget.AdapterView$OnItemSelectedListener {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderSpinner this$0;

    BuilderSpinner$1(com.github.yeriomin.smsscheduler.view.BuilderSpinner p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onItemSelected(android.widget.AdapterView p7, android.view.View p8, int p9, long p10)
    {
        this.this$0.onAdapterItemSelected(p7, p8, p9, p10);
        return;
    }

    public void onNothingSelected(android.widget.AdapterView p1)
    {
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
 class BuilderTime$1 implements android.widget.TimePicker$OnTimeChangedListener {
    final synthetic com.github.yeriomin.smsscheduler.view.BuilderTime this$0;

    BuilderTime$1(com.github.yeriomin.smsscheduler.view.BuilderTime p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onTimeChanged(android.widget.TimePicker p3, int p4, int p5)
    {
        this.this$0.sms.getCalendar().set(11, p4);
        this.this$0.sms.getCalendar().set(12, p5);
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class BuilderTime extends com.github.yeriomin.smsscheduler.view.Builder {

    public BuilderTime()
    {
        return;
    }

    public bridge synthetic android.view.View build()
    {
        return this.build();
    }

    public android.widget.TimePicker build()
    {
        this.getView().setIs24HourView(Boolean.valueOf(android.text.format.DateFormat.is24HourFormat(this.activity)));
        this.getView().setCurrentHour(Integer.valueOf(this.sms.getCalendar().get(11)));
        this.getView().setCurrentMinute(Integer.valueOf(this.sms.getCalendar().get(12)));
        this.getView().setOnTimeChangedListener(new com.github.yeriomin.smsscheduler.view.BuilderTime$1(this));
        return this.getView();
    }

    protected android.widget.TimePicker getView()
    {
        return ((android.widget.TimePicker) this.view);
    }
}
package com.github.yeriomin.smsscheduler.view;
public class ContactsTask extends android.os.AsyncTask {
    private com.github.yeriomin.smsscheduler.activity.AddSmsActivity activity;
    private android.widget.AutoCompleteTextView contactsView;

    public ContactsTask()
    {
        return;
    }

    private java.util.HashMap getNames()
    {
        java.util.HashMap v8_1 = new java.util.HashMap();
        String[] v2 = new String[2];
        v2[0] = "_id";
        v2[1] = "display_name";
        android.database.Cursor v9 = this.activity.getContentResolver().query(android.provider.ContactsContract$Contacts.CONTENT_URI, v2, 0, 0, "display_name ASC");
        if (v9 != null) {
            int v6 = v9.getColumnIndex("_id");
            int v7 = v9.getColumnIndex("display_name");
            while (v9.moveToNext()) {
                v8_1.put(v9.getString(v6), v9.getString(v7));
            }
            v9.close();
        }
        return v8_1;
    }

    protected bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((Void[]) p2));
    }

    protected varargs java.util.List doInBackground(Void[] p15)
    {
        int v3 = 0;
        java.util.HashMap v11 = this.getNames();
        String v0_6 = this.activity.getContentResolver();
        String[] v2_1 = new String[2];
        v2_1[0] = "contact_id";
        v2_1[1] = "data1";
        android.database.Cursor v13 = v0_6.query(android.provider.ContactsContract$CommonDataKinds$Phone.CONTENT_URI, v2_1, v3, v3, v3);
        java.util.ArrayList v10_1 = new java.util.ArrayList();
        if (v13 != null) {
            int v7 = v13.getColumnIndex("contact_id");
            int v8 = v13.getColumnIndex("data1");
            while (v13.moveToNext()) {
                String v9 = v13.getString(v7);
                String v12 = v13.getString(v8);
                java.util.HashMap v6_1 = new java.util.HashMap();
                v6_1.put("Name", v11.get(v9));
                v6_1.put("Phone", v12);
                v10_1.add(v6_1);
            }
            v13.close();
        }
        return v10_1;
    }

    protected bridge synthetic void onPostExecute(Object p1)
    {
        this.onPostExecute(((java.util.List) p1));
        return;
    }

    protected void onPostExecute(java.util.List p9)
    {
        android.widget.AutoCompleteTextView v6 = this.contactsView;
        com.github.yeriomin.smsscheduler.activity.AddSmsActivity v1 = this.activity;
        String[] v4 = new String[2];
        v4[0] = "Name";
        v4[1] = "Phone";
        int[] v5_1 = new int[2];
        v5_1 = {2131296269, 2131296270};
        v6.setAdapter(new android.widget.SimpleAdapter(v1, p9, 2130968578, v4, v5_1));
        return;
    }

    public void setActivity(com.github.yeriomin.smsscheduler.activity.AddSmsActivity p1)
    {
        this.activity = p1;
        return;
    }

    public void setContactsView(android.widget.AutoCompleteTextView p1)
    {
        this.contactsView = p1;
        return;
    }
}
package com.github.yeriomin.smsscheduler.view;
public class EmptinessTextWatcher implements android.text.TextWatcher {
    private com.github.yeriomin.smsscheduler.activity.AddSmsActivity addSmsActivity;
    private final android.widget.AutoCompleteTextView formContact;
    private final android.widget.EditText formMessage;

    public EmptinessTextWatcher(com.github.yeriomin.smsscheduler.activity.AddSmsActivity p1, android.widget.AutoCompleteTextView p2, android.widget.EditText p3)
    {
        this.addSmsActivity = p1;
        this.formContact = p2;
        this.formMessage = p3;
        return;
    }

    public void afterTextChanged(android.text.Editable p3)
    {
        int v0_4;
        android.view.View v1_1 = this.addSmsActivity.findViewById(2131296267);
        if ((this.formContact.getText().length() <= 0) || (this.formMessage.getText().length() <= 0)) {
            v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        v1_1.setEnabled(v0_4);
        return;
    }

    public void beforeTextChanged(CharSequence p1, int p2, int p3, int p4)
    {
        return;
    }

    public void onTextChanged(CharSequence p1, int p2, int p3, int p4)
    {
        return;
    }
}
