package com.android.internal.telephony;
public interface ITelephony {

    public abstract void answerRingingCall();

    public abstract boolean disableDataConnectivity();

    public abstract boolean enableDataConnectivity();

    public abstract boolean endCall();

    public abstract boolean showCallScreen();
}
package cri.sanity;
public abstract class A$Async extends android.os.AsyncTask {

    public A$Async()
    {
        return;
    }

    public bridge synthetic Object doInBackground(Object[] p2)
    {
        return this.doInBackground(((Void[]) p2));
    }

    public varargs Void doInBackground(Void[] p2)
    {
        this.run();
        return 0;
    }

    public abstract void run();
}
package cri.sanity;
public final class A extends android.app.Application {
    public static final boolean DEBUG = False;
    private static final int NID = 1;
    public static final int SDK;
    private static cri.sanity.A a;
    private static android.media.AudioManager audioMan;
    private static android.bluetooth.BluetoothAdapter btAdapter;
    private static android.app.admin.DevicePolicyManager devpolMan;
    private static android.content.SharedPreferences$Editor edit;
    private static boolean full;
    private static android.location.LocationManager locMan;
    private static String name;
    private static android.app.Notification notif;
    private static android.app.PendingIntent notifIntent;
    private static android.app.NotificationManager notifMan;
    private static android.content.pm.PackageInfo pkgInfo;
    private static android.os.PowerManager powerMan;
    private static android.content.SharedPreferences prefs;
    private static android.content.ContentResolver resolver;
    private static android.content.res.Resources resources;
    private static android.hardware.SensorManager sensorMan;
    private static android.telephony.TelephonyManager telMan;
    private static android.net.wifi.WifiManager wifiMan;

    static A()
    {
        cri.sanity.A.DEBUG = android.util.Config.DEBUG;
        cri.sanity.A.SDK = android.os.Build$VERSION.SDK_INT;
        return;
    }

    public A()
    {
        return;
    }

    public static final android.app.AlarmManager alarmMan()
    {
        return ((android.app.AlarmManager) cri.sanity.A.a.getSystemService("alarm"));
    }

    public static final cri.sanity.A app()
    {
        return cri.sanity.A.a;
    }

    public static final android.media.AudioManager audioMan()
    {
        if (cri.sanity.A.audioMan == null) {
            cri.sanity.A.audioMan = ((android.media.AudioManager) cri.sanity.A.a.getSystemService("audio"));
        }
        return cri.sanity.A.audioMan;
    }

    public static final int beta()
    {
        return (cri.sanity.A.pkgInfo.versionCode % 100);
    }

    public static final android.bluetooth.BluetoothAdapter btAdapter()
    {
        if (cri.sanity.A.btAdapter == null) {
            cri.sanity.A.btAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter();
        }
        return cri.sanity.A.btAdapter;
    }

    public static final String cleanFn(String p6, boolean p7)
    {
        String[] v0 = new String[11];
        v0[0] = "?";
        v0[1] = ":";
        v0[2] = "*";
        v0[3] = "\"";
        v0[4] = "\\";
        v0[5] = ";";
        v0[6] = "&";
        v0[7] = "<";
        v0[8] = ">";
        v0[9] = "\r";
        v0[10] = "\n";
        int v2 = v0.length;
        int v1 = 0;
        while (v1 < v2) {
            p6 = p6.replace(v0[v1], "");
            v1++;
        }
        if (p7) {
            p6 = p6.replace("/", "");
        }
        return p6.trim();
    }

    public static final android.text.ClipboardManager clipMan()
    {
        return ((android.text.ClipboardManager) cri.sanity.A.a.getSystemService("clipboard"));
    }

    public static final cri.sanity.A commit()
    {
        cri.sanity.A.edit.commit();
        return cri.sanity.A.a;
    }

    public static final android.net.ConnectivityManager connMan()
    {
        return ((android.net.ConnectivityManager) cri.sanity.A.a.getSystemService("connectivity"));
    }

    public static final String date()
    {
        return cri.sanity.A.date(cri.sanity.A.time());
    }

    public static final String date(long p1)
    {
        return android.text.format.DateFormat.format("dd/MM/yyyy, kk:mm", p1).toString();
    }

    public static final cri.sanity.A del(String p1)
    {
        cri.sanity.A.edit.remove(p1);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A delc(String p1)
    {
        cri.sanity.A.edit.remove(p1).commit();
        return cri.sanity.A.a;
    }

    public static final android.app.admin.DevicePolicyManager devpolMan()
    {
        if (cri.sanity.A.devpolMan == null) {
            cri.sanity.A.devpolMan = ((android.app.admin.DevicePolicyManager) cri.sanity.A.a.getSystemService("device_policy"));
        }
        return cri.sanity.A.devpolMan;
    }

    public static final android.content.SharedPreferences$Editor edit()
    {
        return cri.sanity.A.edit;
    }

    public static final boolean empty(String p1)
    {
        if ((p1 != null) && (p1.length() > 0)) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public static final Object get(String p5)
    {
        try {
            int v3_2 = Integer.valueOf(cri.sanity.A.geti(p5));
        } catch (Exception v1) {
            try {
                v3_2 = Long.valueOf(cri.sanity.A.getl(p5));
            } catch (Exception v2) {
                try {
                    v3_2 = Boolean.valueOf(cri.sanity.A.is(p5));
                } catch (Exception v0) {
                    try {
                        v3_2 = cri.sanity.A.gets(p5);
                    } catch (int v3) {
                        v3_2 = 0;
                    }
                }
            }
        }
        return v3_2;
    }

    public static final int geti(String p2)
    {
        return cri.sanity.A.prefs.getInt(p2, 0);
    }

    public static final long getl(String p3)
    {
        return cri.sanity.A.prefs.getLong(p3, 0);
    }

    public static final String gets(String p2)
    {
        return cri.sanity.A.prefs.getString(p2, "");
    }

    public static final int getsi(String p2)
    {
        return Integer.parseInt(cri.sanity.A.prefs.getString(p2, "0"));
    }

    public static final boolean has(String p1)
    {
        return cri.sanity.A.prefs.contains(p1);
    }

    public static final boolean is(String p2)
    {
        return cri.sanity.A.prefs.getBoolean(p2, 0);
    }

    public static final boolean isEnabled()
    {
        return cri.sanity.A.prefs.getBoolean("enabled", 0);
    }

    public static final boolean isFull()
    {
        return cri.sanity.A.full;
    }

    public static final android.app.KeyguardManager keyguardMan()
    {
        return ((android.app.KeyguardManager) cri.sanity.A.a.getSystemService("keyguard"));
    }

    public static final android.location.LocationManager locMan()
    {
        if (cri.sanity.A.locMan == null) {
            cri.sanity.A.locMan = ((android.location.LocationManager) cri.sanity.A.a.getSystemService("location"));
        }
        return cri.sanity.A.locMan;
    }

    public static final int logd(String p1)
    {
        return android.util.Log.d(cri.sanity.A.name, p1);
    }

    public static final int logd(Throwable p1)
    {
        return android.util.Log.wtf(cri.sanity.A.name, p1);
    }

    public static final String name()
    {
        return cri.sanity.A.name;
    }

    public static final android.app.NotificationManager notifMan()
    {
        if (cri.sanity.A.notifMan == null) {
            cri.sanity.A.notifMan = ((android.app.NotificationManager) cri.sanity.A.a.getSystemService("notification"));
        }
        return cri.sanity.A.notifMan;
    }

    public static final void notify(String p6)
    {
        cri.sanity.A.notify(cri.sanity.A.name, p6, 1, 2130837507, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p6, int p7)
    {
        cri.sanity.A.notify(cri.sanity.A.name, p6, p7, 2130837507, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p6, int p7, int p8)
    {
        cri.sanity.A.notify(cri.sanity.A.name, p6, p7, p8, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p6, int p7, long p8)
    {
        cri.sanity.A.notify(cri.sanity.A.name, p6, p7, 2130837507, p8);
        return;
    }

    public static final void notify(String p6, long p7)
    {
        cri.sanity.A.notify(cri.sanity.A.name, p6, 1, 2130837507, p7);
        return;
    }

    public static final void notify(String p6, String p7)
    {
        cri.sanity.A.notify(p6, p7, 1, 2130837507, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p6, String p7, int p8)
    {
        cri.sanity.A.notify(p6, p7, p8, 2130837507, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p6, String p7, int p8, int p9)
    {
        cri.sanity.A.notify(p6, p7, p8, p9, cri.sanity.A.time());
        return;
    }

    public static final void notify(String p4, String p5, int p6, int p7, long p8)
    {
        if (cri.sanity.A.notif != null) {
            cri.sanity.A.notif.tickerText = p5;
            cri.sanity.A.notif.when = p8;
            cri.sanity.A.notif.icon = p7;
        } else {
            cri.sanity.A.notif = new android.app.Notification(p7, p5, p8);
            android.content.Intent v0_1 = new android.content.Intent(cri.sanity.A.a, cri.sanity.MainActivity);
            v0_1.setFlags(268435456);
            cri.sanity.A.notifIntent = android.app.PendingIntent.getActivity(cri.sanity.A.a, 0, v0_1, 0);
        }
        cri.sanity.A.notif.setLatestEventInfo(cri.sanity.A.a, p4, p5, cri.sanity.A.notifIntent);
        cri.sanity.A.notifMan().notify(p6, cri.sanity.A.notif);
        return;
    }

    public static final void notify(String p6, String p7, long p8)
    {
        cri.sanity.A.notify(p6, p7, 1, 2130837507, p8);
        return;
    }

    public static final void notifyCanc()
    {
        cri.sanity.A.notifMan().cancel(1);
        return;
    }

    public static final void notifyCanc(int p1)
    {
        cri.sanity.A.notifMan().cancel(p1);
        return;
    }

    public static final String pkg()
    {
        return cri.sanity.A.pkgInfo.packageName;
    }

    public static final android.os.PowerManager powerMan()
    {
        if (cri.sanity.A.powerMan == null) {
            cri.sanity.A.powerMan = ((android.os.PowerManager) cri.sanity.A.a.getSystemService("power"));
        }
        return cri.sanity.A.powerMan;
    }

    public static final android.content.SharedPreferences prefs()
    {
        return cri.sanity.A.prefs;
    }

    public static final cri.sanity.A put(String p1, float p2)
    {
        cri.sanity.A.edit.putFloat(p1, p2);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A put(String p1, int p2)
    {
        cri.sanity.A.edit.putInt(p1, p2);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A put(String p1, long p2)
    {
        cri.sanity.A.edit.putLong(p1, p2);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A put(String p3, Object p4)
    {
        if (!(p4 instanceof Boolean)) {
            if (!(p4 instanceof Integer)) {
                if (!(p4 instanceof Float)) {
                    if (!(p4 instanceof Long)) {
                        cri.sanity.A.edit.putString(p3, p4.toString());
                    } else {
                        cri.sanity.A.edit.putLong(p3, ((Long) p4).longValue());
                    }
                } else {
                    cri.sanity.A.edit.putFloat(p3, ((Float) p4).floatValue());
                }
            } else {
                cri.sanity.A.edit.putInt(p3, ((Integer) p4).intValue());
            }
        } else {
            cri.sanity.A.edit.putBoolean(p3, ((Boolean) p4).booleanValue());
        }
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A put(String p1, String p2)
    {
        cri.sanity.A.edit.putString(p1, p2);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A put(String p1, boolean p2)
    {
        cri.sanity.A.edit.putBoolean(p1, p2);
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putAll(java.util.Map p4)
    {
        java.util.Iterator v1 = p4.entrySet().iterator();
        while (v1.hasNext()) {
            java.util.Map$Entry v0_1 = ((java.util.Map$Entry) v1.next());
            cri.sanity.A.put(((String) v0_1.getKey()), v0_1.getValue());
        }
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putc(String p1, float p2)
    {
        cri.sanity.A.edit.putFloat(p1, p2).commit();
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putc(String p1, int p2)
    {
        cri.sanity.A.edit.putInt(p1, p2).commit();
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putc(String p1, long p2)
    {
        cri.sanity.A.edit.putLong(p1, p2).commit();
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putc(String p1, Object p2)
    {
        cri.sanity.A.put(p1, p2);
        return cri.sanity.A.commit();
    }

    public static final cri.sanity.A putc(String p1, String p2)
    {
        cri.sanity.A.edit.putString(p1, p2).commit();
        return cri.sanity.A.a;
    }

    public static final cri.sanity.A putc(String p1, boolean p2)
    {
        cri.sanity.A.edit.putBoolean(p1, p2).commit();
        return cri.sanity.A.a;
    }

    public static final String rawstr(int p7)
    {
        java.io.InputStream v2 = cri.sanity.A.resources().openRawResource(p7);
        java.io.BufferedReader v0_1 = new java.io.BufferedReader(new java.io.InputStreamReader(v2), 8192);
        StringBuilder v4_0 = new StringBuilder(1024);
        while(true) {
            String v3 = v0_1.readLine();
            if (v3 == null) {
                break;
            }
            v4_0.append(v3).append(10);
        }
        v0_1.close();
        v2.close();
        String v5_2 = v4_0.toString();
        return v5_2;
    }

    public static final android.content.ContentResolver resolver()
    {
        if (cri.sanity.A.resolver == null) {
            cri.sanity.A.resolver = cri.sanity.A.a.getContentResolver();
        }
        return cri.sanity.A.resolver;
    }

    public static final android.content.res.Resources resources()
    {
        if (cri.sanity.A.resources == null) {
            cri.sanity.A.resources = cri.sanity.A.a.getResources();
        }
        return cri.sanity.A.resources;
    }

    public static final int rstring(String p2)
    {
        return cri.sanity.R$string.getDeclaredField(p2).getInt(cri.sanity.R$string);
    }

    public static final String s(int p1)
    {
        return cri.sanity.A.a.getString(p1);
    }

    public static final String sdcardDir()
    {
        String v2 = 0;
        java.io.File v1_0 = android.os.Environment.getExternalStorageDirectory();
        if (v1_0.canWrite()) {
            String v0 = new StringBuilder().append(v1_0.getAbsolutePath()).append(47).append(cri.sanity.A.name).toString();
            java.io.File v1_2 = new java.io.File(v0);
            if ((!v1_2.isDirectory()) && (!v1_2.mkdir())) {
                v0 = 0;
            }
            v2 = v0;
        }
        return v2;
    }

    public static final android.hardware.SensorManager sensorMan()
    {
        if (cri.sanity.A.sensorMan == null) {
            cri.sanity.A.sensorMan = ((android.hardware.SensorManager) cri.sanity.A.a.getSystemService("sensor"));
        }
        return cri.sanity.A.sensorMan;
    }

    public static final android.hardware.Sensor sensorProxim()
    {
        android.hardware.Sensor v1_1;
        android.hardware.SensorManager v0 = cri.sanity.A.sensorMan();
        if (v0 != null) {
            v1_1 = v0.getDefaultSensor(8);
        } else {
            v1_1 = 0;
        }
        return v1_1;
    }

    public static final void setFull(boolean p1)
    {
        cri.sanity.A.full = p1;
        cri.sanity.A.putc("full", p1);
        return;
    }

    public static final java.util.Vector split(String p5, String p6, int p7)
    {
        java.util.Vector v3_1 = new java.util.Vector(p7);
        int v0 = p6.length();
        if (v0 > 0) {
            int v1 = 0;
            int v2 = p6.indexOf(p5);
            while (v2 > 0) {
                v3_1.add(p6.substring(v1, v2));
                v1 = (v2 + 1);
                if (v1 < v0) {
                    v2 = p6.indexOf(p5, v1);
                } else {
                    v3_1.add("");
                }
            }
            v3_1.add(p6.substring(v1));
        }
        return v3_1;
    }

    public static final android.telephony.TelephonyManager telMan()
    {
        if (cri.sanity.A.telMan == null) {
            cri.sanity.A.telMan = ((android.telephony.TelephonyManager) cri.sanity.A.a.getSystemService("phone"));
        }
        return cri.sanity.A.telMan;
    }

    public static final long time()
    {
        return System.currentTimeMillis();
    }

    public static final void toast(int p2)
    {
        android.widget.Toast.makeText(cri.sanity.A.a, p2, 0).show();
        return;
    }

    public static final void toast(android.content.Context p1, int p2)
    {
        android.widget.Toast.makeText(p1, p2, 0).show();
        return;
    }

    public static final void toast(android.content.Context p1, String p2)
    {
        android.widget.Toast.makeText(p1, p2, 0).show();
        return;
    }

    public static final void toast(String p2)
    {
        android.widget.Toast.makeText(cri.sanity.A.a, p2, 0).show();
        return;
    }

    public static final int verCode()
    {
        return cri.sanity.A.pkgInfo.versionCode;
    }

    public static final String verName()
    {
        return cri.sanity.A.pkgInfo.versionName;
    }

    public static final android.net.wifi.WifiManager wifiMan()
    {
        if (cri.sanity.A.wifiMan == null) {
            cri.sanity.A.wifiMan = ((android.net.wifi.WifiManager) cri.sanity.A.a.getSystemService("wifi"));
        }
        return cri.sanity.A.wifiMan;
    }

    public void onCreate()
    {
        cri.sanity.A.a = this;
        cri.sanity.A.name = this.getString(2131165184);
        cri.sanity.A.prefs = android.preference.PreferenceManager.getDefaultSharedPreferences(cri.sanity.A.a);
        cri.sanity.A.edit = cri.sanity.A.prefs.edit();
        try {
            cri.sanity.A.full = cri.sanity.A.prefs.getBoolean("full", 0);
            try {
                cri.sanity.A.pkgInfo = this.getPackageManager().getPackageInfo(this.getPackageName(), 0);
            } catch (android.content.pm.PackageManager$NameNotFoundException v1) {
            }
            return;
        } catch (Exception v0) {
            cri.sanity.A.setFull(0);
        }
    }
}
package cri.sanity.util;
public class Alert$Click implements android.content.DialogInterface$OnClickListener {
    protected android.content.DialogInterface dlg;
    protected int which;

    public Alert$Click()
    {
        return;
    }

    protected final void dismiss()
    {
        this.dlg.dismiss();
        return;
    }

    public void on()
    {
        this.dlg.cancel();
        return;
    }

    public final void onClick(android.content.DialogInterface p1, int p2)
    {
        this.dlg = p1;
        this.which = p2;
        this.on();
        return;
    }
}
package cri.sanity;
 class Admin$1$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.Admin$1 this$0;

    Admin$1$1(cri.sanity.Admin$1 p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.Admin.remove();
        cri.sanity.Admin.prefCheck(this.this$0.val$p);
        return;
    }
}
package cri.sanity;
public abstract class PrefActivity$Change implements android.preference.Preference$OnPreferenceChangeListener {
    protected android.preference.Preference pref;
    protected Object value;

    public PrefActivity$Change()
    {
        return;
    }

    public abstract boolean on();

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        this.pref = p2;
        this.value = p3;
        return this.on();
    }
}
package cri.sanity;
final class Admin$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.PrefActivity val$act;
    final synthetic android.preference.Preference val$p;

    Admin$1(cri.sanity.PrefActivity p1, android.preference.Preference p2)
    {
        this.val$act = p1;
        this.val$p = p2;
        return;
    }

    public boolean on()
    {
        if (!((Boolean) this.value).booleanValue()) {
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034112), new cri.sanity.Admin$1$1(this), 0, 1);
        } else {
            cri.sanity.Admin.request(this.val$act);
        }
        return 0;
    }
}
package cri.sanity;
public class Admin$Receiver extends android.app.admin.DeviceAdminReceiver {

    public Admin$Receiver()
    {
        return;
    }

    public CharSequence onDisableRequested(android.content.Context p2, android.content.Intent p3)
    {
        return cri.sanity.A.rawstr(2131034112);
    }
}
package cri.sanity;
public final class Admin {
    private static android.content.ComponentName compName;

    public Admin()
    {
        return;
    }

    public static final android.content.ComponentName compName()
    {
        if (cri.sanity.Admin.compName == null) {
            cri.sanity.Admin.compName = new android.content.ComponentName(cri.sanity.A.app(), cri.sanity.Admin$Receiver);
        }
        return cri.sanity.Admin.compName;
    }

    public static final boolean isActive()
    {
        if ((cri.sanity.A.SDK < 8) || (!cri.sanity.A.devpolMan().isAdminActive(cri.sanity.Admin.compName()))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public static final void prefCheck(android.preference.Preference p1)
    {
        ((android.preference.CheckBoxPreference) p1).setChecked(cri.sanity.Admin.isActive());
        return;
    }

    public static final void prefSetup(android.preference.Preference p3)
    {
        if (cri.sanity.A.SDK >= 8) {
            cri.sanity.PrefActivity v0_1 = ((cri.sanity.PrefActivity) cri.sanity.util.Alert.activity);
            v0_1.on(p3, new cri.sanity.Admin$1(v0_1, p3));
        } else {
            p3.setEnabled(0);
            p3.setSummary(2131165626);
        }
        return;
    }

    public static final void remove()
    {
        android.content.ComponentName v0 = cri.sanity.Admin.compName();
        try {
            if (cri.sanity.Admin.isActive()) {
                try {
                    cri.sanity.A.devpolMan().removeActiveAdmin(v0);
                } catch (Exception v1) {
                }
            } else {
            }
        } catch (Exception v1_2) {
            throw v1_2;
        }
        return;
    }

    public static final void request(android.content.Context p3)
    {
        if (cri.sanity.A.SDK >= 8) {
            android.content.Intent v0_1 = new android.content.Intent("android.app.action.ADD_DEVICE_ADMIN");
            v0_1.putExtra("android.app.extra.DEVICE_ADMIN", cri.sanity.Admin.compName());
            v0_1.putExtra("android.app.extra.ADD_EXPLANATION", cri.sanity.A.rawstr(2131034114));
            p3.startActivity(v0_1);
        }
        return;
    }
}
package cri.sanity;
synthetic class AlarmService$1 {
}
package cri.sanity;
 class AlarmService$Action extends java.lang.Thread {
    private String action;
    private android.os.Bundle extras;
    final synthetic cri.sanity.AlarmService this$0;

    private AlarmService$Action(cri.sanity.AlarmService p1, String p2, android.os.Bundle p3)
    {
        this.this$0 = p1;
        this.action = p2;
        this.extras = p3;
        this.start();
        return;
    }

    synthetic AlarmService$Action(cri.sanity.AlarmService p1, String p2, android.os.Bundle p3, cri.sanity.AlarmService$1 p4)
    {
        this(p1, p2, p3);
        return;
    }

    public void run()
    {
        cri.sanity.AlarmService$Action.yield();
        new cri.sanity.Alarmer(this.extras).runAction(this.action);
        cri.sanity.AlarmService.access$100();
        try {
            cri.sanity.AlarmService.access$100().remove(this.action);
        } catch (cri.sanity.AlarmService v0_4) {
            throw v0_4;
        }
        if (cri.sanity.AlarmService.access$100().isEmpty()) {
            this.this$0.stopSelf();
        }
        return;
    }
}
package cri.sanity;
public abstract class WakeService extends android.app.Service {
    private android.os.PowerManager$WakeLock wakeLock;

    public WakeService()
    {
        return;
    }

    public android.os.IBinder onBind(android.content.Intent p2)
    {
        return 0;
    }

    public void onCreate()
    {
        super.onCreate();
        this.wakeLock = cri.sanity.util.Dev.newCpuWakeLock();
        this.wakeLock.acquire();
        return;
    }

    public void onDestroy()
    {
        super.onDestroy();
        this.wakeLock.release();
        this.wakeLock = 0;
        return;
    }
}
package cri.sanity;
public final class AlarmService extends cri.sanity.WakeService {
    private static java.util.Map actionMap;

    public AlarmService()
    {
        return;
    }

    static synthetic java.util.Map access$100()
    {
        return cri.sanity.AlarmService.actionMap;
    }

    public void onCreate()
    {
        super.onCreate();
        if (cri.sanity.AlarmService.actionMap == null) {
            cri.sanity.AlarmService.actionMap = new java.util.HashMap();
        }
        return;
    }

    public int onStartCommand(android.content.Intent p9, int p10, int p11)
    {
        if (p9 != null) {
            String v1 = p9.getAction();
            if (v1 != null) {
                try {
                    cri.sanity.AlarmService$Action v0_1 = ((cri.sanity.AlarmService$Action) cri.sanity.AlarmService.actionMap.get(v1));
                } catch (Exception v2_1) {
                    throw v2_1;
                }
                if (v0_1 != null) {
                    try {
                        v0_1.interrupt();
                    } catch (Exception v2) {
                    }
                }
                cri.sanity.AlarmService.actionMap.put(v1, new cri.sanity.AlarmService$Action(this, v1, p9.getExtras(), 0));
            }
        }
        return 1;
    }
}
package cri.sanity;
public final class Alarmer extends android.content.BroadcastReceiver {
    public static final String ACT_BOOT = "actBootAsync";
    public static final String ACT_FLIGHTOFF = "actFlightOff";
    public static final String ACT_ONIDLE = "actOnIdleAsync";
    public static final String ACT_SETPROFILE = "actSetProfile";
    public static final String ACT_SILENTLIMIT = "actSilentLimit";
    public static final String EXTRA_PROFILE = "prf";
    private static final int RETRY_TIME = 60000;
    private android.content.Context ctx;
    private android.os.Bundle extras;

    public Alarmer()
    {
        return;
    }

    public Alarmer(android.os.Bundle p1)
    {
        this.extras = p1;
        return;
    }

    private static android.app.PendingIntent alarmIntent(String p1)
    {
        return cri.sanity.Alarmer.alarmIntent(p1, 0);
    }

    private static android.app.PendingIntent alarmIntent(String p4, android.os.Bundle p5)
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        android.content.Intent v1_1 = new android.content.Intent(v0, cri.sanity.Alarmer);
        v1_1.setAction(p4);
        if (p5 != null) {
            v1_1.putExtras(p5);
        }
        return android.app.PendingIntent.getBroadcast(v0, 0, v1_1, 1073741824);
    }

    public static final void exec(String p2, long p3)
    {
        cri.sanity.Alarmer.exec(p2, 0, p3, 1);
        return;
    }

    public static final void exec(String p1, long p2, boolean p4)
    {
        cri.sanity.Alarmer.exec(p1, 0, p2, p4);
        return;
    }

    public static final void exec(String p5, android.os.Bundle p6, long p7, boolean p9)
    {
        android.app.PendingIntent v1 = cri.sanity.Alarmer.alarmIntent(p5, p6);
        android.app.AlarmManager v0 = cri.sanity.A.alarmMan();
        if (p9) {
            v0.cancel(v1);
        }
        v0.set(2, (android.os.SystemClock.elapsedRealtime() + p7), v1);
        return;
    }

    public static final void runService(android.content.Intent p2)
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        p2.setClass(v0, cri.sanity.AlarmService);
        v0.startService(p2);
        return;
    }

    public static void runService(String p1, android.os.Bundle p2)
    {
        android.content.Intent v0_1 = new android.content.Intent(p1);
        if (p2 != null) {
            v0_1.putExtras(p2);
        }
        cri.sanity.Alarmer.runService(v0_1);
        return;
    }

    public static void stop(String p2)
    {
        cri.sanity.A.alarmMan().cancel(cri.sanity.Alarmer.alarmIntent(p2));
        return;
    }

    public final void actBootAsync()
    {
        this.actOnIdleAsync();
        return;
    }

    public final void actFlightOff()
    {
        if ((!cri.sanity.PhoneListener.isRunning()) && (cri.sanity.util.Dev.isFlightModeOn())) {
            cri.sanity.ModeReceiver.skip = 1;
            cri.sanity.util.Dev.enableFlightMode(0);
            cri.sanity.A.notifyCanc(77);
        }
        return;
    }

    public final void actOnIdleAsync()
    {
        if (cri.sanity.A.is("rec")) {
            cri.sanity.RecService.cron();
        }
        if ((cri.sanity.A.is("quick_start")) && (!cri.sanity.BootService.isRunning())) {
            cri.sanity.A.app().startService(new android.content.Intent(cri.sanity.A.app(), cri.sanity.BootService));
        }
        return;
    }

    public final void actSetProfile()
    {
        if (this.extras != null) {
            String v0 = this.extras.getString("prf");
            if (!cri.sanity.A.empty(v0)) {
                android.content.Context v1_3 = this.ctx;
                String v2_1 = cri.sanity.A.s(2131165640);
                Object[] v3_1 = new Object[1];
                v3_1[0] = v0;
                cri.sanity.A.toast(v1_3, String.format(v2_1, v3_1));
            }
        }
        return;
    }

    public final void actSilentLimit()
    {
        if (!cri.sanity.PhoneListener.isRunning()) {
            cri.sanity.ModeReceiver.skip = 1;
            cri.sanity.A.audioMan().setRingerMode(2);
            cri.sanity.A.notifyCanc(55);
        } else {
            cri.sanity.Alarmer.exec("actSilentLimit", 60000);
        }
        return;
    }

    public void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        if (p4 != null) {
            String v0 = p4.getAction();
            if (v0 != null) {
                if (!v0.endsWith("Async")) {
                    this.ctx = p3;
                    this.extras = p4.getExtras();
                    this.runAction(v0);
                } else {
                    cri.sanity.Alarmer.runService(p4);
                }
            }
        }
        return;
    }

    public void runAction(String p3)
    {
        try {
            Object[] v1_1 = new Class[0];
            Object[] v1_3 = new Object[0];
            cri.sanity.Alarmer.getMethod(p3, v1_1).invoke(this, v1_3);
        } catch (Exception v0) {
        }
        return;
    }
}
package cri.sanity;
 class BlankActivity$1 implements java.lang.Runnable {
    final synthetic cri.sanity.BlankActivity this$0;

    BlankActivity$1(cri.sanity.BlankActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.BlankActivity.access$002(0);
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
public class BlankActivity extends android.app.Activity {
    public static final String EXTRA_BLOCK = "block";
    public static boolean force;
    private static final java.util.Collection posts;
    private static cri.sanity.BlankActivity singleton;
    private boolean block;
    private android.os.Handler handler;

    static BlankActivity()
    {
        cri.sanity.BlankActivity.force = 0;
        cri.sanity.BlankActivity.posts = new java.util.LinkedList();
        return;
    }

    public BlankActivity()
    {
        this.block = 0;
        return;
    }

    static synthetic cri.sanity.BlankActivity access$002(cri.sanity.BlankActivity p0)
    {
        cri.sanity.BlankActivity.singleton = p0;
        return p0;
    }

    public static final cri.sanity.BlankActivity getInstance()
    {
        return cri.sanity.BlankActivity.singleton;
    }

    private boolean isBlockedKey(int p2)
    {
        int v0;
        switch (p2) {
            case 4:
            case 5:
            case 24:
            case 25:
            case 28:
            case 64:
            case 65:
            case 80:
            case 82:
            case 83:
            case 84:
                v0 = 1;
                break;
            default:
                v0 = 0;
        }
        return v0;
    }

    public static final void postSingleton(Runnable p2)
    {
        try {
            if (cri.sanity.BlankActivity.singleton != null) {
                cri.sanity.BlankActivity.singleton.handler.post(p2);
            } else {
                cri.sanity.BlankActivity.posts.add(p2);
            }
        } catch (android.os.Handler v0_4) {
            throw v0_4;
        }
        return;
    }

    public void onBackPressed()
    {
        if (!this.block) {
            super.onBackPressed();
        }
        return;
    }

    public void onCreate(android.os.Bundle p5)
    {
        super.onCreate(p5);
        this.handler = new android.os.Handler();
        android.content.Intent v0_2 = this.getIntent();
        if (((cri.sanity.PhoneListener.isRunning()) || (cri.sanity.BlankActivity.force)) && (!"android.intent.action.MAIN".equals(v0_2.getAction()))) {
            cri.sanity.BlankActivity.force = 0;
            if (cri.sanity.BlankActivity.singleton == null) {
                cri.sanity.BlankActivity.singleton = this;
                this.block = v0_2.getBooleanExtra("block", 0);
            } else {
                this.finish();
            }
        } else {
            android.content.Intent v0_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.MainActivity);
            v0_1.setFlags(268435456);
            this.startActivity(v0_1);
            this.finish();
        }
        return;
    }

    public void onDestroy()
    {
        if (cri.sanity.BlankActivity.singleton == this) {
            cri.sanity.BlankActivity.singleton = 0;
        }
        super.onDestroy();
        return;
    }

    public boolean onKeyDown(int p2, android.view.KeyEvent p3)
    {
        if ((!this.block) || (!this.isBlockedKey(p2))) {
            int v0_2 = super.onKeyDown(p2, p3);
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public boolean onKeyUp(int p2, android.view.KeyEvent p3)
    {
        if ((!this.block) || (!this.isBlockedKey(p2))) {
            int v0_2 = super.onKeyUp(p2, p3);
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public void onResume()
    {
        super.onResume();
        try {
            if (!cri.sanity.BlankActivity.posts.isEmpty()) {
                java.util.Iterator v0 = cri.sanity.BlankActivity.posts.iterator();
                while (v0.hasNext()) {
                    this.handler.post(((Runnable) v0.next()));
                }
                cri.sanity.BlankActivity.posts.clear();
            } else {
            }
        } catch (java.util.Collection v2_4) {
            throw v2_4;
        }
        return;
    }

    public final void postFinish()
    {
        this.handler.post(new cri.sanity.BlankActivity$1(this));
        return;
    }
}
package cri.sanity;
public class BootReceiver extends android.content.BroadcastReceiver {

    public BootReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        if (cri.sanity.A.isEnabled()) {
            cri.sanity.Alarmer.runService("actBootAsync", 0);
        }
        return;
    }
}
package cri.sanity;
public class BootService extends android.app.Service {
    private static boolean serviceRunning;
    private boolean instanceRunning;

    static BootService()
    {
        cri.sanity.BootService.serviceRunning = 0;
        return;
    }

    public BootService()
    {
        this.instanceRunning = 0;
        return;
    }

    public static final boolean isRunning()
    {
        return cri.sanity.BootService.serviceRunning;
    }

    public android.os.IBinder onBind(android.content.Intent p2)
    {
        return 0;
    }

    public void onDestroy()
    {
        if (this.instanceRunning) {
            this.instanceRunning = 0;
            cri.sanity.BootService.serviceRunning = 0;
        }
        super.onDestroy();
        return;
    }

    public int onStartCommand(android.content.Intent p3, int p4, int p5)
    {
        if (!cri.sanity.BootService.serviceRunning) {
            this.instanceRunning = 1;
            cri.sanity.BootService.serviceRunning = 1;
        } else {
            this.stopSelf();
        }
        return 1;
    }
}
package cri.sanity;
public class BtReceiver extends android.content.BroadcastReceiver {

    public BtReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p8, android.content.Intent p9)
    {
        int v3;
        int v2 = 0;
        cri.sanity.PhoneListener v4 = cri.sanity.PhoneListener.getActiveInstance();
        boolean v1 = "android.bluetooth.device.action.ACL_CONNECTED".equals(p9.getAction());
        if (v4 != null) {
            v3 = v4.btCount;
        } else {
            v3 = cri.sanity.A.geti("bt_count");
        }
        if (!v1) {
            if (cri.sanity.util.Dev.isBtOn()) {
                v2 = Math.max((v3 - 1), 0);
            }
        } else {
            v2 = Math.max((v3 + 1), 1);
        }
        if (v3 != v2) {
            cri.sanity.A.putc("bt_count", v2);
            if (v4 != null) {
                v4.btCount = v2;
                v4.updateHeadsetBt(v1);
            }
        }
        return;
    }
}
package cri.sanity;
public final class Conf {
    public static final String BACKUP_FN = "sanity_backup.txt";
    public static final String BLOCK_FN = "block_history.txt";
    public static final int BLOCK_LOCK_DELAY = 2000;
    public static final char BLOCK_SEP = 124;
    public static final String DATE_PATTERN = "dd/MM/yyyy, kk:mm";
    public static final int DEVS_MIN_RETRY = 2000;
    public static final char FILTER_SEP = 167;
    public static final int FORCE_AUTOSPEAKER_DELAY = 3000;
    public static final boolean FULL = False;
    public static final int NAG_TIMEOUT = 14400000;
    public static final String PRF_EXT = ".prf";
    public static final float PROXIM_MAX = 16544;
    public static final float PROXIM_MIN = 63;
    public static final String REC_DATE_PATTERN = "yyyy-MM-dd";
    public static final int REC_FREE_LIMIT = 120000;
    public static final int REC_OFFHOOK_DELAY = 3000;
    public static final String REC_PREFIX = "rec_";
    public static final char REC_SEP = 95;
    public static final String REC_TIME_PATTERN = "kk.mm.ss";
    public static final int SERVICE_TIMEOUT = 2000;
    public static final String SMS_FN = "sms_history.txt";
    public static final char SMS_SEP = 167;
    public static final String SMS_UNSEP = "{[(S)]}";
    public static final String SMS_UNSLASH = "{[(\\)]}";
    public static final int TASK_WAIT_SHUTDOWN = 10000;
    public static final int TRACKER_SWITCH_DELAY = 200;
    public static final int TTS_UNMUTE_DELAY = 200;

    public Conf()
    {
        return;
    }
}
package cri.sanity;
 class HistoryActivity$1 extends android.os.Handler {
    final synthetic cri.sanity.HistoryActivity this$0;

    HistoryActivity$1(cri.sanity.HistoryActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p3)
    {
        if ((p3 != null) && (p3.obj != null)) {
            cri.sanity.HistoryActivity.access$000(this.this$0).addPreference(((android.preference.Preference) p3.obj));
        }
        return;
    }
}
package cri.sanity;
 class HistoryActivity$2$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.HistoryActivity$2 this$1;

    HistoryActivity$2$1(cri.sanity.HistoryActivity$2 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        try {
            if (cri.sanity.HistoryActivity.access$100(this.this$1.this$0).delete()) {
                cri.sanity.HistoryActivity.access$000(this.this$1.this$0).removeAll();
                this.this$1.this$0.onClear();
            } else {
                throw new Exception();
            }
        } catch (Exception v0) {
            cri.sanity.A.toast(2131165196);
        }
        return;
    }
}
package cri.sanity;
public abstract class PrefActivity$Click implements android.preference.Preference$OnPreferenceClickListener {
    protected android.preference.Preference pref;

    public PrefActivity$Click()
    {
        return;
    }

    public abstract boolean on();

    public boolean onPreferenceClick(android.preference.Preference p2)
    {
        this.pref = p2;
        return this.on();
    }
}
package cri.sanity;
 class HistoryActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.HistoryActivity this$0;

    HistoryActivity$2(cri.sanity.HistoryActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if (cri.sanity.HistoryActivity.access$000(this.this$0).getPreferenceCount() >= 1) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165610), new cri.sanity.HistoryActivity$2$1(this), 0);
        }
        return 1;
    }
}
package cri.sanity;
 class HistoryActivity$3$1 implements java.lang.Runnable {
    final synthetic cri.sanity.HistoryActivity$3 this$1;

    HistoryActivity$3$1(cri.sanity.HistoryActivity$3 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void run()
    {
        this.this$1.this$0.pref("clear").setEnabled(1);
        return;
    }
}
package cri.sanity;
abstract class HistoryActivity$Async extends cri.sanity.A$Async {
    final synthetic cri.sanity.HistoryActivity this$0;

    private HistoryActivity$Async(cri.sanity.HistoryActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    synthetic HistoryActivity$Async(cri.sanity.HistoryActivity p1, cri.sanity.HistoryActivity$1 p2)
    {
        this(p1);
        return;
    }
}
package cri.sanity;
 class HistoryActivity$3 extends cri.sanity.HistoryActivity$Async {
    final synthetic cri.sanity.HistoryActivity this$0;

    HistoryActivity$3(cri.sanity.HistoryActivity p2)
    {
        this.this$0 = p2;
        super(p2, 0);
        return;
    }

    public void run()
    {
        cri.sanity.HistoryActivity.access$300(this.this$0, this);
        if (!this.isCancelled()) {
            cri.sanity.HistoryActivity.access$400(this.this$0).post(new cri.sanity.HistoryActivity$3$1(this));
        }
        return;
    }
}
package cri.sanity;
 class HistoryActivity$4 implements java.lang.Runnable {
    final synthetic cri.sanity.HistoryActivity this$0;
    final synthetic int val$idMsg;

    HistoryActivity$4(cri.sanity.HistoryActivity p1, int p2)
    {
        this.this$0 = p1;
        this.val$idMsg = p2;
        return;
    }

    public void run()
    {
        cri.sanity.A.toast(this.val$idMsg);
        return;
    }
}
package cri.sanity;
public abstract class PrefActivity extends android.preference.PreferenceActivity {

    public PrefActivity()
    {
        return;
    }

    public final void fullOnly(android.preference.Preference p2)
    {
        if (!cri.sanity.A.isFull()) {
            if ((!(p2 instanceof android.preference.CheckBoxPreference)) && ((!(p2 instanceof android.preference.ListPreference)) && (!(p2 instanceof android.preference.EditTextPreference)))) {
                this.on(p2, new cri.sanity.PrefActivity$2(this));
            } else {
                this.on(p2, new cri.sanity.PrefActivity$1(this));
            }
        }
        return;
    }

    public final void fullOnly(String p2)
    {
        this.fullOnly(this.pref(p2));
        return;
    }

    public final varargs void fullOnly(android.preference.Preference[] p5)
    {
        int v2 = p5.length;
        int v1 = 0;
        while (v1 < v2) {
            this.fullOnly(p5[v1]);
            v1++;
        }
        return;
    }

    public final varargs void fullOnly(String[] p5)
    {
        int v3 = p5.length;
        int v1 = 0;
        while (v1 < v3) {
            this.fullOnly(p5[v1]);
            v1++;
        }
        return;
    }

    public final boolean is(android.preference.Preference p2)
    {
        return ((android.preference.CheckBoxPreference) p2).isChecked();
    }

    public final boolean is(String p2)
    {
        return ((android.preference.CheckBoxPreference) this.pref(p2)).isChecked();
    }

    public boolean isMainActivity()
    {
        return 0;
    }

    public final void on(android.preference.Preference p1, cri.sanity.PrefActivity$Change p2)
    {
        p1.setOnPreferenceChangeListener(p2);
        return;
    }

    public final void on(android.preference.Preference p1, cri.sanity.PrefActivity$Click p2)
    {
        p1.setOnPreferenceClickListener(p2);
        return;
    }

    public final void on(android.preference.Preference p1, cri.sanity.PrefActivity$Click p2, cri.sanity.PrefActivity$Change p3)
    {
        p1.setOnPreferenceClickListener(p2);
        p1.setOnPreferenceChangeListener(p3);
        return;
    }

    public final void on(String p2, cri.sanity.PrefActivity$Change p3)
    {
        this.on(this.pref(p2), p3);
        return;
    }

    public final void on(String p2, cri.sanity.PrefActivity$Click p3)
    {
        this.on(this.pref(p2), p3);
        return;
    }

    public final void on(String p2, cri.sanity.PrefActivity$Click p3, cri.sanity.PrefActivity$Change p4)
    {
        this.on(this.pref(p2), p3, p4);
        return;
    }

    public void onCreate(android.os.Bundle p1)
    {
        cri.sanity.util.Alert.activity = this;
        super.onCreate(p1);
        return;
    }

    public void onResume()
    {
        cri.sanity.util.Alert.activity = this;
        super.onResume();
        return;
    }

    public final android.preference.Preference pref(String p2)
    {
        return this.findPreference(p2);
    }

    public final void setChecked(android.preference.Preference p1, boolean p2)
    {
        ((android.preference.CheckBoxPreference) p1).setChecked(p2);
        return;
    }

    public final void setChecked(String p2, boolean p3)
    {
        ((android.preference.CheckBoxPreference) this.pref(p2)).setChecked(p3);
        return;
    }

    public final void setEnabled(android.preference.Preference p1, boolean p2)
    {
        p1.setEnabled(p2);
        return;
    }

    public final void setEnabled(String p2, boolean p3)
    {
        this.pref(p2).setEnabled(p3);
        return;
    }

    public final void updatePref(String p2)
    {
        this.updatePref(p2, 1);
        return;
    }

    public final void updatePref(String p8, boolean p9)
    {
        android.preference.CheckBoxPreference v0;
        android.preference.ListPreference v2_0 = this.findPreference(p8);
        String v1 = v2_0.getDependency();
        if (!cri.sanity.A.empty(v1)) {
            v0 = ((android.preference.CheckBoxPreference) this.findPreference(v1));
        } else {
            v0 = 0;
        }
        if ((p9 != 0) && (!cri.sanity.A.isEnabled())) {
            int v9_1 = 0;
        } else {
            v9_1 = 1;
        }
        if ((v9_1 == 0) || ((v0 != null) && ((!v0.isEnabled()) || (!v0.isChecked())))) {
            String v4_5 = 0;
        } else {
            v4_5 = 1;
        }
        v2_0.setEnabled(v4_5);
        if (!(v2_0 instanceof android.preference.CheckBoxPreference)) {
            if (!(v2_0 instanceof cri.sanity.pref.PList)) {
                if (!(v2_0 instanceof cri.sanity.pref.PFilter)) {
                    if (!(v2_0 instanceof cri.sanity.pref.PEdit)) {
                        if (!(v2_0 instanceof cri.sanity.pref.PPwd)) {
                            if ((v2_0 instanceof android.preference.ListPreference)) {
                                ((android.preference.ListPreference) v2_0).setValue(cri.sanity.A.gets(p8));
                            }
                        } else {
                            ((cri.sanity.pref.PPwd) v2_0).updateSum();
                        }
                    } else {
                        ((cri.sanity.pref.PEdit) v2_0).updateSum();
                    }
                } else {
                    ((cri.sanity.pref.PFilter) v2_0).updateSum();
                }
            } else {
                cri.sanity.pref.PList v3_1 = ((cri.sanity.pref.PList) v2_0);
                if (!v3_1.isWrap()) {
                    v3_1.setValue(cri.sanity.A.gets(p8));
                } else {
                    v3_1.setValue(cri.sanity.A.geti(v3_1.getWrapKey()));
                }
            }
        } else {
            ((android.preference.CheckBoxPreference) v2_0).setChecked(cri.sanity.A.is(p8));
        }
        return;
    }

    public final varargs void updatePrefs(String[] p6)
    {
        int v3 = p6.length;
        int v1 = 0;
        while (v1 < v3) {
            this.updatePref(p6[v1], 1);
            v1++;
        }
        return;
    }

    public final varargs void updatePrefsNoDep(String[] p6)
    {
        int v3 = p6.length;
        int v1 = 0;
        while (v1 < v3) {
            this.updatePref(p6[v1], 0);
            v1++;
        }
        return;
    }
}
package cri.sanity;
public abstract class ScreenActivity extends cri.sanity.PrefActivity implements android.content.SharedPreferences$OnSharedPreferenceChangeListener {
    private static final String AUTHOR = "Cristiano Tagliamonte";
    private static final String FIRST_YEAR = "2011";
    private static boolean grant;
    private static final java.util.Map mapMenuScreen;
    private static final java.util.Map mapScreenMenu;
    private static final java.util.Map mapScreenPref;
    private static final java.util.Map mapScreenWidget;
    private static final java.util.Map mapSkipKeys;
    protected static boolean nagDefault;
    protected boolean nag;
    protected boolean secure;
    protected boolean shortcut;
    protected boolean skipAllKeys;

    static ScreenActivity()
    {
        cri.sanity.ScreenActivity.mapScreenPref = new java.util.HashMap();
        cri.sanity.ScreenActivity.mapScreenWidget = new java.util.HashMap();
        cri.sanity.ScreenActivity.mapScreenMenu = new java.util.HashMap();
        cri.sanity.ScreenActivity.mapMenuScreen = new java.util.HashMap();
        cri.sanity.ScreenActivity.mapSkipKeys = cri.sanity.P.skipKeysMap();
        cri.sanity.ScreenActivity.grant = 0;
        cri.sanity.ScreenActivity.nagDefault = 1;
        return;
    }

    public ScreenActivity()
    {
        this.skipAllKeys = 0;
        this.secure = 1;
        return;
    }

    static synthetic boolean access$002(boolean p0)
    {
        cri.sanity.ScreenActivity.grant = p0;
        return p0;
    }

    static synthetic void access$100(cri.sanity.ScreenActivity p0)
    {
        p0.protect();
        return;
    }

    public static final boolean alertChangeLog()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165541), cri.sanity.A.rawstr(2131034116), -1);
        return 1;
    }

    public static final String appDesc()
    {
        String v0 = android.text.format.DateFormat.format("yyyy", cri.sanity.A.time()).toString();
        if (!v0.equals("2011")) {
            v0 = new StringBuilder().append("2011-").append(v0).toString();
        }
        return new StringBuilder().append(cri.sanity.A.s(2131165185)).append("\n(C) ").append(v0).append(", ").append("Cristiano Tagliamonte").append(46).toString();
    }

    public static final String fullName()
    {
        String v1_10;
        int v0 = cri.sanity.A.beta();
        StringBuilder v2_1 = new StringBuilder().append(cri.sanity.A.name()).append("  v").append(cri.sanity.A.verName());
        if (v0 >= 1) {
            String v1_3;
            StringBuilder v3_1 = new StringBuilder().append(" beta");
            if (v0 <= 1) {
                v1_3 = "";
            } else {
                v1_3 = new StringBuilder().append(" ").append(v0).toString();
            }
            v1_10 = v3_1.append(v1_3).toString();
        } else {
            v1_10 = "";
        }
        return v2_1.append(v1_10).toString();
    }

    private void protect()
    {
        if ((!cri.sanity.ScreenActivity.grant) && (this.secure)) {
            String v0 = cri.sanity.A.gets("pwd");
            if (v0.length() > 0) {
                cri.sanity.util.Alert.pwdAsk(new cri.sanity.ScreenActivity$6(this, v0), new cri.sanity.ScreenActivity$7(this));
            }
        }
        return;
    }

    public static final void screener(Class p2, int p3)
    {
        cri.sanity.ScreenActivity.mapScreenPref.put(p2, Integer.valueOf(p3));
        return;
    }

    public static final void screener(Class p2, int p3, int p4)
    {
        cri.sanity.ScreenActivity.mapScreenWidget.put(p2, Integer.valueOf(p4));
        cri.sanity.ScreenActivity.mapScreenPref.put(p2, Integer.valueOf(p3));
        return;
    }

    protected void nag()
    {
        if ((this.nag) && (!cri.sanity.A.isFull())) {
            long v1 = cri.sanity.A.time();
            try {
                if ((v1 - cri.sanity.A.getl("nag")) < 14400000) {
                    return;
                }
            } catch (Exception v0) {
                cri.sanity.A.del("nag");
            }
            cri.sanity.A.putc("nag", v1);
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034125), new cri.sanity.ScreenActivity$4(this), new cri.sanity.ScreenActivity$5(this));
            this.nag = 0;
        }
        return;
    }

    public void onCreate(android.os.Bundle p7)
    {
        cri.sanity.ScreenActivity$1 v3_0;
        super.onCreate(p7);
        this.nag = cri.sanity.ScreenActivity.nagDefault;
        if (this.getIntent().getIntExtra("cri.sanity.shortcut", 0) <= 0) {
            v3_0 = 0;
        } else {
            v3_0 = 1;
        }
        this.shortcut = v3_0;
        if ((cri.sanity.ScreenActivity.mapMenuScreen.isEmpty()) && (!this.isMainActivity())) {
            this.screenerAll();
        }
        Integer v0_1 = ((Integer) cri.sanity.ScreenActivity.mapScreenPref.get(this.getClass()));
        if (v0_1 != null) {
            this.addPreferencesFromResource(v0_1.intValue());
            android.preference.Preference v1 = this.pref("logo");
            if (v1 != null) {
                v1.setTitle(cri.sanity.ScreenActivity.fullName());
                v1.setSummary(cri.sanity.ScreenActivity.appDesc());
                v1.setPersistent(0);
                Integer v2_1 = ((Integer) cri.sanity.ScreenActivity.mapScreenWidget.get(this.getClass()));
                if (v2_1 != null) {
                    v1.setWidgetLayoutResource(v2_1.intValue());
                }
                this.on(v1, new cri.sanity.ScreenActivity$1(this));
            }
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p6)
    {
        this.getMenuInflater().inflate(2131296258, p6);
        Integer v0_1 = ((Integer) cri.sanity.ScreenActivity.mapScreenMenu.get(this.getClass()));
        if ((v0_1 != null) && (p6.findItem(v0_1.intValue()) != null)) {
            p6.removeItem(v0_1.intValue());
        }
        android.view.MenuItem v2 = p6.add(2131165214);
        v2.setIcon(17301568);
        v2.setOnMenuItemClickListener(new cri.sanity.ScreenActivity$2(this));
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p4)
    {
        int v1_4;
        Class v0_1 = ((Class) cri.sanity.ScreenActivity.mapMenuScreen.get(Integer.valueOf(p4.getItemId())));
        if (v0_1 != null) {
            if (!this.isMainActivity()) {
                this.finish();
            }
            this.startActivity(new android.content.Intent(cri.sanity.A.app(), v0_1));
            v1_4 = 1;
        } else {
            v1_4 = super.onOptionsItemSelected(p4);
        }
        return v1_4;
    }

    public void onPause()
    {
        super.onPause();
        cri.sanity.A.prefs().unregisterOnSharedPreferenceChangeListener(this);
        this.nag = cri.sanity.ScreenActivity.nagDefault;
        if (this.shortcut) {
            this.ungrant();
            this.finish();
        }
        return;
    }

    public void onResume()
    {
        super.onResume();
        this.protect();
        this.nag();
        cri.sanity.A.prefs().registerOnSharedPreferenceChangeListener(this);
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences p2, String p3)
    {
        if ((!this.skipAllKeys) && ((!cri.sanity.ScreenActivity.mapSkipKeys.containsKey(p3)) && ((!p3.startsWith("priv_")) && (cri.sanity.A.has("prf_name"))))) {
            cri.sanity.A.delc("prf_name");
        }
        return;
    }

    public final void screener(android.preference.Preference p3, Class p4, int p5, int p6)
    {
        cri.sanity.ScreenActivity.screener(p4, p5);
        if (p6 > 0) {
            cri.sanity.ScreenActivity.mapScreenMenu.put(p4, Integer.valueOf(p6));
            cri.sanity.ScreenActivity.mapMenuScreen.put(Integer.valueOf(p6), p4);
        }
        if (p3 != null) {
            this.on(p3, new cri.sanity.ScreenActivity$3(this, p4));
        }
        return;
    }

    public final void screener(android.preference.Preference p3, Class p4, int p5, int p6, int p7)
    {
        cri.sanity.ScreenActivity.mapScreenWidget.put(p4, Integer.valueOf(p7));
        this.screener(p3, p4, p5, p6);
        return;
    }

    protected final void screenerAll()
    {
        Object[] v8 = cri.sanity.PrefGroups.screens();
        int v7 = v8.length;
        int v6 = 0;
        while (v6 < v7) {
            this.screener(this.pref(((String) v8[(v6 + 0)])), ((Class) v8[(v6 + 1)]), ((Integer) v8[(v6 + 2)]).intValue(), ((Integer) v8[(v6 + 3)]).intValue(), ((Integer) v8[(v6 + 4)]).intValue());
            v6 += 5;
        }
        return;
    }

    protected void ungrant()
    {
        cri.sanity.ScreenActivity.grant = 0;
        cri.sanity.util.Alert.resetPwd();
        return;
    }
}
package cri.sanity;
public abstract class HistoryActivity extends cri.sanity.ScreenActivity {
    private android.os.Handler handler;
    private boolean load;
    private android.preference.PreferenceGroup prefGroup;

    public HistoryActivity()
    {
        this.load = 0;
        this.handler = new cri.sanity.HistoryActivity$1(this);
        return;
    }

    static synthetic android.preference.PreferenceGroup access$000(cri.sanity.HistoryActivity p1)
    {
        return p1.prefGroup;
    }

    static synthetic java.io.File access$100(cri.sanity.HistoryActivity p1)
    {
        return p1.file();
    }

    static synthetic void access$300(cri.sanity.HistoryActivity p0, cri.sanity.HistoryActivity$Async p1)
    {
        p0.readHistory(p1);
        return;
    }

    static synthetic android.os.Handler access$400(cri.sanity.HistoryActivity p1)
    {
        return p1.handler;
    }

    private java.io.File file()
    {
        return new java.io.File(cri.sanity.A.sdcardDir(), this.fnHistory());
    }

    private void readHistory(cri.sanity.HistoryActivity$Async p20)
    {
        this.prefGroup.removeAll();
        java.io.File v4 = this.file();
        if (v4.exists()) {
            java.util.Stack v16_0 = new java.util.Stack();
            char v15 = this.sep();
            int v14 = 0;
            java.io.BufferedReader v6 = 0;
            try {
                boolean v17_6 = new java.io.FileReader;
                v17_6(v4);
                java.io.BufferedReader v7_1 = new java.io.BufferedReader(v17_6, 8192);
                try {
                    reflect.Constructor v2 = this.prefClass().getDeclaredConstructors()[0];
                    int v11 = (this.lineItems() - 1);
                    String[] v8 = new String[this.lineItems()];
                } catch (Exception v3) {
                    v6 = v7_1;
                    if (v6 != null) {
                        try {
                            v6.close();
                        } catch (boolean v17) {
                        }
                    }
                    if (v14 != 0) {
                        int v5_1 = 0;
                    }
                }
                while ((p20 == null) || (!p20.isCancelled())) {
                    String v9 = v7_1.readLine();
                    if (v9.length() > 0) {
                        int v12_0 = 0;
                        int v5_0 = 0;
                        while (v5_0 < v11) {
                            int v13 = v9.indexOf(v15, v12_0);
                            v8[v5_0] = v9.substring(v12_0, v13).trim();
                            v12_0 = (v13 + 1);
                            v5_0++;
                        }
                        v8[v11] = v9.substring(v12_0).trim();
                        Object[] v0_11 = new Object[2];
                        boolean v17_17 = v0_11;
                        v17_17[0] = this;
                        v17_17[1] = v8;
                        v16_0.push(((android.preference.Preference) v2.newInstance(v17_17)));
                        v14 = 1;
                    }
                }
            } catch (Exception v3) {
            }
        } else {
            this.postErr(2131165197);
        }
        return;
    }

    protected abstract String fnHistory();

    protected abstract int lineItems();

    protected abstract String mainTitle();

    protected void onClear()
    {
        return;
    }

    public void onCreate(android.os.Bundle p5)
    {
        this.skipAllKeys = 1;
        cri.sanity.HistoryActivity.screener(this.getClass(), 2130968591, 2130903059);
        super.onCreate(p5);
        this.prefGroup = ((android.preference.PreferenceGroup) this.pref("history"));
        android.preference.Preference v0 = this.pref("clear");
        this.on(v0, new cri.sanity.HistoryActivity$2(this));
        v0.setEnabled(0);
        this.pref("history_main").setTitle(this.mainTitle());
        return;
    }

    public void onStart()
    {
        super.onStart();
        if (!this.load) {
            Void[] v1_1 = new Void[0];
            new cri.sanity.HistoryActivity$3(this).execute(v1_1);
        }
        return;
    }

    protected final void postErr(int p3)
    {
        this.handler.post(new cri.sanity.HistoryActivity$4(this, p3));
        return;
    }

    protected abstract Class prefClass();

    protected abstract char sep();
}
package cri.sanity;
public final class K {
    public static final String AGREE = "agree";
    public static final String AIRPLANE_LIMIT = "airplane_limit";
    public static final String ANONYM = "anonym";
    public static final String ANONYM_CONFIRM = "anonym_confirm";
    public static final String ANONYM_FILTER = "filter_enable_anonym";
    public static final String ANONYM_NOTIFY = "anonym_notify";
    public static final String ANONYM_PREFIX = "anonym_prefix";
    public static final String ANSWER = "answer";
    public static final String ANSWER_ALT = "answer_alt";
    public static final String ANSWER_DELAY = "answer_delay";
    public static final String ANSWER_FILTER = "filter_enable_answer";
    public static final String ANSWER_HEADSET = "answer_headset";
    public static final String ANSWER_SKIP = "answer_skip";
    public static final String AUTO_BT = "bt";
    public static final String AUTO_GPS = "gps";
    public static final String AUTO_MOBDATA = "mobdata";
    public static final String AUTO_WIFI = "wifi";
    public static final String BETA = "beta";
    public static final String BLOCK_FILTER = "filter_enable_block";
    public static final String BLOCK_MODE = "block_mode";
    public static final String BLOCK_NOTIFY = "block_notify";
    public static final String BLOCK_PICKUP = "block_pickup";
    public static final String BLOCK_RESUME = "block_resume";
    public static final String BLOCK_SKIP = "block_skip";
    public static final String BLOCK_SMS = "blocksms";
    public static final String BLOCK_SMS_FILTER = "filter_enable_blocksms";
    public static final String BLOCK_SMS_MAX = "blocksms_max";
    public static final String BLOCK_SMS_NOTIFY = "blocksms_notify";
    public static final String BT_COUNT = "bt_count";
    public static final String BT_OFF = "bt_off";
    public static final String CRON = "cron";
    public static final String DISABLE_DELAY = "disable_delay";
    public static final String DISABLE_PROXIMITY = "disable_proximity";
    public static final String ENABLED = "enabled";
    public static final String ENABLE_DELAY = "enable_delay";
    public static final String ENABLE_PROXIMITY = "enable_proximity";
    public static final String FORCE_BT_AUDIO = "force_bt_audio";
    public static final String FULL = "full";
    public static final String LICVER = "licver";
    public static final String NAG = "nag";
    public static final String NOTIFY_ACTIVITY = "notify_activity";
    public static final String NOTIFY_DISABLE = "notify_disable";
    public static final String NOTIFY_ENABLE = "notify_enable";
    public static final String NOTIFY_HEADSET = "notify_headset";
    public static final String NOTIFY_REC_STOP = "notify_rec_stop";
    public static final String NOTIFY_TIMEOUT = "notify_timeout";
    public static final String NOTIFY_VOLUME = "notify_volume";
    public static final String PRF_NAME = "prf_name";
    public static final String PWD = "pwd";
    public static final String PWD_CLEAR = "pwd_clear";
    public static final String QUICK_START = "quick_start";
    public static final String REC = "rec";
    public static final String REC_AUTOREMOVE = "rec_autoremove";
    public static final String REC_FILTER = "filter_enable_rec";
    public static final String REC_FMT = "rec_fmt";
    public static final String REC_SRC = "rec_src";
    public static final String REC_START = "rec_start";
    public static final String REC_START_DELAY = "rec_start_delay";
    public static final String REC_START_DIR = "rec_start_dir";
    public static final String REC_START_HEADSET = "rec_start_headset";
    public static final String REC_START_SPEAKER = "rec_start_speaker";
    public static final String REC_START_TIMES = "rec_start_times";
    public static final String REC_STOP = "rec_stop";
    public static final String REC_STOP_DELAY = "rec_stop_delay";
    public static final String REC_STOP_HEADSET = "rec_stop_headset";
    public static final String REC_STOP_LIMIT = "rec_stop_limit";
    public static final String REC_STOP_SPEAKER = "rec_stop_speaker";
    public static final String REVERSE_BT = "bt_reverse";
    public static final String REVERSE_BT_TIMEOUT = "bt_reverse_timeout";
    public static final String REVERSE_PROXIMITY = "reverse_proximity";
    public static final String SCREEN_OFF = "screen_off";
    public static final String SCREEN_ON = "screen_on";
    public static final String SILENT_LIMIT = "silent_limit";
    public static final String SKIP_BT = "bt_skip";
    public static final String SKIP_HOTSPOT = "hotspot_skip";
    public static final String SKIP_MOBDATA = "mobdata_skip";
    public static final String SKIP_TETHER = "tether_skip";
    public static final String SMS_ALERT = "sms_alert";
    public static final String SMS_COUNT = "sms_count";
    public static final String SPEAKER_AUTO = "auto_speaker";
    public static final String SPEAKER_CALL = "speaker_call";
    public static final String SPEAKER_CALL_DELAY = "delay_speaker_call";
    public static final String SPEAKER_DELAY = "delay_speaker";
    public static final String SPEAKER_OFF_COUNT = "speaker_off_count";
    public static final String SPEAKER_ON_COUNT = "speaker_on_count";
    public static final String SPEAKER_SILENT_END = "silent_end_speaker";
    public static final String SPEAKER_VOL = "vol_speaker";
    public static final String TTS = "tts";
    public static final String TTS_ANONYM = "tts_anonym";
    public static final String TTS_FILTER = "filter_enable_tts";
    public static final String TTS_HEADSET = "tts_headset";
    public static final String TTS_PAUSE = "tts_pause";
    public static final String TTS_PREFIX = "tts_prefix";
    public static final String TTS_REPEAT = "tts_repeat";
    public static final String TTS_SKIP = "tts_skip";
    public static final String TTS_SMS = "ttsms";
    public static final String TTS_SMS_FILTER = "filter_enable_ttsms";
    public static final String TTS_SMS_PREFIX = "ttsms_prefix";
    public static final String TTS_SMS_SUFFIX = "ttsms_suffix";
    public static final String TTS_SMS_VOL = "ttsms_vol";
    public static final String TTS_SOLO = "tts_solo";
    public static final String TTS_STREAM = "tts_stream";
    public static final String TTS_SUFFIX = "tts_suffix";
    public static final String TTS_TONE = "tts_tone";
    public static final String TTS_UNKNOWN = "tts_unknown";
    public static final String TTS_VOL = "tts_vol";
    public static final String URGENT_FILTER = "filter_enable_urgent";
    public static final String URGENT_MODE = "urgent_mode";
    public static final String URGENT_SKIP = "urgent_skip";
    public static final String VER = "ver";
    public static final String VIBRATE_END = "vibrate_end";
    public static final String VIBRATE_MODE = "vibrate_mode";
    public static final String VIBRATE_PICKUP = "vibrate_pickup";
    public static final String VOL_BT = "vol_bt";
    public static final String VOL_PHONE = "vol_phone";
    public static final String VOL_SOLO = "vol_solo";
    public static final String VOL_WIRED = "vol_wired";
    public static final String WS = "_s";

    public K()
    {
        return;
    }

    static final Object[] getDefaults()
    {
        Object[] v0_1 = new Object[214];
        v0_1[0] = "enabled";
        v0_1[1] = Boolean.valueOf(1);
        v0_1[2] = "quick_start";
        v0_1[3] = Boolean.valueOf(0);
        v0_1[4] = "sms_alert";
        v0_1[5] = Boolean.valueOf(0);
        v0_1[6] = "silent_limit";
        v0_1[7] = Boolean.valueOf(0);
        v0_1[8] = "airplane_limit";
        v0_1[9] = Boolean.valueOf(0);
        v0_1[10] = "force_bt_audio";
        v0_1[11] = Boolean.valueOf(0);
        v0_1[12] = "reverse_proximity";
        v0_1[13] = Boolean.valueOf(0);
        v0_1[14] = "pwd";
        v0_1[15] = "";
        v0_1[16] = "pwd_clear";
        v0_1[17] = Boolean.valueOf(0);
        v0_1[18] = "mobdata";
        v0_1[19] = Boolean.valueOf(0);
        v0_1[20] = "wifi";
        v0_1[21] = Boolean.valueOf(0);
        v0_1[22] = "bt";
        v0_1[23] = Boolean.valueOf(0);
        v0_1[24] = "gps";
        v0_1[25] = Boolean.valueOf(0);
        v0_1[26] = "bt_skip";
        v0_1[27] = Boolean.valueOf(1);
        v0_1[28] = "mobdata_skip";
        v0_1[29] = Boolean.valueOf(0);
        v0_1[30] = "hotspot_skip";
        v0_1[31] = Boolean.valueOf(1);
        v0_1[32] = "tether_skip";
        v0_1[33] = Boolean.valueOf(1);
        v0_1[34] = "bt_reverse";
        v0_1[35] = Boolean.valueOf(0);
        v0_1[36] = "bt_reverse_timeout";
        v0_1[37] = Integer.valueOf(30000);
        v0_1[38] = "bt_off";
        v0_1[39] = Boolean.valueOf(0);
        v0_1[40] = "disable_proximity";
        v0_1[41] = Boolean.valueOf(0);
        v0_1[42] = "disable_delay";
        v0_1[43] = Integer.valueOf(2000);
        v0_1[44] = "enable_delay";
        v0_1[45] = Integer.valueOf(4000);
        v0_1[46] = "enable_proximity";
        v0_1[47] = Boolean.valueOf(0);
        v0_1[48] = "screen_off";
        v0_1[49] = Boolean.valueOf(1);
        v0_1[50] = "screen_on";
        v0_1[51] = Boolean.valueOf(1);
        v0_1[52] = "auto_speaker";
        v0_1[53] = Boolean.valueOf(0);
        v0_1[54] = "delay_speaker";
        v0_1[55] = Integer.valueOf(1000);
        v0_1[56] = "speaker_call";
        v0_1[57] = Integer.valueOf(0);
        v0_1[58] = "delay_speaker_call";
        v0_1[59] = Integer.valueOf(0);
        v0_1[60] = "vol_speaker";
        v0_1[61] = Integer.valueOf(-1);
        v0_1[62] = "silent_end_speaker";
        v0_1[63] = Boolean.valueOf(1);
        v0_1[64] = "speaker_on_count";
        v0_1[65] = Integer.valueOf(0);
        v0_1[66] = "speaker_off_count";
        v0_1[67] = Integer.valueOf(0);
        v0_1[68] = "vol_phone";
        v0_1[69] = Integer.valueOf(-1);
        v0_1[70] = "vol_wired";
        v0_1[71] = Integer.valueOf(-1);
        v0_1[72] = "vol_bt";
        v0_1[73] = Integer.valueOf(-1);
        v0_1[74] = "vol_solo";
        v0_1[75] = Boolean.valueOf(0);
        v0_1[76] = "vibrate_pickup";
        v0_1[77] = Boolean.valueOf(0);
        v0_1[78] = "vibrate_end";
        v0_1[79] = Boolean.valueOf(0);
        v0_1[80] = "vibrate_mode";
        v0_1[81] = Integer.valueOf(21);
        v0_1[82] = "notify_timeout";
        v0_1[83] = Boolean.valueOf(1);
        v0_1[84] = "notify_enable";
        v0_1[85] = Boolean.valueOf(1);
        v0_1[86] = "notify_disable";
        v0_1[87] = Boolean.valueOf(1);
        v0_1[88] = "notify_activity";
        v0_1[89] = Boolean.valueOf(1);
        v0_1[90] = "notify_volume";
        v0_1[91] = Boolean.valueOf(0);
        v0_1[92] = "notify_headset";
        v0_1[93] = Boolean.valueOf(0);
        v0_1[94] = "notify_rec_stop";
        v0_1[95] = Boolean.valueOf(1);
        v0_1[96] = "rec";
        v0_1[97] = Boolean.valueOf(0);
        v0_1[98] = "rec_src";
        v0_1[99] = Integer.valueOf(1);
        v0_1[100] = "rec_fmt";
        v0_1[101] = Integer.valueOf(1);
        v0_1[102] = "rec_start";
        v0_1[103] = Boolean.valueOf(0);
        v0_1[104] = "rec_stop";
        v0_1[105] = Boolean.valueOf(0);
        v0_1[106] = "rec_start_delay";
        v0_1[107] = Integer.valueOf(3000);
        v0_1[108] = "rec_stop_delay";
        v0_1[109] = Integer.valueOf(3000);
        v0_1[110] = "rec_start_speaker";
        v0_1[111] = Boolean.valueOf(1);
        v0_1[112] = "rec_stop_speaker";
        v0_1[113] = Boolean.valueOf(1);
        v0_1[114] = "rec_start_headset";
        v0_1[115] = Integer.valueOf(0);
        v0_1[116] = "rec_stop_headset";
        v0_1[117] = Integer.valueOf(0);
        v0_1[118] = "rec_stop_limit";
        v0_1[119] = Integer.valueOf(0);
        v0_1[120] = "rec_start_times";
        v0_1[121] = Integer.valueOf(0);
        v0_1[122] = "rec_start_dir";
        v0_1[123] = Integer.valueOf(0);
        v0_1[124] = "rec_autoremove";
        v0_1[125] = Integer.valueOf(0);
        v0_1[126] = "filter_enable_rec";
        v0_1[127] = Boolean.valueOf(0);
        v0_1[128] = "filter_enable_block";
        v0_1[129] = Boolean.valueOf(0);
        v0_1[130] = "block_mode";
        v0_1[131] = Integer.valueOf(1);
        v0_1[132] = "block_resume";
        v0_1[133] = Integer.valueOf(0);
        v0_1[134] = "block_pickup";
        v0_1[135] = Boolean.valueOf(0);
        v0_1[136] = "block_skip";
        v0_1[137] = Boolean.valueOf(0);
        v0_1[138] = "block_notify";
        v0_1[139] = Boolean.valueOf(0);
        v0_1[140] = "blocksms";
        v0_1[141] = Boolean.valueOf(0);
        v0_1[142] = "blocksms_max";
        v0_1[143] = Integer.valueOf(10);
        v0_1[144] = "blocksms_notify";
        v0_1[145] = Boolean.valueOf(0);
        v0_1[146] = "filter_enable_blocksms";
        v0_1[147] = Boolean.valueOf(0);
        v0_1[148] = "tts";
        v0_1[149] = Boolean.valueOf(0);
        v0_1[150] = "tts_headset";
        v0_1[151] = Boolean.valueOf(0);
        v0_1[152] = "tts_skip";
        v0_1[153] = Boolean.valueOf(1);
        v0_1[154] = "tts_solo";
        v0_1[155] = Boolean.valueOf(0);
        v0_1[156] = "tts_vol";
        v0_1[157] = Integer.valueOf(-1);
        v0_1[158] = "tts_tone";
        v0_1[159] = Integer.valueOf(0);
        v0_1[160] = "tts_repeat";
        v0_1[161] = Integer.valueOf(1000);
        v0_1[162] = "tts_pause";
        v0_1[163] = Integer.valueOf(1000);
        v0_1[164] = "tts_anonym";
        v0_1[165] = cri.sanity.A.s(2131165212);
        v0_1[166] = "tts_unknown";
        v0_1[167] = cri.sanity.A.s(2131165211);
        v0_1[168] = "tts_prefix";
        v0_1[169] = "";
        v0_1[170] = "tts_suffix";
        v0_1[171] = "";
        v0_1[172] = "filter_enable_tts";
        v0_1[173] = Boolean.valueOf(0);
        v0_1[174] = "tts_stream";
        v0_1[175] = Boolean.valueOf(0);
        v0_1[176] = "ttsms";
        v0_1[177] = Boolean.valueOf(0);
        v0_1[178] = "ttsms_vol";
        v0_1[179] = Integer.valueOf(-1);
        v0_1[180] = "ttsms_prefix";
        v0_1[181] = "";
        v0_1[182] = "ttsms_suffix";
        v0_1[183] = "";
        v0_1[184] = "filter_enable_ttsms";
        v0_1[185] = Boolean.valueOf(0);
        v0_1[186] = "filter_enable_urgent";
        v0_1[187] = Boolean.valueOf(0);
        v0_1[188] = "urgent_skip";
        v0_1[189] = Boolean.valueOf(1);
        v0_1[190] = "urgent_mode";
        v0_1[191] = Integer.valueOf(2);
        v0_1[192] = "answer";
        v0_1[193] = Boolean.valueOf(0);
        v0_1[194] = "answer_headset";
        v0_1[195] = Boolean.valueOf(0);
        v0_1[196] = "answer_skip";
        v0_1[197] = Boolean.valueOf(0);
        v0_1[198] = "answer_delay";
        v0_1[199] = Integer.valueOf(7000);
        v0_1[200] = "answer_alt";
        v0_1[201] = Boolean.valueOf(0);
        v0_1[202] = "filter_enable_answer";
        v0_1[203] = Boolean.valueOf(0);
        v0_1[204] = "anonym";
        v0_1[205] = Boolean.valueOf(0);
        v0_1[206] = "anonym_confirm";
        v0_1[207] = Boolean.valueOf(0);
        v0_1[208] = "anonym_notify";
        v0_1[209] = Boolean.valueOf(0);
        v0_1[210] = "anonym_prefix";
        v0_1[211] = "#31#";
        v0_1[212] = "filter_enable_anonym";
        v0_1[213] = Boolean.valueOf(0);
        return v0_1;
    }

    static final void upgrade(int p17)
    {
        if (p17 < 19500) {
            String[] v1_0 = new String[3];
            v1_0[0] = "vol_phone";
            v1_0[1] = "vol_wired";
            v1_0[2] = "vol_bt";
            int v11_0 = v1_0.length;
            int v8_1 = 0;
            while (v8_1 < v11_0) {
                String v9_2 = v1_0[v8_1];
                try {
                    switch (cri.sanity.A.getsi(v9_2)) {
                        case 0:
                            cri.sanity.P.setDef(v9_2);
                            v8_1++;
                            break;
                        case 1:
                            cri.sanity.A.put(v9_2, 0);
                            break;
                        default:
                    }
                } catch (Exception v5) {
                }
                try {
                    if (!cri.sanity.A.has(v9_2)) {
                        int v14_36 = -1;
                    } else {
                        v14_36 = cri.sanity.A.geti(v9_2);
                    }
                } catch (Exception v6) {
                    cri.sanity.A.put(v9_2, -1);
                }
                cri.sanity.A.put(v9_2, v14_36);
            }
        }
        if (p17 < 19600) {
            int v14_40;
            if (!cri.sanity.A.is("speaker_call")) {
                v14_40 = 0;
            } else {
                v14_40 = 3;
            }
            cri.sanity.A.put("speaker_call", v14_40);
            cri.sanity.A.del("speaker_call");
        }
        if (p17 < 20300) {
            int v14_48;
            cri.sanity.A.put("filter_enable_block", cri.sanity.A.is("block"));
            cri.sanity.A.del("block");
            if (!cri.sanity.A.is("loud_speaker")) {
                v14_48 = -1;
            } else {
                v14_48 = cri.sanity.A.audioMan().getStreamMaxVolume(0);
            }
            cri.sanity.A.put("vol_speaker", v14_48);
            cri.sanity.A.del("loud_speaker");
        }
        if ((p17 >= 20600) && (p17 <= 20801)) {
            StringBuilder v3_1 = new StringBuilder(7);
            String[] v1_1 = cri.sanity.P.filterSections();
            int v11_1 = v1_1.length;
            int v8_2 = 0;
            while (v8_2 < v11_1) {
                String v13_1 = new StringBuilder().append(95).append(v1_1[v8_2]).toString();
                v3_1.setLength(0);
                int v7 = 1;
                while (v7 <= 7) {
                    String v2 = Integer.toString(v7);
                    String v9_1 = new StringBuilder().append("filter_dt_day").append(v2).append(v13_1).toString();
                    if (cri.sanity.A.is(v9_1)) {
                        v3_1.append(v2);
                    }
                    cri.sanity.A.del(v9_1);
                    v7++;
                }
                int v12 = v3_1.length();
                if ((v12 > 0) && (v12 < 7)) {
                    cri.sanity.A.put(new StringBuilder().append("filter_dt_days").append(v13_1).toString(), v3_1.toString());
                }
                v8_2++;
            }
        }
        if (p17 < 20901) {
            cri.sanity.A.del("ver");
            cri.sanity.A.del("beta");
            int v8_3 = cri.sanity.A.prefs().getAll().keySet().iterator();
            while (v8_3.hasNext()) {
                String v10_1 = ((String) v8_3.next());
                if ((v10_1.endsWith("_s")) || ((v10_1.startsWith("filter_")) && (v10_1.endsWith("null")))) {
                    cri.sanity.A.del(v10_1);
                }
            }
        }
        if (p17 < 21002) {
            cri.sanity.A.del("rec_callscreen");
            java.util.Map v4 = cri.sanity.P.getDefaults();
            String[] v1_2 = cri.sanity.P.intLabels();
            int v11_2 = v1_2.length;
            int v8_0 = 0;
            while (v8_0 < v11_2) {
                String v9_0 = v1_2[v8_0];
                if (cri.sanity.A.has(v9_0)) {
                    try {
                        cri.sanity.A.geti(v9_0);
                    } catch (Exception v5) {
                        try {
                            cri.sanity.A.put(v9_0, cri.sanity.A.getsi(v9_0));
                            cri.sanity.A.del(v9_0);
                        } catch (int v14_7) {
                            cri.sanity.A.del(v9_0);
                            throw v14_7;
                        } catch (Exception v6) {
                            cri.sanity.A.put(v9_0, ((Integer) v4.get(v9_0)).intValue());
                            cri.sanity.A.del(v9_0);
                        }
                    }
                }
                v8_0++;
            }
        }
        return;
    }
}
package cri.sanity;
 class MainActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$1(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034132));
        return 1;
    }
}
package cri.sanity;
 class MainActivity$2 implements java.lang.Runnable {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$2(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.MainActivity.access$000(this.this$0);
        return;
    }
}
package cri.sanity;
 class MainActivity$3 implements java.lang.Runnable {
    final synthetic cri.sanity.MainActivity this$0;
    final synthetic boolean val$full;

    MainActivity$3(cri.sanity.MainActivity p1, boolean p2)
    {
        this.this$0 = p1;
        this.val$full = p2;
        return;
    }

    public void run()
    {
        cri.sanity.MainActivity.access$100(this.this$0, this.val$full);
        return;
    }
}
package cri.sanity;
 class MainActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$4(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.marketDetails("cri.sanitydonate");
    }
}
package cri.sanity;
 class MainActivity$5 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$5(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.A.put("agree", 1);
        cri.sanity.P.setDefaults();
        cri.sanity.MainActivity.access$200(this.this$0);
        this.dismiss();
        if (!cri.sanity.P.backupExists()) {
            cri.sanity.MainActivity.access$400(this.this$0);
        } else {
            cri.sanity.MainActivity.access$300(this.this$0);
        }
        return;
    }
}
package cri.sanity;
 class MainActivity$6 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$6(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
 class MainActivity$7 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$7(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.MainActivity v1_1;
        boolean v0 = cri.sanity.P.restore();
        if (!v0) {
            v1_1 = 2131165635;
        } else {
            v1_1 = 2131165634;
        }
        cri.sanity.A.toast(v1_1);
        if (v0) {
            cri.sanity.MainActivity.access$200(this.this$0);
        }
        this.dismiss();
        cri.sanity.MainActivity.access$400(this.this$0);
        return;
    }
}
package cri.sanity;
 class MainActivity$8 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$8(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.dismiss();
        cri.sanity.MainActivity.access$400(this.this$0);
        return;
    }
}
package cri.sanity;
 class MainActivity$9 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.MainActivity this$0;

    MainActivity$9(cri.sanity.MainActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.Admin.request(this.this$0);
        return;
    }
}
package cri.sanity;
public class MainActivity extends cri.sanity.ScreenActivity {
    private static final String KEY_UNINSTALL = "uninstall";
    private android.os.Handler handler;

    public MainActivity()
    {
        return;
    }

    static synthetic void access$000(cri.sanity.MainActivity p0)
    {
        p0.startup();
        return;
    }

    static synthetic void access$100(cri.sanity.MainActivity p0, boolean p1)
    {
        p0.enableFull(p1);
        return;
    }

    static synthetic void access$200(cri.sanity.MainActivity p0)
    {
        p0.updateOptions();
        return;
    }

    static synthetic void access$300(cri.sanity.MainActivity p0)
    {
        p0.askRestore();
        return;
    }

    static synthetic void access$400(cri.sanity.MainActivity p0)
    {
        p0.askAdmin();
        return;
    }

    private void askAdmin()
    {
        if ((cri.sanity.A.SDK >= 8) && (!cri.sanity.Admin.isActive())) {
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034113), new cri.sanity.MainActivity$9(this), 0, 1);
        }
        return;
    }

    private void askRestore()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165602), new cri.sanity.MainActivity$7(this), new cri.sanity.MainActivity$8(this), 1);
        return;
    }

    private void enableFull(boolean p4)
    {
        android.preference.Preference v0_1 = this.pref("donate");
        if (!p4) {
            this.on(v0_1, new cri.sanity.MainActivity$4(this));
            android.preference.Preference v0_0 = this.pref("screen_record");
            v0_0.setSummary(new StringBuilder().append(v0_0.getSummary()).append(" ").append(cri.sanity.A.s(2131165353)).toString());
        } else {
            v0_1.setEnabled(0);
            v0_1.setSelectable(0);
            v0_1.setTitle(2131165596);
            v0_1.setSummary(2131165597);
        }
        return;
    }

    private void firstRun()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165648), new StringBuilder().append(cri.sanity.MainActivity.fullName()).append("\n\n").append(cri.sanity.MainActivity.appDesc()).append("\n\n").append(cri.sanity.A.rawstr(2131034120)).toString(), new cri.sanity.MainActivity$5(this), new cri.sanity.MainActivity$6(this), 1, 0);
        return;
    }

    private boolean setupFull()
    {
        int v0 = 1;
        if (!cri.sanity.util.License.isChecked()) {
            if (cri.sanity.util.License.check()) {
                v0 = 0;
            } else {
                this.enableFull(0);
            }
        } else {
            this.enableFull(1);
        }
        return v0;
    }

    private void startup()
    {
        if (cri.sanity.A.is("agree")) {
            if (!cri.sanity.P.upgrade()) {
                if ((cri.sanity.util.License.isCompleted()) && (!cri.sanity.A.isFull())) {
                    cri.sanity.MainActivity.nagDefault = 1;
                    this.nag = 1;
                }
            } else {
                cri.sanity.MainActivity.alertChangeLog();
            }
        } else {
            this.firstRun();
        }
        return;
    }

    private void updateOptions()
    {
        boolean v0 = cri.sanity.A.isEnabled();
        this.setEnabled("screen_devices", v0);
        this.setEnabled("screen_proximity", v0);
        this.setEnabled("screen_speaker", v0);
        this.setEnabled("screen_volume", v0);
        this.setEnabled("screen_notify", v0);
        this.setEnabled("screen_record", v0);
        this.setEnabled("screen_tts", v0);
        this.setEnabled("screen_block", v0);
        return;
    }

    public boolean isMainActivity()
    {
        return 1;
    }

    public void onActivityResult(int p4, int p5, android.content.Intent p6)
    {
        if (p4 == 69) {
            try {
                this.handler.post(new cri.sanity.MainActivity$3(this, cri.sanity.util.License.result(p5, this.handler, new cri.sanity.MainActivity$2(this))));
            } catch (IllegalStateException v1) {
            }
        }
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        this.handler = new android.os.Handler();
        this.secure = 0;
        cri.sanity.MainActivity.nagDefault = 0;
        this.skipAllKeys = 1;
        cri.sanity.MainActivity.screener(cri.sanity.MainActivity, 2130968582);
        super.onCreate(p4);
        this.screenerAll();
        String v0_1 = this.setupFull();
        cri.sanity.MainActivity.nagDefault = v0_1;
        if (v0_1 != null) {
            this.startup();
        }
        if (!cri.sanity.util.Dev.isBtOn()) {
            cri.sanity.A.putc("bt_count", 0);
        }
        if (cri.sanity.A.SDK >= 8) {
            this.on("uninstall", new cri.sanity.MainActivity$1(this));
        } else {
            this.setEnabled("uninstall", 0);
        }
        return;
    }

    public void onDestroy()
    {
        this.ungrant();
        super.onDestroy();
        return;
    }

    public void onResume()
    {
        this.updateOptions();
        super.onResume();
        return;
    }
}
package cri.sanity;
public final class MainService extends cri.sanity.WakeService {
    private static cri.sanity.PhoneListener phoneListener;
    private static boolean running;

    static MainService()
    {
        cri.sanity.MainService.running = 0;
        return;
    }

    public MainService()
    {
        return;
    }

    public static boolean isRunning()
    {
        return cri.sanity.MainService.running;
    }

    public static void start()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        v0.startService(new android.content.Intent(v0, cri.sanity.MainService));
        return;
    }

    public static void stop()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        v0.stopService(new android.content.Intent(v0, cri.sanity.MainService));
        return;
    }

    public void onCreate()
    {
        super.onCreate();
        if (cri.sanity.MainService.phoneListener == null) {
            cri.sanity.MainService.phoneListener = new cri.sanity.PhoneListener();
        }
        return;
    }

    public void onDestroy()
    {
        try {
            cri.sanity.A.telMan().listen(cri.sanity.MainService.phoneListener, 0);
        } catch (Exception v0) {
        }
        cri.sanity.A.notifyCanc();
        cri.sanity.MainService.running = 0;
        super.onDestroy();
        return;
    }

    public int onStartCommand(android.content.Intent p5, int p6, int p7)
    {
        if ((p5 != null) && ((!cri.sanity.MainService.running) && (!cri.sanity.PhoneListener.isRunning()))) {
            if (!cri.sanity.util.Dev.isIdle()) {
                cri.sanity.MainService.running = 1;
                cri.sanity.P.upgrade();
                if (cri.sanity.A.is("notify_activity")) {
                    cri.sanity.A.notify(cri.sanity.A.s(2131165629));
                }
                cri.sanity.MainService.phoneListener.startup();
                cri.sanity.A.telMan().listen(cri.sanity.MainService.phoneListener, 40);
            } else {
                this.stopSelf();
                cri.sanity.RecService.stop();
            }
        }
        return 1;
    }
}
package cri.sanity.util;
public abstract class Alert$Timed {
    protected android.content.DialogInterface dlg;
    protected int hour;
    protected int mins;

    public Alert$Timed()
    {
        this.mins = 0;
        this.hour = 0;
        return;
    }

    public Alert$Timed(int p1, int p2)
    {
        this.hour = p1;
        this.mins = p2;
        return;
    }

    protected final void dismiss()
    {
        this.dlg.dismiss();
        return;
    }

    public abstract void on();
}
package cri.sanity;
 class ModeActivity$1 extends cri.sanity.util.Alert$Timed {
    final synthetic cri.sanity.ModeActivity this$0;
    final synthetic String val$keyTime;

    ModeActivity$1(cri.sanity.ModeActivity p1, int p2, int p3, String p4)
    {
        this.this$0 = p1;
        this.val$keyTime = p4;
        super(p2, p3);
        return;
    }

    public void on()
    {
        if (cri.sanity.ModeActivity.access$000(this.this$0) != null) {
            try {
                CharSequence v7_0 = new Class[0];
                CharSequence v7_2 = new Object[0];
                cri.sanity.ModeActivity.getMethod(cri.sanity.ModeActivity.access$000(this.this$0), v7_0).invoke(0, v7_2);
            } catch (Exception v5) {
            }
        }
        cri.sanity.A.putc(this.val$keyTime, ((this.hour << 8) | this.mins));
        long v0 = ((((long) this.hour) * 3600000) + (((long) this.mins) * 60000));
        cri.sanity.Alarmer.exec(cri.sanity.ModeActivity.access$100(this.this$0), v0);
        long v3 = cri.sanity.A.time();
        Exception v5_10 = cri.sanity.A.s(2131165659);
        Object[] v6_5 = new Object[1];
        v6_5[0] = android.text.format.DateFormat.format("kk:mm", (v3 + v0));
        String v2 = String.format(v5_10, v6_5);
        cri.sanity.A.toast(v2);
        cri.sanity.ModeActivity.access$200(this.this$0, v2, v3);
        return;
    }
}
package cri.sanity;
public class ModeActivity extends android.app.Activity implements android.content.DialogInterface$OnDismissListener {
    private static final String EXTRA_FORCE = "force";
    public static final int NID_FLIGHT = 77;
    public static final int NID_SILENT = 55;
    private static final String PREFIX_TIME = "priv_mode_time_";
    private static boolean running;
    private static boolean started;
    private String action;
    private String forceMethod;
    private String msg;
    private int nid;
    private String title;

    static ModeActivity()
    {
        cri.sanity.ModeActivity.started = 0;
        cri.sanity.ModeActivity.running = 0;
        return;
    }

    public ModeActivity()
    {
        return;
    }

    static synthetic String access$000(cri.sanity.ModeActivity p1)
    {
        return p1.forceMethod;
    }

    static synthetic String access$100(cri.sanity.ModeActivity p1)
    {
        return p1.action;
    }

    static synthetic void access$200(cri.sanity.ModeActivity p0, String p1, long p2)
    {
        p0.notification(p1, p2);
        return;
    }

    private boolean checkAction(boolean p5)
    {
        int v0_1;
        int v0_0 = 0;
        if (!"actSilentLimit".equals(this.action)) {
            if (!"actFlightOff".equals(this.action)) {
                v0_1 = 0;
            } else {
                if ((p5) || (cri.sanity.util.Dev.isFlightModeOn())) {
                    if (p5) {
                        v0_0 = "forceFlight";
                    }
                    this.forceMethod = v0_0;
                    this.title = cri.sanity.A.s(2131165291);
                    this.msg = cri.sanity.A.s(2131165612);
                    this.nid = 77;
                    v0_1 = 1;
                } else {
                    v0_1 = 0;
                }
            }
        } else {
            if ((p5) || (cri.sanity.A.audioMan().getRingerMode() != 2)) {
                if (p5) {
                    v0_0 = "forceSilent";
                }
                this.forceMethod = v0_0;
                this.title = cri.sanity.A.s(2131165290);
                this.msg = cri.sanity.A.s(2131165611);
                this.nid = 55;
            } else {
                v0_1 = 0;
            }
        }
        return v0_1;
    }

    public static void forceFlight()
    {
        if (!cri.sanity.util.Dev.isFlightModeOn()) {
            cri.sanity.ModeReceiver.skip = 1;
            cri.sanity.util.Dev.enableFlightMode(1);
        }
        return;
    }

    public static void forceSilent()
    {
        if (cri.sanity.A.audioMan().getRingerMode() == 2) {
            cri.sanity.ModeReceiver.skip = 1;
            cri.sanity.A.audioMan().setRingerMode(0);
        }
        return;
    }

    private boolean init()
    {
        boolean v1_0 = 0;
        if (cri.sanity.ModeActivity.started) {
            cri.sanity.ModeActivity.started = 0;
            android.content.Intent v0 = this.getIntent();
            if (v0 != null) {
                this.action = v0.getAction();
                v1_0 = this.checkAction(v0.getBooleanExtra("force", 0));
            }
        }
        return v1_0;
    }

    private void notification(String p6, long p7)
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        android.app.Notification v1_1 = new android.app.Notification(2130837513, p6, p7);
        v1_1.flags = 34;
        v1_1.setLatestEventInfo(v0, new StringBuilder().append(cri.sanity.A.name()).append(" - ").append(this.title).toString(), p6, android.app.PendingIntent.getService(v0, 0, new android.content.Intent(), 0));
        cri.sanity.A.notifMan().notify(this.nid, v1_1);
        return;
    }

    public static final void start(String p3, boolean p4)
    {
        cri.sanity.ModeActivity.started = 1;
        android.content.Intent v0_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.ModeActivity);
        v0_1.setAction(p3);
        v0_1.putExtra("force", p4);
        v0_1.setFlags(268435456);
        cri.sanity.A.app().startActivity(v0_1);
        return;
    }

    public void onCreate(android.os.Bundle p8)
    {
        super.onCreate(p8);
        if ((!cri.sanity.ModeActivity.running) && (this.init())) {
            cri.sanity.ModeActivity.running = 1;
            String v1 = new StringBuilder().append("priv_mode_time_").append(this.action).toString();
            int v3 = cri.sanity.A.geti(v1);
            cri.sanity.util.Alert.time(this.msg, new cri.sanity.ModeActivity$1(this, ((v3 >> 8) & 255), (v3 & 255), v1), this).setOnDismissListener(this);
        } else {
            if (!cri.sanity.ModeActivity.running) {
                this.startActivity(new android.content.Intent(cri.sanity.A.app(), cri.sanity.MainActivity));
            }
            this.finish();
        }
        return;
    }

    public void onDestroy()
    {
        super.onDestroy();
        cri.sanity.ModeActivity.running = 0;
        return;
    }

    public void onDismiss(android.content.DialogInterface p1)
    {
        this.finish();
        return;
    }
}
package cri.sanity;
public class ModeReceiver extends android.content.BroadcastReceiver {
    public static boolean skip;

    static ModeReceiver()
    {
        cri.sanity.ModeReceiver.skip = 0;
        return;
    }

    public ModeReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p8, android.content.Intent p9)
    {
        int v0 = 1;
        if ((p9 != null) && ((!cri.sanity.MainService.isRunning()) && (cri.sanity.A.isEnabled()))) {
            String v1_0 = p9.getAction();
            if (v1_0 != null) {
                if (!cri.sanity.ModeReceiver.skip) {
                    String v2;
                    String v1_1;
                    int v3;
                    if (!"android.media.RINGER_MODE_CHANGED".equals(v1_0)) {
                        if (!"android.intent.action.AIRPLANE_MODE".equals(v1_0)) {
                            return;
                        } else {
                            v1_1 = "actFlightOff";
                            v2 = "airplane_limit";
                            v3 = 77;
                            if (p9.getBooleanExtra("state", 0)) {
                                v0 = 0;
                            }
                        }
                    } else {
                        v1_1 = "actSilentLimit";
                        v2 = "silent_limit";
                        v3 = 55;
                        if (p9.getIntExtra("android.media.EXTRA_RINGER_MODE", 2) != 2) {
                            v0 = 0;
                        }
                    }
                    if (v0 == 0) {
                        if (cri.sanity.A.is(v2)) {
                            cri.sanity.ModeActivity.start(v1_1, 0);
                        }
                    } else {
                        cri.sanity.Alarmer.stop(v1_1);
                        cri.sanity.A.notifyCanc(v3);
                    }
                } else {
                    cri.sanity.ModeReceiver.skip = 0;
                }
            }
        }
        return;
    }
}
package cri.sanity;
 class OutgoingReceiver$1$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.OutgoingReceiver$1 this$1;

    OutgoingReceiver$1$1(cri.sanity.OutgoingReceiver$1 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.OutgoingReceiver.access$002(cri.sanity.OutgoingReceiver.access$102(1));
        cri.sanity.util.Dev.dial(this.this$1.val$num);
        return;
    }
}
package cri.sanity;
 class OutgoingReceiver$1$2 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.OutgoingReceiver$1 this$1;

    OutgoingReceiver$1$2(cri.sanity.OutgoingReceiver$1 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.OutgoingReceiver.access$002(1);
        cri.sanity.OutgoingReceiver.access$102(0);
        cri.sanity.util.Dev.dial(this.this$1.val$num);
        return;
    }
}
package cri.sanity;
 class OutgoingReceiver$1 implements java.lang.Runnable {
    final synthetic cri.sanity.OutgoingReceiver this$0;
    final synthetic String val$called;
    final synthetic android.content.DialogInterface$OnCancelListener val$cancel;
    final synthetic android.content.DialogInterface$OnDismissListener val$dismiss;
    final synthetic String val$num;

    OutgoingReceiver$1(cri.sanity.OutgoingReceiver p1, String p2, String p3, android.content.DialogInterface$OnCancelListener p4, android.content.DialogInterface$OnDismissListener p5)
    {
        this.this$0 = p1;
        this.val$called = p2;
        this.val$num = p3;
        this.val$cancel = p4;
        this.val$dismiss = p5;
        return;
    }

    public void run()
    {
        android.app.AlertDialog v8 = cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165613), new StringBuilder().append(this.val$called).append("\n\n").append(cri.sanity.A.s(2131165614)).toString(), new cri.sanity.OutgoingReceiver$1$1(this), new cri.sanity.OutgoingReceiver$1$2(this), 0, 2, 1, cri.sanity.BlankActivity.getInstance());
        v8.setOnCancelListener(this.val$cancel);
        v8.setOnDismissListener(this.val$dismiss);
        return;
    }
}
package cri.sanity;
public class OutgoingReceiver extends android.content.BroadcastReceiver implements android.content.DialogInterface$OnCancelListener, android.content.DialogInterface$OnDismissListener {
    private static final String SEP = ":\n     ";
    private static boolean anonym;
    private static boolean confirmed;

    static OutgoingReceiver()
    {
        cri.sanity.OutgoingReceiver.confirmed = 0;
        cri.sanity.OutgoingReceiver.anonym = 0;
        return;
    }

    public OutgoingReceiver()
    {
        return;
    }

    static synthetic boolean access$002(boolean p0)
    {
        cri.sanity.OutgoingReceiver.confirmed = p0;
        return p0;
    }

    static synthetic boolean access$102(boolean p0)
    {
        cri.sanity.OutgoingReceiver.anonym = p0;
        return p0;
    }

    private void alert(String p8, String p9)
    {
        cri.sanity.A v0_4;
        Class v1_1 = new StringBuilder();
        if (!cri.sanity.A.empty(p9)) {
            v0_4 = new StringBuilder().append(cri.sanity.A.s(2131165229)).append(":\n     ").append(p9).append("\n\n").toString();
        } else {
            v0_4 = "";
        }
        cri.sanity.BlankActivity.postSingleton(new cri.sanity.OutgoingReceiver$1(this, v1_1.append(v0_4).append(cri.sanity.A.s(2131165235)).append(":\n     ").append(p8).toString(), p8, this, this));
        cri.sanity.BlankActivity.force = 1;
        android.content.Intent v6_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.BlankActivity);
        v6_1.setFlags(268435456);
        cri.sanity.A.app().startActivity(v6_1);
        return;
    }

    private static void notify(android.content.Context p1)
    {
        if (cri.sanity.A.is("anonym_notify")) {
            cri.sanity.A.toast(p1, 2131165661);
        }
        return;
    }

    private static void setCallNum(String p1)
    {
        if (!cri.sanity.MainService.isRunning()) {
            cri.sanity.PhoneReceiver.number = p1;
            if (cri.sanity.A.is("vibrate_pickup")) {
                cri.sanity.PickupService.start();
            }
        }
        return;
    }

    public void onCancel(android.content.DialogInterface p2)
    {
        cri.sanity.OutgoingReceiver.anonym = 0;
        cri.sanity.OutgoingReceiver.confirmed = 0;
        return;
    }

    public void onDismiss(android.content.DialogInterface p2)
    {
        cri.sanity.BlankActivity v0 = cri.sanity.BlankActivity.getInstance();
        if (v0 != null) {
            v0.postFinish();
        }
        return;
    }

    public void onReceive(android.content.Context p6, android.content.Intent p7)
    {
        if (cri.sanity.A.isEnabled()) {
            String v1 = p7.getStringExtra("android.intent.extra.PHONE_NUMBER");
            if (!cri.sanity.A.empty(v1)) {
                if (cri.sanity.A.is("anonym")) {
                    cri.sanity.util.CallFilter v0_1 = new cri.sanity.util.CallFilter();
                    if (v0_1.includes(v1, "anonym", 1)) {
                        if (!cri.sanity.A.is("anonym_confirm")) {
                            cri.sanity.OutgoingReceiver.anonym = 1;
                            cri.sanity.OutgoingReceiver.confirmed = 1;
                        }
                        if (!cri.sanity.OutgoingReceiver.confirmed) {
                            this.setResultData(0);
                            this.abortBroadcast();
                            this.alert(v1, v0_1.searchName(v1));
                        } else {
                            cri.sanity.OutgoingReceiver.confirmed = 0;
                            cri.sanity.OutgoingReceiver.setCallNum(v1);
                            if (cri.sanity.OutgoingReceiver.anonym) {
                                cri.sanity.OutgoingReceiver.anonym = 0;
                                this.setResultData(new StringBuilder().append(cri.sanity.A.gets("anonym_prefix")).append(v1).toString());
                                cri.sanity.OutgoingReceiver.notify(p6);
                            }
                        }
                    } else {
                        cri.sanity.OutgoingReceiver.setCallNum(v1);
                    }
                } else {
                    cri.sanity.OutgoingReceiver.setCallNum(v1);
                }
            }
        }
        return;
    }
}
package cri.sanity;
public final class P {
    private static java.util.Map defs;

    public P()
    {
        return;
    }

    public static final boolean backup()
    {
        boolean v1_2;
        String v0 = cri.sanity.A.sdcardDir();
        if (v0 != null) {
            v1_2 = cri.sanity.P.backup(new StringBuilder().append(v0).append(47).append("sanity_backup.txt").toString());
        } else {
            v1_2 = 0;
        }
        return v1_2;
    }

    public static final boolean backup(String p14)
    {
        int v11 = 0;
        java.io.BufferedWriter v8_1 = new java.io.BufferedWriter(new java.io.FileWriter(p14, 0));
        java.util.Map v9 = cri.sanity.P.skipKeysMap();
        java.util.Map v7 = cri.sanity.A.prefs().getAll();
        String[] v5 = new String[v7.size()];
        v7.keySet().toArray(v5);
        java.util.Arrays.sort(v5);
        String[] v0 = v5;
        int v6 = v0.length;
        int v3 = 0;
        while (v3 < v6) {
            String v4 = v0[v3];
            if (!v9.containsKey(v4)) {
                Object v10 = v7.get(v4);
                String v1 = v10.getClass().getName();
                v8_1.write(new StringBuilder().append(v4).append("=(").append(v1.substring((v1.lastIndexOf(46) + 1))).append(41).append(v10).append(10).toString());
            }
            v3++;
        }
        v8_1.close();
        v11 = 1;
        return v11;
    }

    public static final boolean backupExists()
    {
        boolean v1_2;
        String v0 = cri.sanity.A.sdcardDir();
        if (v0 != null) {
            v1_2 = new java.io.File(v0, "sanity_backup.txt").exists();
        } else {
            v1_2 = 0;
        }
        return v1_2;
    }

    private static java.util.Map bakMap()
    {
        String[] v5 = cri.sanity.PrefGroups.skipKeys();
        java.util.HashMap v1_1 = new java.util.HashMap(v5.length);
        String[] v0 = v5;
        int v4 = v0.length;
        int v2 = 0;
        while (v2 < v4) {
            String v3 = v0[v2];
            Object v6 = cri.sanity.A.get(v3);
            if (v6 != null) {
                v1_1.put(v3, v6);
            }
            v2++;
        }
        return v1_1;
    }

    public static final String[] filterSections()
    {
        Object[] v4 = cri.sanity.PrefGroups.filterShortcuts();
        int v2 = (v4.length / 3);
        String[] v0 = new String[v2];
        int v1 = 0;
        while (v1 < v2) {
            v0[v1] = ((String) v4[((v1 * 3) + 2)]);
            v1 += 3;
        }
        return v0;
    }

    public static final java.util.Map getDefaults()
    {
        java.util.Map v3_1;
        if (cri.sanity.P.defs == null) {
            cri.sanity.P.defs = new java.util.HashMap();
            Object[] v1 = cri.sanity.K.getDefaults();
            int v2 = v1.length;
            int v0 = 0;
            while (v0 < v2) {
                cri.sanity.P.defs.put(((String) v1[v0]), v1[(v0 + 1)]);
                v0 += 2;
            }
            v3_1 = cri.sanity.P.defs;
        } else {
            v3_1 = cri.sanity.P.defs;
        }
        return v3_1;
    }

    public static final String[] intLabels()
    {
        java.util.Set v7 = cri.sanity.PrefGroups.intLabVals().keySet();
        String[] v8 = cri.sanity.PrefGroups.volumes();
        String[] v0 = new String[(v7.size() + v8.length)];
        int v2_0 = 0;
        int v4_0 = v7.iterator();
        while (v4_0.hasNext()) {
            int v3_1 = (v2_0 + 1);
            v0[v2_0] = ((String) v4_0.next());
            v2_0 = v3_1;
        }
        String[] v1 = v8;
        int v6 = v1.length;
        int v4_1 = 0;
        int v3_0 = v2_0;
        while (v4_1 < v6) {
            int v2_1 = (v3_0 + 1);
            v0[v3_0] = v1[v4_1];
            v4_1++;
            v3_0 = v2_1;
        }
        return v0;
    }

    public static final java.util.Map load(String p14)
    {
        int v7_1 = new java.util.HashMap();
        int v10 = 0;
        java.io.BufferedReader v3 = 0;
        try {
            java.io.BufferedReader v4_1 = new java.io.BufferedReader(new java.io.FileReader(p14), 8192);
            try {
                do {
                    String v6 = v4_1.readLine();
                } while((String v5.length() <= 0) || (String v2.length() <= 0));
                int v8_1 = (v2.indexOf(40) + 1);
                int v9 = (v2.indexOf(41, (v8_1 + 1)) + 1);
                String v0 = v2.substring(v8_1, (v9 - v8_1));
                String v11 = v2.substring(v9).trim();
                if (!v0.equals("String")) {
                    if (!v0.equals("Boolean")) {
                        if (!v0.equals("Integer")) {
                            if (!v0.equals("Float")) {
                                if (v0.equals("Long")) {
                                    v7_1.put(v5, Long.valueOf(Long.parseLong(v11)));
                                }
                            } else {
                                v7_1.put(v5, Float.valueOf(Float.parseFloat(v11)));
                            }
                        } else {
                            v7_1.put(v5, Integer.valueOf(Integer.parseInt(v11)));
                        }
                    } else {
                        v7_1.put(v5, Boolean.valueOf(Boolean.parseBoolean(v11)));
                    }
                } else {
                    v7_1.put(v5, v11);
                }
                v10 = 1;
            } catch (Exception v1) {
                v3 = v4_1;
                if (v3 != null) {
                    try {
                        v3.close();
                    } catch (Long v12) {
                    }
                }
                if (v10 == 0) {
                    v7_1 = 0;
                }
                return v7_1;
            }
            if (v6.length() > 0) {
                int v8_0 = v6.indexOf(61);
                if (v8_0 > 0) {
                    v5 = v6.substring(0, v8_0).trim();
                    v2 = v6.substring((v8_0 + 1)).trim();
                    if ((v5.length() > 0) && (v2.length() > 0)) {
                    }
                }
            }
        } catch (Exception v1) {
        }
    }

    public static final void removeFilters()
    {
        java.util.Iterator v0 = cri.sanity.A.prefs().getAll().keySet().iterator();
        while (v0.hasNext()) {
            String v1_1 = ((String) v0.next());
            if ((v1_1.startsWith("filter_")) && (!v1_1.startsWith("filter_enable_"))) {
                if (!v1_1.contains("_count_")) {
                    cri.sanity.A.del(v1_1);
                } else {
                    cri.sanity.A.put(v1_1, 0);
                }
            }
        }
        cri.sanity.A.commit();
        return;
    }

    public static final void renameBool(String p1, String p2)
    {
        if (!cri.sanity.A.has(p2)) {
            cri.sanity.P.setDefIfNew(p1);
        } else {
            cri.sanity.A.put(p1, cri.sanity.A.is(p2));
            cri.sanity.A.del(p2);
        }
        return;
    }

    public static final boolean restore()
    {
        boolean v1_2;
        String v0 = cri.sanity.A.sdcardDir();
        if (v0 != null) {
            v1_2 = cri.sanity.P.restore(new StringBuilder().append(v0).append(47).append("sanity_backup.txt").toString());
        } else {
            v1_2 = 0;
        }
        return v1_2;
    }

    public static final boolean restore(String p3)
    {
        int v2_0;
        java.util.Map v1 = cri.sanity.P.load(p3);
        if (v1 != null) {
            java.util.Map v0 = cri.sanity.P.bakMap();
            cri.sanity.A.edit().clear();
            cri.sanity.A.putAll(v1);
            cri.sanity.A.putAll(v0);
            cri.sanity.A.commit();
            cri.sanity.P.upgrade();
            v2_0 = 1;
        } else {
            v2_0 = 0;
        }
        return v2_0;
    }

    public static final void setDef(String p2)
    {
        Object v0 = cri.sanity.P.defs.get(p2);
        if (v0 != null) {
            cri.sanity.A.put(p2, v0);
        }
        return;
    }

    public static final varargs void setDef(String[] p4)
    {
        int v3 = p4.length;
        int v1 = 0;
        while (v1 < v3) {
            cri.sanity.P.setDef(p4[v1]);
            v1++;
        }
        return;
    }

    public static final void setDefIfNew(String p1)
    {
        if (!cri.sanity.A.has(p1)) {
            cri.sanity.P.setDef(p1);
        }
        return;
    }

    public static final varargs void setDefIfNew(String[] p4)
    {
        int v3 = p4.length;
        int v1 = 0;
        while (v1 < v3) {
            cri.sanity.P.setDefIfNew(p4[v1]);
            v1++;
        }
        return;
    }

    public static final void setDefaults()
    {
        java.util.Map v0 = cri.sanity.P.bakMap();
        cri.sanity.A.edit().clear();
        cri.sanity.A.putAll(cri.sanity.P.getDefaults());
        cri.sanity.A.putAll(v0);
        cri.sanity.P.setVer();
        return;
    }

    private static void setVer()
    {
        cri.sanity.A.putc("ver", cri.sanity.A.verCode());
        return;
    }

    public static final java.util.Map skipKeysMap()
    {
        java.util.HashMap v4_1 = new java.util.HashMap();
        String[] v0 = cri.sanity.PrefGroups.skipKeys();
        int v3 = v0.length;
        int v1 = 0;
        while (v1 < v3) {
            v4_1.put(v0[v1], 0);
            v1++;
        }
        return v4_1;
    }

    private static void upgrade(int p4)
    {
        if (p4 >= 17000) {
            java.util.Map v0 = cri.sanity.P.getDefaults();
            cri.sanity.K.upgrade(p4);
            cri.sanity.A.commit();
            java.util.Iterator v1 = v0.keySet().iterator();
            while (v1.hasNext()) {
                String v2_1 = ((String) v1.next());
                if (!cri.sanity.A.has(v2_1)) {
                    cri.sanity.A.put(v2_1, v0.get(v2_1));
                }
            }
            cri.sanity.P.setVer();
        } else {
            cri.sanity.P.setDefaults();
        }
        return;
    }

    public static final boolean upgrade()
    {
        int v1_1;
        int v0 = cri.sanity.P.verSaved();
        if (cri.sanity.A.verCode() != v0) {
            cri.sanity.P.upgrade(v0);
            v1_1 = 1;
        } else {
            v1_1 = 0;
        }
        return v1_1;
    }

    private static int verSaved()
    {
        try {
            int v3 = cri.sanity.A.geti("ver");
        } catch (Exception v1) {
            try {
                v3 = ((int) (Float.parseFloat(cri.sanity.A.gets("ver")) * 1176256512));
                int v0 = cri.sanity.A.geti("beta");
            } catch (Exception v2) {
                v3 = 0;
                return v3;
            }
            if (v0 < 1) {
            } else {
                v3 = ((v3 - 100) + v0);
            }
        }
        return v3;
    }
}
package cri.sanity;
 class PhoneListener$10 extends android.content.BroadcastReceiver {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$10(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p2, android.content.Intent p3)
    {
        if (!cri.sanity.PhoneListener.access$600(this.this$0)) {
            cri.sanity.util.Dev.lock();
        }
        return;
    }
}
package cri.sanity.util;
public abstract class Task implements java.lang.Runnable {
    private static int idCur;
    private static final java.util.Map map;
    private static cri.sanity.util.Task$Pool pool;

    static Task()
    {
        cri.sanity.util.Task.map = new java.util.HashMap(16);
        cri.sanity.util.Task.idCur = 0;
        return;
    }

    public Task()
    {
        return;
    }

    public static final boolean has(int p3)
    {
        int v1_1;
        java.util.concurrent.ScheduledFuture v0_1 = ((java.util.concurrent.ScheduledFuture) cri.sanity.util.Task.map.get(Integer.valueOf(p3)));
        if ((v0_1 == null) || (v0_1.isDone())) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        return v1_1;
    }

    public static final int idCur()
    {
        return cri.sanity.util.Task.idCur;
    }

    public static final int idNew()
    {
        int v0_1 = (cri.sanity.util.Task.idCur + 1);
        cri.sanity.util.Task.idCur = v0_1;
        return v0_1;
    }

    public static final cri.sanity.util.Task$Pool shutdown()
    {
        cri.sanity.util.Task$Pool v0;
        if (cri.sanity.util.Task.pool != null) {
            v0 = cri.sanity.util.Task.pool;
            v0.shutdown();
            cri.sanity.util.Task.pool = 0;
            cri.sanity.util.Task.map.clear();
        } else {
            v0 = 0;
        }
        return v0;
    }

    public static final void shutdownWait()
    {
        cri.sanity.util.Task.shutdownWait(cri.sanity.util.Task.pool);
        return;
    }

    public static final void shutdownWait(cri.sanity.util.Task$Pool p4)
    {
        if (p4 != null) {
            if (p4 != cri.sanity.util.Task.pool) {
                p4.shutdown();
            } else {
                cri.sanity.util.Task.shutdown();
            }
            try {
                if ((p4.isTerminating()) && (!p4.awaitTermination(10000, java.util.concurrent.TimeUnit.MILLISECONDS))) {
                    p4.shutdownNow();
                    p4.awaitTermination(10000, java.util.concurrent.TimeUnit.MILLISECONDS);
                }
            } catch (InterruptedException v0) {
                p4.shutdownNow();
            }
        }
        return;
    }

    public static final void stop(int p3)
    {
        java.util.concurrent.ScheduledFuture v0_1 = ((java.util.concurrent.ScheduledFuture) cri.sanity.util.Task.map.remove(Integer.valueOf(p3)));
        if (v0_1 != null) {
            v0_1.cancel(0);
        }
        return;
    }

    public static final varargs void stop(int[] p5)
    {
        if (cri.sanity.util.Task.pool != null) {
            int v3 = p5.length;
            int v1 = 0;
            while (v1 < v3) {
                cri.sanity.util.Task.stop(p5[v1]);
                v1++;
            }
        }
        return;
    }

    public static final void stopAll()
    {
        java.util.Iterator v0 = cri.sanity.util.Task.map.values().iterator();
        while (v0.hasNext()) {
            ((java.util.concurrent.ScheduledFuture) v0.next()).cancel(0);
        }
        cri.sanity.util.Task.map.clear();
        return;
    }

    public final void exec(int p5)
    {
        if (cri.sanity.util.Task.pool == null) {
            cri.sanity.util.Task.pool = new cri.sanity.util.Task$Pool();
        }
        cri.sanity.util.Task.pool.schedule(this, ((long) p5), java.util.concurrent.TimeUnit.MILLISECONDS);
        return;
    }

    public final void exec(int p8, int p9)
    {
        java.util.concurrent.ScheduledFuture v0_1 = ((java.util.concurrent.ScheduledFuture) cri.sanity.util.Task.map.get(Integer.valueOf(p8)));
        if (v0_1 != null) {
            v0_1.cancel(0);
        }
        if (cri.sanity.util.Task.pool == null) {
            cri.sanity.util.Task.pool = new cri.sanity.util.Task$Pool();
        }
        cri.sanity.util.Task.map.put(Integer.valueOf(p8), cri.sanity.util.Task.pool.schedule(this, ((long) p9), java.util.concurrent.TimeUnit.MILLISECONDS));
        return;
    }
}
package cri.sanity;
 class PhoneListener$11 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$11(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.PhoneListener.access$800(this.this$0, 1);
        return;
    }
}
package cri.sanity;
 class PhoneListener$1 extends android.content.BroadcastReceiver {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$1(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p6, android.content.Intent p7)
    {
        int v0;
        if (p7.getIntExtra("state", 0) == 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if (v0 != cri.sanity.PhoneListener.access$000(this.this$0)) {
            cri.sanity.PhoneListener.access$200(this.this$0, cri.sanity.PhoneListener.access$002(this.this$0, v0), cri.sanity.PhoneListener.access$100(this.this$0));
            if ((v0 != 0) && (cri.sanity.PhoneListener.access$300(this.this$0))) {
                cri.sanity.PhoneListener.access$302(this.this$0, 0);
                cri.sanity.util.Dev.enableBt(0);
            }
        }
        return;
    }
}
package cri.sanity;
 class PhoneListener$2 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$2(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.PhoneListener.access$400(this.this$0, 1);
        return;
    }
}
package cri.sanity;
 class PhoneListener$3 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$3(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.PhoneListener.access$400(this.this$0, 0);
        return;
    }
}
package cri.sanity;
 class PhoneListener$4 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$4(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.PhoneListener.access$500(this.this$0, 1);
        return;
    }
}
package cri.sanity;
 class PhoneListener$5 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$5(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.PhoneListener.access$500(this.this$0, 0);
        return;
    }
}
package cri.sanity;
 class PhoneListener$6 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$6(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.util.Dev.answerCall();
        return;
    }
}
package cri.sanity;
 class PhoneListener$7 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$7(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        if (cri.sanity.PhoneListener.access$600(this.this$0)) {
            cri.sanity.PhoneListener.access$400(this.this$0, 1);
        }
        return;
    }
}
package cri.sanity;
 class PhoneListener$8 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$8(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        if ((!cri.sanity.PhoneListener.access$700(this.this$0)) && (cri.sanity.PhoneListener.access$300(this.this$0))) {
            cri.sanity.util.Dev.enableBt(0);
            cri.sanity.PhoneListener.access$302(this.this$0, 0);
        }
        return;
    }
}
package cri.sanity;
 class PhoneListener$9 extends android.content.BroadcastReceiver {
    final synthetic cri.sanity.PhoneListener this$0;

    PhoneListener$9(cri.sanity.PhoneListener p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onReceive(android.content.Context p2, android.content.Intent p3)
    {
        if (cri.sanity.PhoneListener.access$600(this.this$0)) {
            cri.sanity.util.Dev.wakeScreen();
        }
        return;
    }
}
package cri.sanity;
public final class PhoneListener extends android.telephony.PhoneStateListener implements android.hardware.SensorEventListener {
    private static final int CALL_STATE_NONE = 255;
    private static final int FORCE_AUTOSPEAKER_DELAY = 3000;
    public static final int LISTEN = 40;
    private static final int SPEAKER_CALL_INCOMING = 1;
    private static final int SPEAKER_CALL_OUTGOING = 2;
    private static final int TASK_DEVS;
    private static final int TASK_SPEAKER;
    private static cri.sanity.PhoneListener activeInst;
    private final android.media.AudioManager audioMan;
    private boolean autoSpeaker;
    private boolean btAuto;
    public int btCount;
    private boolean btReverse;
    private boolean devsLastEnable;
    private long devsLastTime;
    private int disableDelay;
    private int enableDelay;
    private boolean gpsAuto;
    private boolean headsetOn;
    private boolean headsetRegistered;
    private final android.content.BroadcastReceiver headsetWiredReceiver;
    private int lastCallState;
    private boolean lastFar;
    private cri.sanity.util.MobDataTracker mobdTrack;
    private boolean notifyDisable;
    private boolean notifyEnable;
    private boolean offhook;
    private boolean outgoing;
    private String phoneNumber;
    private boolean proximDisable;
    private boolean proximEnable;
    private float proximFar;
    private boolean proximRegistered;
    private boolean proximReverse;
    private android.hardware.Sensor proximSensor;
    private boolean rec;
    private int ringMode;
    private boolean screenOff;
    private android.content.BroadcastReceiver screenOffReceiver;
    private boolean screenOn;
    private android.content.BroadcastReceiver screenOnReceiver;
    private boolean shutdown;
    private boolean skipBtConn;
    private int speakerCall;
    private int speakerCallDelay;
    private int speakerDelay;
    public cri.sanity.SpeakerListener speakerListener;
    private boolean speakerOff;
    private int speakerOffCount;
    private boolean speakerOn;
    private int speakerOnCount;
    private cri.sanity.util.Task taskDevsOff;
    private cri.sanity.util.Task taskDevsOn;
    private cri.sanity.util.Task taskSpeakerOff;
    private cri.sanity.util.Task taskSpeakerOn;
    private cri.sanity.util.Task taskSpeakerOnFar;
    private cri.sanity.TTS tts;
    private int vibrMode;
    private int volBt;
    private int volFlags;
    private int volPhone;
    private int volRestore;
    private boolean volSolo;
    private int volSpeaker;
    private int volWired;
    private cri.sanity.util.WifiTracker wifiTrack;
    private boolean wiredHeadsetOn;

    static PhoneListener()
    {
        cri.sanity.PhoneListener.TASK_DEVS = cri.sanity.util.Task.idNew();
        cri.sanity.PhoneListener.TASK_SPEAKER = cri.sanity.util.Task.idNew();
        return;
    }

    public PhoneListener()
    {
        this.audioMan = cri.sanity.A.audioMan();
        this.headsetWiredReceiver = new cri.sanity.PhoneListener$1(this);
        return;
    }

    static synthetic boolean access$000(cri.sanity.PhoneListener p1)
    {
        return p1.wiredHeadsetOn;
    }

    static synthetic boolean access$002(cri.sanity.PhoneListener p0, boolean p1)
    {
        p0.wiredHeadsetOn = p1;
        return p1;
    }

    static synthetic int access$100(cri.sanity.PhoneListener p1)
    {
        return p1.volWired;
    }

    static synthetic void access$200(cri.sanity.PhoneListener p0, boolean p1, int p2)
    {
        p0.updateHeadset(p1, p2);
        return;
    }

    static synthetic boolean access$300(cri.sanity.PhoneListener p1)
    {
        return p1.btReverse;
    }

    static synthetic boolean access$302(cri.sanity.PhoneListener p0, boolean p1)
    {
        p0.btReverse = p1;
        return p1;
    }

    static synthetic void access$400(cri.sanity.PhoneListener p0, boolean p1)
    {
        p0.autoSpeaker(p1);
        return;
    }

    static synthetic void access$500(cri.sanity.PhoneListener p0, boolean p1)
    {
        p0.enableDevs(p1);
        return;
    }

    static synthetic boolean access$600(cri.sanity.PhoneListener p1)
    {
        return p1.lastFar;
    }

    static synthetic boolean access$700(cri.sanity.PhoneListener p1)
    {
        return p1.headsetOn;
    }

    static synthetic void access$800(cri.sanity.PhoneListener p0, boolean p1)
    {
        p0.screenOff(p1);
        return;
    }

    private declared_synchronized void autoSpeaker(boolean p3)
    {
        try {
            if ((!this.headsetOn) && (p3 != this.audioMan.isSpeakerphoneOn())) {
                if ((p3) && ((this.volSpeaker >= 0) && (this.volRestore < 0))) {
                    int v0_2;
                    if (this.volPhone >= 0) {
                        v0_2 = this.volPhone;
                    } else {
                        v0_2 = this.audioMan.getStreamVolume(0);
                    }
                    this.volRestore = v0_2;
                }
                this.audioMan.setSpeakerphoneOn(p3);
                if (this.volSpeaker >= 0) {
                    if (!p3) {
                        if (this.volRestore >= 0) {
                            this.setVolume(this.volRestore);
                        }
                    } else {
                        this.setVolume(this.volSpeaker);
                    }
                }
                if (this.speakerListener != null) {
                    this.speakerListener.onSpeakerChanged(p3);
                }
            }
        } catch (int v0_11) {
            throw v0_11;
        }
        return;
    }

    private void btAdjust()
    {
        if (!this.headsetOn) {
            int v0;
            if (this.btReverse) {
                v0 = 1;
                cri.sanity.util.Dev.enableBt(1);
                int v1 = cri.sanity.A.geti("bt_reverse_timeout");
                if (v1 > 0) {
                    new cri.sanity.PhoneListener$8(this).exec(v1);
                }
            } else {
                v0 = cri.sanity.util.Dev.isBtOn();
            }
            if (v0 != 0) {
                this.audioMan.setBluetoothScoOn(1);
            }
        }
        return;
    }

    private boolean changeRinger(int p5, int p6, int p7, int p8)
    {
        int v0 = 0;
        if (p7 != p5) {
            this.audioMan.setRingerMode(p5);
            if (this.ringMode == -1) {
                this.ringMode = p7;
            }
            v0 = 1;
        }
        if (p8 != p6) {
            this.audioMan.setVibrateSetting(0, p6);
            if (this.vibrMode == -1) {
                this.vibrMode = p8;
            }
            v0 = 1;
        }
        return v0;
    }

    private declared_synchronized void enableDevs(boolean p10)
    {
        try {
            if ((p10) || (!this.headsetOn)) {
                long v3 = android.os.SystemClock.elapsedRealtime();
                long v0 = (v3 - this.devsLastTime);
                if (v0 >= 2000) {
                    int v2 = 0;
                    if ((this.gpsAuto) && (p10 != cri.sanity.util.Dev.isGpsOn())) {
                        cri.sanity.util.Dev.toggleGps();
                        v2 = 1;
                    }
                    if ((this.wifiTrack != null) && (p10 != this.wifiTrack.willOn())) {
                        this.wifiTrack.enable(p10);
                        v2 = 1;
                    }
                    if ((this.mobdTrack != null) && (p10 != this.mobdTrack.willOn())) {
                        this.mobdTrack.enable(p10);
                        v2 = 1;
                    }
                    if (((this.btAuto) && ((!this.btReverse) && ((!this.skipBtConn) || (this.btCount < 1)))) && (p10 != cri.sanity.util.Dev.isBtOn())) {
                        cri.sanity.util.Dev.enableBt(p10);
                        v2 = 1;
                    }
                    if (v2 != 0) {
                        this.devsLastTime = v3;
                        this.devsLastEnable = p10;
                        if (!p10) {
                            if (this.notifyDisable) {
                                cri.sanity.A.notify(cri.sanity.A.s(2131165628));
                                if (this.rec) {
                                    cri.sanity.A.notifyCanc();
                                }
                            }
                        } else {
                            if (this.notifyEnable) {
                                cri.sanity.A.notify(cri.sanity.A.s(2131165627));
                                if (this.rec) {
                                    cri.sanity.A.notifyCanc();
                                }
                            }
                        }
                    }
                } else {
                    if (p10 != this.devsLastEnable) {
                        cri.sanity.util.Task v5;
                        if (!p10) {
                            v5 = this.taskDevsOff;
                        } else {
                            v5 = this.taskDevsOn;
                        }
                        if (v5 != null) {
                            v5.exec(cri.sanity.PhoneListener.TASK_DEVS, Math.max(500, ((int) v0)));
                        }
                    }
                }
            }
        } catch (boolean v6_27) {
            throw v6_27;
        }
        return;
    }

    public static final cri.sanity.PhoneListener getActiveInstance()
    {
        return cri.sanity.PhoneListener.activeInst;
    }

    private void initCall()
    {
        cri.sanity.util.MobDataTracker v5_0 = 0;
        int v3 = 1;
        this.proximSensor = cri.sanity.A.sensorProxim();
        if (this.proximSensor != null) {
            boolean v2_62;
            this.autoSpeaker = cri.sanity.A.is("auto_speaker");
            this.speakerDelay = cri.sanity.A.geti("delay_speaker");
            this.speakerOnCount = cri.sanity.A.geti("speaker_on_count");
            this.speakerOffCount = cri.sanity.A.geti("speaker_off_count");
            if (this.speakerOnCount < 0) {
                v2_62 = 0;
            } else {
                v2_62 = 1;
            }
            boolean v2_64;
            this.speakerOn = v2_62;
            if (this.speakerOffCount < 0) {
                v2_64 = 0;
            } else {
                v2_64 = 1;
            }
            this.speakerOff = v2_64;
            this.proximReverse = cri.sanity.A.is("reverse_proximity");
            this.proximDisable = cri.sanity.A.is("disable_proximity");
            if (this.proximDisable) {
                this.proximEnable = cri.sanity.A.is("enable_proximity");
                this.disableDelay = cri.sanity.A.geti("disable_delay");
                this.enableDelay = cri.sanity.A.geti("enable_delay");
                if (this.enableDelay < 0) {
                    this.enableDelay = this.disableDelay;
                }
            } else {
                this.proximEnable = 0;
            }
        } else {
            this.autoSpeaker = 0;
            this.proximReverse = 0;
            this.proximEnable = 0;
            this.proximDisable = 0;
        }
        boolean v2_88;
        this.speakerCall = cri.sanity.A.geti("speaker_call");
        this.speakerCallDelay = cri.sanity.A.geti("delay_speaker_call");
        if ((!cri.sanity.Admin.isActive()) || (!cri.sanity.A.is("screen_off"))) {
            v2_88 = 0;
        } else {
            v2_88 = 1;
        }
        boolean v2_9;
        this.screenOff = v2_88;
        this.screenOn = cri.sanity.A.is("screen_on");
        this.rec = cri.sanity.A.is("rec");
        this.volRestore = -1;
        this.volSpeaker = cri.sanity.A.geti("vol_speaker");
        this.volPhone = cri.sanity.A.geti("vol_phone");
        this.volWired = cri.sanity.A.geti("vol_wired");
        this.volBt = cri.sanity.A.geti("vol_bt");
        this.volSolo = cri.sanity.A.is("vol_solo");
        if (!cri.sanity.A.is("notify_volume")) {
            v2_9 = 0;
        } else {
            v2_9 = 1;
        }
        boolean v2_14;
        this.volFlags = v2_9;
        if ((!cri.sanity.A.is("gps")) || (!cri.sanity.util.Dev.isGpsOn())) {
            v2_14 = 0;
        } else {
            v2_14 = 1;
        }
        int v0;
        this.gpsAuto = v2_14;
        if (((this.gpsAuto) && (cri.sanity.A.is("mobdata_skip"))) || ((!cri.sanity.A.is("mobdata")) || (!cri.sanity.util.Dev.isMobDataOn()))) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if ((!cri.sanity.A.is("wifi")) || (!cri.sanity.A.wifiMan().isWifiEnabled())) {
            int v1 = 0;
        } else {
            v1 = 1;
        }
        if (((v1 == 0) && (v0 == 0)) || ((!cri.sanity.A.is("hotspot_skip")) || (!cri.sanity.util.Dev.isHotspotOn()))) {
            if ((v0 != 0) && ((cri.sanity.A.is("tether_skip")) && (cri.sanity.util.Dev.isTetheringOn()))) {
                v0 = 0;
            }
        } else {
            v0 = 0;
            v1 = 0;
        }
        boolean v2_33;
        if (v1 == 0) {
            v2_33 = 0;
        } else {
            v2_33 = new cri.sanity.util.WifiTracker();
        }
        this.wifiTrack = v2_33;
        if (v0 != 0) {
            v5_0 = new cri.sanity.util.MobDataTracker();
        }
        this.mobdTrack = v5_0;
        if (!cri.sanity.util.Dev.isBtOn()) {
            this.btAuto = 0;
            if ((this.headsetOn) || (!cri.sanity.A.is("bt_reverse"))) {
                v3 = 0;
            }
            this.btReverse = v3;
        } else {
            this.btAuto = cri.sanity.A.is("bt");
            this.btReverse = 0;
            this.skipBtConn = cri.sanity.A.is("bt_skip");
        }
        if (this.autoSpeaker) {
            this.taskSpeakerOn = new cri.sanity.PhoneListener$2(this);
            this.taskSpeakerOff = new cri.sanity.PhoneListener$3(this);
        }
        if (this.hasAutoDev()) {
            this.taskDevsOn = new cri.sanity.PhoneListener$4(this);
            this.taskDevsOff = new cri.sanity.PhoneListener$5(this);
            this.notifyEnable = cri.sanity.A.is("notify_enable");
            this.notifyDisable = cri.sanity.A.is("notify_disable");
        } else {
            this.proximDisable = 0;
            this.proximEnable = 0;
        }
        this.regProximity();
        this.regHeadset();
        if (this.rec) {
            cri.sanity.RecService.start(this);
        }
        return;
    }

    public static final boolean isRunning()
    {
        int v0_1;
        if (cri.sanity.PhoneListener.activeInst == null) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    private void onIdle()
    {
        this.shutdown = 1;
        cri.sanity.PickupService.stop();
        if (this.offhook) {
            cri.sanity.util.Task.stop(cri.sanity.PhoneListener.TASK_SPEAKER);
            if ((!this.headsetOn) && (cri.sanity.A.is("silent_end_speaker"))) {
                this.audioMan.setSpeakerphoneOn(0);
            }
        }
        this.unregProximity();
        this.unregHeadset();
        cri.sanity.PhoneReceiver.number = 0;
        if (this.tts != null) {
            this.tts.shutdown();
            this.tts = 0;
        }
        if (this.rec) {
            cri.sanity.RecService.stop();
        }
        cri.sanity.util.Task.stopAll();
        if (this.offhook) {
            if (this.volRestore >= 0) {
                this.setVolume(this.volRestore);
            }
            cri.sanity.util.Dev.enableLock(1);
            this.volSolo(0);
            this.screenOff(0);
            if (cri.sanity.A.is("vibrate_end")) {
                cri.sanity.util.Vibra.vibra();
            }
        }
        this.restoreRinger();
        try {
            cri.sanity.A.telMan().listen(this, 0);
        } catch (String v1) {
        }
        cri.sanity.util.Blocker.shutdown();
        cri.sanity.util.CallFilter.shutdown();
        if (this.offhook) {
            this.enableDevs(1);
        }
        if (this.rec) {
            cri.sanity.Alarmer.runService("actOnIdleAsync", 0);
        }
        if (this.mobdTrack != null) {
            this.mobdTrack.shutdown();
            this.mobdTrack = 0;
        }
        if (this.wifiTrack != null) {
            this.wifiTrack.shutdown();
            this.wifiTrack = 0;
        }
        cri.sanity.util.Task.shutdownWait();
        boolean v0 = cri.sanity.util.Dev.isBtOn();
        if (((!this.btReverse) && (!cri.sanity.A.is("bt_off"))) || (!v0)) {
            if (!v0) {
                cri.sanity.A.putc("bt_count", 0);
            }
        } else {
            cri.sanity.util.Dev.enableBt(0);
            cri.sanity.A.putc("bt_count", 0);
        }
        this.offhook = 0;
        this.phoneNumber = 0;
        cri.sanity.MainService.stop();
        cri.sanity.PhoneListener.activeInst = 0;
        return;
    }

    private void onOffhook()
    {
        if (this.tts != null) {
            this.tts.shutdown();
            this.tts = 0;
        }
        if (!cri.sanity.util.Blocker.onOffhook()) {
            this.offhook = 1;
            cri.sanity.util.Dev.enableLock(0);
            if (this.outgoing) {
                this.initCall();
            }
            this.volSolo(1);
            this.audioMan.setMicrophoneMute(0);
            if (!this.headsetOn) {
                if (this.volPhone >= 0) {
                    this.setVolume(this.volPhone);
                }
                if (this.speakerCall != 1) {
                    if ((this.speakerCall == 2) && (!this.outgoing)) {
                        this.speakerCall = 0;
                    }
                } else {
                    if (this.outgoing) {
                        this.speakerCall = 0;
                    }
                }
                if (this.speakerCall > 0) {
                    this.speakerOnFar();
                }
            } else {
                boolean v0_13;
                if (!this.wiredHeadsetOn) {
                    v0_13 = this.volBt;
                } else {
                    v0_13 = this.volWired;
                }
                this.setHeadsetVolume(1, v0_13);
            }
            if (!this.proximDisable) {
                this.enableDevs(0);
            }
            if (this.outgoing) {
                this.phoneNumber = cri.sanity.PhoneReceiver.number;
                this.btAdjust();
            }
            if (this.rec) {
                cri.sanity.RecService.checkAutoRec();
            }
            if (!this.lastFar) {
                this.screenOff(1);
            }
        }
        return;
    }

    private void onRinging()
    {
        int v4;
        this.outgoing = 0;
        String v3 = cri.sanity.PhoneReceiver.number;
        this.phoneNumber = v3;
        int v5 = this.audioMan.getRingerMode();
        if (v5 != 2) {
            v4 = 0;
        } else {
            v4 = 1;
        }
        int v1;
        cri.sanity.util.CallFilter v2 = cri.sanity.util.CallFilter.instance();
        if ((!v2.includes(v3, "block", 0)) || ((cri.sanity.A.is("block_skip")) && (v4 == 0))) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        if ((v1 == 0) || (!cri.sanity.util.Blocker.apply(cri.sanity.A.geti("block_mode")))) {
            if ((v1 == 0) && ((v4 == 0) && ((!this.headsetOn) && (v2.includes(v3, "urgent", 0))))) {
                this.urgentCall(v5);
            }
            if (((v1 != 0) || ((!cri.sanity.A.is("answer")) || ((!this.headsetOn) && (cri.sanity.A.is("answer_headset"))))) || (((cri.sanity.A.is("answer_skip")) && (v4 == 0)) || (!v2.includes(v3, "answer", 1)))) {
                int v0 = -1;
            } else {
                v0 = cri.sanity.A.geti("answer_delay");
            }
            if (((v0 < 0) || (v0 > 3000)) && (((cri.sanity.A.is("tts")) && ((this.headsetOn) || (!cri.sanity.A.is("tts_headset")))) && ((!cri.sanity.A.is("tts_skip")) || (v4 != 0)))) {
                this.tts = new cri.sanity.TTS(v3, 1, 1, 0);
            }
            this.initCall();
            this.btAdjust();
            if (v0 >= 0) {
                new cri.sanity.PhoneListener$6(this).exec(v0);
            }
        }
        return;
    }

    private void regHeadset()
    {
        this.headsetRegistered = 1;
        cri.sanity.A.app().registerReceiver(this.headsetWiredReceiver, new android.content.IntentFilter("android.intent.action.HEADSET_PLUG"));
        return;
    }

    private void regProximity()
    {
        if ((this.proximSensor == null) || ((!this.autoSpeaker) && ((!this.screenOff) && ((!this.screenOn) && ((!this.proximDisable) || (!this.hasAutoDev())))))) {
            cri.sanity.A v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        this.proximRegistered = v1_2;
        if (this.proximRegistered) {
            this.proximFar = (Math.max(1056964608, Math.min(1084227584, Math.abs(this.proximSensor.getMaximumRange()))) - 1036831949);
            cri.sanity.A.sensorMan().registerListener(this, this.proximSensor, 3);
            if (this.screenOn) {
                cri.sanity.A v1_12 = cri.sanity.A.app();
                cri.sanity.PhoneListener$10 v2_5 = new cri.sanity.PhoneListener$9(this);
                this.screenOffReceiver = v2_5;
                v1_12.registerReceiver(v2_5, new android.content.IntentFilter("android.intent.action.SCREEN_OFF"));
            }
            if (this.screenOff) {
                cri.sanity.A v1_14 = cri.sanity.A.app();
                cri.sanity.PhoneListener$10 v2_7 = new cri.sanity.PhoneListener$10(this);
                this.screenOnReceiver = v2_7;
                v1_14.registerReceiver(v2_7, new android.content.IntentFilter("android.intent.action.SCREEN_ON"));
            }
        }
        return;
    }

    private void restoreRinger()
    {
        if (this.ringMode >= 0) {
            cri.sanity.ModeReceiver.skip = 1;
            this.audioMan.setRingerMode(this.ringMode);
        }
        if (this.vibrMode >= 0) {
            this.audioMan.setVibrateSetting(0, this.vibrMode);
        }
        return;
    }

    private declared_synchronized void screenOff(boolean p2)
    {
        try {
            if (!p2) {
                if (this.screenOn) {
                    cri.sanity.util.Dev.wakeScreen();
                }
            } else {
                if (this.screenOff) {
                    cri.sanity.util.Dev.lock();
                }
            }
        } catch (Throwable v0_2) {
            throw v0_2;
        }
        return;
    }

    private void setHeadsetVolume(boolean p3, int p4)
    {
        if (p4 >= 0) {
            if (p3) {
                if (this.volPhone < 0) {
                    int v0_0;
                    if (this.volRestore >= 0) {
                        v0_0 = this.volRestore;
                    } else {
                        v0_0 = this.audioMan.getStreamVolume(0);
                    }
                    this.volPhone = v0_0;
                }
            } else {
                p4 = this.volPhone;
            }
            this.setVolume(p4);
        }
        return;
    }

    private void setVolume(int p4)
    {
        this.audioMan.setStreamVolume(0, p4, this.volFlags);
        return;
    }

    private void speakerOnFar()
    {
        if (this.taskSpeakerOnFar == null) {
            this.taskSpeakerOnFar = new cri.sanity.PhoneListener$7(this);
        }
        if (this.speakerCallDelay > 0) {
            if ((this.outgoing) && (this.speakerCallDelay < 3000)) {
                this.speakerCallDelay = 3000;
            }
            this.taskSpeakerOnFar.exec(cri.sanity.PhoneListener.TASK_SPEAKER, this.speakerCallDelay);
        } else {
            this.taskSpeakerOnFar.exec(0);
            if (this.outgoing) {
            }
        }
        return;
    }

    private void unregHeadset()
    {
        if (this.headsetRegistered) {
            this.headsetRegistered = 0;
            try {
                cri.sanity.A.app().unregisterReceiver(this.headsetWiredReceiver);
            } catch (Exception v0) {
            }
        }
        return;
    }

    private void unregProximity()
    {
        if (this.proximRegistered) {
            this.proximRegistered = 0;
            try {
                cri.sanity.A.sensorMan().unregisterListener(this);
            } catch (Exception v0) {
            }
            if (this.screenOff) {
                try {
                    cri.sanity.A.app().unregisterReceiver(this.screenOnReceiver);
                } catch (Exception v0) {
                }
            }
            if (this.screenOn) {
                try {
                    cri.sanity.A.app().unregisterReceiver(this.screenOffReceiver);
                } catch (Exception v0) {
                }
            }
        }
        return;
    }

    private void updateHeadset(boolean p5, int p6)
    {
        int v3 = 1;
        if (cri.sanity.A.is("notify_headset")) {
            boolean v1_10;
            if (!p5) {
                v1_10 = 2131165656;
            } else {
                v1_10 = 2131165655;
            }
            cri.sanity.A.notify(cri.sanity.A.s(v1_10));
            if (this.rec) {
                cri.sanity.A.notifyCanc();
            }
        }
        if (this.headsetOn != p5) {
            this.headsetOn = p5;
            if (this.offhook) {
                int v0;
                this.setHeadsetVolume(p5, p6);
                if ((!p5) && ((!this.lastFar) || (!this.proximDisable))) {
                    v0 = 0;
                } else {
                    v0 = 1;
                }
                if (this.autoSpeaker) {
                    this.autoSpeaker(v0);
                }
                this.enableDevs(v0);
                if (v0 != 0) {
                    v3 = 0;
                }
                this.screenOff(v3);
                if (this.rec) {
                    cri.sanity.RecService.updateHeadset(p5);
                }
            }
        }
        return;
    }

    private void urgentCall(int p7)
    {
        int v3 = 0;
        int v2 = this.audioMan.getVibrateSetting(0);
        if ((p7 == 1) || (v2 == 2)) {
            v3 = 1;
        }
        if ((v3 == 0) || (!cri.sanity.A.is("urgent_skip"))) {
            int v1;
            int v0;
            switch (cri.sanity.A.geti("urgent_mode")) {
                case 1:
                    v0 = 2;
                    v1 = 0;
                    break;
                case 2:
                    v0 = 1;
                    v1 = 2;
                    break;
                case 3:
                    v0 = 2;
                    v1 = 1;
                    break;
                default:
            }
            this.changeRinger(v0, v1, p7, v2);
        }
        return;
    }

    private void volSolo(boolean p3)
    {
        if (this.volSolo) {
            this.audioMan.setStreamMute(1, p3);
            this.audioMan.setStreamMute(4, p3);
            this.audioMan.setStreamMute(5, p3);
            if (!this.rec) {
                this.audioMan.setStreamMute(3, p3);
            }
        }
        return;
    }

    public boolean changeRinger(int p4, int p5)
    {
        return this.changeRinger(p4, p5, this.audioMan.getRingerMode(), this.audioMan.getVibrateSetting(0));
    }

    public final boolean hasAutoDev()
    {
        if ((this.mobdTrack == null) && ((this.wifiTrack == null) && ((!this.btAuto) && (!this.gpsAuto)))) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    public final boolean hasAutoSpeaker()
    {
        return this.autoSpeaker;
    }

    public final boolean isHeadsetOn()
    {
        return this.headsetOn;
    }

    public final boolean isOutgoing()
    {
        return this.outgoing;
    }

    public void onAccuracyChanged(android.hardware.Sensor p1, int p2)
    {
        return;
    }

    public void onCallForwardingIndicatorChanged(boolean p3)
    {
        if ((this.offhook) && (!this.headsetOn)) {
            if (this.lastFar) {
                if ((this.outgoing) && (this.speakerCall > 0)) {
                    this.speakerOnFar();
                }
            } else {
                new cri.sanity.PhoneListener$11(this).exec(500);
            }
        }
        return;
    }

    public void onCallStateChanged(int p3, String p4)
    {
        switch (p3) {
            case 0:
                this.onIdle();
                break;
            case 1:
                if (this.lastCallState != -1) {
                } else {
                    this.onRinging();
                }
                break;
            case 2:
                if (this.offhook) {
                } else {
                    this.onOffhook();
                }
                break;
        }
        this.lastCallState = p3;
        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent p8)
    {
        int v2 = 1;
        if (!this.shutdown) {
            int v0;
            float v1 = p8.values[0];
            if (!this.proximReverse) {
                if (v1 < this.proximFar) {
                    v0 = 0;
                } else {
                    v0 = 1;
                }
            } else {
                if (v1 >= this.proximFar) {
                    v0 = 0;
                } else {
                    v0 = 1;
                }
            }
            if ((this.offhook) && (!this.headsetOn)) {
                if (this.autoSpeaker) {
                    if (v0 == 0) {
                        if (this.speakerOff) {
                            int v4_10;
                            this.taskSpeakerOff.exec(cri.sanity.PhoneListener.TASK_SPEAKER, 0);
                            int v4_9 = (this.speakerOffCount - 1);
                            this.speakerOffCount = v4_9;
                            if (v4_9 == 0) {
                                v4_10 = 0;
                            } else {
                                v4_10 = 1;
                            }
                            this.speakerOff = v4_10;
                        }
                    } else {
                        if (this.speakerOn) {
                            int v4_16;
                            this.taskSpeakerOn.exec(cri.sanity.PhoneListener.TASK_SPEAKER, this.speakerDelay);
                            int v4_15 = (this.speakerOnCount - 1);
                            this.speakerOnCount = v4_15;
                            if (v4_15 == 0) {
                                v4_16 = 0;
                            } else {
                                v4_16 = 1;
                            }
                            this.speakerOn = v4_16;
                        }
                    }
                }
                if (v0 == 0) {
                    if (this.proximDisable) {
                        this.taskDevsOff.exec(cri.sanity.PhoneListener.TASK_DEVS, this.disableDelay);
                    }
                } else {
                    if (this.proximEnable) {
                        this.taskDevsOn.exec(cri.sanity.PhoneListener.TASK_DEVS, this.enableDelay);
                    }
                }
                if (v0 != 0) {
                    v2 = 0;
                }
                this.screenOff(v2);
            }
            this.lastFar = v0;
        }
        return;
    }

    public final String phoneNumber()
    {
        return this.phoneNumber;
    }

    public final void startup()
    {
        int v0 = 0;
        cri.sanity.PhoneListener.activeInst = this;
        this.shutdown = 0;
        this.outgoing = 1;
        this.offhook = 0;
        this.phoneNumber = 0;
        this.lastFar = 1;
        this.rec = 0;
        this.btReverse = 0;
        this.btCount = Math.max(cri.sanity.A.geti("bt_count"), 0);
        this.ringMode = -1;
        this.vibrMode = -1;
        this.headsetRegistered = 0;
        this.proximRegistered = 0;
        this.devsLastTime = 0;
        this.devsLastEnable = 1;
        this.speakerListener = 0;
        this.lastCallState = -1;
        this.wiredHeadsetOn = this.audioMan.isWiredHeadsetOn();
        if (((this.wiredHeadsetOn) || ((this.btCount > 0) && (cri.sanity.A.is("force_bt_audio")))) || ((this.audioMan.isBluetoothA2dpOn()) || (this.audioMan.isBluetoothScoOn()))) {
            v0 = 1;
        }
        this.headsetOn = v0;
        return;
    }

    public final void updateHeadsetBt(boolean p2)
    {
        if (!this.wiredHeadsetOn) {
            this.updateHeadset(p2, this.volBt);
        }
        return;
    }
}
package cri.sanity;
public class PhoneReceiver extends android.content.BroadcastReceiver {
    public static String number;

    public PhoneReceiver()
    {
        return;
    }

    public void onReceive(android.content.Context p3, android.content.Intent p4)
    {
        if ((!cri.sanity.MainService.isRunning()) && (cri.sanity.A.isEnabled())) {
            String v0 = p4.getStringExtra("state");
            if (!android.telephony.TelephonyManager.EXTRA_STATE_RINGING.equals(v0)) {
                if (!android.telephony.TelephonyManager.EXTRA_STATE_OFFHOOK.equals(v0)) {
                    return;
                } else {
                    cri.sanity.PickupService.notifyOffhook();
                }
            } else {
                cri.sanity.PhoneReceiver.number = p4.getStringExtra("incoming_number");
            }
            cri.sanity.MainService.start();
        }
        return;
    }
}
package cri.sanity;
 class PickupService$1 extends cri.sanity.util.Task {
    final synthetic cri.sanity.PickupService this$0;

    PickupService$1(cri.sanity.PickupService p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        int[] v0_1 = new int[0];
        cri.sanity.PickupService$1.stop(v0_1);
        return;
    }
}
package cri.sanity;
public final class PickupService extends android.app.Service implements java.lang.Runnable {
    private static final int OFFHOOK_TIMEOUT = 6000;
    private static final int TASK_ID = 0;
    private static final int TASK_TIMEOUT = 120000;
    private static final Object monitor;
    private static volatile boolean notified;
    private static boolean running;
    private static volatile boolean terminate;

    static PickupService()
    {
        cri.sanity.PickupService.TASK_ID = cri.sanity.util.Task.idNew();
        cri.sanity.PickupService.running = 0;
        cri.sanity.PickupService.terminate = 0;
        cri.sanity.PickupService.notified = 0;
        cri.sanity.PickupService.monitor = new Object();
        return;
    }

    public PickupService()
    {
        return;
    }

    public static void notifyOffhook()
    {
        try {
            cri.sanity.PickupService.notified = 1;
            cri.sanity.PickupService.monitor.notifyAll();
            return;
        } catch (Throwable v0_2) {
            throw v0_2;
        }
    }

    public static void start()
    {
        if (!cri.sanity.PickupService.running) {
            cri.sanity.PickupService.terminate = 0;
            cri.sanity.PickupService.notified = 0;
            cri.sanity.A v0 = cri.sanity.A.app();
            v0.startService(new android.content.Intent(v0, cri.sanity.PickupService));
        }
        return;
    }

    public static void stop()
    {
        if (cri.sanity.PickupService.running) {
            cri.sanity.PickupService.terminate = 1;
            cri.sanity.PickupService.monitor.notifyAll();
            cri.sanity.A v0 = cri.sanity.A.app();
            v0.stopService(new android.content.Intent(v0, cri.sanity.PickupService));
            cri.sanity.util.Task.stop(cri.sanity.PickupService.TASK_ID);
        }
        return;
    }

    public android.os.IBinder onBind(android.content.Intent p2)
    {
        return 0;
    }

    public void onDestroy()
    {
        cri.sanity.PickupService.running = 0;
        super.onDestroy();
        return;
    }

    public int onStartCommand(android.content.Intent p5, int p6, int p7)
    {
        if ((p5 != null) && (!cri.sanity.PickupService.running)) {
            cri.sanity.PickupService.running = 1;
            new Thread(this).start();
            new cri.sanity.PickupService$1(this).exec(cri.sanity.PickupService.TASK_ID, 120000);
        }
        return 1;
    }

    public void run()
    {
        java.io.BufferedReader v0 = 0;
        java.text.SimpleDateFormat v3_1 = new java.text.SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        java.util.Calendar v2 = java.util.Calendar.getInstance();
        String v8 = new StringBuilder().append(v2.get(1)).append("-").toString();
        long v6 = cri.sanity.A.time();
        if (cri.sanity.PickupService.notified) {
            cri.sanity.PickupService.notified = 0;
            try {
                Process v5 = Runtime.getRuntime().exec("logcat -b radio -v time");
                java.io.BufferedReader v1_1 = new java.io.BufferedReader(new java.io.InputStreamReader(v5.getInputStream()), 8192);
                try {
                    while (!cri.sanity.PickupService.terminate) {
                        String v4 = v1_1.readLine();
                        if (v4 == null) {
                            break;
                        }
                        if ((v4.contains("GET_CURRENT_CALLS")) && (v4.contains("ACTIVE"))) {
                            try {
                                v2.setTimeInMillis(v3_1.parse(new StringBuilder().append(v8).append(v4.substring(0, 14)).toString()).getTime());
                            } catch (Exception v9) {
                            }
                            if (v2.getTimeInMillis() >= v6) {
                                cri.sanity.util.Vibra.vibra();
                                break;
                            }
                        }
                    }
                } catch (Exception v9) {
                    v0 = v1_1;
                    if (v0 != null) {
                        try {
                            v0.close();
                        } catch (Exception v9) {
                        }
                    }
                    if (v5 != null) {
                        try {
                            v5.destroy();
                        } catch (Exception v9) {
                        }
                    }
                    cri.sanity.PickupService.stop();
                }
                v0 = v1_1;
            } catch (Exception v9) {
            }
        } else {
            try {
                cri.sanity.PickupService.monitor.wait(6000);
            } catch (Exception v9) {
            }
            if ((cri.sanity.PickupService.notified) && (!cri.sanity.PickupService.terminate)) {
            } else {
                cri.sanity.PickupService.stop();
            }
        }
        return;
    }
}
package cri.sanity;
 class PrefActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.PrefActivity this$0;

    PrefActivity$1(cri.sanity.PrefActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165649));
        return 0;
    }
}
package cri.sanity;
 class PrefActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.PrefActivity this$0;

    PrefActivity$2(cri.sanity.PrefActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165649));
        return 1;
    }
}
package cri.sanity;
public final class PrefGroups {
    public static final int SHORTCUT_FILTER_ROW = 3;

    public PrefGroups()
    {
        return;
    }

    public static final String[] edits()
    {
        String[] v0_1 = new String[7];
        v0_1[0] = "tts_prefix";
        v0_1[1] = "tts_suffix";
        v0_1[2] = "tts_anonym";
        v0_1[3] = "tts_anonym";
        v0_1[4] = "ttsms_prefix";
        v0_1[5] = "ttsms_suffix";
        v0_1[6] = "anonym_prefix";
        return v0_1;
    }

    public static final Object[] filterShortcuts()
    {
        Object[] v0_1 = new Object[24];
        v0_1[0] = Integer.valueOf(2131165351);
        v0_1[1] = Integer.valueOf(2130837524);
        v0_1[2] = "rec";
        v0_1[3] = Integer.valueOf(2131165398);
        v0_1[4] = Integer.valueOf(2130837517);
        v0_1[5] = "block";
        v0_1[6] = Integer.valueOf(2131165415);
        v0_1[7] = Integer.valueOf(2130837517);
        v0_1[8] = "blocksms";
        v0_1[9] = Integer.valueOf(2131165425);
        v0_1[10] = Integer.valueOf(2130837526);
        v0_1[11] = "tts";
        v0_1[12] = Integer.valueOf(2131165460);
        v0_1[13] = Integer.valueOf(2130837526);
        v0_1[14] = "ttsms";
        v0_1[15] = Integer.valueOf(2131165471);
        v0_1[16] = Integer.valueOf(2130837527);
        v0_1[17] = "urgent";
        v0_1[18] = Integer.valueOf(2131165479);
        v0_1[19] = Integer.valueOf(2130837516);
        v0_1[20] = "answer";
        v0_1[21] = Integer.valueOf(2131165491);
        v0_1[22] = Integer.valueOf(2130837515);
        v0_1[23] = "anonym";
        return v0_1;
    }

    public static final java.util.Map intLabVals()
    {
        java.util.HashMap v0_1 = new java.util.HashMap();
        android.util.Pair v1 = cri.sanity.PrefGroups.p(2131099650, 2131099651);
        android.util.Pair v2 = cri.sanity.PrefGroups.p(2131099656, 2131099657);
        v0_1.put("disable_delay", v1);
        v0_1.put("enable_delay", cri.sanity.PrefGroups.p(2131099652, 2131099653));
        v0_1.put("delay_speaker", v1);
        v0_1.put("speaker_call", cri.sanity.PrefGroups.p(2131099654, 2131099655));
        v0_1.put("delay_speaker_call", v1);
        v0_1.put("speaker_on_count", v2);
        v0_1.put("speaker_off_count", v2);
        v0_1.put("rec_fmt", cri.sanity.PrefGroups.p(2131099660, 2131099661));
        v0_1.put("rec_src", cri.sanity.PrefGroups.p(2131099658, 2131099659));
        v0_1.put("rec_start_delay", v1);
        v0_1.put("rec_stop_delay", v1);
        v0_1.put("rec_start_headset", cri.sanity.PrefGroups.p(2131099668, 2131099670));
        v0_1.put("rec_stop_headset", cri.sanity.PrefGroups.p(2131099669, 2131099670));
        v0_1.put("rec_stop_limit", cri.sanity.PrefGroups.p(2131099662, 2131099663));
        v0_1.put("rec_start_times", cri.sanity.PrefGroups.p(2131099666, 2131099667));
        v0_1.put("rec_start_dir", cri.sanity.PrefGroups.p(2131099664, 2131099665));
        v0_1.put("rec_autoremove", cri.sanity.PrefGroups.p(2131099671, 2131099672));
        v0_1.put("bt_reverse_timeout", cri.sanity.PrefGroups.p(2131099648, 2131099649));
        v0_1.put("block_mode", cri.sanity.PrefGroups.p(2131099681, 2131099682));
        v0_1.put("block_resume", cri.sanity.PrefGroups.p(2131099683, 2131099684));
        v0_1.put("blocksms_max", cri.sanity.PrefGroups.p(2131099685, 2131099686));
        v0_1.put("tts_tone", cri.sanity.PrefGroups.p(2131099675, 2131099676));
        v0_1.put("tts_repeat", cri.sanity.PrefGroups.p(2131099677, 2131099678));
        v0_1.put("tts_pause", cri.sanity.PrefGroups.p(2131099679, 2131099680));
        v0_1.put("urgent_mode", cri.sanity.PrefGroups.p(2131099687, 2131099688));
        v0_1.put("answer_delay", v1);
        v0_1.put("vibrate_mode", cri.sanity.PrefGroups.p(2131099691, 2131099692));
        return v0_1;
    }

    private static android.util.Pair p(int p3, int p4)
    {
        return new android.util.Pair(Integer.valueOf(p3), Integer.valueOf(p4));
    }

    public static final Object[] screens()
    {
        Object[] v0_1 = new Object[70];
        v0_1[0] = "screen_general";
        v0_1[1] = cri.sanity.screen.GeneralActivity;
        v0_1[2] = Integer.valueOf(2130968590);
        v0_1[3] = Integer.valueOf(2131361815);
        v0_1[4] = Integer.valueOf(2130903056);
        v0_1[5] = "screen_devices";
        v0_1[6] = cri.sanity.screen.DevicesActivity;
        v0_1[7] = Integer.valueOf(2130968588);
        v0_1[8] = Integer.valueOf(2131361823);
        v0_1[9] = Integer.valueOf(2130903055);
        v0_1[10] = "screen_proximity";
        v0_1[11] = cri.sanity.screen.ProximityActivity;
        v0_1[12] = Integer.valueOf(2130968594);
        v0_1[13] = Integer.valueOf(2131361824);
        v0_1[14] = Integer.valueOf(2130903064);
        v0_1[15] = "screen_speaker";
        v0_1[16] = cri.sanity.screen.SpeakerActivity;
        v0_1[17] = Integer.valueOf(2130968596);
        v0_1[18] = Integer.valueOf(2131361822);
        v0_1[19] = Integer.valueOf(2130903067);
        v0_1[20] = "screen_volume";
        v0_1[21] = cri.sanity.screen.VolumeActivity;
        v0_1[22] = Integer.valueOf(2130968600);
        v0_1[23] = Integer.valueOf(2131361825);
        v0_1[24] = Integer.valueOf(2130903071);
        v0_1[25] = "screen_record";
        v0_1[26] = cri.sanity.screen.RecordActivity;
        v0_1[27] = Integer.valueOf(2130968595);
        v0_1[28] = Integer.valueOf(2131361816);
        v0_1[29] = Integer.valueOf(2130903065);
        v0_1[30] = "screen_block";
        v0_1[31] = cri.sanity.screen.BlockerActivity;
        v0_1[32] = Integer.valueOf(2130968586);
        v0_1[33] = Integer.valueOf(2131361817);
        v0_1[34] = Integer.valueOf(2130903050);
        v0_1[35] = "screen_tts";
        v0_1[36] = cri.sanity.screen.TtsActivity;
        v0_1[37] = Integer.valueOf(2130968597);
        v0_1[38] = Integer.valueOf(2131361818);
        v0_1[39] = Integer.valueOf(2130903068);
        v0_1[40] = "screen_urgent";
        v0_1[41] = cri.sanity.screen.UrgentActivity;
        v0_1[42] = Integer.valueOf(2130968598);
        v0_1[43] = Integer.valueOf(2131361819);
        v0_1[44] = Integer.valueOf(2130903069);
        v0_1[45] = "screen_answer";
        v0_1[46] = cri.sanity.screen.AnswerActivity;
        v0_1[47] = Integer.valueOf(2130968585);
        v0_1[48] = Integer.valueOf(2131361820);
        v0_1[49] = Integer.valueOf(2130903048);
        v0_1[50] = "screen_anonym";
        v0_1[51] = cri.sanity.screen.AnonymActivity;
        v0_1[52] = Integer.valueOf(2130968584);
        v0_1[53] = Integer.valueOf(2131361821);
        v0_1[54] = Integer.valueOf(2130903047);
        v0_1[55] = "screen_vibra";
        v0_1[56] = cri.sanity.screen.VibraActivity;
        v0_1[57] = Integer.valueOf(2130968599);
        v0_1[58] = Integer.valueOf(2131361827);
        v0_1[59] = Integer.valueOf(2130903070);
        v0_1[60] = "screen_notify";
        v0_1[61] = cri.sanity.screen.NotifyActivity;
        v0_1[62] = Integer.valueOf(2130968592);
        v0_1[63] = Integer.valueOf(2131361826);
        v0_1[64] = Integer.valueOf(2130903061);
        v0_1[65] = "screen_about";
        v0_1[66] = cri.sanity.screen.AboutActivity;
        v0_1[67] = Integer.valueOf(2130968583);
        v0_1[68] = Integer.valueOf(2131361828);
        v0_1[69] = Integer.valueOf(2130903046);
        return v0_1;
    }

    public static final String[][] sections()
    {
        String[][] v0_1 = new String[][13];
        int v1_15 = new String[9];
        v1_15[0] = "general_cat";
        v1_15[1] = "enabled";
        v1_15[2] = "quick_start";
        v1_15[3] = "silent_limit";
        v1_15[4] = "airplane_limit";
        v1_15[5] = "force_bt_audio";
        v1_15[6] = "reverse_proximity";
        v1_15[7] = "pwd";
        v1_15[8] = "pwd_clear";
        v0_1[0] = v1_15;
        int v1_11 = new String[12];
        v1_11[0] = "devices_cat";
        v1_11[1] = "mobdata";
        v1_11[2] = "wifi";
        v1_11[3] = "gps";
        v1_11[4] = "bt";
        v1_11[5] = "bt_skip";
        v1_11[6] = "mobdata_skip";
        v1_11[7] = "hotspot_skip";
        v1_11[8] = "tether_skip";
        v1_11[9] = "bt_reverse";
        v1_11[10] = "bt_reverse_timeout";
        v1_11[11] = "bt_off";
        v0_1[1] = v1_11;
        int v1_13 = new String[7];
        v1_13[0] = "proximity_cat";
        v1_13[1] = "disable_proximity";
        v1_13[2] = "disable_delay";
        v1_13[3] = "enable_proximity";
        v1_13[4] = "enable_delay";
        v1_13[5] = "screen_off";
        v1_13[6] = "screen_on";
        v0_1[2] = v1_13;
        int v1_17 = new String[9];
        v1_17[0] = "speaker_cat";
        v1_17[1] = "auto_speaker";
        v1_17[2] = "delay_speaker";
        v1_17[3] = "speaker_call";
        v1_17[4] = "delay_speaker_call";
        v1_17[5] = "vol_speaker";
        v1_17[6] = "silent_end_speaker";
        v1_17[7] = "speaker_on_count";
        v1_17[8] = "speaker_off_count";
        v0_1[3] = v1_17;
        int v1_1 = new String[17];
        v1_1[0] = "rec_cat";
        v1_1[1] = "rec";
        v1_1[2] = "rec_fmt";
        v1_1[3] = "rec_src";
        v1_1[4] = "rec_start";
        v1_1[5] = "rec_start_delay";
        v1_1[6] = "filter_enable_rec";
        v1_1[7] = "rec_start_speaker";
        v1_1[8] = "rec_start_headset";
        v1_1[9] = "rec_start_dir";
        v1_1[10] = "rec_start_times";
        v1_1[11] = "rec_stop";
        v1_1[12] = "rec_stop_delay";
        v1_1[13] = "rec_stop_speaker";
        v1_1[14] = "rec_stop_headset";
        v1_1[15] = "rec_stop_limit";
        v1_1[16] = "rec_autoremove";
        v0_1[4] = v1_1;
        String[] v2_24 = new String[11];
        v2_24[0] = "block_cat";
        v2_24[1] = "filter_enable_block";
        v2_24[2] = "block_mode";
        v2_24[3] = "block_resume";
        v2_24[4] = "block_pickup";
        v2_24[5] = "block_skip";
        v2_24[6] = "block_notify";
        v2_24[7] = "blocksms";
        v2_24[8] = "filter_enable_blocksms";
        v2_24[9] = "blocksms_notify";
        v2_24[10] = "blocksms_max";
        v0_1[5] = v2_24;
        String[] v2_28 = new String[15];
        v2_28[0] = "tts_cat";
        v2_28[1] = "tts";
        v2_28[2] = "tts_headset";
        v2_28[3] = "tts_skip";
        v2_28[4] = "tts_solo";
        v2_28[5] = "tts_vol";
        v2_28[6] = "tts_tone";
        v2_28[7] = "tts_repeat";
        v2_28[8] = "tts_pause";
        v2_28[9] = "tts_prefix";
        v2_28[10] = "tts_suffix";
        v2_28[11] = "tts_anonym";
        v2_28[12] = "tts_unknown";
        v2_28[13] = "filter_enable_tts";
        v2_28[14] = "tts_stream";
        v0_1[6] = v2_28;
        String[] v2_30 = new String[3];
        v2_30[0] = "urgent_cat";
        v2_30[1] = "filter_enable_urgent";
        v2_30[2] = "urgent_mode";
        v0_1[7] = v2_30;
        String[] v2_32 = new String[6];
        v2_32[0] = "answer_cat";
        v2_32[1] = "answer";
        v2_32[2] = "answer_headset";
        v2_32[3] = "answer_skip";
        v2_32[4] = "answer_delay";
        v2_32[5] = "filter_enable_answer";
        v0_1[8] = v2_32;
        String[] v2_35 = new String[6];
        v2_35[0] = "anonym_cat";
        v2_35[1] = "anonym";
        v2_35[2] = "anonym_confirm";
        v2_35[3] = "anonym_notify";
        v2_35[4] = "anonym_prefix";
        v2_35[5] = "filter_enable_anonym";
        v0_1[9] = v2_35;
        String[] v2_38 = new String[5];
        v2_38[0] = "vol_cat";
        v2_38[1] = "vol_phone";
        v2_38[2] = "vol_wired";
        v2_38[3] = "vol_bt";
        v2_38[4] = "vol_solo";
        v0_1[10] = v2_38;
        String[] v2_39 = new String[4];
        v2_39[0] = "vibrate_cat";
        v2_39[1] = "vibrate_pickup";
        v2_39[2] = "vibrate_end";
        v2_39[3] = "vibrate_mode";
        v0_1[11] = v2_39;
        String[] v2_41 = new String[6];
        v2_41[0] = "notify_cat";
        v2_41[1] = "notify_enable";
        v2_41[2] = "notify_disable";
        v2_41[3] = "notify_activity";
        v2_41[4] = "notify_volume";
        v2_41[5] = "notify_rec_stop";
        v0_1[12] = v2_41;
        return v0_1;
    }

    public static final String[] skipKeys()
    {
        String[] v0_1 = new String[6];
        v0_1[0] = "bt_count";
        v0_1[1] = "nag";
        v0_1[2] = "cron";
        v0_1[3] = "full";
        v0_1[4] = "licver";
        v0_1[5] = "sms_count";
        return v0_1;
    }

    public static final String[] volumes()
    {
        String[] v0_1 = new String[6];
        v0_1[0] = "vol_phone";
        v0_1[1] = "vol_wired";
        v0_1[2] = "vol_bt";
        v0_1[3] = "vol_speaker";
        v0_1[4] = "tts_vol";
        v0_1[5] = "ttsms_vol";
        return v0_1;
    }
}
package cri.sanity;
public final class R$array {
    public static final int anonym_country_labels = 2131099689;
    public static final int anonym_country_values = 2131099690;
    public static final int block_mode_labels = 2131099681;
    public static final int block_mode_values = 2131099682;
    public static final int block_resume_labels = 2131099683;
    public static final int block_resume_values = 2131099684;
    public static final int blocksms_max_labels = 2131099685;
    public static final int blocksms_max_values = 2131099686;
    public static final int bt_reverse_timeout_labels = 2131099648;
    public static final int bt_reverse_timeout_values = 2131099649;
    public static final int disable_delay_labels = 2131099650;
    public static final int disable_delay_values = 2131099651;
    public static final int enable_delay_labels = 2131099652;
    public static final int enable_delay_values = 2131099653;
    public static final int filter_mode_labels = 2131099673;
    public static final int filter_mode_values = 2131099674;
    public static final int rec_autoremove_labels = 2131099671;
    public static final int rec_autoremove_values = 2131099672;
    public static final int rec_fmt_labels = 2131099660;
    public static final int rec_fmt_values = 2131099661;
    public static final int rec_headset_values = 2131099670;
    public static final int rec_src_labels = 2131099658;
    public static final int rec_src_values = 2131099659;
    public static final int rec_start_dir_labels = 2131099664;
    public static final int rec_start_dir_values = 2131099665;
    public static final int rec_start_headset_labels = 2131099668;
    public static final int rec_start_times_labels = 2131099666;
    public static final int rec_start_times_values = 2131099667;
    public static final int rec_stop_headset_labels = 2131099669;
    public static final int rec_stop_limit_labels = 2131099662;
    public static final int rec_stop_limit_values = 2131099663;
    public static final int speaker_call_labels = 2131099654;
    public static final int speaker_call_values = 2131099655;
    public static final int speaker_count_labels = 2131099656;
    public static final int speaker_count_values = 2131099657;
    public static final int tts_pause_labels = 2131099679;
    public static final int tts_pause_values = 2131099680;
    public static final int tts_repeat_labels = 2131099677;
    public static final int tts_repeat_values = 2131099678;
    public static final int tts_tone_labels = 2131099675;
    public static final int tts_tone_values = 2131099676;
    public static final int urgent_mode_labels = 2131099687;
    public static final int urgent_mode_values = 2131099688;
    public static final int vibrate_mode_labels = 2131099691;
    public static final int vibrate_mode_values = 2131099692;

    public R$array()
    {
        return;
    }
}
package cri.sanity;
public final class R$attr {

    public R$attr()
    {
        return;
    }
}
package cri.sanity;
public final class R$drawable {
    public static final int bg = 2130837504;
    public static final int ic_airplane = 2130837505;
    public static final int ic_app = 2130837506;
    public static final int ic_bar = 2130837507;
    public static final int ic_block_bar = 2130837508;
    public static final int ic_prf = 2130837509;
    public static final int ic_rec_bar = 2130837510;
    public static final int ic_rec_now = 2130837511;
    public static final int ic_silent = 2130837512;
    public static final int ic_timeout_bar = 2130837513;
    public static final int menu_about = 2130837514;
    public static final int menu_anonym = 2130837515;
    public static final int menu_answer = 2130837516;
    public static final int menu_block = 2130837517;
    public static final int menu_browse = 2130837518;
    public static final int menu_devices = 2130837519;
    public static final int menu_general = 2130837520;
    public static final int menu_notify = 2130837521;
    public static final int menu_profiles = 2130837522;
    public static final int menu_proximity = 2130837523;
    public static final int menu_rec = 2130837524;
    public static final int menu_speaker = 2130837525;
    public static final int menu_tts = 2130837526;
    public static final int menu_urgent = 2130837527;
    public static final int menu_vibra = 2130837528;
    public static final int menu_vol = 2130837529;

    public R$drawable()
    {
        return;
    }
}
package cri.sanity;
public final class R$id {
    public static final int activate = 2131361832;
    public static final int addnew = 2131361829;
    public static final int alert_pwd_ask = 2131361792;
    public static final int alert_pwd_check = 2131361795;
    public static final int alert_pwd_choose = 2131361796;
    public static final int alert_pwd_edit = 2131361794;
    public static final int alert_pwd_edit_new1 = 2131361800;
    public static final int alert_pwd_edit_new2 = 2131361802;
    public static final int alert_pwd_edit_old = 2131361798;
    public static final int alert_pwd_label = 2131361793;
    public static final int alert_pwd_label_new1 = 2131361799;
    public static final int alert_pwd_label_new2 = 2131361801;
    public static final int alert_pwd_label_old = 2131361797;
    public static final int alert_text = 2131361803;
    public static final int alert_text_edit = 2131361804;
    public static final int alert_time = 2131361805;
    public static final int alert_time_bar = 2131361808;
    public static final int alert_time_picker = 2131361807;
    public static final int alert_time_text = 2131361806;
    public static final int callog = 2131361830;
    public static final int canc = 2131361814;
    public static final int change = 2131361831;
    public static final int del = 2131361810;
    public static final int delete = 2131361835;
    public static final int help = 2131361837;
    public static final int menu_about = 2131361828;
    public static final int menu_anonym = 2131361821;
    public static final int menu_answer = 2131361820;
    public static final int menu_block = 2131361817;
    public static final int menu_devices = 2131361823;
    public static final int menu_general = 2131361815;
    public static final int menu_notify = 2131361826;
    public static final int menu_proximity = 2131361824;
    public static final int menu_rec = 2131361816;
    public static final int menu_speaker = 2131361822;
    public static final int menu_tts = 2131361818;
    public static final int menu_urgent = 2131361819;
    public static final int menu_vibra = 2131361827;
    public static final int menu_vol = 2131361825;
    public static final int open = 2131361809;
    public static final int rename = 2131361834;
    public static final int saveas = 2131361833;
    public static final int search = 2131361813;
    public static final int selall = 2131361811;
    public static final int selnone = 2131361812;
    public static final int show = 2131361836;

    public R$id()
    {
        return;
    }
}
package cri.sanity;
public final class R$layout {
    public static final int alert_pwd_ask = 2130903040;
    public static final int alert_pwd_choose = 2130903041;
    public static final int alert_text = 2130903042;
    public static final int alert_time = 2130903043;
    public static final int checkbox_radio = 2130903044;
    public static final int checkbox_star = 2130903045;
    public static final int img_about = 2130903046;
    public static final int img_anonym = 2130903047;
    public static final int img_answer = 2130903048;
    public static final int img_backup = 2130903049;
    public static final int img_block = 2130903050;
    public static final int img_browse = 2130903051;
    public static final int img_call = 2130903052;
    public static final int img_contacts = 2130903053;
    public static final int img_delete = 2130903054;
    public static final int img_devices = 2130903055;
    public static final int img_general = 2130903056;
    public static final int img_groups = 2130903057;
    public static final int img_help = 2130903058;
    public static final int img_history = 2130903059;
    public static final int img_list = 2130903060;
    public static final int img_notify = 2130903061;
    public static final int img_prefix = 2130903062;
    public static final int img_profiles = 2130903063;
    public static final int img_proximity = 2130903064;
    public static final int img_rec = 2130903065;
    public static final int img_secure = 2130903066;
    public static final int img_speaker = 2130903067;
    public static final int img_tts = 2130903068;
    public static final int img_urgent = 2130903069;
    public static final int img_vibra = 2130903070;
    public static final int img_vol = 2130903071;

    public R$layout()
    {
        return;
    }
}
package cri.sanity;
public final class R$menu {
    public static final int browse = 2131296256;
    public static final int contacts = 2131296257;
    public static final int main = 2131296258;
    public static final int nums = 2131296259;
    public static final int prefix = 2131296260;
    public static final int profile = 2131296261;

    public R$menu()
    {
        return;
    }
}
package cri.sanity;
public final class R$raw {
    public static final int admin_ask_disable = 2131034112;
    public static final int admin_ask_enable = 2131034113;
    public static final int admin_explanation = 2131034114;
    public static final int block_methods = 2131034115;
    public static final int changelog = 2131034116;
    public static final int delete_filters = 2131034117;
    public static final int force_bt = 2131034118;
    public static final int help_prf = 2131034119;
    public static final int license = 2131034120;
    public static final int license_deny = 2131034121;
    public static final int license_err = 2131034122;
    public static final int license_retry = 2131034123;
    public static final int license_upgrade = 2131034124;
    public static final int nag = 2131034125;
    public static final int proxim_none = 2131034126;
    public static final int reset = 2131034127;
    public static final int reverse_proximity = 2131034128;
    public static final int shortcut_free = 2131034129;
    public static final int tts_broken = 2131034130;
    public static final int tts_install = 2131034131;
    public static final int uninstall = 2131034132;

    public R$raw()
    {
        return;
    }
}
package cri.sanity;
public final class R$string {
    public static final int about_cat = 2131165539;
    public static final int about_sum = 2131165540;
    public static final int activate = 2131165198;
    public static final int active = 2131165218;
    public static final int active_prf = 2131165199;
    public static final int add_contact = 2131165231;
    public static final int addnew = 2131165200;
    public static final int admin_sum = 2131165601;
    public static final int admin_title = 2131165600;
    public static final int airplane_limit_sum = 2131165272;
    public static final int airplane_limit_title = 2131165271;
    public static final int airplane_shortcut = 2131165291;
    public static final int alldays = 2131165241;
    public static final int always = 2131165238;
    public static final int announce = 2131165224;
    public static final int anonym_cat = 2131165491;
    public static final int anonym_confirm_sum = 2131165496;
    public static final int anonym_confirm_title = 2131165495;
    public static final int anonym_country_sum = 2131165500;
    public static final int anonym_country_title = 2131165499;
    public static final int anonym_enable_sum = 2131165494;
    public static final int anonym_enable_title = 2131165493;
    public static final int anonym_notify_sum = 2131165498;
    public static final int anonym_notify_title = 2131165497;
    public static final int anonym_prefix_sum = 2131165502;
    public static final int anonym_prefix_title = 2131165501;
    public static final int anonym_sum = 2131165492;
    public static final int anonymous = 2131165212;
    public static final int answer_alt_sum = 2131165490;
    public static final int answer_alt_title = 2131165489;
    public static final int answer_cat = 2131165479;
    public static final int answer_delay_sum = 2131165488;
    public static final int answer_delay_title = 2131165487;
    public static final int answer_enable_sum = 2131165482;
    public static final int answer_enable_title = 2131165481;
    public static final int answer_headset_sum = 2131165484;
    public static final int answer_headset_title = 2131165483;
    public static final int answer_skip_sum = 2131165486;
    public static final int answer_skip_title = 2131165485;
    public static final int answer_sum = 2131165480;
    public static final int app = 2131165184;
    public static final int app_desc = 2131165185;
    public static final int app_shortcut = 2131165186;
    public static final int ask_airplane_limit = 2131165612;
    public static final int ask_anonym_msg = 2131165614;
    public static final int ask_anonym_title = 2131165613;
    public static final int ask_canc_all = 2131165609;
    public static final int ask_clear_history = 2131165610;
    public static final int ask_del_all = 2131165608;
    public static final int ask_del_one = 2131165607;
    public static final int ask_prf_activate = 2131165603;
    public static final int ask_prf_addnew = 2131165604;
    public static final int ask_prf_delete = 2131165606;
    public static final int ask_prf_saveas = 2131165605;
    public static final int ask_restore = 2131165602;
    public static final int ask_silent_limit = 2131165611;
    public static final int auto_speaker_sum = 2131165336;
    public static final int auto_speaker_title = 2131165335;
    public static final int backup = 2131165215;
    public static final int backup_prefs_sum = 2131165278;
    public static final int backup_prefs_title = 2131165277;
    public static final int block_cat = 2131165398;
    public static final int block_enable_sum = 2131165401;
    public static final int block_enable_title = 2131165400;
    public static final int block_help_sum = 2131165403;
    public static final int block_help_title = 2131165402;
    public static final int block_history_sum = 2131165414;
    public static final int block_mode_sum = 2131165405;
    public static final int block_mode_title = 2131165404;
    public static final int block_notify_sum = 2131165413;
    public static final int block_notify_title = 2131165412;
    public static final int block_pickup_sum = 2131165409;
    public static final int block_pickup_title = 2131165408;
    public static final int block_resume_sum = 2131165407;
    public static final int block_resume_title = 2131165406;
    public static final int block_skip_sum = 2131165411;
    public static final int block_skip_title = 2131165410;
    public static final int block_sum = 2131165399;
    public static final int blocksms_cat = 2131165415;
    public static final int blocksms_history_sum = 2131165424;
    public static final int blocksms_max_sum = 2131165423;
    public static final int blocksms_max_title = 2131165422;
    public static final int blocksms_notify_sum = 2131165421;
    public static final int blocksms_notify_title = 2131165420;
    public static final int blocksms_shared_sum = 2131165419;
    public static final int blocksms_shared_title = 2131165418;
    public static final int blocksms_sum = 2131165417;
    public static final int blocksms_title = 2131165416;
    public static final int browse_unknown_title = 2131165370;
    public static final int bt_off_sum = 2131165317;
    public static final int bt_off_title = 2131165316;
    public static final int bt_reverse_sum = 2131165313;
    public static final int bt_reverse_timeout_sum = 2131165315;
    public static final int bt_reverse_timeout_title = 2131165314;
    public static final int bt_reverse_title = 2131165312;
    public static final int bt_skip_sum = 2131165307;
    public static final int bt_skip_title = 2131165306;
    public static final int bt_sum = 2131165305;
    public static final int bt_title = 2131165304;
    public static final int call = 2131165227;
    public static final int call_in = 2131165209;
    public static final int call_out = 2131165210;
    public static final int callog = 2131165225;
    public static final int canc = 2131165188;
    public static final int change = 2131165204;
    public static final int changelog_sum = 2131165542;
    public static final int changelog_title = 2131165541;
    public static final int close = 2131165237;
    public static final int comment_sum = 2131165550;
    public static final int comment_title = 2131165549;
    public static final int contact = 2131165229;
    public static final int copy = 2131165232;
    public static final int date = 2131165240;
    public static final int del = 2131165205;
    public static final int delay_speaker_call_sum = 2131165344;
    public static final int delay_speaker_call_title = 2131165343;
    public static final int delay_speaker_sum = 2131165338;
    public static final int delay_speaker_title = 2131165337;
    public static final int delete_filters_sum = 2131165282;
    public static final int delete_filters_title = 2131165281;
    public static final int devices_cat = 2131165293;
    public static final int devices_rules_cat = 2131165295;
    public static final int devices_sum = 2131165294;
    public static final int disable_delay_sum = 2131165323;
    public static final int disable_delay_title = 2131165322;
    public static final int disable_proximity_sum = 2131165321;
    public static final int disable_proximity_title = 2131165320;
    public static final int donate_sum = 2131165595;
    public static final int donate_title = 2131165594;
    public static final int donated_sum = 2131165597;
    public static final int donated_title = 2131165596;
    public static final int empty = 2131165197;
    public static final int enable_delay_sum = 2131165327;
    public static final int enable_delay_title = 2131165326;
    public static final int enable_proximity_sum = 2131165325;
    public static final int enable_proximity_title = 2131165324;
    public static final int enabled_sum = 2131165264;
    public static final int enabled_title = 2131165263;
    public static final int err = 2131165196;
    public static final int err_answer = 2131165673;
    public static final int err_block = 2131165672;
    public static final int err_datetime_day = 2131165674;
    public static final int err_datetime_time = 2131165675;
    public static final int err_del = 2131165668;
    public static final int err_dir = 2131165663;
    public static final int err_exists = 2131165669;
    public static final int err_market = 2131165670;
    public static final int err_name = 2131165666;
    public static final int err_pwd_new = 2131165677;
    public static final int err_pwd_old = 2131165676;
    public static final int err_rec = 2131165664;
    public static final int err_rename = 2131165667;
    public static final int err_scan = 2131165665;
    public static final int err_tts_init = 2131165671;
    public static final int eula_sum = 2131165552;
    public static final int eula_title = 2131165551;
    public static final int filter_all_sum = 2131165563;
    public static final int filter_all_title = 2131165562;
    public static final int filter_allcontacts_sum = 2131165571;
    public static final int filter_allcontacts_title = 2131165570;
    public static final int filter_anonym_sum = 2131165565;
    public static final int filter_anonym_title = 2131165564;
    public static final int filter_cat = 2131165555;
    public static final int filter_contacts_sum = 2131165573;
    public static final int filter_contacts_title = 2131165572;
    public static final int filter_dt_add_start = 2131165586;
    public static final int filter_dt_add_stop = 2131165587;
    public static final int filter_dt_add_sum = 2131165585;
    public static final int filter_dt_add_title = 2131165584;
    public static final int filter_dt_enable_sum = 2131165583;
    public static final int filter_dt_enable_title = 2131165582;
    public static final int filter_dt_sum = 2131165581;
    public static final int filter_dt_title = 2131165580;
    public static final int filter_enable_sum = 2131165558;
    public static final int filter_enable_title = 2131165557;
    public static final int filter_groups_sum = 2131165577;
    public static final int filter_groups_title = 2131165576;
    public static final int filter_list_cat = 2131165561;
    public static final int filter_mode_sum = 2131165560;
    public static final int filter_mode_title = 2131165559;
    public static final int filter_nums_sum = 2131165569;
    public static final int filter_nums_title = 2131165568;
    public static final int filter_prefix_sum = 2131165579;
    public static final int filter_prefix_title = 2131165578;
    public static final int filter_search_sum = 2131165589;
    public static final int filter_search_title = 2131165588;
    public static final int filter_star_sum = 2131165575;
    public static final int filter_star_title = 2131165574;
    public static final int filter_sum = 2131165556;
    public static final int filter_unknown_sum = 2131165567;
    public static final int filter_unknown_title = 2131165566;
    public static final int force_bt_audio_sum = 2131165274;
    public static final int force_bt_audio_title = 2131165273;
    public static final int forum_sum = 2131165544;
    public static final int forum_title = 2131165543;
    public static final int friday = 2131165246;
    public static final int full = 2131165191;
    public static final int full_only = 2131165208;
    public static final int full_sum = 2131165599;
    public static final int full_title = 2131165598;
    public static final int geek_cat = 2131165256;
    public static final int general_cat = 2131165258;
    public static final int general_limit_cat = 2131165260;
    public static final int general_prefs_cat = 2131165262;
    public static final int general_prob_cat = 2131165261;
    public static final int general_sum = 2131165259;
    public static final int gps_sum = 2131165297;
    public static final int gps_title = 2131165296;
    public static final int groups_cat = 2131165254;
    public static final int help = 2131165214;
    public static final int history = 2131165226;
    public static final int history_call = 2131165592;
    public static final int history_clear_sum = 2131165591;
    public static final int history_clear_title = 2131165590;
    public static final int history_sms = 2131165593;
    public static final int hotspot_skip_sum = 2131165309;
    public static final int hotspot_skip_title = 2131165308;
    public static final int hours_mins = 2131165234;
    public static final int inactive = 2131165219;
    public static final int level = 2131165194;
    public static final int mail_sum = 2131165548;
    public static final int mail_title = 2131165547;
    public static final int max = 2131165193;
    public static final int min = 2131165192;
    public static final int misc_cat = 2131165255;
    public static final int mobdata_skip_sum = 2131165301;
    public static final int mobdata_skip_title = 2131165300;
    public static final int mobdata_sum = 2131165299;
    public static final int mobdata_title = 2131165298;
    public static final int monday = 2131165242;
    public static final int msg_anonym_dial = 2131165661;
    public static final int msg_backup_failed = 2131165633;
    public static final int msg_backup_no = 2131165631;
    public static final int msg_backup_prefs = 2131165630;
    public static final int msg_backup_success = 2131165632;
    public static final int msg_callog_empty = 2131165654;
    public static final int msg_callog_new = 2131165653;
    public static final int msg_clipboard_copied = 2131165658;
    public static final int msg_contact_err = 2131165650;
    public static final int msg_contact_sel = 2131165652;
    public static final int msg_contact_unsel = 2131165651;
    public static final int msg_devs_disabled = 2131165628;
    public static final int msg_devs_enabled = 2131165627;
    public static final int msg_email_body = 2131165647;
    public static final int msg_email_choose = 2131165646;
    public static final int msg_empty_list = 2131165644;
    public static final int msg_eula_title = 2131165648;
    public static final int msg_headset_off = 2131165656;
    public static final int msg_headset_on = 2131165655;
    public static final int msg_incompatible = 2131165657;
    public static final int msg_items = 2131165625;
    public static final int msg_last_modified = 2131165645;
    public static final int msg_mode_scheduled = 2131165659;
    public static final int msg_nums_edit = 2131165642;
    public static final int msg_option_full = 2131165649;
    public static final int msg_option_set = 2131165660;
    public static final int msg_prefix_edit = 2131165643;
    public static final int msg_prf_addnew = 2131165637;
    public static final int msg_prf_empty = 2131165636;
    public static final int msg_prf_nosel = 2131165639;
    public static final int msg_prf_rename = 2131165638;
    public static final int msg_prf_restore_err = 2131165641;
    public static final int msg_prf_restore_ok = 2131165640;
    public static final int msg_rec_empty = 2131165621;
    public static final int msg_rec_file = 2131165623;
    public static final int msg_rec_free_limit = 2131165620;
    public static final int msg_rec_go = 2131165618;
    public static final int msg_rec_limit = 2131165619;
    public static final int msg_rec_no = 2131165622;
    public static final int msg_rec_start = 2131165616;
    public static final int msg_rec_stop = 2131165617;
    public static final int msg_rec_title = 2131165615;
    public static final int msg_require_froyo = 2131165626;
    public static final int msg_restore_failed = 2131165635;
    public static final int msg_restore_success = 2131165634;
    public static final int msg_running = 2131165629;
    public static final int msg_selected_all = 2131165624;
    public static final int msg_sms_from = 2131165662;
    public static final int no = 2131165190;
    public static final int nochange = 2131165195;
    public static final int notify_activity_sum = 2131165532;
    public static final int notify_activity_title = 2131165531;
    public static final int notify_cat = 2131165523;
    public static final int notify_disable_sum = 2131165528;
    public static final int notify_disable_title = 2131165527;
    public static final int notify_enable_sum = 2131165530;
    public static final int notify_enable_title = 2131165529;
    public static final int notify_headset_sum = 2131165536;
    public static final int notify_headset_title = 2131165535;
    public static final int notify_rec_stop_sum = 2131165538;
    public static final int notify_rec_stop_title = 2131165537;
    public static final int notify_sum = 2131165524;
    public static final int notify_timeout_sum = 2131165526;
    public static final int notify_timeout_title = 2131165525;
    public static final int notify_volume_sum = 2131165534;
    public static final int notify_volume_title = 2131165533;
    public static final int ok = 2131165187;
    public static final int open = 2131165202;
    public static final int option_shortcut = 2131165292;
    public static final int paypal_sum = 2131165554;
    public static final int paypal_title = 2131165553;
    public static final int phone_number = 2131165235;
    public static final int prefix = 2131165220;
    public static final int profile_cat = 2131165287;
    public static final int profile_shortcut = 2131165289;
    public static final int profile_sum = 2131165288;
    public static final int proximity_cat = 2131165318;
    public static final int proximity_sum = 2131165319;
    public static final int pwd = 2131165249;
    public static final int pwd_clear_sum = 2131165286;
    public static final int pwd_clear_title = 2131165285;
    public static final int pwd_confirm = 2131165252;
    public static final int pwd_new = 2131165251;
    public static final int pwd_old = 2131165250;
    public static final int pwd_show = 2131165253;
    public static final int pwd_sum = 2131165284;
    public static final int pwd_title = 2131165283;
    public static final int quick_start_sum = 2131165266;
    public static final int quick_start_title = 2131165265;
    public static final int rec_autoremove_sum = 2131165396;
    public static final int rec_autoremove_title = 2131165395;
    public static final int rec_browse_sum = 2131165363;
    public static final int rec_browse_title = 2131165362;
    public static final int rec_camera_sum = 2131165367;
    public static final int rec_camera_title = 2131165366;
    public static final int rec_cat = 2131165351;
    public static final int rec_cat_sum = 2131165352;
    public static final int rec_cat_sum_free = 2131165353;
    public static final int rec_fmt_sum = 2131165361;
    public static final int rec_fmt_title = 2131165360;
    public static final int rec_info_sum = 2131165369;
    public static final int rec_info_title = 2131165368;
    public static final int rec_scan_sum = 2131165365;
    public static final int rec_scan_title = 2131165364;
    public static final int rec_shortcut = 2131165397;
    public static final int rec_src_sum = 2131165359;
    public static final int rec_src_title = 2131165358;
    public static final int rec_start_cat = 2131165371;
    public static final int rec_start_delay_sum = 2131165375;
    public static final int rec_start_delay_title = 2131165374;
    public static final int rec_start_dir_sum = 2131165381;
    public static final int rec_start_dir_title = 2131165380;
    public static final int rec_start_headset_sum = 2131165379;
    public static final int rec_start_headset_title = 2131165378;
    public static final int rec_start_speaker_sum = 2131165377;
    public static final int rec_start_speaker_title = 2131165376;
    public static final int rec_start_sum = 2131165373;
    public static final int rec_start_times_sum = 2131165383;
    public static final int rec_start_times_title = 2131165382;
    public static final int rec_start_title = 2131165372;
    public static final int rec_stop_cat = 2131165384;
    public static final int rec_stop_delay_sum = 2131165388;
    public static final int rec_stop_delay_title = 2131165387;
    public static final int rec_stop_headset_sum = 2131165392;
    public static final int rec_stop_headset_title = 2131165391;
    public static final int rec_stop_limit_sum = 2131165394;
    public static final int rec_stop_limit_title = 2131165393;
    public static final int rec_stop_speaker_sum = 2131165390;
    public static final int rec_stop_speaker_title = 2131165389;
    public static final int rec_stop_sum = 2131165386;
    public static final int rec_stop_title = 2131165385;
    public static final int rec_sum = 2131165357;
    public static final int rec_title = 2131165356;
    public static final int rec_warn_sum = 2131165355;
    public static final int rec_warn_title = 2131165354;
    public static final int rename = 2131165201;
    public static final int reply = 2131165236;
    public static final int reset_prefs_sum = 2131165280;
    public static final int reset_prefs_title = 2131165279;
    public static final int restore = 2131165216;
    public static final int reverse_proximity_sum = 2131165276;
    public static final int reverse_proximity_title = 2131165275;
    public static final int saturday = 2131165247;
    public static final int saveas = 2131165203;
    public static final int screen_cat = 2131165328;
    public static final int screen_off_sum = 2131165330;
    public static final int screen_off_title = 2131165329;
    public static final int screen_on_sum = 2131165332;
    public static final int screen_on_title = 2131165331;
    public static final int search = 2131165213;
    public static final int security_cat = 2131165257;
    public static final int selall = 2131165206;
    public static final int selnone = 2131165207;
    public static final int send_sms = 2131165228;
    public static final int share = 2131165233;
    public static final int show = 2131165217;
    public static final int silent_end_speaker_sum = 2131165346;
    public static final int silent_end_speaker_title = 2131165345;
    public static final int silent_limit_sum = 2131165270;
    public static final int silent_limit_title = 2131165269;
    public static final int silent_shortcut = 2131165290;
    public static final int sms_alert_sum = 2131165268;
    public static final int sms_alert_title = 2131165267;
    public static final int speaker_call_sum = 2131165342;
    public static final int speaker_call_title = 2131165341;
    public static final int speaker_cat = 2131165333;
    public static final int speaker_off_count_sum = 2131165350;
    public static final int speaker_off_count_title = 2131165349;
    public static final int speaker_on_count_sum = 2131165348;
    public static final int speaker_on_count_title = 2131165347;
    public static final int speaker_sum = 2131165334;
    public static final int starred = 2131165222;
    public static final int suffix = 2131165221;
    public static final int sunday = 2131165248;
    public static final int sysgroup = 2131165223;
    public static final int tether_skip_sum = 2131165311;
    public static final int tether_skip_title = 2131165310;
    public static final int thursday = 2131165245;
    public static final int time = 2131165239;
    public static final int tts_anonym_sum = 2131165453;
    public static final int tts_anonym_title = 2131165452;
    public static final int tts_audio_cat = 2131165431;
    public static final int tts_cat = 2131165425;
    public static final int tts_enable_sum = 2131165428;
    public static final int tts_enable_title = 2131165427;
    public static final int tts_global_sum = 2131165430;
    public static final int tts_global_title = 2131165429;
    public static final int tts_headset_sum = 2131165433;
    public static final int tts_headset_title = 2131165432;
    public static final int tts_how_cat = 2131165442;
    public static final int tts_pause_sum = 2131165446;
    public static final int tts_pause_title = 2131165445;
    public static final int tts_prefix_sum = 2131165449;
    public static final int tts_prefix_title = 2131165448;
    public static final int tts_repeat_sum = 2131165444;
    public static final int tts_repeat_title = 2131165443;
    public static final int tts_skip_sum = 2131165435;
    public static final int tts_skip_title = 2131165434;
    public static final int tts_solo_sum = 2131165437;
    public static final int tts_solo_title = 2131165436;
    public static final int tts_stream_sum = 2131165457;
    public static final int tts_stream_title = 2131165456;
    public static final int tts_suffix_sum = 2131165451;
    public static final int tts_suffix_title = 2131165450;
    public static final int tts_sum = 2131165426;
    public static final int tts_test_sum = 2131165459;
    public static final int tts_test_title = 2131165458;
    public static final int tts_tone_sum = 2131165441;
    public static final int tts_tone_title = 2131165440;
    public static final int tts_unknown_sum = 2131165455;
    public static final int tts_unknown_title = 2131165454;
    public static final int tts_vol_sum = 2131165439;
    public static final int tts_vol_title = 2131165438;
    public static final int tts_what_cat = 2131165447;
    public static final int ttsms_cat = 2131165460;
    public static final int ttsms_prefix_sum = 2131165466;
    public static final int ttsms_prefix_title = 2131165465;
    public static final int ttsms_shared_sum = 2131165470;
    public static final int ttsms_shared_title = 2131165469;
    public static final int ttsms_suffix_sum = 2131165468;
    public static final int ttsms_suffix_title = 2131165467;
    public static final int ttsms_sum = 2131165462;
    public static final int ttsms_title = 2131165461;
    public static final int ttsms_vol_sum = 2131165464;
    public static final int ttsms_vol_title = 2131165463;
    public static final int tuesday = 2131165243;
    public static final int uninstall_sum = 2131165546;
    public static final int uninstall_title = 2131165545;
    public static final int unknown = 2131165211;
    public static final int urgent_cat = 2131165471;
    public static final int urgent_enable_sum = 2131165474;
    public static final int urgent_enable_title = 2131165473;
    public static final int urgent_mode_sum = 2131165478;
    public static final int urgent_mode_title = 2131165477;
    public static final int urgent_skip_sum = 2131165476;
    public static final int urgent_skip_title = 2131165475;
    public static final int urgent_sum = 2131165472;
    public static final int vibrate_cat = 2131165513;
    public static final int vibrate_end_sum = 2131165518;
    public static final int vibrate_end_title = 2131165517;
    public static final int vibrate_mode_sum = 2131165520;
    public static final int vibrate_mode_title = 2131165519;
    public static final int vibrate_pickup_sum = 2131165516;
    public static final int vibrate_pickup_title = 2131165515;
    public static final int vibrate_sum = 2131165514;
    public static final int vibrate_test_sum = 2131165522;
    public static final int vibrate_test_title = 2131165521;
    public static final int view_contact = 2131165230;
    public static final int vol_bt_sum = 2131165510;
    public static final int vol_bt_title = 2131165509;
    public static final int vol_cat = 2131165503;
    public static final int vol_phone_sum = 2131165506;
    public static final int vol_phone_title = 2131165505;
    public static final int vol_solo_sum = 2131165512;
    public static final int vol_solo_title = 2131165511;
    public static final int vol_speaker_sum = 2131165340;
    public static final int vol_speaker_title = 2131165339;
    public static final int vol_sum = 2131165504;
    public static final int vol_wired_sum = 2131165508;
    public static final int vol_wired_title = 2131165507;
    public static final int wednesday = 2131165244;
    public static final int wifi_sum = 2131165303;
    public static final int wifi_title = 2131165302;
    public static final int yes = 2131165189;

    public R$string()
    {
        return;
    }
}
package cri.sanity;
public final class R$style {
    public static final int ExpandableListView = 2131230722;
    public static final int ListView = 2131230721;
    public static final int Theme = 2131230720;

    public R$style()
    {
        return;
    }
}
package cri.sanity;
public final class R$xml {
    public static final int admin = 2130968576;
    public static final int filter_contacts = 2130968577;
    public static final int filter_datetime = 2130968578;
    public static final int filter_groups = 2130968579;
    public static final int filter_nums = 2130968580;
    public static final int filter_prefix = 2130968581;
    public static final int prefs = 2130968582;
    public static final int prefs_about = 2130968583;
    public static final int prefs_anonym = 2130968584;
    public static final int prefs_answer = 2130968585;
    public static final int prefs_block = 2130968586;
    public static final int prefs_browse = 2130968587;
    public static final int prefs_devices = 2130968588;
    public static final int prefs_filter = 2130968589;
    public static final int prefs_general = 2130968590;
    public static final int prefs_history = 2130968591;
    public static final int prefs_notify = 2130968592;
    public static final int prefs_profile = 2130968593;
    public static final int prefs_proximity = 2130968594;
    public static final int prefs_record = 2130968595;
    public static final int prefs_speaker = 2130968596;
    public static final int prefs_tts = 2130968597;
    public static final int prefs_urgent = 2130968598;
    public static final int prefs_vibra = 2130968599;
    public static final int prefs_volume = 2130968600;

    public R$xml()
    {
        return;
    }
}
package cri.sanity;
public final class R {

    public R()
    {
        return;
    }
}
package cri.sanity;
public interface SpeakerListener {

    public abstract void onSpeakerChanged();
}
package cri.sanity;
final class RecService$1 implements cri.sanity.SpeakerListener {

    RecService$1()
    {
        return;
    }

    public void onSpeakerChanged(boolean p2)
    {
        if (!p2) {
            if (cri.sanity.RecService.access$200()) {
                cri.sanity.RecService.access$300();
            }
        } else {
            if (cri.sanity.RecService.access$000()) {
                cri.sanity.RecService.access$100();
            }
        }
        return;
    }
}
package cri.sanity;
final class RecService$2 extends cri.sanity.util.Task {

    RecService$2()
    {
        return;
    }

    public void run()
    {
        if ((cri.sanity.RecService.access$400() != null) && ((!cri.sanity.RecService.access$400().isStarted()) && (cri.sanity.util.Dev.isOffhook()))) {
            if (cri.sanity.A.empty(cri.sanity.RecService.access$400().suffix)) {
                if (cri.sanity.RecService.access$500() != null) {
                    String v1_9;
                    cri.sanity.util.Rec v2_0 = cri.sanity.RecService.access$400();
                    String v3_1 = new StringBuilder().append(95);
                    if (!cri.sanity.RecService.access$500().isOutgoing()) {
                        v1_9 = "in";
                    } else {
                        v1_9 = "out";
                    }
                    v2_0.suffix = v3_1.append(v1_9).toString();
                    String v0 = cri.sanity.RecService.access$500().phoneNumber();
                    if (!cri.sanity.A.empty(v0)) {
                        String v1_16 = new StringBuilder();
                        cri.sanity.util.Rec v2_1 = cri.sanity.RecService.access$400();
                        v2_1.suffix = v1_16.append(v2_1.suffix).append(95).append(cri.sanity.A.cleanFn(v0, 1)).toString();
                    }
                } else {
                    cri.sanity.RecService.access$600();
                    return;
                }
            }
            cri.sanity.RecService.access$400().start();
            cri.sanity.RecService.access$700();
            cri.sanity.RecService.access$800();
        }
        return;
    }
}
package cri.sanity;
final class RecService$3 extends cri.sanity.util.Task {

    RecService$3()
    {
        return;
    }

    public void run()
    {
        try {
            if ((cri.sanity.RecService.access$400() != null) && (cri.sanity.RecService.access$400().isStarted())) {
                cri.sanity.RecService.access$400().stop();
                cri.sanity.RecService.access$800();
            }
        } catch (cri.sanity.util.Rec v0) {
        }
        return;
    }
}
package cri.sanity;
final class RecService$4 extends cri.sanity.util.Task {

    RecService$4()
    {
        return;
    }

    public void run()
    {
        try {
            if ((cri.sanity.RecService.access$400() != null) && (cri.sanity.RecService.access$400().isStarted())) {
                cri.sanity.RecService.access$400().stop();
                if (cri.sanity.RecService.access$900() != null) {
                    cri.sanity.A.notify(cri.sanity.RecService.access$900());
                }
                cri.sanity.RecService.access$800();
            }
        } catch (String v0) {
        }
        return;
    }
}
package cri.sanity;
public class RecService extends android.app.Service {
    public static final int ACT_HEADSET_ON = 1;
    public static final int ACT_HEADSET_SKIP = 0;
    public static final int INCOMING = 1;
    public static final int NID = 2;
    public static final int OUTGOING = 2;
    private static final int TASK_EXEC;
    private static final int TASK_LIMIT;
    private static boolean autoStart;
    private static int autoStartDelay;
    private static boolean autoStartSpeaker;
    private static int autoStartTimes;
    private static boolean autoStop;
    private static int autoStopDelay;
    private static int autoStopLimit;
    private static boolean autoStopSpeaker;
    private static boolean headsetOnStart;
    private static boolean headsetOnStop;
    private static boolean headsetStart;
    private static boolean headsetStop;
    private static android.app.Notification notif;
    private static android.app.PendingIntent notifIntent;
    private static String notifLimit;
    private static String notifTitle;
    private static cri.sanity.PhoneListener pl;
    private static cri.sanity.util.Rec rec;
    private static boolean running;
    private static cri.sanity.util.Task taskRecLimit;
    private static cri.sanity.util.Task taskRecStart;
    private static cri.sanity.util.Task taskRecStop;
    private static long ts;

    static RecService()
    {
        cri.sanity.RecService.TASK_EXEC = cri.sanity.util.Task.idNew();
        cri.sanity.RecService.TASK_LIMIT = cri.sanity.util.Task.idNew();
        cri.sanity.RecService.ts = 0;
        cri.sanity.RecService.running = 0;
        cri.sanity.RecService.autoStart = 0;
        cri.sanity.RecService.autoStop = 0;
        cri.sanity.RecService.autoStartSpeaker = 0;
        cri.sanity.RecService.autoStopSpeaker = 0;
        cri.sanity.RecService.autoStartDelay = 0;
        cri.sanity.RecService.autoStopDelay = 0;
        cri.sanity.RecService.autoStopLimit = 0;
        cri.sanity.RecService.autoStartTimes = 0;
        cri.sanity.RecService.headsetStart = 0;
        cri.sanity.RecService.headsetStop = 0;
        cri.sanity.RecService.headsetOnStart = 0;
        cri.sanity.RecService.headsetOnStop = 0;
        return;
    }

    public RecService()
    {
        return;
    }

    static synthetic boolean access$000()
    {
        return cri.sanity.RecService.autoStartSpeaker;
    }

    static synthetic void access$100()
    {
        cri.sanity.RecService.recStartAuto();
        return;
    }

    static synthetic boolean access$200()
    {
        return cri.sanity.RecService.autoStopSpeaker;
    }

    static synthetic void access$300()
    {
        cri.sanity.RecService.recStopAuto();
        return;
    }

    static synthetic cri.sanity.util.Rec access$400()
    {
        return cri.sanity.RecService.rec;
    }

    static synthetic cri.sanity.PhoneListener access$500()
    {
        return cri.sanity.RecService.pl;
    }

    static synthetic void access$600()
    {
        cri.sanity.RecService.stopService();
        return;
    }

    static synthetic void access$700()
    {
        cri.sanity.RecService.applyLimit();
        return;
    }

    static synthetic void access$800()
    {
        cri.sanity.RecService.notifyStatus();
        return;
    }

    static synthetic String access$900()
    {
        return cri.sanity.RecService.notifLimit;
    }

    private static void applyLimit()
    {
        if (cri.sanity.RecService.taskRecLimit != null) {
            cri.sanity.RecService.taskRecLimit.exec(cri.sanity.RecService.TASK_LIMIT, cri.sanity.RecService.autoStopLimit);
        }
        return;
    }

    private static void autoInit()
    {
        int v1_1;
        int v3 = 1;
        cri.sanity.RecService.autoStart = cri.sanity.A.is("rec_start");
        cri.sanity.RecService.autoStop = cri.sanity.A.is("rec_stop");
        if (!cri.sanity.A.isFull()) {
            v1_1 = 120000;
        } else {
            if (!cri.sanity.RecService.autoStop) {
                v1_1 = 0;
            } else {
                v1_1 = (cri.sanity.A.geti("rec_stop_limit") * 60000);
            }
        }
        cri.sanity.RecService.autoStopLimit = v1_1;
        if (cri.sanity.RecService.autoStart) {
            int v1_16;
            cri.sanity.RecService.autoStartDelay = cri.sanity.A.geti("rec_start_delay");
            cri.sanity.RecService.autoStartTimes = cri.sanity.A.geti("rec_start_times");
            if ((!cri.sanity.RecService.pl.hasAutoSpeaker()) || (!cri.sanity.A.is("rec_start_speaker"))) {
                v1_16 = 0;
            } else {
                v1_16 = 1;
            }
            int v1_18;
            cri.sanity.RecService.autoStartSpeaker = v1_16;
            int v0_0 = cri.sanity.A.geti("rec_start_headset");
            if (v0_0 == 0) {
                v1_18 = 0;
            } else {
                v1_18 = 1;
            }
            int v1_19;
            cri.sanity.RecService.headsetStart = v1_18;
            if (v0_0 != 1) {
                v1_19 = 0;
            } else {
                v1_19 = 1;
            }
            cri.sanity.RecService.headsetOnStart = v1_19;
        } else {
            cri.sanity.RecService.noAutoStart();
        }
        if (!cri.sanity.RecService.autoStop) {
            cri.sanity.RecService.autoStopDelay = 0;
            cri.sanity.RecService.autoStopSpeaker = 0;
            cri.sanity.RecService.headsetStop = 0;
        } else {
            int v1_28;
            cri.sanity.RecService.autoStopDelay = cri.sanity.A.geti("rec_stop_delay");
            if ((!cri.sanity.RecService.pl.hasAutoSpeaker()) || (!cri.sanity.A.is("rec_stop_speaker"))) {
                v1_28 = 0;
            } else {
                v1_28 = 1;
            }
            int v1_31;
            cri.sanity.RecService.autoStopSpeaker = v1_28;
            int v0_1 = cri.sanity.A.geti("rec_stop_headset");
            if (v0_1 == 0) {
                v1_31 = 0;
            } else {
                v1_31 = 1;
            }
            cri.sanity.RecService.headsetStop = v1_31;
            if (v0_1 != 1) {
                v3 = 0;
            }
            cri.sanity.RecService.headsetOnStop = v3;
        }
        return;
    }

    private static void buildTasks()
    {
        cri.sanity.RecService$4 v0_2;
        cri.sanity.RecService.taskRecStart = new cri.sanity.RecService$2();
        cri.sanity.RecService.taskRecStop = new cri.sanity.RecService$3();
        if (cri.sanity.RecService.autoStopLimit > 0) {
            v0_2 = new cri.sanity.RecService$4();
        } else {
            v0_2 = 0;
        }
        cri.sanity.RecService.taskRecLimit = v0_2;
        return;
    }

    public static final void checkAutoRec()
    {
        if ((cri.sanity.RecService.rec != null) && (!cri.sanity.RecService.rec.isStarted())) {
            int v0 = cri.sanity.A.geti("rec_start_dir");
            if (v0 != 1) {
                if ((v0 == 2) && (!cri.sanity.RecService.pl.isOutgoing())) {
                    cri.sanity.RecService.noAutoStart();
                }
            } else {
                if (cri.sanity.RecService.pl.isOutgoing()) {
                    cri.sanity.RecService.noAutoStart();
                }
            }
            if ((cri.sanity.RecService.autoStart) && (!cri.sanity.util.CallFilter.instance().includes(cri.sanity.RecService.pl.phoneNumber(), "rec", 1))) {
                cri.sanity.RecService.noAutoStart();
            }
            cri.sanity.RecService.setSpeakerListener();
            if (cri.sanity.RecService.autoStart) {
                if (!cri.sanity.RecService.headsetStart) {
                    if ((!cri.sanity.RecService.autoStartSpeaker) || (cri.sanity.A.audioMan().isSpeakerphoneOn())) {
                        cri.sanity.RecService.recStartOffhook();
                    }
                } else {
                    if (cri.sanity.RecService.headsetOnStart == cri.sanity.RecService.pl.isHeadsetOn()) {
                        cri.sanity.RecService.recStartOffhook();
                    }
                }
            }
        }
        return;
    }

    public static final void cron()
    {
        int v1 = cri.sanity.A.geti("rec_autoremove");
        if (v1 > 0) {
            long v11;
            long v8 = cri.sanity.A.time();
            if (v1 <= 3) {
                v11 = 43200000;
            } else {
                if (v1 <= 7) {
                    v11 = 86400000;
                } else {
                    v11 = 259200000;
                }
            }
            try {
                if ((v8 - cri.sanity.A.getl("cron")) < v11) {
                    return;
                }
            } catch (long v15) {
            }
            String v2 = cri.sanity.A.sdcardDir();
            if (v2 != null) {
                String v3 = ".prf";
                long v13 = (v8 - (((long) v1) * 86400000));
                java.io.File[] v0 = new java.io.File(v2).listFiles();
                int v6 = v0.length;
                int v5 = 0;
                while (v5 < v6) {
                    java.io.File v4 = v0[v5];
                    String v7 = v4.getName();
                    if ((v7.startsWith("rec_")) && ((!v7.endsWith(".prf")) && ((!v7.endsWith(".txt")) && ((v4.isFile()) && (v4.lastModified() < v13))))) {
                        v4.delete();
                    }
                    v5++;
                }
                cri.sanity.A.putc("cron", v8);
            }
        }
        return;
    }

    public static final boolean isRecord()
    {
        if ((cri.sanity.RecService.rec == null) || (!cri.sanity.RecService.rec.isStarted())) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        return v0_3;
    }

    public static final boolean isRunning()
    {
        return cri.sanity.RecService.running;
    }

    private static void noAutoStart()
    {
        cri.sanity.RecService.autoStart = 0;
        cri.sanity.RecService.autoStartDelay = 0;
        cri.sanity.RecService.autoStartTimes = 0;
        cri.sanity.RecService.autoStartSpeaker = 0;
        cri.sanity.RecService.headsetStart = 0;
        return;
    }

    private static void notifyStatus()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        if (cri.sanity.RecService.notif == null) {
            cri.sanity.RecService.notifIntent = android.app.PendingIntent.getService(v0, 0, new android.content.Intent(v0, cri.sanity.RecService), 0);
            cri.sanity.RecService.notif = new android.app.Notification();
            cri.sanity.RecService.notif.flags = 34;
            cri.sanity.RecService.notifTitle = cri.sanity.A.s(2131165615);
        }
        if (cri.sanity.RecService.rec != null) {
            if (!cri.sanity.RecService.rec.isStarted()) {
                cri.sanity.RecService.notif.icon = 2130837507;
                cri.sanity.RecService.notif.setLatestEventInfo(v0, cri.sanity.RecService.notifTitle, cri.sanity.A.s(2131165616), cri.sanity.RecService.notifIntent);
            } else {
                cri.sanity.RecService.notif.icon = 2130837510;
                cri.sanity.RecService.notif.setLatestEventInfo(v0, cri.sanity.RecService.notifTitle, cri.sanity.A.s(2131165617), cri.sanity.RecService.notifIntent);
            }
            cri.sanity.RecService.notif.when = cri.sanity.A.time();
            cri.sanity.A.notifyCanc();
            cri.sanity.A.notifMan().notify(2, cri.sanity.RecService.notif);
        } else {
            cri.sanity.A.notifyCanc(2);
        }
        return;
    }

    private int quit()
    {
        cri.sanity.A.notifyCanc(2);
        this.stopSelf();
        return 1;
    }

    public static final void recStart(int p2)
    {
        if (cri.sanity.RecService.taskRecStart != null) {
            cri.sanity.RecService.taskRecStart.exec(cri.sanity.RecService.TASK_EXEC, p2);
        }
        return;
    }

    private static void recStartAuto()
    {
        if (cri.sanity.RecService.autoStart) {
            int v0_4;
            cri.sanity.RecService.recStart(cri.sanity.RecService.autoStartDelay);
            int v0_3 = (cri.sanity.RecService.autoStartTimes - 1);
            cri.sanity.RecService.autoStartTimes = v0_3;
            if (v0_3 == 0) {
                v0_4 = 0;
            } else {
                v0_4 = 1;
            }
            cri.sanity.RecService.autoStart = v0_4;
        }
        return;
    }

    private static void recStartOffhook()
    {
        int v1_2;
        if (!cri.sanity.RecService.pl.isOutgoing()) {
            v1_2 = 0;
        } else {
            v1_2 = 3000;
        }
        cri.sanity.RecService.recStart(Math.max(cri.sanity.RecService.autoStartDelay, (v1_2 + 3000)));
        return;
    }

    public static final void recStop(int p2)
    {
        if (cri.sanity.RecService.taskRecStop != null) {
            cri.sanity.RecService.taskRecStop.exec(cri.sanity.RecService.TASK_EXEC, p2);
        }
        return;
    }

    private static void recStopAuto()
    {
        if (cri.sanity.RecService.autoStop) {
            cri.sanity.RecService.recStop(cri.sanity.RecService.autoStopDelay);
        }
        return;
    }

    private static void setSpeakerListener()
    {
        if ((cri.sanity.RecService.autoStartSpeaker) || (cri.sanity.RecService.autoStopSpeaker)) {
            cri.sanity.RecService.pl.speakerListener = new cri.sanity.RecService$1();
        } else {
            cri.sanity.RecService.pl.speakerListener = 0;
        }
        return;
    }

    public static final void start(cri.sanity.PhoneListener p3)
    {
        if (!cri.sanity.RecService.running) {
            String v0_4;
            cri.sanity.RecService.ts = 0;
            cri.sanity.RecService.pl = p3;
            cri.sanity.RecService.rec = new cri.sanity.util.Rec(cri.sanity.A.geti("rec_src"), cri.sanity.A.geti("rec_fmt"));
            if (!cri.sanity.A.is("notify_rec_stop")) {
                v0_4 = 0;
            } else {
                String v0_7;
                if (!cri.sanity.A.isFull()) {
                    v0_7 = 2131165620;
                } else {
                    v0_7 = 2131165619;
                }
                v0_4 = cri.sanity.A.s(v0_7);
            }
            cri.sanity.RecService.notifLimit = v0_4;
            cri.sanity.RecService.autoInit();
            cri.sanity.RecService.buildTasks();
            cri.sanity.RecService.startService();
            cri.sanity.RecService.notifyStatus();
        }
        return;
    }

    private static void startService()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        v0.startService(new android.content.Intent(v0, cri.sanity.RecService));
        return;
    }

    public static final void stop()
    {
        if (cri.sanity.RecService.running) {
            cri.sanity.RecService.stopService();
            cri.sanity.PhoneListener v0_5 = new int[2];
            v0_5[0] = cri.sanity.RecService.TASK_LIMIT;
            v0_5[1] = cri.sanity.RecService.TASK_EXEC;
            cri.sanity.util.Task.stop(v0_5);
            if (cri.sanity.RecService.rec != null) {
                cri.sanity.RecService.rec.release();
                cri.sanity.RecService.rec = 0;
            }
            if (cri.sanity.RecService.pl != null) {
                cri.sanity.RecService.pl.speakerListener = 0;
                cri.sanity.RecService.pl = 0;
            }
            cri.sanity.RecService.notif = 0;
            cri.sanity.RecService.notifIntent = 0;
            cri.sanity.RecService.notifLimit = 0;
            cri.sanity.RecService.taskRecStart = 0;
            cri.sanity.RecService.taskRecStop = 0;
            cri.sanity.RecService.taskRecLimit = 0;
            cri.sanity.A.notifyCanc(2);
        }
        return;
    }

    private static void stopService()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        v0.stopService(new android.content.Intent(v0, cri.sanity.RecService));
        return;
    }

    public static final void updateHeadset(boolean p1)
    {
        if (cri.sanity.RecService.rec != null) {
            if (!cri.sanity.RecService.rec.isStarted()) {
                if ((cri.sanity.RecService.headsetStart) && (p1 == cri.sanity.RecService.headsetOnStart)) {
                    cri.sanity.RecService.recStartAuto();
                }
            } else {
                if ((cri.sanity.RecService.headsetStop) && (p1 == cri.sanity.RecService.headsetOnStop)) {
                    cri.sanity.RecService.recStopAuto();
                }
            }
        }
        return;
    }

    public android.os.IBinder onBind(android.content.Intent p2)
    {
        return 0;
    }

    public void onDestroy()
    {
        cri.sanity.A.notifyCanc(2);
        cri.sanity.RecService.running = 0;
        super.onDestroy();
        return;
    }

    public int onStartCommand(android.content.Intent p9, int p10, int p11)
    {
        int v2 = 1;
        if (cri.sanity.MainService.isRunning()) {
            if (p9 != null) {
                long v0 = android.os.SystemClock.elapsedRealtime();
                if ((v0 - cri.sanity.RecService.ts) >= 2000) {
                    cri.sanity.RecService.ts = v0;
                    if (cri.sanity.RecService.running) {
                        if (cri.sanity.RecService.rec != null) {
                            if (!cri.sanity.RecService.rec.isStarted()) {
                                cri.sanity.RecService.recStart(0);
                            } else {
                                cri.sanity.RecService.recStop(0);
                            }
                            try {
                                cri.sanity.util.Dev.iTel().showCallScreen();
                            } catch (Exception v3) {
                            }
                        } else {
                            v2 = this.quit();
                        }
                    } else {
                        cri.sanity.RecService.running = 1;
                    }
                }
            }
        } else {
            v2 = this.quit();
        }
        return v2;
    }
}
package cri.sanity;
 class ScreenActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.ScreenActivity this$0;

    ScreenActivity$1(cri.sanity.ScreenActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.marketSearchPub("Cristiano Tagliamonte");
    }
}
package cri.sanity;
 class ScreenActivity$2 implements android.view.MenuItem$OnMenuItemClickListener {
    final synthetic cri.sanity.ScreenActivity this$0;

    ScreenActivity$2(cri.sanity.ScreenActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    private String getGroupText(android.preference.PreferenceGroup p9, boolean p10)
    {
        String v1_0 = "";
        int v2 = p9.getPreferenceCount();
        int v0 = 0;
        while (v0 < v2) {
            android.preference.PreferenceGroup v3_0 = p9.getPreference(v0);
            if (!(v3_0 instanceof android.preference.PreferenceGroup)) {
                if ((p10) || (!v3_0.getKey().equals("logo"))) {
                    try {
                        String v1_2 = new StringBuilder().append(new StringBuilder().append(v1_0).append("- ").append(v3_0.getTitle()).append(".\n").append(v3_0.getSummary()).append(10).toString()).append(cri.sanity.A.s(cri.sanity.A.rstring(new StringBuilder().append("help_").append(v3_0.getKey()).toString()))).append(10).toString();
                    } catch (StringBuilder v4) {
                    }
                    v1_0 = new StringBuilder().append(v1_2).append(10).toString();
                }
            } else {
                v1_0 = new StringBuilder().append(v1_0).append("\n** ").append(v3_0.getTitle().toString().toUpperCase()).append("\n\n").append(this.getGroupText(((android.preference.PreferenceGroup) v3_0), 1)).toString();
            }
            v0++;
        }
        return v1_0;
    }

    public boolean onMenuItemClick(android.view.MenuItem p4)
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165214), this.getGroupText(this.this$0.getPreferenceScreen(), 0));
        return 1;
    }
}
package cri.sanity;
 class ScreenActivity$3 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.ScreenActivity this$0;
    final synthetic Class val$cls;

    ScreenActivity$3(cri.sanity.ScreenActivity p1, Class p2)
    {
        this.this$0 = p1;
        this.val$cls = p2;
        return;
    }

    public boolean on()
    {
        this.this$0.startActivity(new android.content.Intent(cri.sanity.A.app(), this.val$cls));
        return 1;
    }
}
package cri.sanity;
 class ScreenActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ScreenActivity this$0;

    ScreenActivity$4(cri.sanity.ScreenActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.this$0.nag = 1;
        cri.sanity.util.Goto.marketDetails("cri.sanitydonate");
        return;
    }
}
package cri.sanity;
 class ScreenActivity$5 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ScreenActivity this$0;

    ScreenActivity$5(cri.sanity.ScreenActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.this$0.nag = 1;
        return;
    }
}
package cri.sanity.util;
public abstract class Alert$Edited {
    protected android.content.DialogInterface dlg;

    public Alert$Edited()
    {
        return;
    }

    static synthetic void access$000(cri.sanity.util.Alert$Edited p0, String p1, android.content.DialogInterface p2)
    {
        p0.on(p1, p2);
        return;
    }

    private void on(String p1, android.content.DialogInterface p2)
    {
        this.dlg = p2;
        this.on(p1);
        return;
    }

    protected final void dismiss()
    {
        this.dlg.dismiss();
        return;
    }

    public abstract void on();
}
package cri.sanity;
 class ScreenActivity$6 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.ScreenActivity this$0;
    final synthetic String val$pwd;

    ScreenActivity$6(cri.sanity.ScreenActivity p1, String p2)
    {
        this.this$0 = p1;
        this.val$pwd = p2;
        return;
    }

    public void on(String p2)
    {
        if (!p2.equals(this.val$pwd)) {
            cri.sanity.ScreenActivity.access$100(this.this$0);
        } else {
            cri.sanity.ScreenActivity.access$002(1);
        }
        return;
    }
}
package cri.sanity;
 class ScreenActivity$7 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ScreenActivity this$0;

    ScreenActivity$7(cri.sanity.ScreenActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$10 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;

    ShortcutActivity$10(cri.sanity.ShortcutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.ShortcutActivity.access$402(this.this$0, 0);
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic int[] val$items;
    final synthetic Object[] val$shortcuts;

    ShortcutActivity$1(cri.sanity.ShortcutActivity p1, int[] p2, Object[] p3)
    {
        this.this$0 = p1;
        this.val$items = p2;
        this.val$shortcuts = p3;
        return;
    }

    public void on()
    {
        if (cri.sanity.A.isFull()) {
            int v6 = (this.which * 4);
            cri.sanity.ShortcutActivity.access$100(this.this$0, cri.sanity.A.s(this.val$items[this.which]), ((Integer) this.val$shortcuts[(v6 + 1)]).intValue(), ((String) this.val$shortcuts[(v6 + 2)]), ((String) this.val$shortcuts[(v6 + 3)]), 0);
        } else {
            cri.sanity.ShortcutActivity.access$000(this.this$0);
        }
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$2 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic String val$cat;
    final synthetic Object[] val$filters;

    ShortcutActivity$2(cri.sanity.ShortcutActivity p1, String p2, Object[] p3)
    {
        this.this$0 = p1;
        this.val$cat = p2;
        this.val$filters = p3;
        return;
    }

    public void on()
    {
        int v6 = (this.which * 3);
        cri.sanity.ShortcutActivity.access$100(this.this$0, this.val$cat, ((Integer) this.val$filters[(v6 + 1)]).intValue(), "filter", ((String) this.val$filters[(v6 + 2)]), 0);
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$3 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic java.util.Vector val$icons;
    final synthetic java.util.Vector val$items;
    final synthetic java.util.Vector val$keys;

    ShortcutActivity$3(cri.sanity.ShortcutActivity p1, java.util.Vector p2, java.util.Vector p3, java.util.Vector p4)
    {
        this.this$0 = p1;
        this.val$items = p2;
        this.val$icons = p3;
        this.val$keys = p4;
        return;
    }

    public void on()
    {
        String v1_0 = ((String) this.val$items.get(this.which));
        int v6 = v1_0.indexOf(10);
        if (v6 > 0) {
            v1_0 = v1_0.substring((v6 + 1)).trim();
        }
        cri.sanity.ShortcutActivity.access$100(this.this$0, v1_0, ((Integer) this.val$icons.get(this.which)).intValue(), "option", ((String) this.val$keys.get(this.which)), v1_0);
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic String[] val$items2;
    final synthetic String val$key;
    final synthetic String val$name;
    final synthetic Object[] val$vals2;

    ShortcutActivity$4(cri.sanity.ShortcutActivity p1, Object[] p2, String p3, String p4, String[] p5)
    {
        this.this$0 = p1;
        this.val$vals2 = p2;
        this.val$key = p3;
        this.val$name = p4;
        this.val$items2 = p5;
        return;
    }

    public void on()
    {
        Object v0 = this.val$vals2[this.which];
        if (cri.sanity.A.has("prf_name")) {
            cri.sanity.A.del("prf_name");
        }
        cri.sanity.A.putc(this.val$key, v0);
        cri.sanity.ShortcutActivity.access$200(this.this$0, this.val$name, this.val$items2[this.which]);
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$5 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic String val$key;
    final synthetic String val$name;

    ShortcutActivity$5(cri.sanity.ShortcutActivity p1, String p2, String p3)
    {
        this.this$0 = p1;
        this.val$key = p2;
        this.val$name = p3;
        return;
    }

    public void on(String p3)
    {
        if (cri.sanity.A.has("prf_name")) {
            cri.sanity.A.del("prf_name");
        }
        cri.sanity.A.putc(this.val$key, p3);
        cri.sanity.ShortcutActivity.access$200(this.this$0, this.val$name, p3);
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$6 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.ShortcutActivity this$0;

    ShortcutActivity$6(cri.sanity.ShortcutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p2)
    {
        this.this$0.finish();
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$7 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.ShortcutActivity this$0;

    ShortcutActivity$7(cri.sanity.ShortcutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p2)
    {
        cri.sanity.A.putc("pwd", p2);
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$8 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;
    final synthetic String[] val$profiles;

    ShortcutActivity$8(cri.sanity.ShortcutActivity p1, String[] p2)
    {
        this.this$0 = p1;
        this.val$profiles = p2;
        return;
    }

    public void on()
    {
        cri.sanity.ShortcutActivity.access$300(this.this$0, this.val$profiles[this.which]);
        return;
    }
}
package cri.sanity;
 class ShortcutActivity$9 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.ShortcutActivity this$0;

    ShortcutActivity$9(cri.sanity.ShortcutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.util.Goto.marketDetails("cri.sanitydonate");
        return;
    }
}
package cri.sanity;
public final class ShortcutActivity extends android.app.Activity implements android.content.DialogInterface$OnDismissListener, java.io.FilenameFilter {
    private static final String EXTRA_ALARMER = "alarmer";
    private static final String EXTRA_FILTER = "filter";
    public static final String EXTRA_KEY = "cri.sanity.shortcut";
    private static final String EXTRA_KEY2 = "cri.sanity.shortcut2";
    private static final String EXTRA_KEY3 = "cri.sanity.shortcut3";
    private static final String EXTRA_OPTION = "option";
    private static final String EXTRA_PRF = "profile";
    private static final String EXTRA_REC = "rec_srv";
    private static final String EXTRA_SCREEN = "screen";
    private static final int SHORTCUT_FILTER_ROW = 3;
    private static final String SHORTCUT_PREFIX = "[S] ";
    private static final int SHORTCUT_ROW = 4;
    private boolean skipQuit;

    public ShortcutActivity()
    {
        this.skipQuit = 0;
        return;
    }

    static synthetic void access$000(cri.sanity.ShortcutActivity p0)
    {
        p0.askDonate();
        return;
    }

    static synthetic void access$100(cri.sanity.ShortcutActivity p0, String p1, int p2, String p3, String p4, String p5)
    {
        p0.createShortcut(p1, p2, p3, p4, p5);
        return;
    }

    static synthetic void access$200(cri.sanity.ShortcutActivity p0, String p1, String p2)
    {
        p0.optionSet(p1, p2);
        return;
    }

    static synthetic boolean access$300(cri.sanity.ShortcutActivity p1, String p2)
    {
        return p1.restoreProfile(p2);
    }

    static synthetic boolean access$402(cri.sanity.ShortcutActivity p0, boolean p1)
    {
        p0.skipQuit = p1;
        return p1;
    }

    private void askDonate()
    {
        this.skipQuit = 1;
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034129), new cri.sanity.ShortcutActivity$9(this), new cri.sanity.ShortcutActivity$10(this)).setOnDismissListener(this);
        return;
    }

    private void chooseShortcut()
    {
        Object[] v4 = cri.sanity.ShortcutActivity.getShortcuts();
        int v2 = (v4.length / 4);
        int[] v1 = new int[v2];
        int v0 = 0;
        while (v0 < v2) {
            v1[v0] = ((Integer) v4[(v0 * 4)]).intValue();
            v0++;
        }
        cri.sanity.util.Alert.choose(cri.sanity.A.s(2131165186), v1, new cri.sanity.ShortcutActivity$1(this, v1, v4)).setOnDismissListener(this);
        return;
    }

    private void createFilterShortcut()
    {
        Object[] v1 = cri.sanity.ShortcutActivity.getFilterShortcuts();
        int v4 = (v1.length / 3);
        int[] v3 = new int[v4];
        int v2 = 0;
        while (v2 < v4) {
            v3[v2] = ((Integer) v1[(v2 * 3)]).intValue();
            v2++;
        }
        String v0 = cri.sanity.A.s(2131165555);
        cri.sanity.util.Alert.choose(v0, v3, new cri.sanity.ShortcutActivity$2(this, v0, v1)).setOnDismissListener(this);
        return;
    }

    private void createOptionShortcut()
    {
        String[][] v19 = cri.sanity.PrefGroups.sections();
        Object[] v20 = cri.sanity.ShortcutActivity.getShortcuts();
        int v15 = v20.length;
        int v14 = 0;
        String[][] v3_1 = v19;
        int v7_1 = 0;
        while (v7_1 < v3_1.length) {
            v14 += (v3_1[v7_1].length - 1);
            v7_1++;
        }
        java.util.Vector v10_1 = new java.util.Vector(v14);
        java.util.Vector v12_1 = new java.util.Vector(v14);
        java.util.Vector v9_1 = new java.util.Vector(v14);
        String[][] v3_0 = v19;
        int v13_0 = v3_0.length;
        int v7_0 = 0;
        while (v7_0 < v13_0) {
            String[] v18_1 = v3_0[v7_0];
            int v8 = 0;
            try {
                int v5 = cri.sanity.A.rstring(v18_1[0]);
                int v6_1 = 0;
            } catch (String v22) {
                if (v8 != 0) {
                    String v17 = new StringBuilder().append("[ ").append(cri.sanity.A.s(v5)).append(" ]\n").toString();
                    int v16 = v18_1.length;
                    int v6_0 = 1;
                    while (v6_0 < v16) {
                        String v11 = v18_1[v6_0];
                        try {
                            int v21 = cri.sanity.A.rstring(new StringBuilder().append(v11).append("_title").toString());
                        } catch (Exception v4) {
                            try {
                                if (!v11.startsWith("filter_enable_")) {
                                    if (v21 != 0) {
                                        v12_1.add(v11);
                                        v10_1.add(new StringBuilder().append(v17).append(cri.sanity.A.s(v21)).toString());
                                        v9_1.add(Integer.valueOf(v8));
                                        if (v17.length() > 0) {
                                            v17 = "";
                                        }
                                    }
                                    v6_0++;
                                } else {
                                    v21 = cri.sanity.A.rstring(new StringBuilder().append(v11.substring((v11.lastIndexOf(95) + 1))).append("_enable_title").toString());
                                }
                            } catch (String v22) {
                            }
                        }
                    }
                }
                v7_0++;
            }
            while (v6_1 < v15) {
                if (v5 != ((Integer) v20[v6_1]).intValue()) {
                    v6_1 += 4;
                } else {
                    v8 = ((Integer) v20[(v6_1 + 1)]).intValue();
                    break;
                }
            }
        }
        String v23_6 = cri.sanity.A.s(2131165186);
        int v0_9 = new String[v10_1.size()];
        String v22_22 = ((String[]) ((String[]) v10_1.toArray(v0_9)));
        cri.sanity.ShortcutActivity$3 v24 = new cri.sanity.ShortcutActivity$3;
        v24(this, v10_1, v9_1, v12_1);
        cri.sanity.util.Alert.choose(v23_6, v22_22, v24).setOnDismissListener(this);
        return;
    }

    private void createShortcut(String p6, int p7, String p8, String p9, String p10)
    {
        if (p7 != 0) {
            android.content.Intent v1_1 = new android.content.Intent("android.intent.action.MAIN");
            v1_1.setClassName(this, this.getClass().getName());
            if (p8 != null) {
                v1_1.putExtra("cri.sanity.shortcut", p8);
            }
            if (p9 != null) {
                v1_1.putExtra("cri.sanity.shortcut2", p9);
            }
            if (p10 != null) {
                v1_1.putExtra("cri.sanity.shortcut3", p10);
            }
            android.content.Intent v0_1 = new android.content.Intent();
            v0_1.putExtra("android.intent.extra.shortcut.INTENT", v1_1);
            v0_1.putExtra("android.intent.extra.shortcut.NAME", new StringBuilder().append("[S] ").append(p6).toString());
            v0_1.putExtra("android.intent.extra.shortcut.ICON_RESOURCE", android.content.Intent$ShortcutIconResource.fromContext(this, p7));
            this.setResult(-1, v0_1);
            this.finish();
        } else {
            this.skipQuit = 1;
            if (!"option".equals(p8)) {
                if (!"filter".equals(p8)) {
                    this.skipQuit = 0;
                } else {
                    this.createFilterShortcut();
                }
            } else {
                this.createOptionShortcut();
            }
        }
        return;
    }

    private boolean execAlarmer(String p2)
    {
        cri.sanity.ModeActivity.start(p2, 1);
        return 0;
    }

    private boolean execChangeEdit(String p8, String p9)
    {
        String[] v0 = cri.sanity.PrefGroups.edits();
        int v2 = 0;
        while (v2 < v0.length) {
            if (v0[v2].equals(p8)) {
                cri.sanity.util.Alert.edit(p9, cri.sanity.A.gets(p8), new cri.sanity.ShortcutActivity$5(this, p8, p9), new cri.sanity.ShortcutActivity$6(this));
                int v4_1 = 1;
            } else {
                v2++;
            }
            return v4_1;
        }
        v4_1 = 0;
        return v4_1;
    }

    private boolean execChoosePwd()
    {
        cri.sanity.util.Alert.pwdChoose(cri.sanity.A.gets("pwd"), new cri.sanity.ShortcutActivity$7(this)).setOnDismissListener(this);
        return 1;
    }

    private boolean execFilter(String p6)
    {
        try {
            if ((!"blocksms".equals(p6)) || (cri.sanity.A.is("filter_enable_blocksms"))) {
                try {
                    String v2 = cri.sanity.A.s(cri.sanity.A.rstring(new StringBuilder().append(p6).append("_cat").toString()));
                } catch (int v3) {
                }
                android.content.Intent v1_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.FilterActivity);
                v1_1.putExtra("cri.sanity.shortcut", 1);
                v1_1.putExtra("cri.sanity.Filter.id", p6);
                v1_1.putExtra("cri.sanity.Filter.title", v2);
                cri.sanity.screen.FilterActivity.pref = 0;
                this.startActivity(v1_1);
            } else {
                p6 = "block";
            }
        } catch (Exception v0) {
            cri.sanity.A.toast(2131165196);
        }
        return 0;
    }

    private boolean execOption(String p24, String p25)
    {
        Integer v2_18;
        this.skipQuit = 0;
        if (!"pwd".equals(p24)) {
            if (!this.execChangeEdit(p24, p25)) {
                String[] v13;
                Integer[] v19;
                int v17 = -1;
                android.util.Pair v16_1 = ((android.util.Pair) cri.sanity.PrefGroups.intLabVals().get(p24));
                if (v16_1 == null) {
                    Integer v18_3 = cri.sanity.P.getDefaults().get(p24);
                    if (!(v18_3 instanceof Boolean)) {
                        if ((!(v18_3 instanceof Integer)) || (p24.indexOf("vol") < 0)) {
                            cri.sanity.A.toast(2131165196);
                            v2_18 = 0;
                            return v2_18;
                        } else {
                            int v20 = cri.sanity.A.geti(p24);
                            CharSequence[][] v10_1 = cri.sanity.screen.VolumeActivity.getVolumeLevels(0);
                            CharSequence[] v8 = v10_1[0];
                            int v15_1 = v8.length;
                            v13 = new String[v15_1];
                            int v0_13 = new Integer[v15_1];
                            v19 = v0_13;
                            int v12_1 = 0;
                            while (v12_1 < v15_1) {
                                int v21 = Integer.parseInt(v10_1[1][v12_1].toString());
                                v13[v12_1] = v8[v12_1].toString();
                                v19[v12_1] = Integer.valueOf(v21);
                                if (v20 == v21) {
                                    v17 = v12_1;
                                }
                                v12_1++;
                            }
                        }
                    } else {
                        v13 = new String[2];
                        v13[0] = cri.sanity.A.s(2131165219);
                        v13[1] = cri.sanity.A.s(2131165218);
                        int v0_15 = new Boolean[2];
                        v19 = v0_15;
                        v19[0] = Boolean.valueOf(0);
                        v19[1] = Boolean.valueOf(1);
                        if (!cri.sanity.A.is(p24)) {
                            v17 = 0;
                        } else {
                            v17 = 1;
                        }
                    }
                } else {
                    v13 = cri.sanity.A.resources().getStringArray(((Integer) v16_1.first).intValue());
                    CharSequence[][] v10_0 = cri.sanity.A.resources().getStringArray(((Integer) v16_1.second).intValue());
                    int v0_3 = new Integer[v10_0.length];
                    v19 = v0_3;
                    try {
                        String v22 = Integer.valueOf(cri.sanity.A.geti(p24));
                    } catch (Exception v11) {
                        v22 = cri.sanity.A.gets(p24);
                    }
                    int v15_0 = v10_0.length;
                    int v12_0 = 0;
                    while (v12_0 < v15_0) {
                        Integer v18_2 = Integer.valueOf(Integer.parseInt(((String) v10_0[v12_0])));
                        v19[v12_0] = v18_2;
                        if (v22.equals(v18_2)) {
                            v17 = v12_0;
                        }
                        v12_0++;
                    }
                }
                if (v17 >= 0) {
                    v13[v17] = new StringBuilder().append(">> ").append(v13[v17]).append(" <<").toString();
                }
                cri.sanity.util.Alert.choose(p25, v13, new cri.sanity.ShortcutActivity$4(this, v19, p24, p25, v13)).setOnDismissListener(this);
                v2_18 = 1;
            } else {
                v2_18 = 1;
            }
        } else {
            v2_18 = this.execChoosePwd();
        }
        return v2_18;
    }

    private boolean execProfiles(String p3)
    {
        int v0_4;
        if (p3 == null) {
            if (!this.profileChooser()) {
                cri.sanity.A.toast(new StringBuilder().append(cri.sanity.A.name()).append(": ").append(cri.sanity.A.s(2131165636)).toString());
                v0_4 = 0;
            } else {
                v0_4 = 1;
            }
        } else {
            v0_4 = this.restoreProfile(p3);
        }
        return v0_4;
    }

    private boolean execRecSrv()
    {
        if (cri.sanity.RecService.isRunning()) {
            if (!cri.sanity.RecService.isRecord()) {
                cri.sanity.RecService.recStart(0);
                cri.sanity.A.toast(2131165618);
            } else {
                cri.sanity.RecService.recStop(0);
                cri.sanity.A.toast(2131165619);
            }
            try {
                cri.sanity.util.Dev.iTel().showCallScreen();
            } catch (Exception v0) {
            }
        } else {
            cri.sanity.A.toast(2131165622);
        }
        return 0;
    }

    private boolean execScreen(String p5)
    {
        try {
            android.content.Intent v1_1 = new android.content.Intent(cri.sanity.A.app(), Class.forName(p5));
            v1_1.putExtra("cri.sanity.shortcut", 1);
            this.startActivity(v1_1);
        } catch (Exception v0) {
            cri.sanity.A.toast(2131165196);
        }
        return 0;
    }

    private boolean execShortcut(android.content.Intent p4)
    {
        int v2_13;
        String v0 = p4.getStringExtra("cri.sanity.shortcut");
        String v1 = p4.getStringExtra("cri.sanity.shortcut2");
        if (!"rec_srv".equals(v0)) {
            if (!"profile".equals(v0)) {
                if (!"alarmer".equals(v0)) {
                    if (!"screen".equals(v0)) {
                        if (!"filter".equals(v0)) {
                            if (!"option".equals(v0)) {
                                cri.sanity.A.toast(2131165196);
                                v2_13 = 0;
                            } else {
                                v2_13 = this.execOption(v1, p4.getStringExtra("cri.sanity.shortcut3"));
                            }
                        } else {
                            v2_13 = this.execFilter(v1);
                        }
                    } else {
                        v2_13 = this.execScreen(v1);
                    }
                } else {
                    v2_13 = this.execAlarmer(v1);
                }
            } else {
                v2_13 = this.execProfiles(v1);
            }
        } else {
            v2_13 = this.execRecSrv();
        }
        return v2_13;
    }

    private static Object[] getFilterShortcuts()
    {
        return cri.sanity.PrefGroups.filterShortcuts();
    }

    private static Object[] getShortcuts()
    {
        Object[] v0_1 = new Object[96];
        v0_1[0] = Integer.valueOf(2131165292);
        v0_1[1] = Integer.valueOf(0);
        v0_1[2] = "option";
        v0_1[3] = 0;
        v0_1[4] = Integer.valueOf(2131165555);
        v0_1[5] = Integer.valueOf(0);
        v0_1[6] = "filter";
        v0_1[7] = 0;
        v0_1[8] = Integer.valueOf(2131165290);
        v0_1[9] = Integer.valueOf(2130837512);
        v0_1[10] = "alarmer";
        v0_1[11] = "actSilentLimit";
        v0_1[12] = Integer.valueOf(2131165291);
        v0_1[13] = Integer.valueOf(2130837505);
        v0_1[14] = "alarmer";
        v0_1[15] = "actFlightOff";
        v0_1[16] = Integer.valueOf(2131165289);
        v0_1[17] = Integer.valueOf(2130837509);
        v0_1[18] = "profile";
        v0_1[19] = 0;
        v0_1[20] = Integer.valueOf(2131165287);
        v0_1[21] = Integer.valueOf(2130837522);
        v0_1[22] = "screen";
        v0_1[23] = cri.sanity.screen.ProfileActivity.getName();
        v0_1[24] = Integer.valueOf(2131165258);
        v0_1[25] = Integer.valueOf(2130837520);
        v0_1[26] = "screen";
        v0_1[27] = cri.sanity.screen.GeneralActivity.getName();
        v0_1[28] = Integer.valueOf(2131165293);
        v0_1[29] = Integer.valueOf(2130837519);
        v0_1[30] = "screen";
        v0_1[31] = cri.sanity.screen.DevicesActivity.getName();
        v0_1[32] = Integer.valueOf(2131165318);
        v0_1[33] = Integer.valueOf(2130837523);
        v0_1[34] = "screen";
        v0_1[35] = cri.sanity.screen.ProximityActivity.getName();
        v0_1[36] = Integer.valueOf(2131165333);
        v0_1[37] = Integer.valueOf(2130837525);
        v0_1[38] = "screen";
        v0_1[39] = cri.sanity.screen.SpeakerActivity.getName();
        v0_1[40] = Integer.valueOf(2131165503);
        v0_1[41] = Integer.valueOf(2130837529);
        v0_1[42] = "screen";
        v0_1[43] = cri.sanity.screen.VolumeActivity.getName();
        v0_1[44] = Integer.valueOf(2131165523);
        v0_1[45] = Integer.valueOf(2130837521);
        v0_1[46] = "screen";
        v0_1[47] = cri.sanity.screen.NotifyActivity.getName();
        v0_1[48] = Integer.valueOf(2131165513);
        v0_1[49] = Integer.valueOf(2130837528);
        v0_1[50] = "screen";
        v0_1[51] = cri.sanity.screen.VibraActivity.getName();
        v0_1[52] = Integer.valueOf(2131165398);
        v0_1[53] = Integer.valueOf(2130837517);
        v0_1[54] = "screen";
        v0_1[55] = cri.sanity.screen.BlockerActivity.getName();
        v0_1[56] = Integer.valueOf(2131165425);
        v0_1[57] = Integer.valueOf(2130837526);
        v0_1[58] = "screen";
        v0_1[59] = cri.sanity.screen.TtsActivity.getName();
        v0_1[60] = Integer.valueOf(2131165471);
        v0_1[61] = Integer.valueOf(2130837527);
        v0_1[62] = "screen";
        v0_1[63] = cri.sanity.screen.UrgentActivity.getName();
        v0_1[64] = Integer.valueOf(2131165479);
        v0_1[65] = Integer.valueOf(2130837516);
        v0_1[66] = "screen";
        v0_1[67] = cri.sanity.screen.AnswerActivity.getName();
        v0_1[68] = Integer.valueOf(2131165491);
        v0_1[69] = Integer.valueOf(2130837515);
        v0_1[70] = "screen";
        v0_1[71] = cri.sanity.screen.AnonymActivity.getName();
        v0_1[72] = Integer.valueOf(2131165351);
        v0_1[73] = Integer.valueOf(2130837524);
        v0_1[74] = "screen";
        v0_1[75] = cri.sanity.screen.RecordActivity.getName();
        v0_1[76] = Integer.valueOf(2131165397);
        v0_1[77] = Integer.valueOf(2130837511);
        v0_1[78] = "rec_srv";
        v0_1[79] = 0;
        v0_1[80] = Integer.valueOf(2131165362);
        v0_1[81] = Integer.valueOf(2130837518);
        v0_1[82] = "screen";
        v0_1[83] = cri.sanity.screen.BrowseActivity.getName();
        v0_1[84] = Integer.valueOf(2131165592);
        v0_1[85] = Integer.valueOf(2130837517);
        v0_1[86] = "screen";
        v0_1[87] = cri.sanity.screen.CallHistoryActivity.getName();
        v0_1[88] = Integer.valueOf(2131165593);
        v0_1[89] = Integer.valueOf(2130837517);
        v0_1[90] = "screen";
        v0_1[91] = cri.sanity.screen.SmsHistoryActivity.getName();
        v0_1[92] = Integer.valueOf(2131165539);
        v0_1[93] = Integer.valueOf(2130837514);
        v0_1[94] = "screen";
        v0_1[95] = cri.sanity.screen.AboutActivity.getName();
        return v0_1;
    }

    private void optionSet(String p4, String p5)
    {
        String v0_2 = cri.sanity.A.s(2131165660);
        Object[] v1_1 = new Object[2];
        v1_1[0] = p4;
        v1_1[1] = p5;
        cri.sanity.A.toast(String.format(v0_2, v1_1));
        return;
    }

    private boolean profileChooser()
    {
        int v1_0;
        String[] v0 = this.profiles();
        if (v0 != null) {
            cri.sanity.util.Alert.choose(cri.sanity.A.s(2131165289), v0, new cri.sanity.ShortcutActivity$8(this, v0)).setOnDismissListener(this);
            v1_0 = 1;
        } else {
            v1_0 = 0;
        }
        return v1_0;
    }

    private String[] profiles()
    {
        String[] v5 = 0;
        String v0 = cri.sanity.A.sdcardDir();
        if (v0 != null) {
            String[] v1 = new java.io.File(v0).list(this);
            int v4 = v1.length;
            if (v4 > 0) {
                int v3 = ".prf".length();
                v5 = new String[v4];
                int v2 = 0;
                while (v2 < v4) {
                    v5[v2] = v1[v2].substring(0, (v1[v2].length() - v3));
                    v2++;
                }
                java.util.Arrays.sort(v5, 0, v5.length);
            }
        }
        return v5;
    }

    private boolean restoreProfile(String p5)
    {
        String v1_5;
        if (!cri.sanity.P.restore(new StringBuilder().append(cri.sanity.A.sdcardDir()).append(47).append(p5).append(".prf").toString())) {
            v1_5 = 2131165641;
        } else {
            v1_5 = 2131165640;
        }
        String v1_6 = cri.sanity.A.s(v1_5);
        Object[] v2_2 = new Object[1];
        v2_2[0] = p5;
        cri.sanity.A.toast(String.format(v1_6, v2_2));
        return 0;
    }

    public boolean accept(java.io.File p2, String p3)
    {
        return p3.endsWith(".prf");
    }

    public void onCreate(android.os.Bundle p4)
    {
        cri.sanity.util.Alert.activity = this;
        super.onCreate(p4);
        android.content.Intent v0 = this.getIntent();
        if (!"android.intent.action.CREATE_SHORTCUT".equals(v0.getAction())) {
            if (cri.sanity.A.isFull()) {
                if (!this.execShortcut(v0)) {
                    this.finish();
                }
            } else {
                this.askDonate();
            }
        } else {
            this.chooseShortcut();
        }
        return;
    }

    public void onDismiss(android.content.DialogInterface p2)
    {
        if (!this.skipQuit) {
            this.finish();
        } else {
            this.skipQuit = 0;
        }
        return;
    }

    public void onPause()
    {
        super.onPause();
        this.finish();
        return;
    }

    public void onResume()
    {
        cri.sanity.util.Alert.activity = this;
        super.onResume();
        return;
    }
}
package cri.sanity;
 class SmsReceiver$1$1 implements android.content.DialogInterface$OnDismissListener {
    final synthetic cri.sanity.SmsReceiver$1 this$0;

    SmsReceiver$1$1(cri.sanity.SmsReceiver$1 p1)
    {
        this.this$0 = p1;
        return;
    }

    public void onDismiss(android.content.DialogInterface p2)
    {
        cri.sanity.BlankActivity.getInstance().postFinish();
        cri.sanity.util.Alert.activity = 0;
        return;
    }
}
package cri.sanity;
 class SmsReceiver$1$2 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.SmsReceiver$1 this$0;

    SmsReceiver$1$2(cri.sanity.SmsReceiver$1 p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        android.content.Intent v0_1 = new android.content.Intent("android.intent.action.SENDTO", android.net.Uri.parse(new StringBuilder().append("smsto:").append(this.this$0.val$from).toString()));
        v0_1.setFlags(268435456);
        cri.sanity.A.app().startActivity(v0_1);
        return;
    }
}
package cri.sanity;
final class SmsReceiver$1 implements java.lang.Runnable {
    final synthetic String val$body;
    final synthetic String val$from;
    final synthetic String val$name;

    SmsReceiver$1(String p1, String p2, String p3)
    {
        this.val$name = p1;
        this.val$from = p2;
        this.val$body = p3;
        return;
    }

    public void run()
    {
        android.app.AlertDialog v0_2;
        cri.sanity.util.Alert.activity = cri.sanity.BlankActivity.getInstance();
        cri.sanity.SmsReceiver$1$1 v1_3 = cri.sanity.A.s(2131165662);
        cri.sanity.SmsReceiver$1$2 v2_2 = new Object[1];
        if (!cri.sanity.A.empty(this.val$name)) {
            v0_2 = this.val$name;
        } else {
            v0_2 = this.val$from;
        }
        v2_2[0] = v0_2;
        cri.sanity.util.Alert.msg(String.format(v1_3, v2_2), this.val$body, new cri.sanity.SmsReceiver$1$2(this), 0, 7).setOnDismissListener(new cri.sanity.SmsReceiver$1$1(this));
        return;
    }
}
package cri.sanity;
public class SmsReceiver extends android.content.BroadcastReceiver {
    private static final char SEP = 167;
    private static final String SEP_S = "\xa7";
    private static final String UNSEP = "{[(S)]}";
    private static final String UNSLASH = "{[(\\)]}";
    private static String anonym;
    private static cri.sanity.util.CallFilter cf;
    private static String unknown;
    private String idTTS;
    private java.io.FileWriter logFile;

    public SmsReceiver()
    {
        return;
    }

    private Object[] block(Object[] p22, android.os.Bundle p23, String p24)
    {
        if (cri.sanity.SmsReceiver.cf == null) {
            cri.sanity.SmsReceiver.cf = new cri.sanity.util.CallFilter();
        }
        java.util.HashMap v12_1;
        int v17 = cri.sanity.A.geti("blocksms_max");
        int v19 = p22.length;
        if (p24 != null) {
            v12_1 = new java.util.HashMap(v19);
        } else {
            v12_1 = 0;
        }
        String v20;
        if (!cri.sanity.A.is("filter_enable_blocksms")) {
            v20 = "block";
        } else {
            v20 = "blocksms";
        }
        int v16;
        if (v17 == 0) {
            v16 = 0;
        } else {
            v16 = 1;
        }
        boolean[] v9 = new boolean[v19];
        int v8 = 0;
        int v13_0 = 0;
        while (v13_0 < v19) {
            try {
                android.telephony.SmsMessage v18 = android.telephony.SmsMessage.createFromPdu(((byte[]) ((byte[]) p22[v13_0])));
                String v3 = v18.getDisplayOriginatingAddress();
            } catch (Exception v10) {
                v9[v13_0] = 0;
                if (v12_1 == null) {
                    v13_0++;
                } else {
                    cri.sanity.SmsReceiver.filterTTS(cri.sanity.SmsReceiver.cf, p24, v3, v12_1);
                }
            }
            if (cri.sanity.SmsReceiver.cf.includes(v3, v20, 0)) {
                if (v16 != 0) {
                    this.log(v3, cri.sanity.SmsReceiver.cf.searchName(v3), v18.getMessageBody(), v18.getTimestampMillis());
                }
                v9[v13_0] = 1;
                v8++;
            } else {
                throw new Exception();
            }
        }
        if ((v12_1 != null) && (!v12_1.isEmpty())) {
            this.idTTS = android.text.TextUtils.join(", ", v12_1.keySet());
        }
        if (v8 > 0) {
            if (v16 != 0) {
                this = this.logClose();
                if (v17 > 0) {
                    cri.sanity.SmsReceiver.logTrunc(v17, (cri.sanity.A.geti("sms_count") + v8));
                }
            }
            if (cri.sanity.A.is("blocksms_notify")) {
                cri.sanity.util.Blocker.notification(1);
            }
            if (v8 != v19) {
                Object[] v11 = new Object[(v19 - v8)];
                int v13_1 = 0;
                int v15 = 0;
                while (v13_1 < v19) {
                    int v14_1;
                    if (v9[v13_1]) {
                        v14_1 = v15;
                    } else {
                        v14_1 = (v15 + 1);
                        v11[v15] = p22[v13_1];
                    }
                    v13_1++;
                    v15 = v14_1;
                }
                p23.putSerializable("pdus", v11);
                this.setResultExtras(p23);
                p22 = v11;
            } else {
                this.abortBroadcast();
                p22 = 0;
            }
        }
        return p22;
    }

    public static final cri.sanity.util.CallFilter callFilter()
    {
        cri.sanity.util.CallFilter v0_1;
        if (cri.sanity.SmsReceiver.cf != null) {
            v0_1 = cri.sanity.SmsReceiver.cf;
        } else {
            v0_1 = new cri.sanity.util.CallFilter();
        }
        return v0_1;
    }

    private static void filterTTS(cri.sanity.util.CallFilter p3, String p4, String p5, java.util.Map p6)
    {
        if (p3.includes(p5, p4, 1)) {
            if (!cri.sanity.A.empty(p5)) {
                if (cri.sanity.SmsReceiver.isTelNum(p5)) {
                    String v0 = p3.searchName(p5);
                    if (cri.sanity.A.empty(v0)) {
                        if (cri.sanity.SmsReceiver.unknown == null) {
                            cri.sanity.SmsReceiver.unknown = cri.sanity.A.gets("tts_unknown");
                        }
                        if (cri.sanity.SmsReceiver.unknown.length() > 0) {
                            p6.put(cri.sanity.SmsReceiver.unknown, Integer.valueOf(1));
                        }
                    } else {
                        p6.put(v0, Integer.valueOf(1));
                    }
                } else {
                    p6.put(p5, Integer.valueOf(1));
                }
            } else {
                if (cri.sanity.SmsReceiver.anonym == null) {
                    cri.sanity.SmsReceiver.anonym = cri.sanity.A.gets("tts_anonym");
                }
                if (cri.sanity.SmsReceiver.anonym.length() > 0) {
                    p6.put(cri.sanity.SmsReceiver.anonym, Integer.valueOf(1));
                }
            }
        }
        return;
    }

    private void filterTTS(Object[] p7)
    {
        if (cri.sanity.SmsReceiver.cf == null) {
            cri.sanity.SmsReceiver.cf = new cri.sanity.util.CallFilter();
        }
        int v1 = p7.length;
        java.util.HashMap v2_1 = new java.util.HashMap(v1);
        String v3 = cri.sanity.SmsReceiver.getSectTTS(1);
        int v0 = 0;
        while (v0 < v1) {
            try {
                cri.sanity.SmsReceiver.filterTTS(cri.sanity.SmsReceiver.cf, v3, android.telephony.SmsMessage.createFromPdu(((byte[]) ((byte[]) p7[v0]))).getDisplayOriginatingAddress(), v2_1);
            } catch (String v4) {
            }
            v0++;
        }
        String v4_5;
        cri.sanity.SmsReceiver.cf.close();
        if (!v2_1.isEmpty()) {
            v4_5 = android.text.TextUtils.join(", ", v2_1.keySet());
        } else {
            v4_5 = 0;
        }
        this.idTTS = v4_5;
        return;
    }

    private static String getSectTTS(boolean p1)
    {
        String v0_0;
        if (!p1) {
            v0_0 = 0;
        } else {
            if (!cri.sanity.A.is("filter_enable_ttsms")) {
                v0_0 = "tts";
            } else {
                v0_0 = "ttsms";
            }
        }
        return v0_0;
    }

    private static boolean isTelNum(String p5)
    {
        char[] v0 = p5.toCharArray();
        int v2 = 0;
        while (v2 < v0.length) {
            char v1 = v0[v2];
            if ((v1 == 43) || ((v1 == 45) || ((v1 >= 48) || (v1 <= 57)))) {
                v2++;
            } else {
                int v4_2 = 0;
            }
            return v4_2;
        }
        v4_2 = 1;
        return v4_2;
    }

    private void log(String p5, String p6, String p7, long p8)
    {
        if (this.logFile == null) {
            this.logFile = new java.io.FileWriter(cri.sanity.SmsReceiver.smsFn(), 1);
        }
        if (p5 == null) {
            p5 = "";
        }
        if (p6 == null) {
            p6 = "";
        }
        this.logFile.append(new StringBuilder().append(cri.sanity.A.date(p8)).append(167).append(p6).append(167).append(p5).append(167).append(p7.replace("\r", "").replace("\\", "{[(\\)]}").replace("\n", "\\n").replace("\u00a7", "{[(S)]}")).append(10).toString());
        return;
    }

    private void logClose()
    {
        if (this.logFile != null) {
            try {
                this.logFile.flush();
                this.logFile.close();
            } catch (int v0) {
            }
            this.logFile = 0;
        }
        return;
    }

    private static void logTrunc(int p14, int p15)
    {
        if (p15 >= ((p14 / 2) + p14)) {
            int v0 = 0;
            java.io.BufferedReader v7 = 0;
            java.io.FileWriter v4 = 0;
            try {
                String v3 = cri.sanity.SmsReceiver.smsFn();
                String v10 = new StringBuilder().append(v3).append(".tmp").toString();
                try {
                    java.io.BufferedReader v8_1 = new java.io.BufferedReader(new java.io.FileReader(v3), 8192);
                    int v9 = (p15 - p14);
                } catch (Exception v11) {
                    try {
                        v7.close();
                        try {
                            v4.flush();
                            v4.close();
                        } catch (Exception v11) {
                        }
                        if (v0 != 0) {
                            try {
                                java.io.File v2_1 = new java.io.File(v3);
                            } catch (Exception v1) {
                                if (!"SmsReceiver".equals(v1.getMessage())) {
                                    p15 = 0;
                                }
                                cri.sanity.A.putc("sms_count", p15);
                                try {
                                    new java.io.File(v10).delete();
                                } catch (Exception v11) {
                                }
                            }
                            if (!v2_1.delete()) {
                                throw new Exception("SmsReceiver");
                            } else {
                                new java.io.File(v10).renameTo(v2_1);
                            }
                        } else {
                            cri.sanity.A.putc("sms_count", p15);
                            try {
                                new java.io.File(v10).delete();
                            } catch (Exception v11) {
                            }
                        }
                    } catch (Exception v11) {
                    }
                }
                while(true) {
                    v9--;
                    if (v9 < 0) {
                        break;
                    }
                    v8_1.readLine();
                }
                java.io.FileWriter v5_1 = new java.io.FileWriter(v10, 0);
                int v6 = 0;
                while (v6 < p14) {
                    try {
                        v5_1.append(new StringBuilder().append(v8_1.readLine()).append(10).toString());
                        v6++;
                    } catch (Exception v11) {
                        v4 = v5_1;
                        v7 = v8_1;
                    }
                }
                cri.sanity.A.putc("sms_count", p14);
                v0 = 1;
                v4 = v5_1;
                v7 = v8_1;
            } catch (Exception v1) {
            }
        } else {
            cri.sanity.A.putc("sms_count", p15);
        }
        return;
    }

    private static void smsAlert(android.telephony.SmsMessage p6)
    {
        String v1 = p6.getDisplayOriginatingAddress();
        String v3 = new cri.sanity.util.CallFilter().searchName(v1);
        String v0 = p6.getMessageBody();
        cri.sanity.BlankActivity.force = 1;
        cri.sanity.BlankActivity.postSingleton(new cri.sanity.SmsReceiver$1(v3, v1, v0));
        android.content.Intent v2_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.BlankActivity);
        v2_1.setFlags(268435456);
        cri.sanity.A.app().startActivity(v2_1);
        return;
    }

    private static String smsFn()
    {
        return new StringBuilder().append(cri.sanity.A.sdcardDir()).append(47).append("sms_history.txt").toString();
    }

    public void onReceive(android.content.Context p10, android.content.Intent p11)
    {
        if ((p11 != null) && (cri.sanity.A.isEnabled())) {
            android.os.Bundle v1 = p11.getExtras();
            if (v1 != null) {
                Object[] v2_1 = ((Object[]) ((Object[]) v1.get("pdus")));
                if ((v2_1 != null) && (v2_1.length > 0)) {
                    int v3;
                    android.media.AudioManager v0 = cri.sanity.A.audioMan();
                    if (((!cri.sanity.A.is("ttsms")) || ((cri.sanity.MainService.isRunning()) || ((cri.sanity.A.is("tts_skip")) && (v0.getRingerMode() != 2)))) || ((cri.sanity.A.is("tts_headset")) && ((!v0.isWiredHeadsetOn()) && ((!v0.isBluetoothA2dpOn()) && (!v0.isBluetoothScoOn()))))) {
                        v3 = 0;
                    } else {
                        v3 = 1;
                    }
                    this.idTTS = 0;
                    if ((!cri.sanity.A.is("blocksms")) || (!cri.sanity.A.is("filter_enable_block"))) {
                        if (v3 != 0) {
                            this.filterTTS(v2_1);
                        }
                    } else {
                        v2_1 = this.block(v2_1, v1, cri.sanity.SmsReceiver.getSectTTS(v3));
                        if (cri.sanity.SmsReceiver.cf != null) {
                            cri.sanity.SmsReceiver.cf.close();
                        }
                        if (v2_1 == null) {
                            return;
                        }
                    }
                    if ((v2_1 != null) && ((v2_1.length > 0) && (cri.sanity.A.is("sms_alert")))) {
                        cri.sanity.SmsReceiver.smsAlert(android.telephony.SmsMessage.createFromPdu(((byte[]) ((byte[]) v2_1[0]))));
                    }
                    if (!cri.sanity.A.empty(this.idTTS)) {
                        new cri.sanity.TTS(new String(this.idTTS), 0, 0, 1);
                    }
                }
            }
        }
        return;
    }
}
package cri.sanity;
 class TTS$1 extends cri.sanity.util.Task {
    final synthetic cri.sanity.TTS this$0;

    TTS$1(cri.sanity.TTS p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        android.media.AudioManager v0 = cri.sanity.A.audioMan();
        this.this$0.solo = 0;
        v0.setStreamMute(2, 0);
        return;
    }
}
package cri.sanity;
public class TTS implements android.speech.tts.TextToSpeech$OnInitListener, android.speech.tts.TextToSpeech$OnUtteranceCompletedListener {
    public static final int STREAM1_INT = 5;
    private static final String STREAM1_STR = "5";
    public static final int STREAM2_INT = 4;
    private static final String STREAM2_STR = "4";
    public static final int STREAM3_INT = 1;
    private static final String STREAM3_STR = "1";
    protected boolean filter;
    protected boolean force;
    protected String id;
    protected java.util.HashMap pars;
    protected int pause;
    protected int repeat;
    protected boolean sms;
    protected boolean solo;
    protected int stream;
    protected android.speech.tts.TextToSpeech tts;
    protected int vol;

    public TTS(String p3, boolean p4, boolean p5, boolean p6)
    {
        android.speech.tts.TextToSpeech v0_0 = 0;
        this.vol = -1;
        this.repeat = 0;
        this.solo = 0;
        this.force = 0;
        this.id = p3;
        this.filter = p4;
        if (!p5) {
            v0_0 = 1;
        }
        this.force = v0_0;
        this.sms = p6;
        this.tts = new android.speech.tts.TextToSpeech(cri.sanity.A.app(), this);
        return;
    }

    private void off()
    {
        if (this.sms) {
            this.shutdown();
        }
        return;
    }

    protected void onError()
    {
        cri.sanity.A.notify(cri.sanity.A.s(2131165671));
        return;
    }

    public void onInit(int p13)
    {
        if (p13 == 0) {
            if (this.filter) {
                cri.sanity.util.CallFilter v1 = cri.sanity.util.CallFilter.instance();
                if (!v1.includes(this.id, "tts", 1)) {
                    return;
                } else {
                    if (!cri.sanity.A.empty(this.id)) {
                        this.id = v1.searchName(this.id);
                        if (cri.sanity.A.empty(this.id)) {
                            this.id = cri.sanity.A.gets("tts_unknown");
                            if (this.id.length() <= 0) {
                                return;
                            }
                        }
                    } else {
                        this.id = cri.sanity.A.gets("tts_anonym");
                        if (this.id.length() <= 0) {
                            return;
                        }
                    }
                }
            }
            if ((this.force) || (cri.sanity.util.Dev.isRinging())) {
                String v4;
                if (!cri.sanity.A.is("tts_stream")) {
                    if (this.sms) {
                        this.stream = 1;
                        v4 = "1";
                    } else {
                        this.stream = 5;
                        v4 = "5";
                    }
                } else {
                    this.stream = 4;
                    v4 = "4";
                }
                android.media.AudioManager v0 = cri.sanity.A.audioMan();
                int v5 = cri.sanity.A.geti("tts_tone");
                if (v5 > 0) {
                    this.tts.setPitch((((float) v5) * 1008981770));
                }
                int v6;
                String v2;
                String v3;
                if (!this.sms) {
                    android.speech.tts.TextToSpeech v7_45 = cri.sanity.A.is("tts_solo");
                    this.solo = v7_45;
                    if (v7_45 != null) {
                        v0.setStreamMute(2, 1);
                    }
                    v2 = "tts_prefix";
                    v3 = "tts_suffix";
                    this.repeat = cri.sanity.A.geti("tts_repeat");
                    this.pause = cri.sanity.A.geti("tts_pause");
                    v6 = cri.sanity.A.geti("tts_vol");
                } else {
                    android.speech.tts.TextToSpeech v7_53 = cri.sanity.A.is("tts_solo");
                    this.solo = v7_53;
                    if (v7_53 != null) {
                        v0.setStreamSolo(this.stream, 1);
                    }
                    v2 = "ttsms_prefix";
                    v3 = "ttsms_suffix";
                    this.repeat = 1;
                    v6 = cri.sanity.A.geti("ttsms_vol");
                }
                if (v6 >= 0) {
                    this.vol = v0.getStreamVolume(this.stream);
                    v0.setStreamVolume(this.stream, v6, 0);
                }
                this.id = new StringBuilder().append(cri.sanity.A.gets(v2)).append(this.id).append(cri.sanity.A.gets(v3)).toString().trim();
                this.pars = new java.util.HashMap();
                this.pars.put("utteranceId", v4);
                this.pars.put("streamType", v4);
                this.tts.setOnUtteranceCompletedListener(this);
                this.tts.speak(this.id, 0, this.pars);
            }
        } else {
            this.onError();
            this.off();
        }
        return;
    }

    public void onUtteranceCompleted(String p6)
    {
        cri.sanity.TTS$1 v0_5 = (this.repeat - 1);
        this.repeat = v0_5;
        if ((v0_5 <= null) || ((!this.force) && (!cri.sanity.util.Dev.isRinging()))) {
            if (!this.solo) {
                this.off();
            } else {
                new cri.sanity.TTS$1(this).exec(200);
            }
        } else {
            this.tts.playSilence(((long) this.pause), 1, 0);
            this.tts.speak(this.id, 1, this.pars);
        }
        return;
    }

    public final void shutdown()
    {
        this.stop();
        this.tts.shutdown();
        if (this.vol >= 0) {
            cri.sanity.A.audioMan().setStreamVolume(this.stream, this.vol, 0);
        }
        if (this.solo) {
            if (!this.sms) {
                cri.sanity.A.audioMan().setStreamMute(2, 0);
            } else {
                cri.sanity.A.audioMan().setStreamSolo(this.stream, 0);
            }
        }
        return;
    }

    public final void stop()
    {
        this.repeat = 0;
        this.tts.stop();
        return;
    }
}
package cri.sanity.ghost;
public class GhostObj {
    private Class cls;
    private boolean err;
    private Object obj;

    public GhostObj()
    {
        return;
    }

    public GhostObj(Object p1)
    {
        this.init(p1);
        return;
    }

    public final Object call(String p6)
    {
        try {
            Object v3_1 = new Class[0];
            Object[] v4_1 = new Object[0];
            int v1 = this.cls.getMethod(p6, v3_1).invoke(this.obj, v4_1);
            this.err = 0;
        } catch (Exception v0) {
            this.err = 1;
            v1 = 0;
        }
        return v1;
    }

    public final boolean callBool(String p3)
    {
        int v1_0;
        Boolean v0_0 = this.call(p3);
        if ((this.err) || ((v0_0 == null) || ((!(v0_0 instanceof Boolean)) || (!((Boolean) v0_0).booleanValue())))) {
            v1_0 = 0;
        } else {
            v1_0 = 1;
        }
        return v1_0;
    }

    public final int callInt(String p3)
    {
        int v1_0;
        Integer v0_0 = this.call(p3);
        if ((this.err) || ((v0_0 == null) || (!(v0_0 instanceof Integer)))) {
            v1_0 = -1;
        } else {
            v1_0 = ((Integer) v0_0).intValue();
        }
        return v1_0;
    }

    public final String[] callStrArr(String p3)
    {
        String[] v0_1;
        String[] v0_0 = this.call(p3);
        if ((this.err) || ((v0_0 == null) || (!(v0_0 instanceof String[])))) {
            v0_1 = 0;
        } else {
            v0_1 = ((String[]) ((String[]) v0_0));
        }
        return v0_1;
    }

    public final boolean callable(String p2)
    {
        int v0_1;
        this.call(p2);
        if (this.err) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public final varargs boolean callable(String[] p6)
    {
        int v2 = p6.length;
        int v1 = 0;
        while (v1 < v2) {
            this.call(p6[v1]);
            if (!this.err) {
                v1++;
            } else {
                int v4_0 = 0;
            }
            return v4_0;
        }
        v4_0 = 1;
        return v4_0;
    }

    public final Class cls()
    {
        return this.cls;
    }

    public final void init(Object p2)
    {
        Class v0_0;
        if (p2 != null) {
            v0_0 = 0;
        } else {
            v0_0 = 1;
        }
        Class v0_2;
        this.err = v0_0;
        if (!this.err) {
            v0_2 = p2.getClass();
        } else {
            v0_2 = 0;
        }
        this.cls = v0_2;
        this.obj = p2;
        return;
    }

    public final boolean isErr()
    {
        return this.err;
    }

    public final boolean isValid()
    {
        int v0_1;
        if (this.obj == null) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public final Object obj()
    {
        return this.obj;
    }
}
package cri.sanity.ghost;
public final class ConnMan extends cri.sanity.ghost.GhostObj {

    public ConnMan()
    {
        this.init(cri.sanity.A.connMan());
        return;
    }

    public String[] getTetherableUsbRegexs()
    {
        return this.callStrArr("getTetherableUsbRegexs");
    }

    public String[] getTetheredIfaces()
    {
        return this.callStrArr("getTetheredIfaces");
    }

    public boolean isTetheringOn()
    {
        int v10 = 0;
        String[] v5 = this.getTetheredIfaces();
        if ((v5 != null) && (v5.length > 0)) {
            String[] v9 = this.getTetherableUsbRegexs();
            if ((v9 != null) && (v9.length > 0)) {
                String[] v0 = v5;
                int v3 = 0;
                while (v3 < v0.length) {
                    String[] v1 = v9;
                    int v2_1 = 0;
                    while (v2_1 < v1.length) {
                        if (!v0[v3].matches(v1[v2_1])) {
                            v2_1++;
                        } else {
                            v10 = 1;
                        }
                    }
                    v3++;
                }
            }
        }
        return v10;
    }
}
package cri.sanity.ghost;
public final class WifiMan extends cri.sanity.ghost.GhostObj {
    public static final int HOTSPOT_DISABLED = 1;
    public static final int HOTSPOT_DISABLING = 0;
    public static final int HOTSPOT_ENABLED = 3;
    public static final int HOTSPOT_ENABLING = 2;
    public static final int HOTSPOT_FAILED = 4;

    public WifiMan()
    {
        this.init(cri.sanity.A.wifiMan());
        return;
    }

    public int getWifiApState()
    {
        return this.callInt("getWifiApState");
    }

    public boolean isHotspotOn()
    {
        int v1_2;
        int v0 = this.getWifiApState();
        if ((v0 != 2) && (v0 != 3)) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        return v1_2;
    }
}
package cri.sanity.pref;
public class PEdit extends android.preference.EditTextPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private android.preference.Preference$OnPreferenceChangeListener listener;
    public String prefix;
    public String suffix;
    private CharSequence sum;

    public PEdit(android.content.Context p2)
    {
        super(p2);
        super.listener = 0;
        super.sum = 0;
        super.init(0);
        return;
    }

    public PEdit(android.content.Context p2, android.util.AttributeSet p3)
    {
        super(p2, p3);
        super.listener = 0;
        super.sum = 0;
        super.init(p3);
        super.updateSum();
        return;
    }

    public PEdit(android.content.Context p2, android.util.AttributeSet p3, int p4)
    {
        super(p2, p3, p4);
        super.listener = 0;
        super.sum = 0;
        super.init(p3);
        super.updateSum();
        return;
    }

    private String fullText(Object p4)
    {
        String v1_2;
        if (!cri.sanity.A.empty(((String) p4))) {
            v1_2 = new StringBuilder().append(this.prefix).append(((String) p4).trim()).append(this.suffix).toString();
        } else {
            v1_2 = "";
        }
        return v1_2;
    }

    private void init(android.util.AttributeSet p4)
    {
        super.setOnPreferenceChangeListener(this);
        if (p4 != null) {
            this.prefix = p4.getAttributeValue(0, "prefix");
            this.suffix = p4.getAttributeValue(0, "suffix");
        }
        if (this.prefix == null) {
            this.prefix = "";
        }
        if (this.suffix == null) {
            this.suffix = "";
        }
        if (this.isWrap()) {
            this.setPersistent(0);
            String v0 = this.getWrapKey();
            if (cri.sanity.A.has(v0)) {
                super.setText(Integer.toString(cri.sanity.A.geti(v0)));
            }
        }
        return;
    }

    private void updateSum(String p3)
    {
        if (this.sum == null) {
            this.sum = this.getSummary();
        }
        if (p3 != null) {
            p3 = p3.trim();
        }
        String v3_1;
        if (!cri.sanity.A.empty(p3)) {
            v3_1 = new StringBuilder().append(" (").append(p3).append(41).toString();
        } else {
            v3_1 = "";
        }
        super.setSummary(new StringBuilder().append(this.sum).append(v3_1).toString());
        return;
    }

    public android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()
    {
        return this.listener;
    }

    public final int getValueInt()
    {
        try {
            int v1_1 = Integer.parseInt(this.getText());
        } catch (Exception v0) {
            v1_1 = 0;
        }
        return v1_1;
    }

    public final String getWrapKey()
    {
        String v0 = this.getKey();
        return v0.substring(0, (v0.length() - "_s".length()));
    }

    public final boolean isWrap()
    {
        int v1_2;
        String v0 = this.getKey();
        if ((v0 == null) || (!v0.endsWith("_s"))) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        return v1_2;
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        if ((this.listener == null) || (this.listener.onPreferenceChange(p3, p4))) {
            this.updateSum(this.fullText(p4));
            if (this.isWrap()) {
                cri.sanity.A.putc(this.getWrapKey(), Integer.parseInt(((String) p4)));
            }
            int v0_3 = 1;
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    public void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener p1)
    {
        this.listener = p1;
        return;
    }

    public void setSummary(int p2)
    {
        String v0 = cri.sanity.A.s(p2);
        this.sum = v0;
        super.setSummary(v0);
        return;
    }

    public void setSummary(CharSequence p1)
    {
        this.sum = p1;
        super.setSummary(p1);
        return;
    }

    public void setText(String p1)
    {
        String v1_1 = this.fullText(p1);
        super.setText(v1_1);
        this.updateSum(v1_1);
        return;
    }

    public final void updateSum()
    {
        this.updateSum(this.getText());
        return;
    }
}
package cri.sanity.pref;
public final class PFilter extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener {
    private CharSequence sum;

    public PFilter(android.content.Context p1)
    {
        super(p1);
        super.init();
        return;
    }

    public PFilter(android.content.Context p1, android.util.AttributeSet p2)
    {
        super(p1, p2);
        super.init();
        return;
    }

    public PFilter(android.content.Context p1, android.util.AttributeSet p2, int p3)
    {
        super(p1, p2, p3);
        super.init();
        return;
    }

    private void init()
    {
        CharSequence v0 = this.getTitle();
        if ((v0 == null) || (v0.length() <= 0)) {
            this.setTitle(2131165555);
        }
        this.sum = this.getSummary();
        if ((this.sum == null) || (this.sum.length() <= 0)) {
            this.sum = cri.sanity.A.s(2131165556);
        }
        this.updateSum();
        this.setPersistent(0);
        this.setWidgetLayoutResource(2130903052);
        this.setOnPreferenceClickListener(this);
        return;
    }

    public final String filterKey()
    {
        return new StringBuilder().append("filter_enable_").append(this.sect()).toString();
    }

    public boolean onPreferenceClick(android.preference.Preference p8)
    {
        String v2 = this.sect();
        if (!cri.sanity.A.empty(v2)) {
            try {
                String v3 = cri.sanity.A.s(cri.sanity.A.rstring(this.getKey()));
            } catch (Exception v0) {
                try {
                    v3 = cri.sanity.A.s(cri.sanity.A.rstring(new StringBuilder().append(v2).append("_cat").toString()));
                } catch (Exception v4) {
                }
            }
            android.content.Intent v1_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.FilterActivity);
            v1_1.putExtra("cri.sanity.Filter.id", v2);
            v1_1.putExtra("cri.sanity.Filter.title", v3);
            cri.sanity.screen.FilterActivity.pref = this;
            this.getContext().startActivity(v1_1);
        }
        return 1;
    }

    public final String sect()
    {
        String v0 = this.getKey();
        return v0.substring((v0.lastIndexOf(95) + 1));
    }

    public final void updateSum()
    {
        String v0_3;
        int v1_3 = new StringBuilder().append(this.sum).append(" (");
        if (!cri.sanity.A.is(this.filterKey())) {
            v0_3 = 2131165219;
        } else {
            v0_3 = 2131165218;
        }
        this.setSummary(v1_3.append(cri.sanity.A.s(v0_3)).append(41).toString());
        return;
    }

    public final void updateSum(boolean p2)
    {
        cri.sanity.A.putc(this.filterKey(), p2);
        this.updateSum();
        return;
    }
}
package cri.sanity.pref;
public class PList extends android.preference.ListPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private android.preference.Preference$OnPreferenceChangeListener listener;
    private CharSequence sum;

    public PList(android.content.Context p2)
    {
        super(p2);
        super.listener = 0;
        super.sum = 0;
        super.init();
        return;
    }

    public PList(android.content.Context p2, android.util.AttributeSet p3)
    {
        super(p2, p3);
        super.listener = 0;
        super.sum = 0;
        super.init();
        super.update();
        return;
    }

    private void init()
    {
        super.setOnPreferenceChangeListener(this);
        if (this.isWrap()) {
            this.setPersistent(0);
            String v0 = this.getWrapKey();
            if (cri.sanity.A.has(v0)) {
                super.setValue(Integer.toString(cri.sanity.A.geti(v0)));
            }
        }
        return;
    }

    private void update(Object p4)
    {
        if (this.sum == null) {
            this.sum = this.getSummary();
        }
        String v0;
        if (p4 != null) {
            v0 = new StringBuilder().append(" (").append(p4).append(41).toString();
        } else {
            v0 = "";
        }
        super.setSummary(new StringBuilder().append(this.sum).append(v0).toString());
        return;
    }

    public final CharSequence findEntry(Object p6)
    {
        CharSequence v3_0 = 0;
        if (p6 != null) {
            CharSequence[] v2 = this.getEntryValues();
            if (v2 != null) {
                int v0 = 0;
                while (v0 < v2.length) {
                    if (!v2[v0].equals(p6)) {
                        v0++;
                    } else {
                        v3_0 = this.getEntries()[v0];
                        break;
                    }
                }
            }
        }
        return v3_0;
    }

    public android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()
    {
        return this.listener;
    }

    public final int getValueInt()
    {
        try {
            int v1_1 = Integer.parseInt(this.getValue());
        } catch (Exception v0) {
            v1_1 = 0;
        }
        return v1_1;
    }

    public final String getWrapKey()
    {
        String v0 = this.getKey();
        return v0.substring(0, (v0.length() - "_s".length()));
    }

    public final boolean isWrap()
    {
        int v1_2;
        String v0 = this.getKey();
        if ((v0 == null) || (!v0.endsWith("_s"))) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        return v1_2;
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        if ((this.listener == null) || (this.listener.onPreferenceChange(p3, p4))) {
            this.update(this.findEntry(p4));
            if (this.isWrap()) {
                cri.sanity.A.putc(this.getWrapKey(), Integer.parseInt(((String) p4)));
            }
            int v0_3 = 1;
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    public void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener p1)
    {
        this.listener = p1;
        return;
    }

    public void setSummary(int p2)
    {
        String v0 = cri.sanity.A.s(p2);
        this.sum = v0;
        super.setSummary(v0);
        return;
    }

    public void setSummary(CharSequence p1)
    {
        this.sum = p1;
        super.setSummary(p1);
        return;
    }

    public final void setValue(int p2)
    {
        this.setValue(Integer.toString(p2));
        return;
    }

    public void setValue(String p2)
    {
        super.setValue(p2);
        this.update(this.findEntry(p2));
        return;
    }

    public void setValueIndex(int p2)
    {
        super.setValueIndex(p2);
        this.update(this.getEntryValues()[p2]);
        return;
    }

    public final void update()
    {
        this.update(this.getEntry());
        return;
    }
}
package cri.sanity.pref;
 class PPwd$1 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.pref.PPwd this$0;

    PPwd$1(cri.sanity.pref.PPwd p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p2)
    {
        cri.sanity.A.putc(this.this$0.getKey(), p2);
        this.this$0.updateSum();
        return;
    }
}
package cri.sanity.pref;
public class PPwd extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener {
    private android.preference.Preference$OnPreferenceClickListener listener;
    private CharSequence sum;

    public PPwd(android.content.Context p1)
    {
        super(p1);
        super.init();
        return;
    }

    public PPwd(android.content.Context p1, android.util.AttributeSet p2)
    {
        super(p1, p2);
        super.init();
        super.updateSum();
        return;
    }

    public PPwd(android.content.Context p1, android.util.AttributeSet p2, int p3)
    {
        super(p1, p2, p3);
        super.init();
        super.updateSum();
        return;
    }

    private void init()
    {
        super.setOnPreferenceClickListener(this);
        this.setWidgetLayoutResource(2130903066);
        cri.sanity.util.Alert.resetPwd();
        return;
    }

    public android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()
    {
        return this.listener;
    }

    public boolean onPreferenceClick(android.preference.Preference p4)
    {
        if ((this.listener == null) || (!this.listener.onPreferenceClick(p4))) {
            cri.sanity.util.Alert.pwdChoose(this.pwd(), new cri.sanity.pref.PPwd$1(this));
        }
        return 1;
    }

    public String pwd()
    {
        return cri.sanity.A.gets(this.getKey());
    }

    public void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener p1)
    {
        this.listener = p1;
        return;
    }

    public void setSummary(int p2)
    {
        String v0 = cri.sanity.A.s(p2);
        this.sum = v0;
        super.setSummary(v0);
        return;
    }

    public void setSummary(CharSequence p1)
    {
        this.sum = p1;
        super.setSummary(p1);
        return;
    }

    public void updateSum()
    {
        if (this.sum == null) {
            this.sum = this.getSummary();
        }
        String v0_3;
        int v1_1 = new StringBuilder().append(this.sum).append(" (");
        if (!cri.sanity.A.empty(this.pwd())) {
            v0_3 = 2131165218;
        } else {
            v0_3 = 2131165197;
        }
        super.setSummary(v1_1.append(cri.sanity.A.s(v0_3)).append(41).toString());
        return;
    }
}
package cri.sanity.screen;
 class AboutActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$1(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.ScreenActivity.alertChangeLog();
    }
}
package cri.sanity.screen;
 class AboutActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$2(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.url("http://www.gnu.org/licenses");
    }
}
package cri.sanity.screen;
 class AboutActivity$3 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$3(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.url("http://tagliamonte.net/forum");
    }
}
package cri.sanity.screen;
 class AboutActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$4(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.url(cri.sanity.screen.AboutActivity.access$000());
    }
}
package cri.sanity.screen;
 class AboutActivity$5 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$5(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.util.Goto.marketDetails(cri.sanity.A.pkg());
    }
}
package cri.sanity.screen;
 class AboutActivity$6 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.AboutActivity this$0;

    AboutActivity$6(cri.sanity.screen.AboutActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.AboutActivity.access$100(this.this$0);
    }
}
package cri.sanity.screen;
public class AboutActivity extends cri.sanity.ScreenActivity {
    private static final String AUTHOR_EMAIL = "cristiano@tagliamonte.net";
    private static final String CURRENCY = "EUR";
    private static final String DONATE_URL = "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=$EMAIL&item_name=$NAME&currency_code=EUR&amount=3&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted";
    private static final String EMAIL_VAR = "$EMAIL";
    private static final String EULA_URL = "http://www.gnu.org/licenses";
    private static final String FORUM_URL = "http://tagliamonte.net/forum";
    private static final String NAME_VAR = "$NAME";
    private static final String PRICE = "3";

    public AboutActivity()
    {
        return;
    }

    static synthetic String access$000()
    {
        return cri.sanity.screen.AboutActivity.donateUrl();
    }

    static synthetic boolean access$100(cri.sanity.screen.AboutActivity p1)
    {
        return p1.mailToDeveloper();
    }

    private static String donateUrl()
    {
        return "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=$EMAIL&item_name=$NAME&currency_code=EUR&amount=3&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted".replace("$NAME", android.net.Uri.encode(cri.sanity.screen.AboutActivity.subject())).replace("$EMAIL", android.net.Uri.encode("cristiano@tagliamonte.net"));
    }

    private static String googleAccount()
    {
        try {
            int v1_2 = android.accounts.AccountManager.get(cri.sanity.A.app()).getAccountsByType("com.google")[0].name.trim().toLowerCase();
        } catch (Exception v0) {
            v1_2 = 0;
        }
        return v1_2;
    }

    private boolean mailToDeveloper()
    {
        android.content.Intent v0_1 = new android.content.Intent("android.intent.action.SEND");
        v0_1.setFlags(268435456);
        v0_1.setType("text/html");
        android.text.Spanned v2_7 = new String[1];
        v2_7[0] = "cristiano@tagliamonte.net";
        v0_1.putExtra("android.intent.extra.EMAIL", v2_7);
        v0_1.putExtra("android.intent.extra.SUBJECT", cri.sanity.screen.AboutActivity.subject());
        v0_1.putExtra("android.intent.extra.TEXT", android.text.Html.fromHtml(new StringBuilder().append(cri.sanity.A.s(2131165647)).append("<br />").toString()));
        this.startActivity(android.content.Intent.createChooser(v0_1, cri.sanity.A.s(2131165646)));
        return 1;
    }

    private static String subject()
    {
        String v0_2;
        int v1_7 = new StringBuilder().append(cri.sanity.screen.AboutActivity.fullName());
        if (!cri.sanity.A.isFull()) {
            v0_2 = "";
        } else {
            v0_2 = " (Donate)";
        }
        return v1_7.append(v0_2).append("  -  id:").append(cri.sanity.A.telMan().getDeviceId()).append("  [").append(cri.sanity.screen.AboutActivity.googleAccount()).append(93).toString();
    }

    public void onCreate(android.os.Bundle p3)
    {
        this.secure = 0;
        this.skipAllKeys = 1;
        super.onCreate(p3);
        this.on("changelog", new cri.sanity.screen.AboutActivity$1(this));
        this.on("eula", new cri.sanity.screen.AboutActivity$2(this));
        this.on("forum", new cri.sanity.screen.AboutActivity$3(this));
        this.on("paypal", new cri.sanity.screen.AboutActivity$4(this));
        this.on("comment", new cri.sanity.screen.AboutActivity$5(this));
        this.on("mail", new cri.sanity.screen.AboutActivity$6(this));
        return;
    }
}
package cri.sanity.screen;
 class AnonymActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.AnonymActivity this$0;
    final synthetic cri.sanity.pref.PEdit val$prefixEdit;

    AnonymActivity$1(cri.sanity.screen.AnonymActivity p1, cri.sanity.pref.PEdit p2)
    {
        this.this$0 = p1;
        this.val$prefixEdit = p2;
        return;
    }

    public boolean on()
    {
        int v0;
        String v1_1 = ((String) this.value);
        if (v1_1.length() > 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        if (v0 == 0) {
            this.val$prefixEdit.setText(v1_1);
        }
        this.val$prefixEdit.setEnabled(v0);
        return 1;
    }
}
package cri.sanity.screen;
public class AnonymActivity extends cri.sanity.ScreenActivity {
    private static final String KEY_COUNTRY = "anonym_country";

    public AnonymActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p12)
    {
        super.onCreate(p12);
        cri.sanity.pref.PList v0_1 = ((cri.sanity.pref.PList) this.pref("anonym_country"));
        cri.sanity.pref.PEdit v6_1 = ((cri.sanity.pref.PEdit) this.pref("anonym_prefix"));
        int v2 = 0;
        try {
            String[] v7 = cri.sanity.A.resources().getStringArray(2131099690);
            String v5 = cri.sanity.A.gets("anonym_prefix");
            int v3 = 0;
        } catch (Exception v1) {
            v0_1.setValue("");
            this.on(v0_1, new cri.sanity.screen.AnonymActivity$1(this, v6_1));
            String v8_10 = new String[3];
            v8_10[0] = "anonym_confirm";
            v8_10[1] = "anonym_notify";
            v8_10[2] = "anonym_prefix";
            this.fullOnly(v8_10);
            return;
        }
        while (v3 < v7.length) {
            if (!v7[v3].equals(v5)) {
                v3++;
            } else {
                v0_1.setValue(v5);
                v2 = 1;
                break;
            }
        }
        if (v2 != 0) {
            this.on(v0_1, new cri.sanity.screen.AnonymActivity$1(this, v6_1));
            v8_10 = new String[3];
            v8_10[0] = "anonym_confirm";
            v8_10[1] = "anonym_notify";
            v8_10[2] = "anonym_prefix";
            this.fullOnly(v8_10);
            return;
        } else {
            v0_1.setValue("");
            this.on(v0_1, new cri.sanity.screen.AnonymActivity$1(this, v6_1));
            v8_10 = new String[3];
            v8_10[0] = "anonym_confirm";
            v8_10[1] = "anonym_notify";
            v8_10[2] = "anonym_prefix";
            this.fullOnly(v8_10);
            return;
        }
    }
}
package cri.sanity.screen;
public class AnswerActivity extends cri.sanity.ScreenActivity {

    public AnswerActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        super.onCreate(p4);
        String[] v0_1 = new String[3];
        v0_1[0] = "answer_headset";
        v0_1[1] = "answer_skip";
        v0_1[2] = "answer_delay_s";
        this.fullOnly(v0_1);
        return;
    }
}
package cri.sanity.screen;
 class BlockerActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$1(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.screen.BlockerActivity.access$000(this.this$0).updateSum(((Boolean) this.value).booleanValue());
        return 1;
    }
}
package cri.sanity.screen;
 class BlockerActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$2(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        android.preference.Preference v1_0;
        int v3 = 0;
        int v0 = Integer.parseInt(((String) this.value));
        android.preference.Preference vtmp2 = this.this$0.pref("block_resume_s");
        if (v0 != 1) {
            v1_0 = 0;
        } else {
            v1_0 = 1;
        }
        android.preference.Preference v1_3;
        vtmp2.setEnabled(v1_0);
        android.preference.Preference vtmp3 = this.this$0.pref("block_pickup");
        if ((v0 != 1) && (v0 != 0)) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        vtmp3.setEnabled(v1_3);
        android.preference.Preference vtmp4 = this.this$0.pref("block_skip");
        if (v0 != 2) {
            v3 = 1;
        }
        vtmp4.setEnabled(v3);
        return 1;
    }
}
package cri.sanity.screen;
 class BlockerActivity$3 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$3(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        this.this$0.startActivity(new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.CallHistoryActivity));
        return 1;
    }
}
package cri.sanity.screen;
 class BlockerActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$4(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165402), cri.sanity.A.rawstr(2131034115), 0, 0, -1);
        return 1;
    }
}
package cri.sanity.screen;
 class BlockerActivity$5 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$5(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v2_0;
        int v4 = 0;
        boolean v0 = ((Boolean) this.value).booleanValue();
        cri.sanity.pref.PFilter v1 = cri.sanity.screen.BlockerActivity.access$100(this.this$0);
        if (v0) {
            v2_0 = 0;
        } else {
            v2_0 = 1;
        }
        v1.updateSum(v2_0);
        if (!v0) {
            v4 = 1;
        }
        v1.setEnabled(v4);
        return 1;
    }
}
package cri.sanity.screen;
 class BlockerActivity$6 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.BlockerActivity this$0;

    BlockerActivity$6(cri.sanity.screen.BlockerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        this.this$0.startActivity(new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.SmsHistoryActivity));
        return 1;
    }
}
package cri.sanity.screen;
public class BlockerActivity extends cri.sanity.ScreenActivity {
    private static final String KEY_BLOCK = "block";
    private static final String KEY_FILTER = "filter_block";
    private static final String KEY_HELP = "block_help";
    private static final String KEY_HISTORY = "block_history";
    private static final String KEY_SMS_FILTER = "filter_blocksms";
    private static final String KEY_SMS_HISTORY = "blocksms_history";
    private static final String KEY_SMS_SHARED = "blocksms_shared";

    public BlockerActivity()
    {
        return;
    }

    static synthetic cri.sanity.pref.PFilter access$000(cri.sanity.screen.BlockerActivity p1)
    {
        return p1.prefFilter();
    }

    static synthetic cri.sanity.pref.PFilter access$100(cri.sanity.screen.BlockerActivity p1)
    {
        return p1.prefSmsFilter();
    }

    private cri.sanity.pref.PFilter prefFilter()
    {
        return ((cri.sanity.pref.PFilter) this.pref("filter_block"));
    }

    private cri.sanity.pref.PFilter prefSmsFilter()
    {
        return ((cri.sanity.pref.PFilter) this.pref("filter_blocksms"));
    }

    public void onCreate(android.os.Bundle p8)
    {
        String[] v2_2;
        super.onCreate(p8);
        this.on("block", new cri.sanity.screen.BlockerActivity$1(this));
        this.on("block_mode_s", new cri.sanity.screen.BlockerActivity$2(this));
        int v1 = cri.sanity.A.geti("block_mode");
        android.preference.Preference vtmp2 = this.pref("block_resume_s");
        if (v1 != 1) {
            v2_2 = 0;
        } else {
            v2_2 = 1;
        }
        String[] v2_4;
        vtmp2.setEnabled(v2_2);
        android.preference.Preference vtmp3 = this.pref("block_pickup");
        if ((v1 != 1) && (v1 != 0)) {
            v2_4 = 0;
        } else {
            v2_4 = 1;
        }
        String[] v2_6;
        vtmp3.setEnabled(v2_4);
        android.preference.Preference vtmp4 = this.pref("block_skip");
        if (v1 == 2) {
            v2_6 = 0;
        } else {
            v2_6 = 1;
        }
        String v5_4;
        vtmp4.setEnabled(v2_6);
        boolean v0 = cri.sanity.A.is("filter_enable_blocksms");
        this.prefSmsFilter().setEnabled(v0);
        android.preference.Preference vtmp7 = this.pref("blocksms_shared");
        if (v0) {
            v5_4 = 0;
        } else {
            v5_4 = 1;
        }
        ((android.preference.CheckBoxPreference) vtmp7).setChecked(v5_4);
        this.on("block_history", new cri.sanity.screen.BlockerActivity$3(this));
        this.on("block_help", new cri.sanity.screen.BlockerActivity$4(this));
        this.on("blocksms_shared", new cri.sanity.screen.BlockerActivity$5(this));
        this.on("blocksms_history", new cri.sanity.screen.BlockerActivity$6(this));
        String[] v2_18 = new String[8];
        v2_18[0] = "block_mode_s";
        v2_18[1] = "block_resume_s";
        v2_18[2] = "block_pickup";
        v2_18[3] = "block_skip";
        v2_18[4] = "block_notify";
        v2_18[5] = "blocksms_max_s";
        v2_18[6] = "filter_blocksms";
        v2_18[7] = "blocksms_shared";
        this.fullOnly(v2_18);
        return;
    }

    public void onResume()
    {
        int v0_1;
        super.onResume();
        this.setChecked("block", cri.sanity.A.is("filter_enable_block"));
        if (cri.sanity.A.is("filter_enable_blocksms")) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        this.setChecked("blocksms_shared", v0_1);
        return;
    }
}
package cri.sanity.screen;
 class BrowseActivity$1 implements java.io.FilenameFilter {
    final synthetic cri.sanity.screen.BrowseActivity this$0;

    BrowseActivity$1(cri.sanity.screen.BrowseActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean accept(java.io.File p2, String p3)
    {
        if ((!p3.startsWith("rec_")) || ((p3.endsWith(".txt")) || (p3.endsWith(".prf")))) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }
}
package cri.sanity.screen;
 class BrowseActivity$2 implements java.util.Comparator {
    final synthetic cri.sanity.screen.BrowseActivity this$0;

    BrowseActivity$2(cri.sanity.screen.BrowseActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public bridge synthetic int compare(Object p2, Object p3)
    {
        return this.compare(((String) p2), ((String) p3));
    }

    public int compare(String p2, String p3)
    {
        return p3.compareTo(p2);
    }
}
package cri.sanity.screen;
 class BrowseActivity$3 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.BrowseActivity this$0;

    BrowseActivity$3(cri.sanity.screen.BrowseActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        int v0 = 0;
        java.util.Iterator v1 = ((java.util.Stack) cri.sanity.screen.BrowseActivity.access$100(this.this$0).clone()).iterator();
        while (v1.hasNext()) {
            cri.sanity.screen.BrowseActivity$Pref v2_1 = ((cri.sanity.screen.BrowseActivity$Pref) v1.next());
            if (new java.io.File(cri.sanity.screen.BrowseActivity.access$200(this.this$0), cri.sanity.screen.BrowseActivity$Pref.access$000(v2_1)).delete()) {
                cri.sanity.screen.BrowseActivity.access$300(this.this$0).removePreference(v2_1);
                cri.sanity.screen.BrowseActivity.access$100(this.this$0).remove(v2_1);
            } else {
                v0++;
            }
        }
        if (v0 > 0) {
            String v3_3 = cri.sanity.A.s(2131165668);
            Object[] v4_1 = new Object[1];
            v4_1[0] = new StringBuilder().append(v0).append("").toString();
            cri.sanity.util.Alert.msg(String.format(v3_3, v4_1));
        }
        return;
    }
}
package cri.sanity.screen;
 class BrowseActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private String fn;
    final synthetic cri.sanity.screen.BrowseActivity this$0;

    BrowseActivity$Pref(cri.sanity.screen.BrowseActivity p20, String p21)
    {
        String v11;
        this.this$0 = p20;
        cri.sanity.screen.BrowseActivity$Pref v19_1 = super(p20);
        v19_1.setPersistent(0);
        v19_1.fn = new String(p21);
        String v21_1 = p21.substring(cri.sanity.screen.BrowseActivity.access$400());
        int v16 = v21_1.lastIndexOf(46);
        if (v16 == (v21_1.length() - 4)) {
            v11 = v21_1.substring((v16 + 1));
            v21_1 = v21_1.substring(0, v16);
        } else {
            v11 = "";
        }
        java.util.Vector v12 = cri.sanity.A.split("_", v21_1, 4);
        String v18_1 = ((String) v12.get(1));
        java.util.Vector v9 = cri.sanity.A.split(cri.sanity.screen.BrowseActivity.access$500(), ((String) v12.get(0)), 3);
        v19_1.setTitle(new StringBuilder().append(new StringBuilder().append(((String) v9.get(2))).append(47).append(((String) v9.get(1))).append(47).append(((String) v9.get(0))).toString()).append(", ").append(v18_1).toString());
        if (!v11.equals("m4a")) {
            if (!v11.equals("3gp")) {
                if (v11.equals("amr")) {
                    v11 = "AMR";
                }
            } else {
                v11 = "3GPP";
            }
        } else {
            v11 = "MPEG4";
        }
        String v17_1;
        int v13 = v12.size();
        if ((v13 > 2) && (!cri.sanity.A.empty(((String) v12.get(2))))) {
            String v17_0;
            String v15_1;
            if (v13 <= 3) {
                v15_1 = ((String) v12.get(2));
                if ((v15_1.equals("in")) || (v15_1.equals("out"))) {
                    StringBuilder v2_20;
                    int v3_1 = new StringBuilder().append(cri.sanity.screen.BrowseActivity.access$600());
                    if (!v15_1.equals("in")) {
                        v2_20 = cri.sanity.screen.BrowseActivity.access$800();
                    } else {
                        v2_20 = cri.sanity.screen.BrowseActivity.access$700();
                    }
                    v17_0 = v3_1.append(v2_20).toString();
                    v15_1 = "";
                } else {
                    v17_0 = new String;
                    v17_0(v15_1);
                }
            } else {
                StringBuilder v2_30;
                v15_1 = ((String) v12.get(3));
                int v3_2 = new StringBuilder().append(v15_1);
                if (!((String) v12.get(2)).equals("in")) {
                    v2_30 = cri.sanity.screen.BrowseActivity.access$800();
                } else {
                    v2_30 = cri.sanity.screen.BrowseActivity.access$700();
                }
                v17_0 = v3_2.append(v2_30).toString();
            }
            if (v15_1.length() > 1) {
                android.database.Cursor v8 = cri.sanity.screen.BrowseActivity.access$1000().query(android.net.Uri.withAppendedPath(android.provider.ContactsContract$PhoneLookup.CONTENT_FILTER_URI, android.net.Uri.encode(v15_1)), cri.sanity.screen.BrowseActivity.access$900(), 0, 0, 0);
                if (v8.moveToFirst()) {
                    String v14 = v8.getString(v8.getColumnIndex("display_name"));
                    if (!cri.sanity.A.empty(v14)) {
                        v17_0 = new StringBuilder().append(v17_0).append(10).append(v14).toString();
                    }
                }
                v8.close();
            }
            v17_1 = new StringBuilder().append(v17_0).append("  *  ").append(v11).toString();
        } else {
            v17_1 = new StringBuilder().append(cri.sanity.screen.BrowseActivity.access$600()).append("  *  ").append(v11).toString();
        }
        v19_1.setSummary(v17_1);
        v19_1.setOnPreferenceChangeListener(v19_1);
        return;
    }

    static synthetic String access$000(cri.sanity.screen.BrowseActivity$Pref p1)
    {
        return p1.fn;
    }

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        if (!((Boolean) p3).booleanValue()) {
            cri.sanity.screen.BrowseActivity.access$100(this.this$0).remove(this);
        } else {
            cri.sanity.screen.BrowseActivity.access$100(this.this$0).push(this);
        }
        return 1;
    }
}
package cri.sanity.screen;
public class BrowseActivity extends cri.sanity.ScreenActivity {
    private static final String ANONYM = "";
    private static final String IN = "";
    private static final String OUT = "";
    private static final String PREFIX = "rec_";
    private static final int PREFIX_LEN = 0;
    private static final String SEP_DATE = "";
    private static final String SEP_MAIN = "_";
    private static final char SEP_SHOW = 47;
    private static final String SEP_SUM = "  *  ";
    private static final String[] proj;
    private static final android.content.ContentResolver resolver;
    private String dir;
    private boolean empty;
    private android.preference.PreferenceCategory prefGroup;
    private java.util.Stack selected;

    static BrowseActivity()
    {
        cri.sanity.screen.BrowseActivity.SEP_DATE = new StringBuilder().append("yyyy-MM-dd".charAt(4)).append("").toString();
        cri.sanity.screen.BrowseActivity.PREFIX_LEN = "rec_".length();
        cri.sanity.screen.BrowseActivity.IN = new StringBuilder().append(" (").append(cri.sanity.A.s(2131165209)).append(41).toString();
        cri.sanity.screen.BrowseActivity.OUT = new StringBuilder().append(" (").append(cri.sanity.A.s(2131165210)).append(41).toString();
        cri.sanity.screen.BrowseActivity.ANONYM = cri.sanity.A.s(2131165212);
        cri.sanity.screen.BrowseActivity.resolver = cri.sanity.A.resolver();
        String[] v0_22 = new String[1];
        v0_22[0] = "display_name";
        cri.sanity.screen.BrowseActivity.proj = v0_22;
        return;
    }

    public BrowseActivity()
    {
        this.selected = new java.util.Stack();
        this.empty = 0;
        return;
    }

    static synthetic java.util.Stack access$100(cri.sanity.screen.BrowseActivity p1)
    {
        return p1.selected;
    }

    static synthetic android.content.ContentResolver access$1000()
    {
        return cri.sanity.screen.BrowseActivity.resolver;
    }

    static synthetic String access$200(cri.sanity.screen.BrowseActivity p1)
    {
        return p1.dir;
    }

    static synthetic android.preference.PreferenceCategory access$300(cri.sanity.screen.BrowseActivity p1)
    {
        return p1.prefGroup;
    }

    static synthetic int access$400()
    {
        return cri.sanity.screen.BrowseActivity.PREFIX_LEN;
    }

    static synthetic String access$500()
    {
        return cri.sanity.screen.BrowseActivity.SEP_DATE;
    }

    static synthetic String access$600()
    {
        return cri.sanity.screen.BrowseActivity.ANONYM;
    }

    static synthetic String access$700()
    {
        return cri.sanity.screen.BrowseActivity.IN;
    }

    static synthetic String access$800()
    {
        return cri.sanity.screen.BrowseActivity.OUT;
    }

    static synthetic String[] access$900()
    {
        return cri.sanity.screen.BrowseActivity.proj;
    }

    private void delete()
    {
        int v0 = this.selected.size();
        if (v0 >= 1) {
            String v1_2;
            if (v0 <= 1) {
                v1_2 = cri.sanity.A.s(2131165607);
            } else {
                String v1_1 = cri.sanity.A.s(2131165608);
                cri.sanity.screen.BrowseActivity$3 v2_0 = new Object[1];
                v2_0[0] = new StringBuilder().append(v0).append("").toString();
                v1_2 = String.format(v1_1, v2_0);
            }
            cri.sanity.util.Alert.msg(v1_2, new cri.sanity.screen.BrowseActivity$3(this), 0, 1);
        }
        return;
    }

    private void empty()
    {
        this.empty(2131165197, 2131165621);
        return;
    }

    private void empty(int p3, int p4)
    {
        android.preference.Preference v0_1 = new android.preference.Preference(this);
        v0_1.setPersistent(0);
        v0_1.setSelectable(0);
        v0_1.setTitle(p3);
        v0_1.setSummary(p4);
        this.prefGroup.addPreference(v0_1);
        this.empty = 1;
        return;
    }

    private void open()
    {
        if (!this.selected.isEmpty()) {
            android.content.Intent v0_1 = new android.content.Intent("android.intent.action.VIEW");
            v0_1.setDataAndType(android.net.Uri.parse(new StringBuilder().append("file://").append(this.dir).append(47).append(cri.sanity.screen.BrowseActivity$Pref.access$000(((cri.sanity.screen.BrowseActivity$Pref) this.selected.peek()))).toString()), "audio/3gp");
            this.startActivity(v0_1);
        }
        return;
    }

    private void selall()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 > 0) {
            this.selected.clear();
            int v0 = 0;
            while (v0 < v1) {
                cri.sanity.screen.BrowseActivity$Pref v2_1 = ((cri.sanity.screen.BrowseActivity$Pref) this.prefGroup.getPreference(v0));
                v2_1.setChecked(1);
                this.selected.add(v2_1);
                v0++;
            }
            if (v1 > 2) {
                String v3_2 = cri.sanity.A.s(2131165624);
                Object[] v4_1 = new Object[1];
                v4_1[0] = new StringBuilder().append(v1).append("").toString();
                cri.sanity.A.toast(String.format(v3_2, v4_1));
            }
        }
        return;
    }

    private void selnone()
    {
        java.util.Iterator v0 = this.selected.iterator();
        while (v0.hasNext()) {
            ((cri.sanity.screen.BrowseActivity$Pref) v0.next()).setChecked(0);
        }
        this.selected.clear();
        return;
    }

    public boolean isMainActivity()
    {
        int v0_1;
        if (this.empty) {
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }

    public void onCreate(android.os.Bundle p9)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.BrowseActivity.screener(cri.sanity.screen.BrowseActivity, 2130968587, 2130903051);
        super.onCreate(p9);
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("rec_browse"));
        this.dir = cri.sanity.A.sdcardDir();
        if (this.dir != null) {
            String[] v4 = new java.io.File(this.dir).list(new cri.sanity.screen.BrowseActivity$1(this));
            if (v4.length > 0) {
                java.util.Arrays.sort(v4, 0, v4.length, new cri.sanity.screen.BrowseActivity$2(this));
                String[] v0 = v4;
                int v3 = v0.length;
                int v2 = 0;
                while (v2 < v3) {
                    this.prefGroup.addPreference(new cri.sanity.screen.BrowseActivity$Pref(this, v0[v2]));
                    v2++;
                }
            } else {
                this.empty();
            }
        } else {
            this.empty(2131165196, 2131165663);
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        int v1_2;
        if (!this.empty) {
            this.getMenuInflater().inflate(2131296256, p3);
            v1_2 = 1;
        } else {
            v1_2 = super.onCreateOptionsMenu(p3);
        }
        return v1_2;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        if (!this.empty) {
            switch (p2.getItemId()) {
                case 2131361809:
                    this.open();
                    break;
                case 2131361810:
                    this.delete();
                    break;
                case 2131361811:
                    this.selall();
                    break;
                case 2131361812:
                    this.selnone();
                    break;
                default:
                    v0_1 = super.onOptionsItemSelected(p2);
            }
            v0_1 = 1;
        } else {
            v0_1 = super.onOptionsItemSelected(p2);
        }
        return v0_1;
    }
}
package cri.sanity.screen;
 class CallHistoryActivity$Pref$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.CallHistoryActivity$Pref this$1;
    final synthetic boolean val$known;

    CallHistoryActivity$Pref$1(cri.sanity.screen.CallHistoryActivity$Pref p1, boolean p2)
    {
        this.this$1 = p1;
        this.val$known = p2;
        return;
    }

    public void on()
    {
        android.content.Intent v0_1 = new android.content.Intent();
        switch (this.which) {
            case 0:
                v0_1.setAction("android.intent.action.CALL");
                v0_1.setData(android.net.Uri.parse(new StringBuilder().append("tel:").append(cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1)).toString()));
                v0_1.setFlags(268435456);
                this.this$1.this$0.startActivity(v0_1);
                break;
            case 1:
                v0_1.setAction("android.intent.action.VIEW");
                v0_1.setData(android.net.Uri.parse(new StringBuilder().append("smsto:").append(cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1)).toString()));
                break;
            case 2:
                int v1_22;
                v0_1.setAction("com.android.contacts.action.SHOW_OR_CREATE_CONTACT");
                v0_1.setData(android.net.Uri.parse(new StringBuilder().append("tel:").append(cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1)).toString()));
                if (this.val$known) {
                    v1_22 = 0;
                } else {
                    v1_22 = 1;
                }
                v0_1.putExtra("com.android.contacts.action.FORCE_CREATE", v1_22);
                break;
            case 3:
                cri.sanity.A.clipMan().setText(cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1));
                cri.sanity.A.toast(cri.sanity.A.s(2131165658));
                break;
            case 4:
                v0_1.setAction("android.intent.action.VIEW");
                v0_1.setType("text/plain");
                v0_1.putExtra("android.intent.extra.TEXT", cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1));
                v0_1 = android.content.Intent.createChooser(v0_1, new StringBuilder().append(cri.sanity.A.s(2131165233)).append(32).append(cri.sanity.screen.CallHistoryActivity$Pref.access$000(this.this$1)).toString());
                break;
        }
        return;
    }
}
package cri.sanity.screen;
public class CallHistoryActivity$Pref extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener {
    private String name;
    private String num;
    final synthetic cri.sanity.screen.CallHistoryActivity this$0;

    public CallHistoryActivity$Pref(cri.sanity.screen.CallHistoryActivity p8, String[] p9)
    {
        this.this$0 = p8;
        super(p8);
        String v0 = p9[0];
        String v1 = p9[1];
        String v2 = p9[2];
        super.name = v1;
        super.num = v2;
        if (v1.length() > 0) {
            if (v2.length() > 0) {
                v0 = new StringBuilder().append(v0).append("           ").append(v2).toString();
            }
        } else {
            v1 = v2;
        }
        super.setTitle(v1);
        super.setSummary(v0);
        if (v2.length() >= 1) {
            super.setOnPreferenceClickListener(super);
        } else {
            super.setSelectable(0);
        }
        return;
    }

    static synthetic String access$000(cri.sanity.screen.CallHistoryActivity$Pref p1)
    {
        return p1.num;
    }

    public boolean onPreferenceClick(android.preference.Preference p6)
    {
        int v1;
        if (this.name.length() <= 0) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        String v3_2;
        int[] v0 = new int[5];
        v0[0] = 2131165227;
        v0[1] = 2131165228;
        if (v1 == 0) {
            v3_2 = 2131165231;
        } else {
            v3_2 = 2131165230;
        }
        String v3_5;
        v0[2] = v3_2;
        v0[3] = 2131165232;
        v0[4] = 2131165233;
        if (v1 == 0) {
            v3_5 = this.num;
        } else {
            v3_5 = new StringBuilder().append(this.name).append(" (").append(this.num).append(41).toString();
        }
        cri.sanity.util.Alert.choose(v3_5, v0, new cri.sanity.screen.CallHistoryActivity$Pref$1(this, v1));
        return 1;
    }
}
package cri.sanity.screen;
public class CallHistoryActivity extends cri.sanity.HistoryActivity {

    public CallHistoryActivity()
    {
        return;
    }

    protected String fnHistory()
    {
        return "block_history.txt";
    }

    protected int lineItems()
    {
        return 3;
    }

    protected String mainTitle()
    {
        return cri.sanity.A.s(2131165592);
    }

    protected Class prefClass()
    {
        return cri.sanity.screen.CallHistoryActivity$Pref;
    }

    protected char sep()
    {
        return 124;
    }
}
package cri.sanity.screen;
 class ContactsActivity$1 extends android.os.Handler {
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    ContactsActivity$1(cri.sanity.screen.ContactsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void handleMessage(android.os.Message p4)
    {
        if (p4 != null) {
            android.util.Pair v0_1 = ((android.util.Pair) p4.obj);
            ((cri.sanity.screen.ContactsActivity$Pref) v0_1.first).setSummary(((CharSequence) v0_1.second));
        }
        return;
    }
}
package cri.sanity.screen;
 class ContactsActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    ContactsActivity$2(cri.sanity.screen.ContactsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.screen.ContactsActivity.access$000(this.this$0);
        return 1;
    }
}
package cri.sanity.screen;
abstract class ContactsActivity$Async extends cri.sanity.A$Async {
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    private ContactsActivity$Async(cri.sanity.screen.ContactsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    synthetic ContactsActivity$Async(cri.sanity.screen.ContactsActivity p1, cri.sanity.screen.ContactsActivity$1 p2)
    {
        this(p1);
        return;
    }
}
package cri.sanity.screen;
 class ContactsActivity$3 extends cri.sanity.screen.ContactsActivity$Async {
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    ContactsActivity$3(cri.sanity.screen.ContactsActivity p2)
    {
        this.this$0 = p2;
        super(p2, 0);
        return;
    }

    public void run()
    {
        cri.sanity.screen.ContactsActivity.access$200(this.this$0, this);
        return;
    }
}
package cri.sanity.screen;
 class ContactsActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    ContactsActivity$4(cri.sanity.screen.ContactsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.screen.ContactsActivity.access$602(this.this$0, 0);
        this.dismiss();
        this.this$0.finish();
        return;
    }
}
package cri.sanity.screen;
 class ContactsActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private String con;
    final synthetic cri.sanity.screen.ContactsActivity this$0;

    private ContactsActivity$Pref(cri.sanity.screen.ContactsActivity p2, String p3, String p4)
    {
        this.this$0 = p2;
        super(p2);
        super.con = p3;
        super.setPersistent(0);
        super.setTitle(p4);
        super.setOnPreferenceChangeListener(super);
        return;
    }

    synthetic ContactsActivity$Pref(cri.sanity.screen.ContactsActivity p1, String p2, String p3, cri.sanity.screen.ContactsActivity$1 p4)
    {
        this(p1, p2, p3);
        return;
    }

    static synthetic void access$400(cri.sanity.screen.ContactsActivity$Pref p0, CharSequence p1)
    {
        p0.setSummaryAsync(p1);
        return;
    }

    static synthetic String access$500(cri.sanity.screen.ContactsActivity$Pref p1)
    {
        return p1.con;
    }

    private void setSummaryAsync(CharSequence p3)
    {
        android.os.Message v0_1 = new android.os.Message();
        if (p3 == null) {
            p3 = "";
        }
        v0_1.obj = new android.util.Pair(this, p3);
        cri.sanity.screen.ContactsActivity.access$700(this.this$0).sendMessage(v0_1);
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        return cri.sanity.screen.ContactsActivity.access$602(this.this$0, 1);
    }
}
package cri.sanity.screen;
public class ContactsActivity extends cri.sanity.ScreenActivity {
    private static final int CODE_SEARCH = 1;
    private static final String SEP = "\xa7";
    private boolean changed;
    private boolean grouped;
    private android.os.Handler handler;
    private android.preference.PreferenceCategory prefGroup;
    private java.util.Map prefs;
    private String sect;

    public ContactsActivity()
    {
        this.handler = new cri.sanity.screen.ContactsActivity$1(this);
        return;
    }

    static synthetic void access$000(cri.sanity.screen.ContactsActivity p0)
    {
        p0.search();
        return;
    }

    static synthetic void access$200(cri.sanity.screen.ContactsActivity p0, cri.sanity.screen.ContactsActivity$Async p1)
    {
        p0.readContactGroups(p1);
        return;
    }

    static synthetic boolean access$602(cri.sanity.screen.ContactsActivity p0, boolean p1)
    {
        p0.changed = p1;
        return p1;
    }

    static synthetic android.os.Handler access$700(cri.sanity.screen.ContactsActivity p1)
    {
        return p1.handler;
    }

    private void canc()
    {
        if (this.changed) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165609), new cri.sanity.screen.ContactsActivity$4(this), 0, 1);
        } else {
            this.finish();
        }
        return;
    }

    private String keyAll()
    {
        return new StringBuilder().append("filter_contacts_").append(this.sect).toString();
    }

    private String keyCount()
    {
        return new StringBuilder().append("filter_contacts_count_").append(this.sect).toString();
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append("filter_contact_").append(p3).append(this.sect).toString();
    }

    private void readContactGroups(cri.sanity.screen.ContactsActivity$Async p8)
    {
        boolean v0_0 = cri.sanity.A.resolver();
        String[] v2_1 = new String[2];
        v2_1[0] = "data1";
        v2_1[1] = "contact_id";
        android.database.Cursor v6 = v0_0.query(android.provider.ContactsContract$Data.CONTENT_URI, v2_1, "mimetype=\'vnd.android.cursor.item/group_membership\'", 0, "contact_id");
        if ((p8 != null) && (!p8.isCancelled())) {
            this.readContactGroups(p8, v6);
        }
        v6.close();
        return;
    }

    private void readContactGroups(cri.sanity.screen.ContactsActivity$Async p10, android.database.Cursor p11)
    {
        if (p11.moveToFirst()) {
            java.util.Map v3 = cri.sanity.util.Contacts.groups();
            if ((p10 == null) || (!p10.isCancelled())) {
                int v1 = p11.getColumnIndex("data1");
                int v0 = p11.getColumnIndex("contact_id");
                cri.sanity.screen.ContactsActivity$Pref v4 = 0;
                String v6_0 = 0;
                while (this.prefs != null) {
                    cri.sanity.screen.ContactsActivity$Pref v5_1 = ((cri.sanity.screen.ContactsActivity$Pref) this.prefs.get(p11.getString(v0)));
                    String v2_1 = ((String) v3.get(p11.getString(v1)));
                    if ((v5_1 != null) && (v2_1 != null)) {
                        if (v5_1 != v4) {
                            if (v4 != null) {
                                cri.sanity.screen.ContactsActivity$Pref.access$400(v4, v6_0);
                            }
                            String v6_1 = v5_1.getSummary();
                            if ((v6_1 != null) && (v6_1.length() > 0)) {
                                v6_0 = new StringBuilder().append(v6_1).append(", ").append(v2_1).toString();
                            } else {
                                v6_0 = v2_1;
                            }
                            v4 = v5_1;
                        } else {
                            v6_0 = new StringBuilder().append(v6_0).append(", ").append(v2_1).toString();
                        }
                        if ((p10 != null) && (p10.isCancelled())) {
                            break;
                        }
                    }
                    if (!p11.moveToNext()) {
                        if (v4 != null) {
                            cri.sanity.screen.ContactsActivity$Pref.access$400(v4, v6_0);
                        }
                        this.grouped = 1;
                        break;
                    }
                }
            }
        }
        return;
    }

    private void readContacts()
    {
        android.preference.PreferenceCategory v2_0 = cri.sanity.A.resolver();
        String[] v4_1 = new String[3];
        v4_1[0] = "_id";
        v4_1[1] = "display_name";
        v4_1[2] = "starred";
        android.database.Cursor v10 = v2_0.query(android.provider.ContactsContract$Contacts.CONTENT_URI, v4_1, "has_phone_number=1", 0, "display_name");
        int v18 = v10.getCount();
        if (v18 > 0) {
            String v21 = cri.sanity.A.s(2131165222);
            int v11 = v10.getColumnIndex("_id");
            int v12 = v10.getColumnIndex("display_name");
            int v13 = v10.getColumnIndex("starred");
            this.prefs = new java.util.HashMap(v18);
            cri.sanity.screen.ContactsActivity$Pref[] v8 = new cri.sanity.screen.ContactsActivity$Pref[v18];
            int v15 = 0;
            while (v10.moveToNext()) {
                String v14_1 = v10.getString(v11);
                cri.sanity.screen.ContactsActivity$Pref v20 = new cri.sanity.screen.ContactsActivity$Pref;
                v20(this, v14_1, v10.getString(v12), 0);
                if (v10.getString(v13).equals("1")) {
                    v20.setSummary(v21);
                }
                this.prefs.put(v14_1, v20);
                v8[v15] = v20;
                v15++;
            }
            v10.close();
            cri.sanity.screen.ContactsActivity$Pref[] v9_0 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v17_0 = v9_0.length;
            int v16_0 = 0;
            while (v16_0 < v17_0) {
                cri.sanity.screen.ContactsActivity$Pref v19_2 = ((cri.sanity.screen.ContactsActivity$Pref) this.prefs.get(v9_0[v16_0]));
                if (v19_2 != null) {
                    this.prefGroup.addPreference(v19_2);
                    v19_2.setChecked(1);
                }
                v16_0++;
            }
            cri.sanity.screen.ContactsActivity$Pref[] v9_1 = v8;
            int v17_1 = v9_1.length;
            int v16_1 = 0;
            while (v16_1 < v17_1) {
                cri.sanity.screen.ContactsActivity$Pref v19_0 = v9_1[v16_1];
                if (!v19_0.isChecked()) {
                    this.prefGroup.addPreference(v19_0);
                }
                v16_1++;
            }
        }
        return;
    }

    private int saveList()
    {
        if (this.changed) {
            String[] v0 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v7 = v0.length;
            int v5 = 0;
            while (v5 < v7) {
                cri.sanity.A.del(this.keySect(v0[v5]));
                v5++;
            }
        }
        String v2 = "";
        int v6 = 0;
        int v8 = this.prefGroup.getPreferenceCount();
        if (v8 > 0) {
            StringBuilder v10_1 = new StringBuilder(256);
            int v3 = 1;
            int v4 = 0;
            while (v4 < v8) {
                cri.sanity.screen.ContactsActivity$Pref v9_1 = ((cri.sanity.screen.ContactsActivity$Pref) this.prefGroup.getPreference(v4));
                if (v9_1.isChecked()) {
                    v6++;
                    if (this.changed) {
                        String v1_0 = cri.sanity.screen.ContactsActivity$Pref.access$500(v9_1);
                        cri.sanity.A.put(this.keySect(v1_0), 1);
                        if (v3 == 0) {
                            v10_1.append("\u00a7");
                        } else {
                            v3 = 0;
                        }
                        v10_1.append(v1_0);
                    }
                }
                v4++;
            }
            if (v8 > v6) {
                v2 = v10_1.toString();
            }
        }
        if (this.changed) {
            if ((v8 != 0) && (v8 <= v6)) {
                cri.sanity.A.put(this.keyAll(), "");
                v6 = -1;
                cri.sanity.A.putc(this.keyCount(), -1);
            } else {
                cri.sanity.A.put(this.keyAll(), v2);
                cri.sanity.A.putc(this.keyCount(), v6);
            }
        }
        return v6;
    }

    private void search()
    {
        this.startActivityForResult(new android.content.Intent("android.intent.action.PICK", android.provider.ContactsContract$Contacts.CONTENT_URI), 1);
        return;
    }

    private void selall()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            int v0 = 0;
            while (v0 < v1) {
                ((cri.sanity.screen.ContactsActivity$Pref) this.prefGroup.getPreference(v0)).setChecked(1);
                v0++;
            }
            String v2_6 = cri.sanity.A.s(2131165624);
            Object[] v3 = new Object[1];
            v3[0] = new StringBuilder().append(v1).append("").toString();
            cri.sanity.A.toast(String.format(v2_6, v3));
            this.changed = 1;
        }
        return;
    }

    private void selnone()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            int v0 = 0;
            while (v0 < v1) {
                ((cri.sanity.screen.ContactsActivity$Pref) this.prefGroup.getPreference(v0)).setChecked(0);
                v0++;
            }
            this.changed = 1;
        }
        return;
    }

    public void onActivityResult(int p12, int p13, android.content.Intent p14)
    {
        if ((p14 != null) && (p12 == 1)) {
            int v0_7 = cri.sanity.A.resolver();
            Object[] v1_4 = p14.getData();
            String v2_0 = new String[2];
            v2_0[0] = "_id";
            v2_0[1] = "display_name";
            android.database.Cursor v6 = v0_7.query(v1_4, v2_0, 0, 0, 0);
            if (v6.moveToFirst()) {
                int v7;
                cri.sanity.screen.ContactsActivity$Pref v8_1 = ((cri.sanity.screen.ContactsActivity$Pref) this.prefs.get(v6.getString(v6.getColumnIndex("_id"))));
                if (v8_1 == null) {
                    v7 = 2131165650;
                } else {
                    if (!v8_1.isChecked()) {
                        v7 = 2131165652;
                    } else {
                        v7 = 2131165651;
                    }
                }
                int v0_3 = cri.sanity.A.s(v7);
                Object[] v1_3 = new Object[1];
                v1_3[0] = v6.getString(v6.getColumnIndex("display_name"));
                cri.sanity.A.toast(String.format(v0_3, v1_3));
                if (v8_1 == null) {
                    return;
                } else {
                    int v0_6;
                    if (v8_1.isChecked()) {
                        v0_6 = 0;
                    } else {
                        v0_6 = 1;
                    }
                    v8_1.setChecked(v0_6);
                    this.changed = 1;
                }
            }
            v6.close();
        }
        return;
    }

    public void onBackPressed()
    {
        if (!this.isFinishing()) {
            android.content.Intent v0_1 = new android.content.Intent();
            v0_1.putExtra("cri.sanity.Filter.id", this.saveList());
            this.setResult(-1, v0_1);
            super.onBackPressed();
        }
        return;
    }

    public void onCreate(android.os.Bundle p7)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.ContactsActivity.screener(cri.sanity.screen.ContactsActivity, 2130968577, 2130903053);
        super.onCreate(p7);
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("filter_contacts"));
        android.content.Intent v0 = this.getIntent();
        this.sect = v0.getStringExtra("cri.sanity.Filter.id");
        String v1 = v0.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(v1)) {
            this.pref("filter_header").setTitle(new StringBuilder().append(this.prefGroup.getTitle()).append("  (").append(v1).append(41).toString());
        }
        this.on("filter_search", new cri.sanity.screen.ContactsActivity$2(this));
        this.readContacts();
        this.changed = 0;
        this.grouped = 0;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131296257, p3);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131361811:
                this.selall();
                v0_1 = 1;
                break;
            case 2131361812:
                this.selnone();
                break;
            case 2131361813:
                this.search();
                break;
            case 2131361814:
                this.canc();
                break;
            default:
                v0_1 = super.onOptionsItemSelected(p2);
        }
        return v0_1;
    }

    public void onStart()
    {
        super.onStart();
        if (!this.grouped) {
            Void[] v1_1 = new Void[0];
            new cri.sanity.screen.ContactsActivity$3(this).execute(v1_1);
        }
        return;
    }
}
package cri.sanity.screen;
 class DateTimeActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.DateTimeActivity this$0;

    DateTimeActivity$1(cri.sanity.screen.DateTimeActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v2;
        if (cri.sanity.screen.DateTimeActivity.access$100(this.this$0)) {
            v2 = 0;
        } else {
            v2 = 1;
        }
        String[] v0 = cri.sanity.screen.DateTimeActivity.access$200();
        int v4 = v0.length;
        int v3 = 0;
        while (v3 < v4) {
            this.this$0.setChecked(new StringBuilder().append("filter_dt_day").append(v0[v3]).toString(), v2);
            v3++;
        }
        return cri.sanity.screen.DateTimeActivity.access$302(this.this$0, 1);
    }
}
package cri.sanity.screen;
 class DateTimeActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.DateTimeActivity this$0;

    DateTimeActivity$2(cri.sanity.screen.DateTimeActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.DateTimeActivity.access$302(this.this$0, 1);
    }
}
package cri.sanity.screen;
interface DateTimeActivity$OnTime {

    public abstract void got();
}
package cri.sanity.screen;
 class DateTimeActivity$3$1 implements cri.sanity.screen.DateTimeActivity$OnTime {
    final synthetic cri.sanity.screen.DateTimeActivity$3 this$1;

    DateTimeActivity$3$1(cri.sanity.screen.DateTimeActivity$3 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void got(int p8, int p9, int p10, int p11)
    {
        new cri.sanity.screen.DateTimeActivity$Pref(this.this$1.this$0, p8, p9, p10, p11, 0);
        return;
    }
}
package cri.sanity.screen;
 class DateTimeActivity$3 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.DateTimeActivity this$0;

    DateTimeActivity$3(cri.sanity.screen.DateTimeActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.screen.DateTimeActivity.access$500(0, 0, 0, 0, new cri.sanity.screen.DateTimeActivity$3$1(this));
        return 1;
    }
}
package cri.sanity.screen;
 class DateTimeActivity$4$1 extends cri.sanity.util.Alert$Timed {
    final synthetic cri.sanity.screen.DateTimeActivity$4 this$0;
    final synthetic int val$hour1;
    final synthetic int val$mins1;

    DateTimeActivity$4$1(cri.sanity.screen.DateTimeActivity$4 p1, int p2, int p3, int p4, int p5)
    {
        this.this$0 = p1;
        this.val$hour1 = p4;
        this.val$mins1 = p5;
        super(p2, p3);
        return;
    }

    public void on()
    {
        if ((this.val$hour1 <= this.hour) && ((this.val$hour1 != this.hour) || (this.val$mins1 < this.mins))) {
            this.this$0.val$onTime.got(this.val$hour1, this.val$mins1, this.hour, this.mins);
        } else {
            cri.sanity.A.toast(2131165675);
        }
        return;
    }
}
package cri.sanity.screen;
final class DateTimeActivity$4 extends cri.sanity.util.Alert$Timed {
    final synthetic int val$h2;
    final synthetic int val$m2;
    final synthetic cri.sanity.screen.DateTimeActivity$OnTime val$onTime;

    DateTimeActivity$4(int p1, int p2, int p3, int p4, cri.sanity.screen.DateTimeActivity$OnTime p5)
    {
        this.val$h2 = p3;
        this.val$m2 = p4;
        this.val$onTime = p5;
        super(p1, p2);
        return;
    }

    public void on()
    {
        int v2;
        this.dlg.dismiss();
        int v4 = this.hour;
        int v5 = this.mins;
        String v6 = cri.sanity.A.s(2131165587);
        if (this.val$h2 <= 0) {
            v2 = this.hour;
        } else {
            v2 = this.val$h2;
        }
        int v3;
        if (this.val$h2 <= 0) {
            v3 = this.mins;
        } else {
            v3 = this.val$m2;
        }
        cri.sanity.util.Alert.time(v6, new cri.sanity.screen.DateTimeActivity$4$1(this, v2, v3, v4, v5));
        return;
    }
}
package cri.sanity.screen;
 class DateTimeActivity$Pref$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.DateTimeActivity$Pref this$1;

    DateTimeActivity$Pref$1(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        switch (this.which) {
            case 0:
                cri.sanity.screen.DateTimeActivity.access$500(cri.sanity.screen.DateTimeActivity$Pref.access$800(this.this$1), cri.sanity.screen.DateTimeActivity$Pref.access$900(this.this$1), cri.sanity.screen.DateTimeActivity$Pref.access$1000(this.this$1), cri.sanity.screen.DateTimeActivity$Pref.access$1100(this.this$1), this.this$1);
                break;
            case 1:
                cri.sanity.screen.DateTimeActivity.access$600(this.this$1.this$0).removePreference(this.this$1);
                cri.sanity.screen.DateTimeActivity.access$1202(this.this$1.this$0, 1);
                break;
        }
        return;
    }
}
package cri.sanity.screen;
final class DateTimeActivity$Pref extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener, cri.sanity.screen.DateTimeActivity$OnTime {
    private int h1;
    private int h2;
    private int m1;
    private int m2;
    final synthetic cri.sanity.screen.DateTimeActivity this$0;

    private DateTimeActivity$Pref(cri.sanity.screen.DateTimeActivity p2, int p3, int p4, int p5, int p6)
    {
        this.this$0 = p2;
        super(p2);
        super.setPersistent(0);
        super.setOnPreferenceClickListener(super);
        cri.sanity.screen.DateTimeActivity.access$600(p2).addPreference(super);
        super.setDependency("filter_dt");
        super.got(p3, p4, p5, p6);
        return;
    }

    synthetic DateTimeActivity$Pref(cri.sanity.screen.DateTimeActivity p1, int p2, int p3, int p4, int p5, cri.sanity.screen.DateTimeActivity$1 p6)
    {
        this(p1, p2, p3, p4, p5);
        return;
    }

    static synthetic int access$000(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        return p1.getTime();
    }

    static synthetic int access$1000(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        return p1.h2;
    }

    static synthetic int access$1100(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        return p1.m2;
    }

    static synthetic int access$800(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        return p1.h1;
    }

    static synthetic int access$900(cri.sanity.screen.DateTimeActivity$Pref p1)
    {
        return p1.m1;
    }

    private int getTime()
    {
        return cri.sanity.screen.DateTimeActivity.access$700(this.h1, this.m1, this.h2, this.m2);
    }

    public void got(int p3, int p4, int p5, int p6)
    {
        this.h1 = p3;
        this.m1 = p4;
        this.h2 = p5;
        this.m2 = p6;
        this.setTitle(cri.sanity.screen.DateTimeActivity.access$1300(p3, p4, p5, p6));
        cri.sanity.screen.DateTimeActivity.access$1202(this.this$0, 1);
        return;
    }

    public boolean onPreferenceClick(android.preference.Preference p4)
    {
        int v0_2 = this.getTitle().toString();
        int[] v1_1 = new int[3];
        v1_1 = {2131165204, 2131165205, 2131165188};
        cri.sanity.util.Alert.choose(v0_2, v1_1, new cri.sanity.screen.DateTimeActivity$Pref$1(this));
        return 1;
    }
}
package cri.sanity.screen;
public class DateTimeActivity extends cri.sanity.ScreenActivity implements android.preference.Preference$OnPreferenceChangeListener {
    private static final String[] DAYS = None;
    private static final String FILTER_DAY = "filter_dt_day";
    private static final String SEP_RANGE = "   >>>   ";
    private static final char SEP_TIME = 58;
    private boolean changedDay;
    private boolean changedTime;
    private android.preference.PreferenceGroup prefGroup;
    private android.preference.PreferenceGroup prefTimes;
    private String sect;

    static DateTimeActivity()
    {
        String[] v0_1 = new String[7];
        v0_1[0] = "2";
        v0_1[1] = "3";
        v0_1[2] = "4";
        v0_1[3] = "5";
        v0_1[4] = "6";
        v0_1[5] = "7";
        v0_1[6] = "1";
        cri.sanity.screen.DateTimeActivity.DAYS = v0_1;
        return;
    }

    public DateTimeActivity()
    {
        return;
    }

    static synthetic boolean access$100(cri.sanity.screen.DateTimeActivity p1)
    {
        return p1.hasAllDays();
    }

    static synthetic boolean access$1202(cri.sanity.screen.DateTimeActivity p0, boolean p1)
    {
        p0.changedTime = p1;
        return p1;
    }

    static synthetic String access$1300(int p1, int p2, int p3, int p4)
    {
        return cri.sanity.screen.DateTimeActivity.range2str(p1, p2, p3, p4);
    }

    static synthetic String[] access$200()
    {
        return cri.sanity.screen.DateTimeActivity.DAYS;
    }

    static synthetic boolean access$302(cri.sanity.screen.DateTimeActivity p0, boolean p1)
    {
        p0.changedDay = p1;
        return p1;
    }

    static synthetic void access$500(int p0, int p1, int p2, int p3, cri.sanity.screen.DateTimeActivity$OnTime p4)
    {
        cri.sanity.screen.DateTimeActivity.time(p0, p1, p2, p3, p4);
        return;
    }

    static synthetic android.preference.PreferenceGroup access$600(cri.sanity.screen.DateTimeActivity p1)
    {
        return p1.prefTimes;
    }

    static synthetic int access$700(int p1, int p2, int p3, int p4)
    {
        return cri.sanity.screen.DateTimeActivity.range2int(p1, p2, p3, p4);
    }

    private boolean hasAllDays()
    {
        int v0 = 1;
        String[] v1 = cri.sanity.screen.DateTimeActivity.DAYS;
        int v4 = v1.length;
        int v3 = 0;
        while (v3 < v4) {
            v0 &= this.is(new StringBuilder().append("filter_dt_day").append(v1[v3]).toString());
            v3++;
        }
        return v0;
    }

    private boolean hasDays()
    {
        int v2 = 0;
        String[] v0 = cri.sanity.screen.DateTimeActivity.DAYS;
        int v4 = v0.length;
        int v3 = 0;
        while (v3 < v4) {
            v2 |= this.is(new StringBuilder().append("filter_dt_day").append(v0[v3]).toString());
            v3++;
        }
        return v2;
    }

    private void initCheckbox(String p3)
    {
        android.preference.CheckBoxPreference v0_1 = ((android.preference.CheckBoxPreference) this.pref(p3));
        v0_1.setChecked(cri.sanity.A.is(this.keySect(p3)));
        v0_1.setOnPreferenceChangeListener(this);
        return;
    }

    private void initDays()
    {
        int v0;
        this.on("alldays", new cri.sanity.screen.DateTimeActivity$1(this));
        String v3 = cri.sanity.A.gets(this.keySect("filter_dt_days"));
        if (v3.length() != 0) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        cri.sanity.screen.DateTimeActivity$2 v2_1 = new cri.sanity.screen.DateTimeActivity$2(this);
        String[] v1 = cri.sanity.screen.DateTimeActivity.DAYS;
        int v6 = v1.length;
        int v5 = 0;
        while (v5 < v6) {
            int v10_8;
            String v4 = v1[v5];
            android.preference.CheckBoxPreference v7_1 = ((android.preference.CheckBoxPreference) this.pref(new StringBuilder().append("filter_dt_day").append(v4).toString()));
            if ((v0 == 0) && (v3.indexOf(v4) < 0)) {
                v10_8 = 0;
            } else {
                v10_8 = 1;
            }
            v7_1.setChecked(v10_8);
            this.on(v7_1, v2_1);
            v5++;
        }
        return;
    }

    private void initTimes()
    {
        android.preference.Preference v9 = this.pref("add");
        v9.setTitle(new StringBuilder().append(">>  ").append(v9.getTitle()).append("  <<").toString());
        this.on(v9, new cri.sanity.screen.DateTimeActivity$3(this));
        int v8 = cri.sanity.A.geti(this.keySect("filter_dt_time_count"));
        int v7 = 1;
        while (v7 <= v8) {
            int[] v10 = cri.sanity.screen.DateTimeActivity.int2range(cri.sanity.A.geti(this.keySect(new StringBuilder().append("filter_dt_time").append(v7).toString())));
            new cri.sanity.screen.DateTimeActivity$Pref(this, v10[0], v10[1], v10[2], v10[3], 0);
            v7++;
        }
        return;
    }

    private static int[] int2range(int p3)
    {
        int[] v0_1 = new int[4];
        v0_1[0] = ((p3 >> 24) & 255);
        v0_1[1] = ((p3 >> 16) & 255);
        v0_1[2] = ((p3 >> 8) & 255);
        v0_1[3] = (p3 & 255);
        return v0_1;
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append(p3).append(95).append(this.sect).toString();
    }

    private static int range2int(int p2, int p3, int p4, int p5)
    {
        return ((((p2 << 24) | (p3 << 16)) | (p4 << 8)) | p5);
    }

    private static String range2str(int p3, int p4, int p5, int p6)
    {
        return new StringBuilder().append(cri.sanity.screen.DateTimeActivity.v(p3)).append(58).append(cri.sanity.screen.DateTimeActivity.v(p4)).append("   >>>   ").append(cri.sanity.screen.DateTimeActivity.v(p5)).append(58).append(cri.sanity.screen.DateTimeActivity.v(p6)).toString();
    }

    private static void time(int p7, int p8, int p9, int p10, cri.sanity.screen.DateTimeActivity$OnTime p11)
    {
        cri.sanity.util.Alert.time(cri.sanity.A.s(2131165586), new cri.sanity.screen.DateTimeActivity$4(p7, p8, p9, p10, p11));
        return;
    }

    private static String v(int p2)
    {
        String v0_1;
        if (p2 <= 9) {
            v0_1 = new StringBuilder().append("0").append(p2).toString();
        } else {
            v0_1 = Integer.toString(p2);
        }
        return v0_1;
    }

    public void onBackPressed()
    {
        if (!this.isFinishing()) {
            boolean v2 = this.is("filter_dt");
            if ((!v2) || (this.hasDays())) {
                if (this.changedDay) {
                    String v5 = this.keySect("filter_dt_days");
                    String v10 = "";
                    if (v2) {
                        String[] v0 = cri.sanity.screen.DateTimeActivity.DAYS;
                        int v7 = v0.length;
                        int v4 = 0;
                        while (v4 < v7) {
                            String v1 = v0[v4];
                            if (this.is(new StringBuilder().append("filter_dt_day").append(v1).toString())) {
                                v10 = new StringBuilder().append(v10).append(v1).toString();
                            }
                            v4++;
                        }
                    }
                    if ((v2) && (v10.length() != 7)) {
                        cri.sanity.A.put(v5, v10);
                    } else {
                        cri.sanity.A.del(v5);
                    }
                }
                if (this.changedTime) {
                    String v6 = this.keySect("filter_dt_time_count");
                    int v9 = cri.sanity.A.geti(v6);
                    int v8 = (this.prefTimes.getPreferenceCount() - 1);
                    int v3_0 = 1;
                    while (v3_0 <= v8) {
                        cri.sanity.A.put(this.keySect(new StringBuilder().append("filter_dt_time").append(v3_0).toString()), cri.sanity.screen.DateTimeActivity$Pref.access$000(((cri.sanity.screen.DateTimeActivity$Pref) this.prefTimes.getPreference(v3_0))));
                        v3_0++;
                    }
                    int v3_1 = (v8 + 1);
                    while (v3_1 <= v9) {
                        cri.sanity.A.del(this.keySect(new StringBuilder().append("filter_dt_time").append(v3_1).toString()));
                        v3_1++;
                    }
                    cri.sanity.A.put(v6, v8);
                }
                if ((this.changedDay) || (this.changedTime)) {
                    cri.sanity.A.commit();
                }
                int v11_19;
                int v3_3 = new android.content.Intent();
                if (!v2) {
                    v11_19 = 0;
                } else {
                    v11_19 = 1;
                }
                v3_3.putExtra("cri.sanity.Filter.id", v11_19);
                this.setResult(-1, v3_3);
                super.onBackPressed();
            } else {
                cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165674));
            }
        }
        return;
    }

    public void onCreate(android.os.Bundle p6)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.DateTimeActivity.screener(cri.sanity.screen.DateTimeActivity, 2130968578, 2130903059);
        super.onCreate(p6);
        this.prefGroup = ((android.preference.PreferenceGroup) this.pref("group"));
        this.prefTimes = ((android.preference.PreferenceGroup) this.pref("times"));
        android.content.Intent v0 = this.getIntent();
        this.sect = v0.getStringExtra("cri.sanity.Filter.id");
        String v1 = v0.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(v1)) {
            this.prefGroup.setTitle(new StringBuilder().append(this.prefGroup.getTitle()).append("  (").append(v1).append(41).toString());
        }
        this.initCheckbox("filter_dt");
        this.initDays();
        this.initTimes();
        this.changedTime = 0;
        this.changedDay = 0;
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        cri.sanity.A.putc(this.keySect(p2.getKey()), ((Boolean) p3));
        return 1;
    }
}
package cri.sanity.screen;
 class DevicesActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.DevicesActivity this$0;

    DevicesActivity$1(cri.sanity.screen.DevicesActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        boolean v0 = ((Boolean) this.value).booleanValue();
        if (v0) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165657));
        }
        int v1_5;
        this.this$0.setEnabled("mobdata_skip", 0);
        this.this$0.setEnabled("tether_skip", 0);
        this.this$0.setEnabled("hotspot_skip", cri.sanity.A.is("wifi"));
        if (v0) {
            v1_5 = 0;
        } else {
            v1_5 = 1;
        }
        return v1_5;
    }
}
package cri.sanity.screen;
 class DevicesActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.DevicesActivity this$0;

    DevicesActivity$2(cri.sanity.screen.DevicesActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.screen.DevicesActivity v1_1;
        int v3 = 0;
        boolean v0 = ((Boolean) this.value).booleanValue();
        if ((!v0) || (cri.sanity.A.is("gps"))) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        cri.sanity.screen.DevicesActivity v1_4;
        this.this$0.setEnabled("mobdata_skip", v1_1);
        if ((!v0) || (!cri.sanity.util.Dev.isTetheringSupported())) {
            v1_4 = 0;
        } else {
            v1_4 = 1;
        }
        this.this$0.setEnabled("tether_skip", v1_4);
        if (((v0) || (cri.sanity.A.is("wifi"))) && (cri.sanity.util.Dev.isHotspotSupported())) {
            v3 = 1;
        }
        this.this$0.setEnabled("hotspot_skip", v3);
        return 1;
    }
}
package cri.sanity.screen;
 class DevicesActivity$3 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.DevicesActivity this$0;

    DevicesActivity$3(cri.sanity.screen.DevicesActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if (((!((Boolean) this.value).booleanValue()) && (!cri.sanity.A.is("mobdata"))) || (!cri.sanity.util.Dev.isHotspotSupported())) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        this.this$0.setEnabled("hotspot_skip", v0_2);
        return 1;
    }
}
package cri.sanity.screen;
 class DevicesActivity$4 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.DevicesActivity this$0;

    DevicesActivity$4(cri.sanity.screen.DevicesActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if ((((Boolean) this.value).booleanValue()) || (!cri.sanity.A.is("mobdata"))) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        this.this$0.setEnabled("mobdata_skip", v0_1);
        return 1;
    }
}
package cri.sanity.screen;
public class DevicesActivity extends cri.sanity.ScreenActivity {

    public DevicesActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p6)
    {
        String v1_1;
        cri.sanity.screen.DevicesActivity$4 v2_0 = 1;
        super.onCreate(p6);
        boolean v0 = cri.sanity.A.is("mobdata");
        if ((!v0) || (cri.sanity.A.is("gps"))) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        String v1_3;
        this.setEnabled("mobdata_skip", v1_1);
        if ((!v0) || (!cri.sanity.util.Dev.isTetheringSupported())) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        this.setEnabled("tether_skip", v1_3);
        if (((!v0) && (!cri.sanity.A.is("wifi"))) || (!cri.sanity.util.Dev.isHotspotSupported())) {
            v2_0 = 0;
        }
        String v1_8;
        this.setEnabled("hotspot_skip", v2_0);
        if (cri.sanity.A.SDK <= 8) {
            v1_8 = new cri.sanity.screen.DevicesActivity$2(this);
        } else {
            v1_8 = new cri.sanity.screen.DevicesActivity$1(this);
        }
        this.on("mobdata", v1_8);
        this.on("wifi", new cri.sanity.screen.DevicesActivity$3(this));
        this.on("gps", new cri.sanity.screen.DevicesActivity$4(this));
        return;
    }
}
package cri.sanity.screen;
 class FilterActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.FilterActivity this$0;

    FilterActivity$1(cri.sanity.screen.FilterActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.FilterActivity.access$000(this.this$0, cri.sanity.screen.DateTimeActivity, 4);
    }
}
package cri.sanity.screen;
 class FilterActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.FilterActivity this$0;

    FilterActivity$2(cri.sanity.screen.FilterActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.FilterActivity.access$000(this.this$0, cri.sanity.screen.NumsActivity, 1);
    }
}
package cri.sanity.screen;
 class FilterActivity$3 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.FilterActivity this$0;

    FilterActivity$3(cri.sanity.screen.FilterActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.FilterActivity.access$000(this.this$0, cri.sanity.screen.ContactsActivity, 2);
    }
}
package cri.sanity.screen;
 class FilterActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.FilterActivity this$0;

    FilterActivity$4(cri.sanity.screen.FilterActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.FilterActivity.access$000(this.this$0, cri.sanity.screen.GroupsActivity, 3);
    }
}
package cri.sanity.screen;
 class FilterActivity$5 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.FilterActivity this$0;

    FilterActivity$5(cri.sanity.screen.FilterActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        return cri.sanity.screen.FilterActivity.access$000(this.this$0, cri.sanity.screen.PrefixActivity, 5);
    }
}
package cri.sanity.screen;
public class FilterActivity extends cri.sanity.ScreenActivity implements android.preference.Preference$OnPreferenceChangeListener {
    private static final int CODE_CONTACTS = 2;
    private static final int CODE_DATETIME = 4;
    private static final int CODE_GROUPS = 3;
    private static final int CODE_NUMS = 1;
    private static final int CODE_PREFIX = 5;
    public static final String EXTRA_SECT = "cri.sanity.Filter.id";
    public static final String EXTRA_TITLE = "cri.sanity.Filter.title";
    private static final String ITEMS_FMT = "";
    public static final String SEP = "\xa7";
    public static cri.sanity.pref.PFilter pref;
    private String sect;
    private String sumContacts;
    private String sumDt;
    private String sumGroups;
    private String sumNums;
    private String sumPrefix;
    private String title;

    static FilterActivity()
    {
        cri.sanity.screen.FilterActivity.ITEMS_FMT = cri.sanity.A.s(2131165625);
        return;
    }

    public FilterActivity()
    {
        return;
    }

    static synthetic boolean access$000(cri.sanity.screen.FilterActivity p1, Class p2, int p3)
    {
        return p1.startAct(p2, p3);
    }

    private varargs void initCheckbox(String[] p8)
    {
        int v3 = p8.length;
        int v1 = 0;
        while (v1 < v3) {
            String v2 = p8[v1];
            android.preference.CheckBoxPreference v5_1 = ((android.preference.CheckBoxPreference) this.pref(v2));
            boolean v4 = cri.sanity.A.is(this.keySect(v2));
            v5_1.setChecked(v4);
            v5_1.setOnPreferenceChangeListener(this);
            this.updateDeps(v2, v4);
            v1++;
        }
        return;
    }

    private varargs void initList(String[] p7)
    {
        int v3 = p7.length;
        int v1 = 0;
        while (v1 < v3) {
            String v2 = p7[v1];
            cri.sanity.pref.PList v4_1 = ((cri.sanity.pref.PList) this.pref(v2));
            v4_1.setValue(Integer.toString(cri.sanity.A.geti(this.keySect(v2))));
            v4_1.setOnPreferenceChangeListener(this);
            v1++;
        }
        return;
    }

    private static String itemsFmt(int p5)
    {
        String v0_5 = new StringBuilder().append(" (");
        Object[] v2_1 = new Object[1];
        v2_1[0] = Integer.toString(p5);
        return v0_5.append(String.format(cri.sanity.screen.FilterActivity.ITEMS_FMT, v2_1)).append(41).toString();
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append(p3).append(95).append(this.sect).toString();
    }

    private void setSumContacts(int p3, android.preference.Preference p4)
    {
        if (p4 == null) {
            p4 = this.pref("filter_contacts");
        }
        p4.setSummary(new StringBuilder().append(this.sumContacts).append(cri.sanity.screen.FilterActivity.itemsFmt(p3)).toString());
        return;
    }

    private void setSumDt(boolean p3, android.preference.Preference p4)
    {
        if (p4 == null) {
            p4 = this.pref("filter_dt");
        }
        String v0_1;
        int v1_0 = new StringBuilder().append(this.sumDt).append(" (");
        if (!p3) {
            v0_1 = 2131165238;
        } else {
            v0_1 = 2131165218;
        }
        p4.setSummary(v1_0.append(cri.sanity.A.s(v0_1)).append(41).toString());
        return;
    }

    private void setSumGroups(int p3, android.preference.Preference p4)
    {
        if (p4 == null) {
            p4 = this.pref("filter_groups");
        }
        p4.setSummary(new StringBuilder().append(this.sumGroups).append(cri.sanity.screen.FilterActivity.itemsFmt(p3)).toString());
        return;
    }

    private void setSumNums(int p3, android.preference.Preference p4)
    {
        if (p4 == null) {
            p4 = this.pref("filter_nums");
        }
        p4.setSummary(new StringBuilder().append(this.sumNums).append(cri.sanity.screen.FilterActivity.itemsFmt(p3)).toString());
        return;
    }

    private void setSumPrefix(int p3, android.preference.Preference p4)
    {
        if (p4 == null) {
            p4 = this.pref("filter_prefix");
        }
        p4.setSummary(new StringBuilder().append(this.sumPrefix).append(cri.sanity.screen.FilterActivity.itemsFmt(p3)).toString());
        return;
    }

    private boolean startAct(Class p4, int p5)
    {
        android.content.Intent v0_1 = new android.content.Intent(cri.sanity.A.app(), p4);
        v0_1.putExtra("cri.sanity.Filter.id", this.sect);
        v0_1.putExtra("cri.sanity.Filter.title", this.title);
        this.startActivityForResult(v0_1, p5);
        return 1;
    }

    private void updateDeps(String p7, boolean p8)
    {
        int v3 = 1;
        if (!p7.equals("filter_allcontacts")) {
            if (!p7.equals("filter_unknown")) {
                if (p7.equals("filter_all")) {
                    android.preference.Preference v2_3;
                    android.preference.Preference vtmp7 = this.pref("filter_anonym");
                    if (p8) {
                        v2_3 = 0;
                    } else {
                        v2_3 = 1;
                    }
                    android.preference.Preference v2_6;
                    vtmp7.setEnabled(v2_3);
                    android.preference.Preference vtmp9 = this.pref("filter_prefix");
                    if (p8) {
                        v2_6 = 0;
                    } else {
                        v2_6 = 1;
                    }
                    android.preference.Preference v2_8;
                    vtmp9.setEnabled(v2_6);
                    android.preference.CheckBoxPreference v1_1 = ((android.preference.CheckBoxPreference) this.pref("filter_allcontacts"));
                    if (p8) {
                        v2_8 = 0;
                    } else {
                        v2_8 = 1;
                    }
                    int v0;
                    v1_1.setEnabled(v2_8);
                    if ((p8) || (v1_1.isChecked())) {
                        v0 = 0;
                    } else {
                        v0 = 1;
                    }
                    android.preference.Preference v2_18;
                    this.pref("filter_star").setEnabled(v0);
                    this.pref("filter_contacts").setEnabled(v0);
                    this.pref("filter_groups").setEnabled(v0);
                    android.preference.CheckBoxPreference v1_3 = ((android.preference.CheckBoxPreference) this.pref("filter_unknown"));
                    if (p8) {
                        v2_18 = 0;
                    } else {
                        v2_18 = 1;
                    }
                    v1_3.setEnabled(v2_18);
                    // Both branches of the condition point to the same code.
                    // if ((!p8) && (v1_3.isChecked())) {
                        android.preference.Preference v2_22 = this.pref("filter_nums");
                        if ((p8) || (v1_3.isChecked())) {
                            v3 = 0;
                        }
                        v2_22.setEnabled(v3);
                    // }
                }
            } else {
                android.preference.Preference vtmp4 = this.pref("filter_nums");
                if (p8) {
                    v3 = 0;
                }
                vtmp4.setEnabled(v3);
            }
        } else {
            android.preference.Preference v2_27;
            android.preference.Preference vtmp2 = this.pref("filter_star");
            if (p8) {
                v2_27 = 0;
            } else {
                v2_27 = 1;
            }
            android.preference.Preference v2_29;
            vtmp2.setEnabled(v2_27);
            android.preference.Preference vtmp6 = this.pref("filter_contacts");
            if (p8) {
                v2_29 = 0;
            } else {
                v2_29 = 1;
            }
            vtmp6.setEnabled(v2_29);
            android.preference.Preference vtmp8 = this.pref("filter_groups");
            if (p8) {
                v3 = 0;
            }
            vtmp8.setEnabled(v3);
        }
        return;
    }

    public void onActivityResult(int p7, int p8, android.content.Intent p9)
    {
        int v1_0 = 1;
        if ((p9 != null) && (p8 == -1)) {
            int v0 = p9.getIntExtra("cri.sanity.Filter.id", -666);
            if (v0 != -666) {
                switch (p7) {
                    case 1:
                        this.setSumNums(v0, 0);
                        break;
                    case 2:
                        if (v0 < 0) {
                            this.setSumContacts(0, 0);
                            this.setChecked("filter_allcontacts", 1);
                            this.setEnabled("filter_contacts", 0);
                            this.setEnabled("filter_groups", 0);
                        } else {
                            this.setSumContacts(v0, 0);
                        }
                        break;
                    case 3:
                        this.setSumGroups(v0, 0);
                        break;
                    case 4:
                        if (v0 <= 0) {
                            v1_0 = 0;
                        }
                        this.setSumDt(v1_0, 0);
                        break;
                    case 5:
                        this.setSumPrefix(v0, 0);
                        break;
                    default:
                }
            }
        }
        return;
    }

    public void onCreate(android.os.Bundle p8)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.FilterActivity.screener(cri.sanity.screen.FilterActivity, 2130968589, 2130903052);
        super.onCreate(p8);
        android.content.Intent v0 = this.getIntent();
        this.sect = v0.getStringExtra("cri.sanity.Filter.id");
        this.title = v0.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(this.title)) {
            android.preference.Preference v1_2 = this.pref("filter");
            v1_2.setTitle(new StringBuilder().append(v1_2.getTitle()).append("  -  ").append(this.title).toString());
        }
        cri.sanity.screen.FilterActivity$5 v2_38 = new String[6];
        v2_38[0] = "filter_enable";
        v2_38[1] = "filter_all";
        v2_38[2] = "filter_anonym";
        v2_38[3] = "filter_unknown";
        v2_38[4] = "filter_allcontacts";
        v2_38[5] = "filter_star";
        this.initCheckbox(v2_38);
        cri.sanity.screen.FilterActivity$5 v2_39 = new String[1];
        v2_39[0] = "filter_mode";
        this.initList(v2_39);
        android.preference.Preference v1_3 = this.pref("filter_dt");
        this.sumDt = v1_3.getSummary().toString();
        this.setSumDt(cri.sanity.A.is(this.keySect("filter_dt")), v1_3);
        this.on(v1_3, new cri.sanity.screen.FilterActivity$1(this));
        android.preference.Preference v1_4 = this.pref("filter_nums");
        this.sumNums = v1_4.getSummary().toString();
        this.setSumNums(cri.sanity.A.geti(this.keySect("filter_nums_count")), v1_4);
        this.on(v1_4, new cri.sanity.screen.FilterActivity$2(this));
        android.preference.Preference v1_5 = this.pref("filter_contacts");
        this.sumContacts = v1_5.getSummary().toString();
        this.setSumContacts(cri.sanity.A.geti(this.keySect("filter_contacts_count")), v1_5);
        this.on(v1_5, new cri.sanity.screen.FilterActivity$3(this));
        android.preference.Preference v1_0 = this.pref("filter_groups");
        this.sumGroups = v1_0.getSummary().toString();
        this.setSumGroups(cri.sanity.A.geti(this.keySect("filter_groups_count")), v1_0);
        this.on(v1_0, new cri.sanity.screen.FilterActivity$4(this));
        android.preference.Preference v1_1 = this.pref("filter_prefix");
        this.sumPrefix = v1_1.getSummary().toString();
        this.setSumPrefix(cri.sanity.A.geti(this.keySect("filter_prefix_count")), v1_1);
        this.on(v1_1, new cri.sanity.screen.FilterActivity$5(this));
        return;
    }

    public void onDestroy()
    {
        super.onDestroy();
        if (cri.sanity.screen.FilterActivity.pref != null) {
            cri.sanity.screen.FilterActivity.pref.updateSum();
            cri.sanity.screen.FilterActivity.pref = 0;
        }
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p5, Object p6)
    {
        String v0 = p5.getKey();
        String v1 = this.keySect(v0);
        if (!(p5 instanceof cri.sanity.pref.PList)) {
            if ((p5 instanceof android.preference.CheckBoxPreference)) {
                boolean v2 = ((Boolean) p6).booleanValue();
                cri.sanity.A.putc(v1, v2);
                this.updateDeps(v0, v2);
            }
        } else {
            cri.sanity.A.putc(v1, Integer.parseInt(((String) p6)));
        }
        return 1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$1(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.A v0 = cri.sanity.A.app();
        android.content.Intent v1_1 = new android.content.Intent(v0, cri.sanity.BootService);
        if (!((Boolean) this.value).booleanValue()) {
            v0.stopService(v1_1);
        } else {
            v0.startService(v1_1);
        }
        return 1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$2$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$2 this$1;

    GeneralActivity$2$1(cri.sanity.screen.GeneralActivity$2 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        this.this$1.this$0.setChecked(cri.sanity.screen.GeneralActivity$2.access$000(this.this$1), 1);
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$2(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    static synthetic android.preference.Preference access$000(cri.sanity.screen.GeneralActivity$2 p1)
    {
        return p1.pref;
    }

    public boolean on()
    {
        int v0_1;
        if (((Boolean) this.value).booleanValue()) {
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034118), new cri.sanity.screen.GeneralActivity$2$1(this), 0, 2, 0);
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$3$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$3 this$1;

    GeneralActivity$3$1(cri.sanity.screen.GeneralActivity$3 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        this.this$1.this$0.setChecked(cri.sanity.screen.GeneralActivity$3.access$100(this.this$1), 1);
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$3 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$3(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    static synthetic android.preference.Preference access$100(cri.sanity.screen.GeneralActivity$3 p1)
    {
        return p1.pref;
    }

    public boolean on()
    {
        int v0_1;
        if (((Boolean) this.value).booleanValue()) {
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034128), new cri.sanity.screen.GeneralActivity$3$1(this), 0, 2, 0);
            v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        return v0_1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$4(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        this.this$0.startActivity(new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.ProfileActivity));
        return 1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$5$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$5 this$1;

    GeneralActivity$5$1(cri.sanity.screen.GeneralActivity$5 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        int v1;
        if (!cri.sanity.P.backup()) {
            v1 = 2131165633;
        } else {
            v1 = 2131165632;
        }
        cri.sanity.A.toast(v1);
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$5$2 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$5 this$1;

    GeneralActivity$5$2(cri.sanity.screen.GeneralActivity$5 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        if (cri.sanity.P.backupExists()) {
            cri.sanity.screen.GeneralActivity v1_1;
            cri.sanity.screen.GeneralActivity.access$202(this.this$1.this$0, 1);
            boolean v0 = cri.sanity.P.restore();
            if (!v0) {
                v1_1 = 2131165635;
            } else {
                v1_1 = 2131165634;
            }
            cri.sanity.A.toast(v1_1);
            if (v0) {
                cri.sanity.screen.GeneralActivity.access$300(this.this$1.this$0);
            }
            cri.sanity.screen.GeneralActivity.access$402(this.this$1.this$0, 0);
        } else {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165631));
        }
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$5 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$5(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165630), new cri.sanity.screen.GeneralActivity$5$1(this), new cri.sanity.screen.GeneralActivity$5$2(this), 5);
        return 1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$6$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$6 this$1;

    GeneralActivity$6$1(cri.sanity.screen.GeneralActivity$6 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        boolean v0 = cri.sanity.A.is("agree");
        String v2 = cri.sanity.A.gets("ver");
        int v1 = cri.sanity.A.geti("bt_count");
        cri.sanity.A.edit().clear();
        cri.sanity.P.setDefaults();
        this.this$1.this$0.setChecked("enabled", cri.sanity.A.isEnabled());
        cri.sanity.screen.GeneralActivity.access$300(this.this$1.this$0);
        cri.sanity.A.put("agree", v0);
        cri.sanity.A.put("ver", v2);
        cri.sanity.A.putc("bt_count", v1);
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$6 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$6(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034127), new cri.sanity.screen.GeneralActivity$6$1(this), 0);
        return 1;
    }
}
package cri.sanity.screen;
 class GeneralActivity$7$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GeneralActivity$7 this$1;

    GeneralActivity$7$1(cri.sanity.screen.GeneralActivity$7 p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.P.removeFilters();
        cri.sanity.screen.GeneralActivity$7.access$500(this.this$1).setEnabled(0);
        return;
    }
}
package cri.sanity.screen;
 class GeneralActivity$7 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.GeneralActivity this$0;

    GeneralActivity$7(cri.sanity.screen.GeneralActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    static synthetic android.preference.Preference access$500(cri.sanity.screen.GeneralActivity$7 p1)
    {
        return p1.pref;
    }

    public boolean on()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034117), new cri.sanity.screen.GeneralActivity$7$1(this), 0);
        return 1;
    }
}
package cri.sanity.screen;
public class GeneralActivity extends cri.sanity.ScreenActivity {

    public GeneralActivity()
    {
        return;
    }

    static synthetic boolean access$202(cri.sanity.screen.GeneralActivity p0, boolean p1)
    {
        p0.skipAllKeys = p1;
        return p1;
    }

    static synthetic void access$300(cri.sanity.screen.GeneralActivity p0)
    {
        p0.updateScreenPrefs();
        return;
    }

    static synthetic boolean access$402(cri.sanity.screen.GeneralActivity p0, boolean p1)
    {
        p0.skipAllKeys = p1;
        return p1;
    }

    private void updateScreenPrefs()
    {
        String[] v0_1 = new String[2];
        v0_1[0] = "force_bt_audio";
        v0_1[1] = "reverse_proximity";
        this.updatePrefs(v0_1);
        String[] v0_0 = new String[4];
        v0_0[0] = "silent_limit";
        v0_0[1] = "airplane_limit";
        v0_0[2] = "pwd_clear";
        v0_0[3] = "pwd";
        this.updatePrefsNoDep(v0_0);
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        String v1_4;
        super.onCreate(p4);
        cri.sanity.Admin.prefSetup(this.pref("admin"));
        this.on("quick_start", new cri.sanity.screen.GeneralActivity$1(this));
        this.on("force_bt_audio", new cri.sanity.screen.GeneralActivity$2(this));
        android.preference.Preference v0 = this.pref("reverse_proximity");
        if ((!v0.isEnabled()) || (cri.sanity.A.sensorProxim() == null)) {
            v1_4 = 0;
        } else {
            v1_4 = 1;
        }
        v0.setEnabled(v1_4);
        this.on(v0, new cri.sanity.screen.GeneralActivity$3(this));
        this.on("profile", new cri.sanity.screen.GeneralActivity$4(this));
        this.on("backup_prefs", new cri.sanity.screen.GeneralActivity$5(this));
        this.on("reset_prefs", new cri.sanity.screen.GeneralActivity$6(this));
        this.on("delete_filters", new cri.sanity.screen.GeneralActivity$7(this));
        return;
    }

    public void onResume()
    {
        cri.sanity.Admin.prefCheck(this.pref("admin"));
        super.onResume();
        return;
    }
}
package cri.sanity.screen;
 class GroupsActivity$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.GroupsActivity this$0;

    GroupsActivity$1(cri.sanity.screen.GroupsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.screen.GroupsActivity.access$202(this.this$0, 0);
        this.dismiss();
        this.this$0.finish();
        return;
    }
}
package cri.sanity.screen;
 class GroupsActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private String id;
    final synthetic cri.sanity.screen.GroupsActivity this$0;
    private String title;

    private GroupsActivity$Pref(cri.sanity.screen.GroupsActivity p2, String p3, String p4)
    {
        this.this$0 = p2;
        super(p2);
        super.id = p3;
        super.title = p4;
        super.setPersistent(0);
        super.setTitle(p4);
        super.setOnPreferenceChangeListener(super);
        return;
    }

    synthetic GroupsActivity$Pref(cri.sanity.screen.GroupsActivity p1, String p2, String p3, cri.sanity.screen.GroupsActivity$1 p4)
    {
        this(p1, p2, p3);
        return;
    }

    static synthetic String access$100(cri.sanity.screen.GroupsActivity$Pref p1)
    {
        return p1.id;
    }

    public int compareTo(android.preference.Preference p3)
    {
        return this.title.compareTo(((cri.sanity.screen.GroupsActivity$Pref) p3).title);
    }

    public bridge synthetic int compareTo(Object p2)
    {
        return this.compareTo(((android.preference.Preference) p2));
    }

    public boolean onPreferenceChange(android.preference.Preference p3, Object p4)
    {
        return cri.sanity.screen.GroupsActivity.access$202(this.this$0, 1);
    }
}
package cri.sanity.screen;
public class GroupsActivity extends cri.sanity.ScreenActivity {
    private static final String SEP = "\xa7";
    private boolean changed;
    private android.preference.PreferenceCategory prefGroup;
    private String sect;

    public GroupsActivity()
    {
        return;
    }

    static synthetic boolean access$202(cri.sanity.screen.GroupsActivity p0, boolean p1)
    {
        p0.changed = p1;
        return p1;
    }

    private void canc()
    {
        if (this.changed) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165609), new cri.sanity.screen.GroupsActivity$1(this), 0, 1);
        } else {
            this.finish();
        }
        return;
    }

    private String keyAll()
    {
        return new StringBuilder().append("filter_groups_").append(this.sect).toString();
    }

    private String keyCount()
    {
        return new StringBuilder().append("filter_groups_count_").append(this.sect).toString();
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append("filter_group_").append(p3).append(this.sect).toString();
    }

    private void readGroups()
    {
        String[][] v6 = cri.sanity.util.Contacts.fullGroups();
        int v12 = v6.length;
        if (v12 > 0) {
            String v16 = new StringBuilder().append("* ").append(cri.sanity.A.s(2131165223)).append(" *").toString();
            java.util.HashMap v14_1 = new java.util.HashMap(v12);
            cri.sanity.screen.GroupsActivity$Pref[] v3 = new cri.sanity.screen.GroupsActivity$Pref[v12];
            cri.sanity.screen.GroupsActivity$Pref[] v4_0 = v6;
            int v11_0 = v4_0.length;
            int v9_0 = 0;
            int v8 = 0;
            while (v9_0 < v11_0) {
                String[] v5 = v4_0[v9_0];
                String v10_1 = v5[0];
                cri.sanity.screen.GroupsActivity$Pref v13_4 = new cri.sanity.screen.GroupsActivity$Pref(this, v10_1, v5[1], 0);
                v14_1.put(v10_1, v13_4);
                int v7_1 = (v8 + 1);
                v3[v8] = v13_4;
                String v15 = v5[3];
                if (!cri.sanity.A.empty(v5[2])) {
                    if (v15.length() > 0) {
                        v15 = new StringBuilder().append(v15).append(10).toString();
                    }
                    v15 = new StringBuilder().append(v15).append(v16).toString();
                }
                v13_4.setSummary(v15);
                v9_0++;
                v8 = v7_1;
            }
            cri.sanity.screen.GroupsActivity$Pref[] v4_1 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v11_1 = v4_1.length;
            int v9_1 = 0;
            while (v9_1 < v11_1) {
                cri.sanity.screen.GroupsActivity$Pref v13_2 = ((cri.sanity.screen.GroupsActivity$Pref) v14_1.get(v4_1[v9_1]));
                if (v13_2 != null) {
                    this.prefGroup.addPreference(v13_2);
                    v13_2.setChecked(1);
                }
                v9_1++;
            }
            java.util.Arrays.sort(v3);
            cri.sanity.screen.GroupsActivity$Pref[] v4_2 = v3;
            int v11_2 = v4_2.length;
            int v9_2 = 0;
            while (v9_2 < v11_2) {
                cri.sanity.screen.GroupsActivity$Pref v13_0 = v4_2[v9_2];
                if (!v13_0.isChecked()) {
                    this.prefGroup.addPreference(v13_0);
                }
                v9_2++;
            }
        }
        return;
    }

    private int saveList()
    {
        if (this.changed) {
            String[] v0 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v7 = v0.length;
            int v3 = 0;
            while (v3 < v7) {
                cri.sanity.A.del(this.keySect(v0[v3]));
                v3++;
            }
        }
        String v5 = "";
        int v6 = 0;
        int v8 = this.prefGroup.getPreferenceCount();
        if (v8 > 0) {
            StringBuilder v10_1 = new StringBuilder(256);
            int v1 = 1;
            int v2 = 0;
            while (v2 < v8) {
                cri.sanity.screen.GroupsActivity$Pref v9_1 = ((cri.sanity.screen.GroupsActivity$Pref) this.prefGroup.getPreference(v2));
                if (v9_1.isChecked()) {
                    v6++;
                    if (this.changed) {
                        String v4_0 = cri.sanity.screen.GroupsActivity$Pref.access$100(v9_1);
                        cri.sanity.A.put(this.keySect(v4_0), 1);
                        if (v1 == 0) {
                            v10_1.append("\u00a7");
                        } else {
                            v1 = 0;
                        }
                        v10_1.append(v4_0);
                    }
                }
                v2++;
            }
            if (v8 > v6) {
                v5 = v10_1.toString();
            }
        }
        if (this.changed) {
            cri.sanity.A.put(this.keyAll(), v5);
            cri.sanity.A.putc(this.keyCount(), v6);
        }
        return v6;
    }

    private void selall()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            int v0 = 0;
            while (v0 < v1) {
                ((cri.sanity.screen.GroupsActivity$Pref) this.prefGroup.getPreference(v0)).setChecked(1);
                v0++;
            }
            String v2_6 = cri.sanity.A.s(2131165624);
            Object[] v3 = new Object[1];
            v3[0] = new StringBuilder().append(v1).append("").toString();
            cri.sanity.A.toast(String.format(v2_6, v3));
            this.changed = 1;
        }
        return;
    }

    private void selnone()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            int v0 = 0;
            while (v0 < v1) {
                ((cri.sanity.screen.GroupsActivity$Pref) this.prefGroup.getPreference(v0)).setChecked(0);
                v0++;
            }
            this.changed = 1;
        }
        return;
    }

    public void onBackPressed()
    {
        if (!this.isFinishing()) {
            android.content.Intent v0_1 = new android.content.Intent();
            v0_1.putExtra("cri.sanity.Filter.id", this.saveList());
            this.setResult(-1, v0_1);
            super.onBackPressed();
        }
        return;
    }

    public void onCreate(android.os.Bundle p6)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.GroupsActivity.screener(cri.sanity.screen.GroupsActivity, 2130968579, 2130903057);
        super.onCreate(p6);
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("filter_groups"));
        android.content.Intent v0 = this.getIntent();
        this.sect = v0.getStringExtra("cri.sanity.Filter.id");
        String v1 = v0.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(v1)) {
            this.prefGroup.setTitle(new StringBuilder().append(this.prefGroup.getTitle()).append("  (").append(v1).append(41).toString());
        }
        this.readGroups();
        this.changed = 0;
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131296257, p3);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131361811:
                this.selall();
                v0_1 = 1;
                break;
            case 2131361812:
                this.selnone();
                break;
            case 2131361813:
            default:
                v0_1 = super.onOptionsItemSelected(p2);
                break;
            case 2131361814:
                this.canc();
                break;
        }
        return v0_1;
    }
}
package cri.sanity.screen;
public class NotifyActivity extends cri.sanity.ScreenActivity {

    public NotifyActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p6)
    {
        String[] v1_3;
        super.onCreate(p6);
        boolean v0 = cri.sanity.A.is("filter_enable_block");
        this.setEnabled("notify_rec_stop", cri.sanity.A.is("rec"));
        this.setEnabled("block_notify", v0);
        if ((!v0) || (!cri.sanity.A.is("blocksms"))) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        this.setEnabled("blocksms_notify", v1_3);
        this.setEnabled("anonym_notify", cri.sanity.A.is("anonym"));
        String[] v1_6 = new String[3];
        v1_6[0] = "block_notify";
        v1_6[1] = "blocksms_notify";
        v1_6[2] = "anonym_notify";
        this.fullOnly(v1_6);
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.NumsActivity this$0;

    NumsActivity$1(cri.sanity.screen.NumsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.screen.NumsActivity.access$200(this.this$0, ((String) cri.sanity.screen.NumsActivity.access$100(this.this$0).get(this.which)).toString());
        cri.sanity.screen.NumsActivity.access$302(this.this$0, 1);
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$2 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.NumsActivity this$0;

    NumsActivity$2(cri.sanity.screen.NumsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p4)
    {
        String v4_1 = p4.trim();
        if (v4_1.length() >= 2) {
            if (cri.sanity.screen.NumsActivity.access$400(this.this$0).get(v4_1) == null) {
                cri.sanity.screen.NumsActivity.access$200(this.this$0, v4_1);
                cri.sanity.screen.NumsActivity.access$302(this.this$0, 1);
            } else {
                cri.sanity.screen.NumsActivity v0_4 = cri.sanity.A.s(2131165669);
                Object[] v1_0 = new Object[1];
                v1_0[0] = v4_1;
                cri.sanity.A.toast(String.format(v0_4, v1_0));
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$3 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.NumsActivity this$0;
    final synthetic String val$numSel;
    final synthetic cri.sanity.screen.NumsActivity$Pref val$prefSel;

    NumsActivity$3(cri.sanity.screen.NumsActivity p1, String p2, cri.sanity.screen.NumsActivity$Pref p3)
    {
        this.this$0 = p1;
        this.val$numSel = p2;
        this.val$prefSel = p3;
        return;
    }

    public void on(String p4)
    {
        String v4_1 = p4.trim();
        if (v4_1.length() >= 2) {
            if (!v4_1.equals(this.val$numSel)) {
                if (cri.sanity.screen.NumsActivity.access$400(this.this$0).get(v4_1) == null) {
                    cri.sanity.screen.NumsActivity$Pref.access$500(this.val$prefSel, v4_1);
                    cri.sanity.screen.NumsActivity.access$302(this.this$0, 1);
                } else {
                    cri.sanity.screen.NumsActivity v0_6 = cri.sanity.A.s(2131165669);
                    Object[] v1_0 = new Object[1];
                    v1_0[0] = v4_1;
                    cri.sanity.A.toast(String.format(v0_6, v1_0));
                }
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.NumsActivity this$0;

    NumsActivity$4(cri.sanity.screen.NumsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        if (!cri.sanity.screen.NumsActivity.access$600(this.this$0).isEmpty()) {
            java.util.Iterator v0 = ((java.util.Stack) cri.sanity.screen.NumsActivity.access$600(this.this$0).clone()).iterator();
            while (v0.hasNext()) {
                cri.sanity.screen.NumsActivity$Pref v1_1 = ((cri.sanity.screen.NumsActivity$Pref) v0.next());
                cri.sanity.screen.NumsActivity.access$400(this.this$0).remove(cri.sanity.screen.NumsActivity$Pref.access$000(v1_1));
                cri.sanity.screen.NumsActivity.access$700(this.this$0).removePreference(v1_1);
                cri.sanity.screen.NumsActivity.access$600(this.this$0).remove(v1_1);
            }
            cri.sanity.screen.NumsActivity.access$302(this.this$0, 1);
        }
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$5 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.NumsActivity this$0;

    NumsActivity$5(cri.sanity.screen.NumsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.screen.NumsActivity.access$302(this.this$0, 0);
        this.dismiss();
        this.this$0.finish();
        return;
    }
}
package cri.sanity.screen;
 class NumsActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    final synthetic cri.sanity.screen.NumsActivity this$0;

    NumsActivity$Pref(cri.sanity.screen.NumsActivity p2, String p3)
    {
        this.this$0 = p2;
        super(p2);
        super.setPersistent(0);
        super.setNum(p3);
        super.setOnPreferenceChangeListener(super);
        return;
    }

    static synthetic String access$000(cri.sanity.screen.NumsActivity$Pref p1)
    {
        return p1.getNum();
    }

    static synthetic void access$500(cri.sanity.screen.NumsActivity$Pref p0, String p1)
    {
        p0.setNum(p1);
        return;
    }

    private String getNum()
    {
        return this.getTitle().toString();
    }

    private void setNum(String p2)
    {
        this.setTitle(p2.trim());
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        if (!((Boolean) p3).booleanValue()) {
            cri.sanity.screen.NumsActivity.access$600(this.this$0).remove(this);
        } else {
            cri.sanity.screen.NumsActivity.access$600(this.this$0).push(this);
        }
        return 1;
    }
}
package cri.sanity.screen;
public class NumsActivity extends cri.sanity.ScreenActivity {
    private static final int CODE_CALLOG = 1;
    private static final int MAX_CALLOGS = 30;
    private static final String SEP = "\xa7";
    private java.util.List callog;
    private boolean changed;
    private android.preference.PreferenceCategory prefGroup;
    private java.util.Map prefs;
    private String sect;
    private java.util.Stack selected;

    public NumsActivity()
    {
        this.selected = new java.util.Stack();
        this.prefs = new java.util.HashMap();
        return;
    }

    static synthetic java.util.List access$100(cri.sanity.screen.NumsActivity p1)
    {
        return p1.callog;
    }

    static synthetic void access$200(cri.sanity.screen.NumsActivity p0, String p1)
    {
        p0.addnum(p1);
        return;
    }

    static synthetic boolean access$302(cri.sanity.screen.NumsActivity p0, boolean p1)
    {
        p0.changed = p1;
        return p1;
    }

    static synthetic java.util.Map access$400(cri.sanity.screen.NumsActivity p1)
    {
        return p1.prefs;
    }

    static synthetic java.util.Stack access$600(cri.sanity.screen.NumsActivity p1)
    {
        return p1.selected;
    }

    static synthetic android.preference.PreferenceCategory access$700(cri.sanity.screen.NumsActivity p1)
    {
        return p1.prefGroup;
    }

    private void addnew()
    {
        cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165642), cri.sanity.util.PrefixNum.get(), new cri.sanity.screen.NumsActivity$2(this)).setInputType(3);
        return;
    }

    private void addnum(String p3)
    {
        cri.sanity.screen.NumsActivity$Pref v0_1 = new cri.sanity.screen.NumsActivity$Pref(this, p3);
        this.prefs.put(p3, v0_1);
        this.prefGroup.addPreference(v0_1);
        return;
    }

    private void callog()
    {
        if (this.callog == null) {
            Integer v0_12 = cri.sanity.A.resolver();
            cri.sanity.screen.NumsActivity$1 v2_1 = new String[1];
            v2_1[0] = "number";
            android.database.Cursor v6 = v0_12.query(android.provider.CallLog$Calls.CONTENT_URI, v2_1, "name IS NULL", 0, "date DESC");
            int v8_0 = Math.min(v6.getCount(), 30);
            this.callog = new java.util.Vector(v8_0);
            java.util.HashMap v10_1 = new java.util.HashMap(v8_0);
            if (v6.moveToFirst()) {
                int v7 = v6.getColumnIndex("number");
                int v8_1 = 0;
                do {
                    String v9 = v6.getString(v7);
                    if ((v9 != null) && ((v9.length() >= 3) && ((this.prefs.get(v9) == null) && (v10_1.get(v9) == null)))) {
                        this.callog.add(v9);
                        v10_1.put(v9, Integer.valueOf(1));
                        v8_1++;
                        if (v8_1 > 30) {
                            break;
                        }
                    }
                } while(v6.moveToNext());
            }
            v6.close();
        }
        int v8_2 = this.callog.size();
        if (v8_2 > 0) {
            cri.sanity.screen.NumsActivity$1 v2_0 = new String[v8_2];
            cri.sanity.util.Alert.choose(cri.sanity.A.s(2131165653), ((String[]) ((String[]) this.callog.toArray(v2_0))), new cri.sanity.screen.NumsActivity$1(this));
        } else {
            cri.sanity.A.toast(2131165654);
        }
        return;
    }

    private void canc()
    {
        if (this.changed) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165609), new cri.sanity.screen.NumsActivity$5(this), 0, 1);
        } else {
            this.finish();
        }
        return;
    }

    private void change()
    {
        if (!this.selected.isEmpty()) {
            cri.sanity.screen.NumsActivity$Pref v1_1 = ((cri.sanity.screen.NumsActivity$Pref) this.selected.peek());
            String v0 = cri.sanity.screen.NumsActivity$Pref.access$000(v1_1);
            cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165642), v0, new cri.sanity.screen.NumsActivity$3(this, v0, v1_1)).setInputType(3);
        }
        return;
    }

    private void delete()
    {
        int v0 = this.selected.size();
        if (v0 >= 1) {
            String v1_2;
            if (v0 <= 1) {
                v1_2 = cri.sanity.A.s(2131165607);
            } else {
                String v1_1 = cri.sanity.A.s(2131165608);
                cri.sanity.screen.NumsActivity$4 v2_0 = new Object[1];
                v2_0[0] = new StringBuilder().append(v0).append("").toString();
                v1_2 = String.format(v1_1, v2_0);
            }
            cri.sanity.util.Alert.msg(v1_2, new cri.sanity.screen.NumsActivity$4(this), 0, 1);
        }
        return;
    }

    private String keyAll()
    {
        return new StringBuilder().append("filter_nums_").append(this.sect).toString();
    }

    private String keyCount()
    {
        return new StringBuilder().append("filter_nums_count_").append(this.sect).toString();
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append("filter_num_").append(p3).append(this.sect).toString();
    }

    private void selall()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            this.selected.clear();
            int v0 = 0;
            while (v0 < v1) {
                cri.sanity.screen.NumsActivity$Pref v2_1 = ((cri.sanity.screen.NumsActivity$Pref) this.prefGroup.getPreference(v0));
                v2_1.setChecked(1);
                this.selected.add(v2_1);
                v0++;
            }
            if (v1 > 2) {
                String v3_2 = cri.sanity.A.s(2131165624);
                Object[] v4_1 = new Object[1];
                v4_1[0] = new StringBuilder().append(v1).append("").toString();
                cri.sanity.A.toast(String.format(v3_2, v4_1));
            }
        }
        return;
    }

    private void selnone()
    {
        java.util.Iterator v0 = this.selected.iterator();
        while (v0.hasNext()) {
            ((cri.sanity.screen.NumsActivity$Pref) v0.next()).setChecked(0);
        }
        this.selected.clear();
        return;
    }

    public void onActivityResult(int p2, int p3, android.content.Intent p4)
    {
        // Both branches of the condition point to the same code.
        // if ((p4 != null) && (p2 == 1)) {
            return;
        // }
    }

    public void onBackPressed()
    {
        if (this.changed) {
            String[] v0 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v3 = v0.length;
            int v2 = 0;
            while (v2 < v3) {
                cri.sanity.A.del(this.keySect(v0[v2].trim()));
                v2++;
            }
            String v6 = "";
            int v4 = this.prefGroup.getPreferenceCount();
            if (v4 > 0) {
                String v5_0 = cri.sanity.screen.NumsActivity$Pref.access$000(((cri.sanity.screen.NumsActivity$Pref) this.prefGroup.getPreference(0)));
                cri.sanity.A.put(this.keySect(v5_0), 1);
                StringBuilder v7_1 = new StringBuilder(v5_0);
                int v1_0 = 1;
                while (v1_0 < v4) {
                    String v5_1 = cri.sanity.screen.NumsActivity$Pref.access$000(((cri.sanity.screen.NumsActivity$Pref) this.prefGroup.getPreference(v1_0)));
                    cri.sanity.A.put(this.keySect(v5_1), 1);
                    v7_1.append("\u00a7").append(v5_1);
                    v1_0++;
                }
                v6 = v7_1.toString();
            }
            cri.sanity.A.put(this.keyAll(), v6);
            cri.sanity.A.putc(this.keyCount(), v4);
        }
        int v1_2 = new android.content.Intent();
        v1_2.putExtra("cri.sanity.Filter.id", this.prefGroup.getPreferenceCount());
        this.setResult(-1, v1_2);
        super.onBackPressed();
        return;
    }

    public void onCreate(android.os.Bundle p11)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.NumsActivity.screener(cri.sanity.screen.NumsActivity, 2130968580, 2130903060);
        super.onCreate(p11);
        this.changed = 0;
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("filter_nums"));
        android.content.Intent v1 = this.getIntent();
        this.sect = v1.getStringExtra("cri.sanity.Filter.id");
        String v6 = v1.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(v6)) {
            this.prefGroup.setTitle(new StringBuilder().append(this.prefGroup.getTitle()).append("  (").append(v6).append(41).toString());
        }
        String v5 = cri.sanity.A.gets(this.keyAll());
        if (!cri.sanity.A.empty(v5)) {
            String[] v0 = v5.split("\u00a7");
            int v3 = v0.length;
            int v2 = 0;
            while (v2 < v3) {
                this.addnum(v0[v2]);
                v2++;
            }
        } else {
            cri.sanity.A.toast(2131165644);
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131296259, p3);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131361810:
                this.delete();
                v0_1 = 1;
                break;
            case 2131361811:
                this.selall();
                break;
            case 2131361812:
                this.selnone();
                break;
            case 2131361814:
                this.canc();
                break;
            case 2131361829:
                this.addnew();
                break;
            case 2131361830:
                this.callog();
                break;
            case 2131361831:
                this.change();
                break;
            default:
                v0_1 = super.onOptionsItemSelected(p2);
        }
        return v0_1;
    }
}
package cri.sanity.screen;
 class PrefixActivity$1 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.PrefixActivity this$0;

    PrefixActivity$1(cri.sanity.screen.PrefixActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p4)
    {
        String v4_1 = p4.trim();
        if (v4_1.length() >= 2) {
            if (cri.sanity.screen.PrefixActivity.access$100(this.this$0).get(v4_1) == null) {
                cri.sanity.screen.PrefixActivity.access$200(this.this$0, v4_1);
                cri.sanity.screen.PrefixActivity.access$302(this.this$0, 1);
            } else {
                cri.sanity.screen.PrefixActivity v0_4 = cri.sanity.A.s(2131165669);
                Object[] v1_0 = new Object[1];
                v1_0[0] = v4_1;
                cri.sanity.A.toast(String.format(v0_4, v1_0));
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class PrefixActivity$2 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.PrefixActivity this$0;
    final synthetic String val$numSel;
    final synthetic cri.sanity.screen.PrefixActivity$Pref val$prefSel;

    PrefixActivity$2(cri.sanity.screen.PrefixActivity p1, String p2, cri.sanity.screen.PrefixActivity$Pref p3)
    {
        this.this$0 = p1;
        this.val$numSel = p2;
        this.val$prefSel = p3;
        return;
    }

    public void on(String p4)
    {
        String v4_1 = p4.trim();
        if (v4_1.length() >= 2) {
            if (!v4_1.equals(this.val$numSel)) {
                if (cri.sanity.screen.PrefixActivity.access$100(this.this$0).get(v4_1) == null) {
                    cri.sanity.screen.PrefixActivity$Pref.access$400(this.val$prefSel, v4_1);
                    cri.sanity.screen.PrefixActivity.access$302(this.this$0, 1);
                } else {
                    cri.sanity.screen.PrefixActivity v0_6 = cri.sanity.A.s(2131165669);
                    Object[] v1_0 = new Object[1];
                    v1_0[0] = v4_1;
                    cri.sanity.A.toast(String.format(v0_6, v1_0));
                }
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class PrefixActivity$3 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.PrefixActivity this$0;

    PrefixActivity$3(cri.sanity.screen.PrefixActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        if (!cri.sanity.screen.PrefixActivity.access$500(this.this$0).isEmpty()) {
            java.util.Iterator v0 = ((java.util.Stack) cri.sanity.screen.PrefixActivity.access$500(this.this$0).clone()).iterator();
            while (v0.hasNext()) {
                cri.sanity.screen.PrefixActivity$Pref v1_1 = ((cri.sanity.screen.PrefixActivity$Pref) v0.next());
                cri.sanity.screen.PrefixActivity.access$100(this.this$0).remove(cri.sanity.screen.PrefixActivity$Pref.access$000(v1_1));
                cri.sanity.screen.PrefixActivity.access$600(this.this$0).removePreference(v1_1);
                cri.sanity.screen.PrefixActivity.access$500(this.this$0).remove(v1_1);
            }
            cri.sanity.screen.PrefixActivity.access$302(this.this$0, 1);
        }
        return;
    }
}
package cri.sanity.screen;
 class PrefixActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.PrefixActivity this$0;

    PrefixActivity$4(cri.sanity.screen.PrefixActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.screen.PrefixActivity.access$302(this.this$0, 0);
        this.dismiss();
        this.this$0.finish();
        return;
    }
}
package cri.sanity.screen;
 class PrefixActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    final synthetic cri.sanity.screen.PrefixActivity this$0;

    PrefixActivity$Pref(cri.sanity.screen.PrefixActivity p2, String p3)
    {
        this.this$0 = p2;
        super(p2);
        super.setPersistent(0);
        super.setNum(p3);
        super.setOnPreferenceChangeListener(super);
        return;
    }

    static synthetic String access$000(cri.sanity.screen.PrefixActivity$Pref p1)
    {
        return p1.getNum();
    }

    static synthetic void access$400(cri.sanity.screen.PrefixActivity$Pref p0, String p1)
    {
        p0.setNum(p1);
        return;
    }

    private String getNum()
    {
        return this.getTitle().toString();
    }

    private void setNum(String p2)
    {
        this.setTitle(p2.trim());
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        if (!((Boolean) p3).booleanValue()) {
            cri.sanity.screen.PrefixActivity.access$500(this.this$0).remove(this);
        } else {
            cri.sanity.screen.PrefixActivity.access$500(this.this$0).push(this);
        }
        return 1;
    }
}
package cri.sanity.screen;
public class PrefixActivity extends cri.sanity.ScreenActivity {
    private static final String SEP = "\xa7";
    private boolean changed;
    private android.preference.PreferenceCategory prefGroup;
    private java.util.Map prefs;
    private String sect;
    private java.util.Stack selected;

    public PrefixActivity()
    {
        this.selected = new java.util.Stack();
        this.prefs = new java.util.HashMap();
        return;
    }

    static synthetic java.util.Map access$100(cri.sanity.screen.PrefixActivity p1)
    {
        return p1.prefs;
    }

    static synthetic void access$200(cri.sanity.screen.PrefixActivity p0, String p1)
    {
        p0.addnum(p1);
        return;
    }

    static synthetic boolean access$302(cri.sanity.screen.PrefixActivity p0, boolean p1)
    {
        p0.changed = p1;
        return p1;
    }

    static synthetic java.util.Stack access$500(cri.sanity.screen.PrefixActivity p1)
    {
        return p1.selected;
    }

    static synthetic android.preference.PreferenceCategory access$600(cri.sanity.screen.PrefixActivity p1)
    {
        return p1.prefGroup;
    }

    private void addnew()
    {
        cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165643), cri.sanity.util.PrefixNum.get(), new cri.sanity.screen.PrefixActivity$1(this)).setInputType(3);
        return;
    }

    private void addnum(String p3)
    {
        cri.sanity.screen.PrefixActivity$Pref v0_1 = new cri.sanity.screen.PrefixActivity$Pref(this, p3);
        this.prefs.put(p3, v0_1);
        this.prefGroup.addPreference(v0_1);
        return;
    }

    private void canc()
    {
        if (this.changed) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165609), new cri.sanity.screen.PrefixActivity$4(this), 0, 1);
        } else {
            this.finish();
        }
        return;
    }

    private void change()
    {
        if (!this.selected.isEmpty()) {
            cri.sanity.screen.PrefixActivity$Pref v1_1 = ((cri.sanity.screen.PrefixActivity$Pref) this.selected.peek());
            String v0 = cri.sanity.screen.PrefixActivity$Pref.access$000(v1_1);
            cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165643), v0, new cri.sanity.screen.PrefixActivity$2(this, v0, v1_1)).setInputType(3);
        }
        return;
    }

    private void delete()
    {
        int v0 = this.selected.size();
        if (v0 >= 1) {
            String v1_2;
            if (v0 <= 1) {
                v1_2 = cri.sanity.A.s(2131165607);
            } else {
                String v1_1 = cri.sanity.A.s(2131165608);
                cri.sanity.screen.PrefixActivity$3 v2_0 = new Object[1];
                v2_0[0] = new StringBuilder().append(v0).append("").toString();
                v1_2 = String.format(v1_1, v2_0);
            }
            cri.sanity.util.Alert.msg(v1_2, new cri.sanity.screen.PrefixActivity$3(this), 0, 1);
        }
        return;
    }

    private String keyAll()
    {
        return new StringBuilder().append("filter_prefix_").append(this.sect).toString();
    }

    private String keyCount()
    {
        return new StringBuilder().append("filter_prefix_count_").append(this.sect).toString();
    }

    private String keySect(String p3)
    {
        return new StringBuilder().append("filter_prefix_").append(p3).append(this.sect).toString();
    }

    private void selall()
    {
        int v1 = this.prefGroup.getPreferenceCount();
        if (v1 >= 1) {
            this.selected.clear();
            int v0 = 0;
            while (v0 < v1) {
                cri.sanity.screen.PrefixActivity$Pref v2_1 = ((cri.sanity.screen.PrefixActivity$Pref) this.prefGroup.getPreference(v0));
                v2_1.setChecked(1);
                this.selected.add(v2_1);
                v0++;
            }
            if (v1 > 2) {
                String v3_2 = cri.sanity.A.s(2131165624);
                Object[] v4_1 = new Object[1];
                v4_1[0] = new StringBuilder().append(v1).append("").toString();
                cri.sanity.A.toast(String.format(v3_2, v4_1));
            }
        }
        return;
    }

    private void selnone()
    {
        java.util.Iterator v0 = this.selected.iterator();
        while (v0.hasNext()) {
            ((cri.sanity.screen.PrefixActivity$Pref) v0.next()).setChecked(0);
        }
        this.selected.clear();
        return;
    }

    public void onBackPressed()
    {
        if (this.changed) {
            String[] v0 = cri.sanity.A.gets(this.keyAll()).split("\u00a7");
            int v3 = v0.length;
            int v2 = 0;
            while (v2 < v3) {
                cri.sanity.A.del(this.keySect(v0[v2].trim()));
                v2++;
            }
            String v6 = "";
            int v4 = this.prefGroup.getPreferenceCount();
            if (v4 > 0) {
                String v5_0 = cri.sanity.screen.PrefixActivity$Pref.access$000(((cri.sanity.screen.PrefixActivity$Pref) this.prefGroup.getPreference(0)));
                cri.sanity.A.put(this.keySect(v5_0), 1);
                StringBuilder v7_1 = new StringBuilder(v5_0);
                int v1_0 = 1;
                while (v1_0 < v4) {
                    String v5_1 = cri.sanity.screen.PrefixActivity$Pref.access$000(((cri.sanity.screen.PrefixActivity$Pref) this.prefGroup.getPreference(v1_0)));
                    cri.sanity.A.put(this.keySect(v5_1), 1);
                    v7_1.append("\u00a7").append(v5_1);
                    v1_0++;
                }
                v6 = v7_1.toString();
            }
            cri.sanity.A.put(this.keyAll(), v6);
            cri.sanity.A.putc(this.keyCount(), v4);
        }
        int v1_2 = new android.content.Intent();
        v1_2.putExtra("cri.sanity.Filter.id", this.prefGroup.getPreferenceCount());
        this.setResult(-1, v1_2);
        super.onBackPressed();
        return;
    }

    public void onCreate(android.os.Bundle p11)
    {
        this.skipAllKeys = 1;
        cri.sanity.screen.PrefixActivity.screener(cri.sanity.screen.PrefixActivity, 2130968581, 2130903062);
        super.onCreate(p11);
        this.changed = 0;
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("filter_prefix"));
        android.content.Intent v1 = this.getIntent();
        this.sect = v1.getStringExtra("cri.sanity.Filter.id");
        String v6 = v1.getStringExtra("cri.sanity.Filter.title");
        if (!cri.sanity.A.empty(v6)) {
            this.prefGroup.setTitle(new StringBuilder().append(this.prefGroup.getTitle()).append("  (").append(v6).append(41).toString());
        }
        String v5 = cri.sanity.A.gets(this.keyAll());
        if (!cri.sanity.A.empty(v5)) {
            String[] v0 = v5.split("\u00a7");
            int v3 = v0.length;
            int v2 = 0;
            while (v2 < v3) {
                this.addnum(v0[v2]);
                v2++;
            }
        } else {
            cri.sanity.A.toast(2131165644);
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131296260, p3);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131361810:
                this.delete();
                v0_1 = 1;
                break;
            case 2131361811:
                this.selall();
                break;
            case 2131361812:
                this.selnone();
                break;
            case 2131361814:
                this.canc();
                break;
            case 2131361829:
                this.addnew();
                break;
            case 2131361831:
                this.change();
                break;
            default:
                v0_1 = super.onOptionsItemSelected(p2);
        }
        return v0_1;
    }
}
package cri.sanity.screen;
 class ProfileActivity$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.ProfileActivity this$0;

    ProfileActivity$1(cri.sanity.screen.ProfileActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.dismiss();
        cri.sanity.screen.ProfileActivity.access$100(this.this$0);
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$2 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.ProfileActivity this$0;

    ProfileActivity$2(cri.sanity.screen.ProfileActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on(String p8)
    {
        String v8_1 = cri.sanity.A.cleanFn(p8, 1);
        if (!cri.sanity.A.empty(v8_1)) {
            String v1_1 = cri.sanity.A.sdcardDir();
            if (v1_1 != null) {
                String v1_0 = new StringBuilder().append(v1_1).append(47).append(v8_1).append(".prf").toString();
                java.io.File v0_0 = new java.io.File(v1_0);
                if (!v0_0.exists()) {
                    String v2 = cri.sanity.A.gets("prf_name");
                    cri.sanity.A.putc("prf_name", v8_1);
                    if (!cri.sanity.P.backup(v1_0)) {
                        if (!cri.sanity.A.empty(v2)) {
                            cri.sanity.A.putc("prf_name", v2);
                        }
                        cri.sanity.A.toast(2131165633);
                    } else {
                        cri.sanity.screen.ProfileActivity.access$200(this.this$0).addPreference(new cri.sanity.screen.ProfileActivity$Pref(this.this$0, v0_0, v8_1, 0));
                    }
                } else {
                    int v3_17 = cri.sanity.A.s(2131165669);
                    cri.sanity.screen.ProfileActivity$Pref v4_4 = new Object[1];
                    v4_4[0] = v8_1;
                    cri.sanity.A.toast(String.format(v3_17, v4_4));
                }
            } else {
                cri.sanity.A.toast(2131165663);
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$3 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.ProfileActivity this$0;

    ProfileActivity$3(cri.sanity.screen.ProfileActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.dismiss();
        cri.sanity.screen.ProfileActivity.access$400(this.this$0);
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$4 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.ProfileActivity this$0;
    final synthetic cri.sanity.screen.ProfileActivity$Pref val$p;

    ProfileActivity$4(cri.sanity.screen.ProfileActivity p1, cri.sanity.screen.ProfileActivity$Pref p2)
    {
        this.this$0 = p1;
        this.val$p = p2;
        return;
    }

    public void on()
    {
        String v0 = cri.sanity.A.gets("prf_name");
        cri.sanity.A.putc("prf_name", cri.sanity.screen.ProfileActivity$Pref.access$700(this.val$p));
        if (!cri.sanity.P.backup(cri.sanity.screen.ProfileActivity$Pref.access$500(this.val$p).getAbsolutePath())) {
            cri.sanity.A.putc("prf_name", v0);
            cri.sanity.A.toast(2131165633);
        } else {
            if (!cri.sanity.screen.ProfileActivity$Pref.access$300(this.val$p)) {
                cri.sanity.screen.ProfileActivity$Pref.access$600(this.val$p, 1);
            } else {
                cri.sanity.screen.ProfileActivity$Pref.access$800(this.val$p);
            }
        }
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$5 extends cri.sanity.util.Alert$Edited {
    final synthetic cri.sanity.screen.ProfileActivity this$0;
    final synthetic cri.sanity.screen.ProfileActivity$Pref val$p;

    ProfileActivity$5(cri.sanity.screen.ProfileActivity p1, cri.sanity.screen.ProfileActivity$Pref p2)
    {
        this.this$0 = p1;
        this.val$p = p2;
        return;
    }

    public void on(String p7)
    {
        String v7_1 = cri.sanity.A.cleanFn(p7, 1);
        if (!cri.sanity.A.empty(v7_1)) {
            if (!v7_1.equals(cri.sanity.screen.ProfileActivity$Pref.access$700(this.val$p))) {
                java.io.File v1_1 = new java.io.File(cri.sanity.screen.ProfileActivity$Pref.access$500(this.val$p).getParentFile().getAbsolutePath(), new StringBuilder().append(v7_1).append(".prf").toString());
                if (!v1_1.exists()) {
                    try {
                        if (cri.sanity.screen.ProfileActivity$Pref.access$500(this.val$p).renameTo(v1_1)) {
                            cri.sanity.screen.ProfileActivity$Pref.access$702(this.val$p, v7_1);
                            cri.sanity.screen.ProfileActivity$Pref.access$502(this.val$p, v1_1);
                            cri.sanity.screen.ProfileActivity$Pref.access$900(this.val$p);
                            cri.sanity.screen.ProfileActivity$Pref.access$800(this.val$p);
                            if (cri.sanity.screen.ProfileActivity$Pref.access$300(this.val$p)) {
                                cri.sanity.A.putc("prf_name", v7_1);
                            }
                        } else {
                            throw new Exception();
                        }
                    } catch (Exception v0) {
                        cri.sanity.A.toast(2131165667);
                    }
                } else {
                    String v2_22 = cri.sanity.A.s(2131165669);
                    Object[] v3_5 = new Object[1];
                    v3_5[0] = v7_1;
                    cri.sanity.A.toast(String.format(v2_22, v3_5));
                }
            }
        } else {
            cri.sanity.A.toast(2131165666);
        }
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$6 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.ProfileActivity this$0;

    ProfileActivity$6(cri.sanity.screen.ProfileActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        try {
            if (cri.sanity.screen.ProfileActivity$Pref.access$500(cri.sanity.screen.ProfileActivity.access$1000(this.this$0)).delete()) {
                cri.sanity.screen.ProfileActivity.access$200(this.this$0).removePreference(cri.sanity.screen.ProfileActivity.access$1000(this.this$0));
                if (!cri.sanity.screen.ProfileActivity$Pref.access$300(cri.sanity.screen.ProfileActivity.access$1000(this.this$0))) {
                    if (cri.sanity.screen.ProfileActivity.access$1100(this.this$0) == null) {
                        cri.sanity.screen.ProfileActivity.access$1002(this.this$0, 0);
                    } else {
                        cri.sanity.screen.ProfileActivity.access$1100(this.this$0).setChecked(1);
                    }
                } else {
                    cri.sanity.screen.ProfileActivity.access$1002(this.this$0, cri.sanity.screen.ProfileActivity.access$1102(this.this$0, 0));
                    cri.sanity.A.delc("prf_name");
                }
            } else {
                throw new Exception();
            }
        } catch (Exception v0) {
            cri.sanity.A.toast(2131165668);
        }
        return;
    }
}
package cri.sanity.screen;
 class ProfileActivity$Pref extends android.preference.CheckBoxPreference implements android.preference.Preference$OnPreferenceChangeListener {
    private java.io.File file;
    private String name;
    final synthetic cri.sanity.screen.ProfileActivity this$0;

    private ProfileActivity$Pref(cri.sanity.screen.ProfileActivity p6, java.io.File p7, String p8)
    {
        this.this$0 = p6;
        super(p6);
        super.file = p7;
        super.name = p7.getName();
        super.name = super.name.substring(0, super.name.lastIndexOf(46));
        super.setPersistent(0);
        if (!super.name.equals(p8)) {
            super.setTitle(super.name);
            super.setSummary();
        } else {
            super.setChecked(1);
            super.setActive(1);
        }
        super.setWidgetLayoutResource(2130903044);
        super.setOnPreferenceChangeListener(super);
        return;
    }

    synthetic ProfileActivity$Pref(cri.sanity.screen.ProfileActivity p1, java.io.File p2, String p3, cri.sanity.screen.ProfileActivity$1 p4)
    {
        this(p1, p2, p3);
        return;
    }

    static synthetic boolean access$300(cri.sanity.screen.ProfileActivity$Pref p1)
    {
        return p1.isActive();
    }

    static synthetic java.io.File access$500(cri.sanity.screen.ProfileActivity$Pref p1)
    {
        return p1.file;
    }

    static synthetic java.io.File access$502(cri.sanity.screen.ProfileActivity$Pref p0, java.io.File p1)
    {
        p0.file = p1;
        return p1;
    }

    static synthetic void access$600(cri.sanity.screen.ProfileActivity$Pref p0, boolean p1)
    {
        p0.setActive(p1);
        return;
    }

    static synthetic String access$700(cri.sanity.screen.ProfileActivity$Pref p1)
    {
        return p1.name;
    }

    static synthetic String access$702(cri.sanity.screen.ProfileActivity$Pref p0, String p1)
    {
        p0.name = p1;
        return p1;
    }

    static synthetic void access$800(cri.sanity.screen.ProfileActivity$Pref p0)
    {
        p0.setSummary();
        return;
    }

    static synthetic void access$900(cri.sanity.screen.ProfileActivity$Pref p0)
    {
        p0.setTitle();
        return;
    }

    private boolean isActive()
    {
        int v0_2;
        if (this != cri.sanity.screen.ProfileActivity.access$1100(this.this$0)) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    private void setActive(boolean p3)
    {
        if (p3 != this.isActive()) {
            if (p3) {
                if (cri.sanity.screen.ProfileActivity.access$1100(this.this$0) != null) {
                    cri.sanity.screen.ProfileActivity.access$1100(this.this$0).setActive(0);
                }
                cri.sanity.screen.ProfileActivity.access$1102(this.this$0, this);
            } else {
                cri.sanity.screen.ProfileActivity.access$1102(this.this$0, 0);
            }
            this.setTitle();
            this.setSummary();
        }
        return;
    }

    private void setSummary()
    {
        String v0 = new StringBuilder().append(cri.sanity.screen.ProfileActivity.access$1200()).append(cri.sanity.A.date(this.file.lastModified())).toString();
        if (this.isActive()) {
            v0 = new StringBuilder().append(v0).append(cri.sanity.screen.ProfileActivity.access$1300()).toString();
        }
        this.setSummary(v0);
        return;
    }

    private void setTitle()
    {
        String v0_3;
        if (!this.isActive()) {
            v0_3 = this.name;
        } else {
            v0_3 = new StringBuilder().append(">> ").append(this.name).append(" <<").toString();
        }
        this.setTitle(v0_3);
        return;
    }

    public boolean onPreferenceChange(android.preference.Preference p2, Object p3)
    {
        if ((!((Boolean) p3).booleanValue()) && (this.isChecked())) {
            int v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public void setChecked(boolean p3)
    {
        if (p3 != this.isChecked()) {
            super.setChecked(p3);
            if (p3) {
                if (cri.sanity.screen.ProfileActivity.access$1000(this.this$0) != null) {
                    cri.sanity.screen.ProfileActivity.access$1000(this.this$0).setChecked(0);
                }
                cri.sanity.screen.ProfileActivity.access$1002(this.this$0, this);
            }
        }
        return;
    }
}
package cri.sanity.screen;
public class ProfileActivity extends cri.sanity.ScreenActivity implements java.io.FilenameFilter {
    private static final String LASTMOD = "";
    private static final String PRF_EXT = ".prf";
    private static final String SUM_ACTIVE = "";
    private static final String TITLE_ACTIVE_PREFIX = ">> ";
    private static final String TITLE_ACTIVE_SUFFIX = " <<";
    private cri.sanity.screen.ProfileActivity$Pref prefActive;
    private android.preference.PreferenceCategory prefGroup;
    private cri.sanity.screen.ProfileActivity$Pref prefSelected;

    static ProfileActivity()
    {
        cri.sanity.screen.ProfileActivity.SUM_ACTIVE = new StringBuilder().append("\n>>>  ").append(cri.sanity.A.s(2131165199)).append("  <<<").toString();
        cri.sanity.screen.ProfileActivity.LASTMOD = new StringBuilder().append(cri.sanity.A.s(2131165645)).append(":  ").toString();
        return;
    }

    public ProfileActivity()
    {
        return;
    }

    static synthetic void access$100(cri.sanity.screen.ProfileActivity p0)
    {
        p0.addnewReally();
        return;
    }

    static synthetic cri.sanity.screen.ProfileActivity$Pref access$1000(cri.sanity.screen.ProfileActivity p1)
    {
        return p1.prefSelected;
    }

    static synthetic cri.sanity.screen.ProfileActivity$Pref access$1002(cri.sanity.screen.ProfileActivity p0, cri.sanity.screen.ProfileActivity$Pref p1)
    {
        p0.prefSelected = p1;
        return p1;
    }

    static synthetic cri.sanity.screen.ProfileActivity$Pref access$1100(cri.sanity.screen.ProfileActivity p1)
    {
        return p1.prefActive;
    }

    static synthetic cri.sanity.screen.ProfileActivity$Pref access$1102(cri.sanity.screen.ProfileActivity p0, cri.sanity.screen.ProfileActivity$Pref p1)
    {
        p0.prefActive = p1;
        return p1;
    }

    static synthetic String access$1200()
    {
        return cri.sanity.screen.ProfileActivity.LASTMOD;
    }

    static synthetic String access$1300()
    {
        return cri.sanity.screen.ProfileActivity.SUM_ACTIVE;
    }

    static synthetic android.preference.PreferenceCategory access$200(cri.sanity.screen.ProfileActivity p1)
    {
        return p1.prefGroup;
    }

    static synthetic void access$400(cri.sanity.screen.ProfileActivity p0)
    {
        p0.activateReally();
        return;
    }

    private void activate()
    {
        if ((this.isSelected()) && (!cri.sanity.screen.ProfileActivity$Pref.access$300(this.prefSelected))) {
            if (!cri.sanity.A.has("prf_name")) {
                cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165603), new cri.sanity.screen.ProfileActivity$3(this), 0, 1);
            } else {
                this.activateReally();
            }
        }
        return;
    }

    private void activateReally()
    {
        if (cri.sanity.P.restore(cri.sanity.screen.ProfileActivity$Pref.access$500(this.prefSelected).getAbsolutePath())) {
            cri.sanity.screen.ProfileActivity$Pref.access$600(this.prefSelected, 1);
        } else {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165635));
        }
        return;
    }

    private void addnew()
    {
        if (this.prefActive != null) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165604), new cri.sanity.screen.ProfileActivity$1(this), 0, 1);
        } else {
            this.addnewReally();
        }
        return;
    }

    private void addnewReally()
    {
        cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165637), new cri.sanity.screen.ProfileActivity$2(this));
        return;
    }

    private void delete()
    {
        if (this.isSelected()) {
            String v0_3 = cri.sanity.A.s(2131165606);
            cri.sanity.screen.ProfileActivity$6 v1_2 = new Object[1];
            v1_2[0] = cri.sanity.screen.ProfileActivity$Pref.access$700(this.prefSelected);
            cri.sanity.util.Alert.msg(String.format(v0_3, v1_2), new cri.sanity.screen.ProfileActivity$6(this), 0, 1);
        }
        return;
    }

    private void empty(int p1)
    {
        cri.sanity.A.toast(p1);
        return;
    }

    private boolean isEmpty()
    {
        int v0_3;
        if (this.prefGroup.getPreferenceCount() <= 0) {
            cri.sanity.A.toast(2131165636);
            v0_3 = 1;
        } else {
            v0_3 = 0;
        }
        return v0_3;
    }

    private boolean isSelected()
    {
        int v0 = 0;
        if (!this.isEmpty()) {
            if (this.prefSelected == null) {
                cri.sanity.A.toast(2131165639);
            } else {
                v0 = 1;
            }
        }
        return v0;
    }

    private void rename()
    {
        if (this.isSelected()) {
            cri.sanity.screen.ProfileActivity$Pref v0 = this.prefSelected;
            cri.sanity.util.Alert.edit(cri.sanity.A.s(2131165638), cri.sanity.screen.ProfileActivity$Pref.access$700(v0), new cri.sanity.screen.ProfileActivity$5(this, v0));
        }
        return;
    }

    private void saveas()
    {
        if (this.isSelected()) {
            cri.sanity.screen.ProfileActivity$Pref v0 = this.prefSelected;
            String v1_3 = cri.sanity.A.s(2131165605);
            cri.sanity.screen.ProfileActivity$4 v2_2 = new Object[1];
            v2_2[0] = cri.sanity.screen.ProfileActivity$Pref.access$700(v0);
            cri.sanity.util.Alert.msg(String.format(v1_3, v2_2), new cri.sanity.screen.ProfileActivity$4(this, v0), 0, 1);
        }
        return;
    }

    private void showDetails()
    {
        if (this.isSelected()) {
            java.util.Map v7 = cri.sanity.P.load(cri.sanity.screen.ProfileActivity$Pref.access$500(this.prefSelected).getAbsolutePath());
            if (v7 != null) {
                java.util.Map v6 = cri.sanity.PrefGroups.intLabVals();
                StringBuilder v8_1 = new StringBuilder(2048);
                try {
                    String[][] v0 = cri.sanity.PrefGroups.sections();
                    int v5 = v0.length;
                    int v3 = 0;
                } catch (StringBuilder v12) {
                    cri.sanity.util.Alert.msg(cri.sanity.screen.ProfileActivity$Pref.access$700(this.prefSelected), v8_1.toString());
                }
                while (v3 < v5) {
                    String[] v10 = v0[v3];
                    v8_1.append("** ").append(cri.sanity.A.s(cri.sanity.A.rstring(v10[0]))).append(10);
                    int v9 = v10.length;
                    int v2 = 1;
                    while (v2 < v9) {
                        String v4 = v10[v2];
                        try {
                            int v11 = cri.sanity.A.rstring(new StringBuilder().append(v4).append("_title").toString());
                        } catch (Exception v1) {
                            if (!v4.startsWith("filter_enable_")) {
                            } else {
                                v11 = 2131165555;
                            }
                        }
                        if (v11 != 0) {
                            v8_1.append("- ").append(cri.sanity.A.s(v11)).append(": ").append(cri.sanity.screen.ProfileActivity.valShow(v6, v4, v7.get(v4))).append(10);
                        }
                        v2++;
                    }
                    v8_1.append(10);
                    v3++;
                }
            } else {
                cri.sanity.A.toast(2131165666);
            }
        }
        return;
    }

    private static String valShow(java.util.Map p9, String p10, Object p11)
    {
        String v11_1;
        if (!(p11 instanceof Integer)) {
            if (!(p11 instanceof Boolean)) {
                if (!(p11 instanceof Long)) {
                    if (!(p11 instanceof Float)) {
                        if (!(p11 instanceof String)) {
                            v11_1 = "[...]";
                        } else {
                            v11_1 = ((String) p11);
                        }
                    } else {
                        v11_1 = Float.toString(((Float) p11).floatValue());
                    }
                } else {
                    v11_1 = Long.toString(((Long) p11).longValue());
                }
            } else {
                boolean v7_5;
                if (!((Boolean) p11).booleanValue()) {
                    v7_5 = 2131165219;
                } else {
                    v7_5 = 2131165218;
                }
                v11_1 = cri.sanity.A.s(v7_5);
            }
        } else {
            int v5 = ((Integer) p11).intValue();
            android.util.Pair v3_1 = ((android.util.Pair) p9.get(p10));
            if (v3_1 != null) {
                String[] v1 = cri.sanity.A.resources().getStringArray(((Integer) v3_1.first).intValue());
                String[] v6 = cri.sanity.A.resources().getStringArray(((Integer) v3_1.second).intValue());
                String v4 = Integer.toString(v5);
                int v0 = 0;
                while (v0 < v6.length) {
                    if (!v6[v0].equals(v4)) {
                        v0++;
                    } else {
                        v11_1 = v1[v0];
                    }
                    return v11_1;
                }
            }
            if (v5 != -1) {
                v11_1 = Integer.toString(v5);
            } else {
                v11_1 = cri.sanity.A.s(2131165195);
            }
        }
        return v11_1;
    }

    public boolean accept(java.io.File p2, String p3)
    {
        return p3.endsWith(".prf");
    }

    public boolean isMainActivity()
    {
        return 1;
    }

    public void onCreate(android.os.Bundle p12)
    {
        this.prefSelected = 0;
        this.prefActive = 0;
        this.skipAllKeys = 1;
        cri.sanity.screen.ProfileActivity.screener(cri.sanity.screen.ProfileActivity, 2130968593, 2130903063);
        super.onCreate(p12);
        this.prefGroup = ((android.preference.PreferenceCategory) this.pref("profile"));
        String v1 = cri.sanity.A.sdcardDir();
        if (v1 != null) {
            java.io.File[] v3 = new java.io.File(v1).listFiles(this);
            if ((v3 != null) && (v3.length > 0)) {
                java.util.Arrays.sort(v3, 0, v3.length);
                String v6 = cri.sanity.A.gets("prf_name");
                java.io.File[] v0 = v3;
                int v5 = v0.length;
                int v4 = 0;
                while (v4 < v5) {
                    this.prefGroup.addPreference(new cri.sanity.screen.ProfileActivity$Pref(this, v0[v4], v6, 0));
                    v4++;
                }
                if ((this.prefSelected == null) && (cri.sanity.A.has("prf_name"))) {
                    cri.sanity.A.delc("prf_name");
                }
            } else {
                this.empty(2131165636);
            }
        } else {
            this.empty(2131165663);
        }
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu p3)
    {
        this.getMenuInflater().inflate(2131296261, p3);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem p2)
    {
        int v0_1;
        switch (p2.getItemId()) {
            case 2131361829:
                this.addnew();
                v0_1 = 1;
                break;
            case 2131361830:
            case 2131361831:
            default:
                v0_1 = super.onOptionsItemSelected(p2);
                break;
            case 2131361832:
                this.activate();
                break;
            case 2131361833:
                this.saveas();
                break;
            case 2131361834:
                this.rename();
                break;
            case 2131361835:
                this.delete();
                break;
            case 2131361836:
                this.showDetails();
                break;
            case 2131361837:
                cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034119));
                break;
        }
        return v0_1;
    }
}
package cri.sanity.screen;
public class ProximityActivity extends cri.sanity.ScreenActivity {

    public ProximityActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p3)
    {
        super.onCreate(p3);
        cri.sanity.Admin.prefSetup(this.pref("admin"));
        if (cri.sanity.A.sensorProxim() == null) {
            this.setEnabled("disable_proximity", 0);
            this.setEnabled("enable_proximity", 0);
            this.setEnabled("disable_delay_s", 0);
            this.setEnabled("enable_delay_s", 0);
            this.setEnabled("screen_off", 0);
            this.setEnabled("screen_on", 0);
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034126));
        }
        return;
    }

    public void onResume()
    {
        cri.sanity.Admin.prefCheck(this.pref("admin"));
        super.onResume();
        return;
    }
}
package cri.sanity.screen;
 class RecordActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$1(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        this.this$0.startActivity(new android.content.Intent(cri.sanity.A.app(), cri.sanity.screen.BrowseActivity));
        return 1;
    }
}
package cri.sanity.screen;
 class RecordActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$2(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        boolean v0;
        if (!((Boolean) this.value).booleanValue()) {
            v0 = cri.sanity.screen.RecordActivity.access$100();
        } else {
            v0 = cri.sanity.screen.RecordActivity.access$000();
        }
        if (!v0) {
            String v1_3 = cri.sanity.A.s(2131165665);
            Object[] v2_1 = new Object[1];
            v2_1[0] = cri.sanity.screen.RecordActivity.access$200();
            cri.sanity.util.Alert.msg(String.format(v1_3, v2_1));
        }
        return v0;
    }
}
package cri.sanity.screen;
 class RecordActivity$3 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$3(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if ((!((Boolean) this.value).booleanValue()) || ((!cri.sanity.A.is("auto_speaker")) && (!cri.sanity.screen.RecordActivity.access$300(this.this$0)))) {
            int v1_4 = 0;
        } else {
            v1_4 = 1;
        }
        this.this$0.setEnabled("rec_start_speaker", v1_4);
        return 1;
    }
}
package cri.sanity.screen;
 class RecordActivity$4 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$4(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.screen.RecordActivity v1_3;
        int v3 = 0;
        boolean v0 = ((Boolean) this.value).booleanValue();
        if ((!v0) || ((!cri.sanity.A.is("auto_speaker")) && (!cri.sanity.screen.RecordActivity.access$300(this.this$0)))) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        this.this$0.setEnabled("rec_stop_speaker", v1_3);
        if ((v0) && (cri.sanity.A.isFull())) {
            v3 = 1;
        }
        this.this$0.setEnabled("rec_stop_limit_s", v3);
        return 1;
    }
}
package cri.sanity.screen;
 class RecordActivity$5 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$5(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if ((!((Boolean) this.value).booleanValue()) && (cri.sanity.A.geti("rec_start_headset") == 0)) {
            int v0_1 = 0;
        } else {
            v0_1 = 1;
        }
        this.this$0.setEnabled("rec_start_times_s", v0_1);
        return 1;
    }
}
package cri.sanity.screen;
 class RecordActivity$6 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.RecordActivity this$0;

    RecordActivity$6(cri.sanity.screen.RecordActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if ((!cri.sanity.A.is("rec_start_speaker")) && (Integer.toString(0).equals(((String) this.value)))) {
            int v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        this.this$0.setEnabled("rec_start_times_s", v0_3);
        return 1;
    }
}
package cri.sanity.screen;
public class RecordActivity extends cri.sanity.ScreenActivity {
    private static final String REC_START_HEADSET = "rec_start_headset_s";
    private static final String REC_START_TIMES = "rec_start_times_s";
    private static final String REC_STOP_LIMIT = "rec_stop_limit_s";
    private boolean speakerCall;

    public RecordActivity()
    {
        return;
    }

    static synthetic boolean access$000()
    {
        return cri.sanity.screen.RecordActivity.scanEnable();
    }

    static synthetic boolean access$100()
    {
        return cri.sanity.screen.RecordActivity.scanDisable();
    }

    static synthetic String access$200()
    {
        return cri.sanity.screen.RecordActivity.scanFn();
    }

    static synthetic boolean access$300(cri.sanity.screen.RecordActivity p1)
    {
        return p1.speakerCall;
    }

    private static boolean scanAllowed()
    {
        int v0_2;
        if (cri.sanity.screen.RecordActivity.scanFile().exists()) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    private static boolean scanDisable()
    {
        java.io.File v0 = cri.sanity.screen.RecordActivity.scanFile();
        try {
            v0.createNewFile();
        } catch (boolean v1) {
        }
        return v0.exists();
    }

    private static boolean scanEnable()
    {
        java.io.File v0 = cri.sanity.screen.RecordActivity.scanFile();
        try {
            v0.delete();
        } catch (int v1) {
        }
        int v1_1;
        if (v0.exists()) {
            v1_1 = 0;
        } else {
            v1_1 = 1;
        }
        return v1_1;
    }

    private static java.io.File scanFile()
    {
        return new java.io.File(cri.sanity.screen.RecordActivity.scanFn());
    }

    private static String scanFn()
    {
        return new StringBuilder().append(cri.sanity.A.sdcardDir()).append("/.nomedia").toString();
    }

    private void updateEnabled()
    {
        String v2_13;
        int v4 = 0;
        if (cri.sanity.A.geti("speaker_call") == 0) {
            v2_13 = 0;
        } else {
            v2_13 = 1;
        }
        int v1;
        this.speakerCall = v2_13;
        if ((!this.speakerCall) && (!cri.sanity.A.is("auto_speaker"))) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        String v2_6;
        boolean v0 = cri.sanity.A.is("rec_stop");
        if ((v1 == 0) || (!cri.sanity.A.is("rec_start"))) {
            v2_6 = 0;
        } else {
            v2_6 = 1;
        }
        String v2_7;
        this.setEnabled("rec_start_speaker", v2_6);
        if ((v1 == 0) || (!v0)) {
            v2_7 = 0;
        } else {
            v2_7 = 1;
        }
        String v2_10;
        this.setEnabled("rec_stop_speaker", v2_7);
        if ((!v0) || (!cri.sanity.A.isFull())) {
            v2_10 = 0;
        } else {
            v2_10 = 1;
        }
        this.setEnabled("rec_stop_limit_s", v2_10);
        if ((cri.sanity.A.is("rec_start_speaker")) || (cri.sanity.A.geti("rec_start_headset") != 0)) {
            v4 = 1;
        }
        this.setEnabled("rec_start_times_s", v4);
        this.setChecked("rec_scan", cri.sanity.screen.RecordActivity.scanAllowed());
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        super.onCreate(p4);
        this.updateEnabled();
        this.on("rec_browse", new cri.sanity.screen.RecordActivity$1(this));
        this.on("rec_scan", new cri.sanity.screen.RecordActivity$2(this));
        this.on("rec_start", new cri.sanity.screen.RecordActivity$3(this));
        this.on("rec_stop", new cri.sanity.screen.RecordActivity$4(this));
        this.on("rec_start_speaker", new cri.sanity.screen.RecordActivity$5(this));
        this.on("rec_start_headset_s", new cri.sanity.screen.RecordActivity$6(this));
        if (!cri.sanity.A.isFull()) {
            android.preference.Preference v0 = this.pref("rec_stop_limit_s");
            v0.setEnabled(0);
            v0.setSummary(new StringBuilder().append(v0.getSummary()).append(" ").append(cri.sanity.A.s(2131165208)).append(46).toString());
        }
        return;
    }

    public void onResume()
    {
        super.onResume();
        this.updateEnabled();
        return;
    }
}
package cri.sanity.screen;
 class SmsHistoryActivity$Pref$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.SmsHistoryActivity$Pref this$1;

    SmsHistoryActivity$Pref$1(cri.sanity.screen.SmsHistoryActivity$Pref p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        cri.sanity.A.clipMan().setText(cri.sanity.screen.SmsHistoryActivity$Pref.access$000(this.this$1));
        cri.sanity.A.toast(cri.sanity.A.s(2131165658));
        return;
    }
}
package cri.sanity.screen;
 class SmsHistoryActivity$Pref$2 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.SmsHistoryActivity$Pref this$1;

    SmsHistoryActivity$Pref$2(cri.sanity.screen.SmsHistoryActivity$Pref p1)
    {
        this.this$1 = p1;
        return;
    }

    public void on()
    {
        android.content.Intent v0_1 = new android.content.Intent("android.intent.action.VIEW");
        v0_1.setType("text/plain");
        v0_1.putExtra("android.intent.extra.TEXT", cri.sanity.screen.SmsHistoryActivity$Pref.access$000(this.this$1));
        android.content.Intent v0_2 = android.content.Intent.createChooser(v0_1, new StringBuilder().append(cri.sanity.A.s(2131165233)).append(" SMS").toString());
        v0_2.setFlags(268435456);
        this.this$1.this$0.startActivity(v0_2);
        return;
    }
}
package cri.sanity.screen;
public class SmsHistoryActivity$Pref extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener {
    private String body;
    final synthetic cri.sanity.screen.SmsHistoryActivity this$0;

    public SmsHistoryActivity$Pref(cri.sanity.screen.SmsHistoryActivity p7, String[] p8)
    {
        this.this$0 = p7;
        super(p7);
        String v0 = p8[0];
        String v1 = p8[1];
        String v2 = p8[2];
        super.body = p8[3].replace("\\n", "\n").replace("{[(\\)]}", "\\").replace("{[(S)]}", "\u00a7");
        if (v1.length() > 0) {
            if (v2.length() > 0) {
                v0 = new StringBuilder().append(v0).append("        ").append(v2).toString();
            }
        } else {
            v1 = v2;
        }
        super.setTitle(v1);
        super.setSummary(v0);
        super.setOnPreferenceClickListener(super);
        return;
    }

    static synthetic String access$000(cri.sanity.screen.SmsHistoryActivity$Pref p1)
    {
        return p1.body;
    }

    public boolean onPreferenceClick(android.preference.Preference p6)
    {
        cri.sanity.util.Alert.msg(this.getTitle().toString(), this.body, new cri.sanity.screen.SmsHistoryActivity$Pref$1(this), new cri.sanity.screen.SmsHistoryActivity$Pref$2(this), 6);
        return 1;
    }
}
package cri.sanity.screen;
public class SmsHistoryActivity extends cri.sanity.HistoryActivity {
    private static final char SEP = 167;
    private static final String SEP_S = "\xa7";
    private static final String UNSEP = "{[(S)]}";
    private static final String UNSLASH = "{[(\\)]}";

    public SmsHistoryActivity()
    {
        return;
    }

    protected String fnHistory()
    {
        return "sms_history.txt";
    }

    protected int lineItems()
    {
        return 4;
    }

    protected String mainTitle()
    {
        return cri.sanity.A.s(2131165593);
    }

    protected void onClear()
    {
        cri.sanity.A.putc("sms_count", 0);
        return;
    }

    protected Class prefClass()
    {
        return cri.sanity.screen.SmsHistoryActivity$Pref;
    }

    protected char sep()
    {
        return 167;
    }
}
package cri.sanity.screen;
 class SpeakerActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.SpeakerActivity this$0;

    SpeakerActivity$1(cri.sanity.screen.SpeakerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v0;
        android.preference.Preference v2_0 = 0;
        if (this.value.equals("0")) {
            v0 = 0;
        } else {
            v0 = 1;
        }
        String v3_0 = this.this$0.pref("vol_speaker_s");
        if ((v0 != 0) || (this.this$0.is("auto_speaker"))) {
            v2_0 = 1;
        }
        v3_0.setEnabled(v2_0);
        this.this$0.pref("delay_speaker_call_s").setEnabled(v0);
        return 1;
    }
}
package cri.sanity.screen;
 class SpeakerActivity$2 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.SpeakerActivity this$0;

    SpeakerActivity$2(cri.sanity.screen.SpeakerActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v0_3;
        android.preference.Preference v2_1 = this.this$0.pref("vol_speaker_s");
        if ((!this.this$0.is(this.pref)) && (cri.sanity.A.geti("speaker_call") <= 0)) {
            v0_3 = 0;
        } else {
            v0_3 = 1;
        }
        v2_1.setEnabled(v0_3);
        return 0;
    }
}
package cri.sanity.screen;
public class SpeakerActivity extends cri.sanity.ScreenActivity {
    private static final String SPEAKER_CALL = "speaker_call_s";
    private static final String SPEAKER_CALL_DELAY = "delay_speaker_call_s";
    private static final String SPEAKER_VOL = "vol_speaker_s";

    public SpeakerActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p6)
    {
        int v1;
        String v2_0 = 1;
        super.onCreate(p6);
        if (cri.sanity.A.geti("speaker_call") <= 0) {
            v1 = 0;
        } else {
            v1 = 1;
        }
        this.pref("delay_speaker_call_s").setEnabled(v1);
        cri.sanity.pref.PList v0_1 = ((cri.sanity.pref.PList) this.pref("vol_speaker_s"));
        if ((v1 == 0) && (!this.is("auto_speaker"))) {
            v2_0 = 0;
        }
        v0_1.setEnabled(v2_0);
        cri.sanity.screen.VolumeActivity.setVolumeLevels(v0_1, 0);
        this.on("speaker_call_s", new cri.sanity.screen.SpeakerActivity$1(this));
        if (cri.sanity.A.sensorProxim() == null) {
            this.setChecked("auto_speaker", 0);
            this.setEnabled("auto_speaker", 0);
            cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034126));
        } else {
            this.on("auto_speaker", new cri.sanity.screen.SpeakerActivity$2(this));
        }
        return;
    }
}
package cri.sanity.screen;
 class TtsActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$1(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v1_2;
        if (((Boolean) this.value).booleanValue()) {
            try {
                this.this$0.startActivityForResult(new android.content.Intent("android.speech.tts.engine.CHECK_TTS_DATA"), 1);
            } catch (Exception v0) {
                cri.sanity.screen.TtsActivity.access$000(this.this$0);
            }
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        return v1_2;
    }
}
package cri.sanity.screen;
 class TtsActivity$2 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$2(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        if (((Boolean) this.value).booleanValue()) {
            cri.sanity.screen.TtsActivity.access$100(this.this$0);
        }
        return 1;
    }
}
package cri.sanity.screen;
 class TtsActivity$3 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$3(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v1 = cri.sanity.screen.TtsActivity.access$200(((Boolean) this.value).booleanValue());
        int v2_1 = cri.sanity.A.geti("tts_vol");
        if (v2_1 >= 0) {
            int v3_0 = cri.sanity.A.audioMan().getStreamMaxVolume(v1);
            if (v2_1 > v3_0) {
                cri.sanity.A.put("tts_vol", v3_0);
                ((cri.sanity.pref.PList) this.this$0.pref("tts_vol_s")).setValue(v3_0);
            }
        }
        int v2_0 = cri.sanity.A.geti("ttsms_vol");
        if (v2_0 >= 0) {
            int v3_1 = cri.sanity.A.audioMan().getStreamMaxVolume(v1);
            if (v2_0 > v3_1) {
                cri.sanity.A.put("tts_vol", v3_1);
                ((cri.sanity.pref.PList) this.this$0.pref("ttsms_vol_s")).setValue(v3_1);
            }
        }
        cri.sanity.screen.TtsActivity.access$300(this.this$0, v1);
        cri.sanity.screen.TtsActivity.access$400(this.this$0, v1);
        return 1;
    }
}
package cri.sanity.screen;
 class TtsActivity$4 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$4(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        android.content.Intent v0_1 = new android.content.Intent();
        v0_1.addCategory("android.intent.category.LAUNCHER");
        v0_1.setComponent(new android.content.ComponentName("com.android.settings", "com.android.settings.TextToSpeechSettings"));
        v0_1.setFlags(268435456);
        try {
            this.this$0.startActivity(v0_1);
        } catch (int v1) {
        }
        return 1;
    }
}
package cri.sanity.screen;
 class TtsActivity$5$1$1 implements java.lang.Runnable {
    final synthetic cri.sanity.screen.TtsActivity$5$1 this$2;

    TtsActivity$5$1$1(cri.sanity.screen.TtsActivity$5$1 p1)
    {
        this.this$2 = p1;
        return;
    }

    public void run()
    {
        cri.sanity.screen.TtsActivity.access$500(this.this$2.this$1.this$0);
        cri.sanity.screen.TtsActivity$5.access$800(this.this$2.this$1).setEnabled(1);
        return;
    }
}
package cri.sanity.screen;
 class TtsActivity$5$1 extends cri.sanity.TTS {
    final synthetic cri.sanity.screen.TtsActivity$5 this$1;

    TtsActivity$5$1(cri.sanity.screen.TtsActivity$5 p1, String p2, boolean p3, boolean p4, boolean p5)
    {
        this.this$1 = p1;
        super(p2, p3, p4, p5);
        return;
    }

    protected void onError()
    {
        cri.sanity.A.toast(2131165671);
        return;
    }

    public void onInit(int p4)
    {
        super.onInit(p4);
        if (this.repeat > 0) {
            if (this.repeat > 10) {
                this.repeat = 10;
            }
            android.widget.Toast.makeText(cri.sanity.A.app(), new StringBuilder().append(cri.sanity.A.s(2131165224)).append(": \"").append(this.id).append(34).toString(), 1).show();
        }
        return;
    }

    public void onUtteranceCompleted(String p3)
    {
        super.onUtteranceCompleted(p3);
        if (this.repeat <= 0) {
            cri.sanity.screen.TtsActivity.access$900(this.this$1.this$0).post(new cri.sanity.screen.TtsActivity$5$1$1(this));
        }
        return;
    }
}
package cri.sanity.screen;
 class TtsActivity$5 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$5(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    static synthetic android.preference.Preference access$800(cri.sanity.screen.TtsActivity$5 p1)
    {
        return p1.pref;
    }

    public boolean on()
    {
        this.pref.setEnabled(0);
        cri.sanity.screen.TtsActivity.access$500(this.this$0);
        cri.sanity.screen.TtsActivity.access$602(this.this$0, new cri.sanity.screen.TtsActivity$5$1(this, cri.sanity.screen.TtsActivity.access$700(), 0, 0, 0));
        return 1;
    }
}
package cri.sanity.screen;
 class TtsActivity$6 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$6(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        int v2_0;
        int v4 = 0;
        boolean v0 = ((Boolean) this.value).booleanValue();
        cri.sanity.pref.PFilter v1 = cri.sanity.screen.TtsActivity.access$1000(this.this$0);
        if (v0) {
            v2_0 = 0;
        } else {
            v2_0 = 1;
        }
        v1.updateSum(v2_0);
        if (!v0) {
            v4 = 1;
        }
        v1.setEnabled(v4);
        return 1;
    }
}
package cri.sanity.screen;
 class TtsActivity$7 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.screen.TtsActivity this$0;

    TtsActivity$7(cri.sanity.screen.TtsActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        try {
            this.this$0.startActivity(new android.content.Intent("android.speech.tts.engine.INSTALL_TTS_DATA"));
        } catch (Exception v0) {
            cri.sanity.screen.TtsActivity.access$000(this.this$0);
        }
        return;
    }
}
package cri.sanity.screen;
public class TtsActivity extends cri.sanity.ScreenActivity {
    private static final int CODE_CHECK = 1;
    private static final String KEY_FILTER = "filter_tts";
    private static final String KEY_GLOBAL = "tts_global";
    private static final String KEY_SMS_FILTER = "filter_ttsms";
    private static final String KEY_SMS_SHARED = "ttsms_shared";
    private static final String KEY_SMS_VOL = "ttsms_vol_s";
    private static final String KEY_TEST = "tts_test";
    private static final String KEY_VOL = "tts_vol_s";
    private static final int TEST_MAX_REPEAT = 10;
    private static final int TEST_MIN_REPEAT = 10;
    private static final String TEST_TXT_REPEAT;
    private android.os.Handler handler;
    private cri.sanity.TTS tts;

    static TtsActivity()
    {
        cri.sanity.screen.TtsActivity.TEST_TXT_REPEAT = cri.sanity.A.name();
        return;
    }

    public TtsActivity()
    {
        return;
    }

    static synthetic void access$000(cri.sanity.screen.TtsActivity p0)
    {
        p0.ttsBroken();
        return;
    }

    static synthetic void access$100(cri.sanity.screen.TtsActivity p0)
    {
        p0.fixAudio();
        return;
    }

    static synthetic cri.sanity.pref.PFilter access$1000(cri.sanity.screen.TtsActivity p1)
    {
        return p1.prefSmsFilter();
    }

    static synthetic int access$200(boolean p1)
    {
        return cri.sanity.screen.TtsActivity.getVolumeStream(p1);
    }

    static synthetic void access$300(cri.sanity.screen.TtsActivity p0, int p1)
    {
        p0.setVolumeLevels(p1);
        return;
    }

    static synthetic void access$400(cri.sanity.screen.TtsActivity p0, int p1)
    {
        p0.setVolumeLevelsSMS(p1);
        return;
    }

    static synthetic void access$500(cri.sanity.screen.TtsActivity p0)
    {
        p0.ttsFree();
        return;
    }

    static synthetic cri.sanity.TTS access$602(cri.sanity.screen.TtsActivity p0, cri.sanity.TTS p1)
    {
        p0.tts = p1;
        return p1;
    }

    static synthetic String access$700()
    {
        return cri.sanity.screen.TtsActivity.TEST_TXT_REPEAT;
    }

    static synthetic android.os.Handler access$900(cri.sanity.screen.TtsActivity p1)
    {
        return p1.handler;
    }

    private void fixAudio()
    {
        if (cri.sanity.screen.TtsActivity.isAudioWarn()) {
            this.setChecked("tts_stream", 1);
        }
        return;
    }

    public static final int getVolumeStream()
    {
        return cri.sanity.screen.TtsActivity.getVolumeStream(cri.sanity.A.is("tts_stream"));
    }

    private static final int getVolumeStream(boolean p1)
    {
        int v0;
        if (!p1) {
            v0 = 5;
        } else {
            v0 = 4;
        }
        return v0;
    }

    public static final int getVolumeStreamSMS()
    {
        return cri.sanity.screen.TtsActivity.getVolumeStreamSMS(cri.sanity.A.is("tts_stream"));
    }

    private static final int getVolumeStreamSMS(boolean p1)
    {
        int v0;
        if (!p1) {
            v0 = 5;
        } else {
            v0 = 1;
        }
        return v0;
    }

    private static boolean isAudioWarn()
    {
        if ((cri.sanity.A.is("tts_stream")) || (cri.sanity.util.Dev.getSysInt("notifications_use_ring_volume") <= 0)) {
            int v0_4 = 0;
        } else {
            v0_4 = 1;
        }
        return v0_4;
    }

    private cri.sanity.pref.PFilter prefSmsFilter()
    {
        return ((cri.sanity.pref.PFilter) this.pref("filter_ttsms"));
    }

    private void setVolumeLevels()
    {
        this.setVolumeLevels(cri.sanity.screen.TtsActivity.getVolumeStream());
        return;
    }

    private void setVolumeLevels(int p2)
    {
        cri.sanity.screen.VolumeActivity.setVolumeLevels(((cri.sanity.pref.PList) this.pref("tts_vol_s")), p2);
        return;
    }

    private void setVolumeLevelsSMS()
    {
        this.setVolumeLevelsSMS(cri.sanity.screen.TtsActivity.getVolumeStreamSMS());
        return;
    }

    private void setVolumeLevelsSMS(int p2)
    {
        cri.sanity.screen.VolumeActivity.setVolumeLevels(((cri.sanity.pref.PList) this.pref("ttsms_vol_s")), p2);
        return;
    }

    private void ttsBroken()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034130));
        return;
    }

    private void ttsFree()
    {
        if (this.tts != null) {
            this.tts.shutdown();
            this.tts = 0;
        }
        return;
    }

    protected void onActivityResult(int p5, int p6, android.content.Intent p7)
    {
        if (p5 == 1) {
            if (p6 != 1) {
                cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034131), new cri.sanity.screen.TtsActivity$7(this), 0, 1);
            } else {
                this.setChecked("tts", 1);
            }
        }
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        super.onCreate(p4);
        this.handler = new android.os.Handler();
        this.on("tts", new cri.sanity.screen.TtsActivity$1(this));
        if (cri.sanity.A.is("tts_solo")) {
            this.fixAudio();
        }
        this.on("tts_solo", new cri.sanity.screen.TtsActivity$2(this));
        this.on("tts_stream", new cri.sanity.screen.TtsActivity$3(this));
        this.setVolumeLevels();
        this.setVolumeLevelsSMS();
        this.on("tts_global", new cri.sanity.screen.TtsActivity$4(this));
        this.on("tts_test", new cri.sanity.screen.TtsActivity$5(this));
        this.on("ttsms_shared", new cri.sanity.screen.TtsActivity$6(this));
        String[] v0_9 = new String[11];
        v0_9[0] = "tts_headset";
        v0_9[1] = "tts_solo";
        v0_9[2] = "tts_vol_s";
        v0_9[3] = "ttsms_vol_s";
        v0_9[4] = "tts_repeat_s";
        v0_9[5] = "tts_pause_s";
        v0_9[6] = "filter_tts";
        v0_9[7] = "ttsms_prefix";
        v0_9[8] = "ttsms_suffix";
        v0_9[9] = "ttsms_shared";
        v0_9[10] = "filter_ttsms";
        this.fullOnly(v0_9);
        return;
    }

    public void onPause()
    {
        this.ttsFree();
        super.onPause();
        return;
    }

    public void onResume()
    {
        int v0_2;
        super.onResume();
        if (cri.sanity.A.is("filter_enable_ttsms")) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        this.setChecked("ttsms_shared", v0_2);
        return;
    }
}
package cri.sanity.screen;
 class UrgentActivity$1 extends cri.sanity.PrefActivity$Change {
    final synthetic cri.sanity.screen.UrgentActivity this$0;

    UrgentActivity$1(cri.sanity.screen.UrgentActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.A.putc("filter_enable_urgent", ((Boolean) this.value));
        ((cri.sanity.pref.PFilter) this.this$0.pref("filter_urgent")).updateSum();
        return 1;
    }
}
package cri.sanity.screen;
public class UrgentActivity extends cri.sanity.ScreenActivity {
    private static final String KEY_FILTER = "filter_urgent";
    private static final String KEY_URGENT = "urgent";

    public UrgentActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p4)
    {
        super.onCreate(p4);
        this.on("urgent", new cri.sanity.screen.UrgentActivity$1(this));
        String[] v0_2 = new String[2];
        v0_2[0] = "urgent_skip";
        v0_2[1] = "urgent_mode_s";
        this.fullOnly(v0_2);
        return;
    }

    public void onResume()
    {
        super.onResume();
        this.setChecked("urgent", cri.sanity.A.is("filter_enable_urgent"));
        return;
    }
}
package cri.sanity.screen;
 class VibraActivity$1 extends cri.sanity.PrefActivity$Click {
    final synthetic cri.sanity.screen.VibraActivity this$0;

    VibraActivity$1(cri.sanity.screen.VibraActivity p1)
    {
        this.this$0 = p1;
        return;
    }

    public boolean on()
    {
        cri.sanity.util.Vibra.setMode();
        cri.sanity.util.Vibra.vibra();
        return 1;
    }
}
package cri.sanity.screen;
public class VibraActivity extends cri.sanity.ScreenActivity {

    public VibraActivity()
    {
        return;
    }

    public void onCreate(android.os.Bundle p3)
    {
        super.onCreate(p3);
        this.on("vibrate_test", new cri.sanity.screen.VibraActivity$1(this));
        this.fullOnly("vibrate_mode");
        return;
    }
}
package cri.sanity.screen;
public class VolumeActivity extends cri.sanity.ScreenActivity {

    public VolumeActivity()
    {
        return;
    }

    public static CharSequence[][] getVolumeLevels(int p10)
    {
        String v3 = new StringBuilder().append(cri.sanity.A.s(2131165194)).append(32).toString();
        int v4 = cri.sanity.A.audioMan().getStreamMaxVolume(p10);
        int v5 = (v4 + 1);
        CharSequence[] v1 = new CharSequence[(v5 + 1)];
        CharSequence[] v0 = new CharSequence[(v5 + 1)];
        v1[0] = "-1";
        v1[1] = "0";
        v1[v5] = Integer.toString(v4);
        v0[0] = cri.sanity.A.s(2131165195);
        v0[1] = new StringBuilder().append(v3).append(v1[1]).append(" - ").append(cri.sanity.A.s(2131165192)).toString();
        v0[v5] = new StringBuilder().append(v3).append(v1[v5]).append(" - ").append(cri.sanity.A.s(2131165193)).toString();
        int v2 = 2;
        while (v2 < v5) {
            v1[v2] = Integer.toString((v2 - 1));
            v0[v2] = new StringBuilder().append(v3).append(v1[v2]).toString();
            v2++;
        }
        CharSequence[][] v6_26 = new CharSequence[][2];
        v6_26[0] = v0;
        v6_26[1] = v1;
        return v6_26;
    }

    public static void setVolumeLevels(cri.sanity.pref.PList p1, int p2)
    {
        cri.sanity.screen.VolumeActivity.setVolumeLevels(p1, cri.sanity.screen.VolumeActivity.getVolumeLevels(p2));
        return;
    }

    public static void setVolumeLevels(cri.sanity.pref.PList p1, CharSequence[][] p2)
    {
        p1.setEntries(p2[0]);
        p1.setEntryValues(p2[1]);
        p1.update();
        return;
    }

    public void onCreate(android.os.Bundle p11)
    {
        super.onCreate(p11);
        CharSequence[][] v0 = cri.sanity.screen.VolumeActivity.getVolumeLevels(0);
        String[] v1 = new String[3];
        v1[0] = "vol_phone";
        v1[1] = "vol_wired";
        v1[2] = "vol_bt";
        int v4 = v1.length;
        int v2 = 0;
        while (v2 < v4) {
            cri.sanity.screen.VolumeActivity.setVolumeLevels(((cri.sanity.pref.PList) this.pref(new StringBuilder().append(v1[v2]).append("_s").toString())), v0);
            v2++;
        }
        cri.sanity.screen.VolumeActivity.setVolumeLevels(((cri.sanity.pref.PList) this.pref("tts_vol_s")), cri.sanity.screen.TtsActivity.getVolumeStream());
        cri.sanity.screen.VolumeActivity.setVolumeLevels(((cri.sanity.pref.PList) this.pref("ttsms_vol_s")), cri.sanity.screen.TtsActivity.getVolumeStreamSMS());
        if (!cri.sanity.A.is("tts")) {
            this.setEnabled("tts_vol_s", 0);
            if (!cri.sanity.A.is("ttsms")) {
                this.setEnabled("ttsms_vol_s", 0);
            }
        }
        String v5_14 = new String[2];
        v5_14[0] = "tts_vol_s";
        v5_14[1] = "ttsms_vol_s";
        this.fullOnly(v5_14);
        return;
    }
}
package cri.sanity.util;
final class Alert$10 extends cri.sanity.util.Alert$Click {
    final synthetic android.widget.EditText val$edit;
    final synthetic cri.sanity.util.Alert$Edited val$pos;

    Alert$10(cri.sanity.util.Alert$Edited p1, android.widget.EditText p2)
    {
        this.val$pos = p1;
        this.val$edit = p2;
        return;
    }

    public void on()
    {
        cri.sanity.util.Alert$Edited.access$000(this.val$pos, cri.sanity.util.Alert.access$102(this.val$edit.getText().toString()), this.dlg);
        return;
    }
}
package cri.sanity.util;
final class Alert$1 extends cri.sanity.util.Alert$Click {
    final synthetic android.widget.EditText val$edit;
    final synthetic cri.sanity.util.Alert$Edited val$neg;

    Alert$1(cri.sanity.util.Alert$Edited p1, android.widget.EditText p2)
    {
        this.val$neg = p1;
        this.val$edit = p2;
        return;
    }

    public void on()
    {
        cri.sanity.util.Alert$Edited.access$000(this.val$neg, this.val$edit.getText().toString(), this.dlg);
        return;
    }
}
package cri.sanity.util;
final class Alert$2 extends cri.sanity.util.Alert$Click {
    final synthetic android.widget.EditText val$edit;
    final synthetic cri.sanity.util.Alert$Edited val$pos;

    Alert$2(cri.sanity.util.Alert$Edited p1, android.widget.EditText p2)
    {
        this.val$pos = p1;
        this.val$edit = p2;
        return;
    }

    public void on()
    {
        cri.sanity.util.Alert$Edited.access$000(this.val$pos, this.val$edit.getText().toString(), this.dlg);
        return;
    }
}
package cri.sanity.util;
final class Alert$3 implements android.content.DialogInterface$OnCancelListener {
    final synthetic cri.sanity.util.Alert$Click val$negClick;

    Alert$3(cri.sanity.util.Alert$Click p1)
    {
        this.val$negClick = p1;
        return;
    }

    public void onCancel(android.content.DialogInterface p2)
    {
        this.val$negClick.dlg = p2;
        this.val$negClick.on();
        return;
    }
}
package cri.sanity.util;
final class Alert$4 implements android.widget.SeekBar$OnSeekBarChangeListener {
    final synthetic android.widget.TimePicker val$tp;

    Alert$4(android.widget.TimePicker p1)
    {
        this.val$tp = p1;
        return;
    }

    public void onProgressChanged(android.widget.SeekBar p3, int p4, boolean p5)
    {
        if (p5) {
            this.val$tp.setCurrentHour(Integer.valueOf((p4 / 4)));
            this.val$tp.setCurrentMinute(Integer.valueOf(((p4 % 4) * 15)));
        }
        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar p1)
    {
        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar p1)
    {
        return;
    }
}
package cri.sanity.util;
final class Alert$5 implements android.widget.TimePicker$OnTimeChangedListener {
    final synthetic android.widget.SeekBar val$sb;

    Alert$5(android.widget.SeekBar p1)
    {
        this.val$sb = p1;
        return;
    }

    public void onTimeChanged(android.widget.TimePicker p4, int p5, int p6)
    {
        this.val$sb.setProgress(((p5 * 4) + (p6 / 15)));
        return;
    }
}
package cri.sanity.util;
final class Alert$6 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.util.Alert$Timed val$timed;
    final synthetic android.widget.TimePicker val$tp;

    Alert$6(cri.sanity.util.Alert$Timed p1, android.widget.TimePicker p2)
    {
        this.val$timed = p1;
        this.val$tp = p2;
        return;
    }

    public void on()
    {
        this.val$timed.hour = this.val$tp.getCurrentHour().intValue();
        this.val$timed.mins = this.val$tp.getCurrentMinute().intValue();
        this.val$timed.on();
        return;
    }
}
package cri.sanity.util;
final class Alert$7 implements android.widget.CompoundButton$OnCheckedChangeListener {
    final synthetic android.widget.CheckBox val$checkBox;
    final synthetic android.widget.EditText val$editNew1;
    final synthetic android.widget.EditText val$editNew2;
    final synthetic android.widget.EditText val$editOld;

    Alert$7(android.widget.EditText p1, android.widget.EditText p2, android.widget.EditText p3, android.widget.CheckBox p4)
    {
        this.val$editOld = p1;
        this.val$editNew1 = p2;
        this.val$editNew2 = p3;
        this.val$checkBox = p4;
        return;
    }

    public void onCheckedChanged(android.widget.CompoundButton p4, boolean p5)
    {
        this.val$editOld.setInputType(144);
        this.val$editNew1.setInputType(144);
        this.val$editNew2.setInputType(144);
        this.val$checkBox.setEnabled(0);
        return;
    }
}
package cri.sanity.util;
final class Alert$8 extends cri.sanity.util.Alert$Click {
    final synthetic android.widget.EditText val$editNew1;
    final synthetic android.widget.EditText val$editNew2;
    final synthetic android.widget.EditText val$editOld;
    final synthetic boolean val$hasOld;
    final synthetic String val$oldPwd;
    final synthetic cri.sanity.util.Alert$Edited val$pos;

    Alert$8(android.widget.EditText p1, android.widget.EditText p2, android.widget.EditText p3, boolean p4, String p5, cri.sanity.util.Alert$Edited p6)
    {
        this.val$editOld = p1;
        this.val$editNew1 = p2;
        this.val$editNew2 = p3;
        this.val$hasOld = p4;
        this.val$oldPwd = p5;
        this.val$pos = p6;
        return;
    }

    public void on()
    {
        cri.sanity.util.Alert.access$102(this.val$editOld.getText().toString());
        cri.sanity.util.Alert.access$202(this.val$editNew1.getText().toString());
        cri.sanity.util.Alert.access$302(this.val$editNew2.getText().toString());
        if ((!this.val$hasOld) || (cri.sanity.util.Alert.access$100().equals(this.val$oldPwd))) {
            if (cri.sanity.util.Alert.access$200().equals(cri.sanity.util.Alert.access$300())) {
                String v0 = cri.sanity.util.Alert.access$200();
                cri.sanity.util.Alert.access$102(cri.sanity.util.Alert.access$202(cri.sanity.util.Alert.access$302(0)));
                cri.sanity.util.Alert$Edited.access$000(this.val$pos, v0, this.dlg);
            } else {
                cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165677));
            }
        } else {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165676));
        }
        return;
    }
}
package cri.sanity.util;
final class Alert$9 implements android.widget.CompoundButton$OnCheckedChangeListener {
    final synthetic android.widget.CheckBox val$checkBox;
    final synthetic android.widget.EditText val$edit;

    Alert$9(android.widget.EditText p1, android.widget.CheckBox p2)
    {
        this.val$edit = p1;
        this.val$checkBox = p2;
        return;
    }

    public void onCheckedChanged(android.widget.CompoundButton p3, boolean p4)
    {
        this.val$edit.setInputType(144);
        this.val$checkBox.setEnabled(0);
        return;
    }
}
package cri.sanity.util;
public final class Alert {
    public static final int BAKRES = 5;
    public static final int COPYSHARE = 6;
    private static final int DEF = 1;
    public static final int NONE = 255;
    public static final int OKCANC = 1;
    public static final int OPENDEL = 4;
    public static final int REPLY = 7;
    public static final int SIMPLE = 0;
    private static final String TITLE = "";
    public static final int YESNO = 2;
    public static final int YESNOCANC = 3;
    public static android.app.Activity activity;
    private static String prevNewPwd1;
    private static String prevNewPwd2;
    private static String prevOldPwd;

    static Alert()
    {
        cri.sanity.util.Alert.TITLE = cri.sanity.A.name();
        return;
    }

    public Alert()
    {
        return;
    }

    static synthetic String access$100()
    {
        return cri.sanity.util.Alert.prevOldPwd;
    }

    static synthetic String access$102(String p0)
    {
        cri.sanity.util.Alert.prevOldPwd = p0;
        return p0;
    }

    static synthetic String access$200()
    {
        return cri.sanity.util.Alert.prevNewPwd1;
    }

    static synthetic String access$202(String p0)
    {
        cri.sanity.util.Alert.prevNewPwd1 = p0;
        return p0;
    }

    static synthetic String access$300()
    {
        return cri.sanity.util.Alert.prevNewPwd2;
    }

    static synthetic String access$302(String p0)
    {
        cri.sanity.util.Alert.prevNewPwd2 = p0;
        return p0;
    }

    public static final android.app.AlertDialog choose(String p1, int[] p2, cri.sanity.util.Alert$Click p3)
    {
        return cri.sanity.util.Alert.choose(p1, p2, p3, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog choose(String p4, int[] p5, cri.sanity.util.Alert$Click p6, android.content.Context p7)
    {
        int v2 = p5.length;
        String[] v1 = new String[v2];
        int v0 = 0;
        while (v0 < v2) {
            v1[v0] = cri.sanity.A.s(p5[v0]);
            v0++;
        }
        return cri.sanity.util.Alert.choose(p4, v1, p6, p7);
    }

    public static final android.app.AlertDialog choose(String p1, String[] p2, cri.sanity.util.Alert$Click p3)
    {
        return cri.sanity.util.Alert.choose(p1, p2, p3, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog choose(String p2, String[] p3, cri.sanity.util.Alert$Click p4, android.content.Context p5)
    {
        android.app.AlertDialog$Builder v0_1 = new android.app.AlertDialog$Builder(p5);
        v0_1.setIcon(2130837507);
        v0_1.setTitle(p2);
        v0_1.setItems(p3, p4);
        v0_1.setCancelable(1);
        return v0_1.show();
    }

    public static final android.widget.EditText edit(String p2, cri.sanity.util.Alert$Edited p3)
    {
        return cri.sanity.util.Alert.edit(p2, p3, 0, cri.sanity.util.Alert.activity);
    }

    public static final android.widget.EditText edit(String p1, cri.sanity.util.Alert$Edited p2, android.content.Context p3)
    {
        return cri.sanity.util.Alert.edit(p1, p2, 0, p3);
    }

    public static final android.widget.EditText edit(String p1, cri.sanity.util.Alert$Edited p2, cri.sanity.util.Alert$Edited p3)
    {
        return cri.sanity.util.Alert.edit(p1, p2, p3, cri.sanity.util.Alert.activity);
    }

    public static final android.widget.EditText edit(String p6, cri.sanity.util.Alert$Edited p7, cri.sanity.util.Alert$Edited p8, android.content.Context p9)
    {
        cri.sanity.util.Alert$1 v3_1;
        android.view.View v2 = cri.sanity.util.Alert.layout(2130903042);
        android.widget.EditText v1_1 = ((android.widget.EditText) v2.findViewById(2131361804));
        android.app.AlertDialog$Builder v0_1 = new android.app.AlertDialog$Builder(p9);
        if (p8 != null) {
            v3_1 = new cri.sanity.util.Alert$1(p8, v1_1);
        } else {
            v3_1 = new cri.sanity.util.Alert$Click();
        }
        cri.sanity.util.Alert$3 v4_4;
        v0_1.setIcon(2130837507);
        v0_1.setTitle(p6);
        v0_1.setView(v2);
        v0_1.setCancelable(1);
        if (p7 != null) {
            v4_4 = new cri.sanity.util.Alert$2(p7, v1_1);
        } else {
            v4_4 = new cri.sanity.util.Alert$Click();
        }
        v0_1.setPositiveButton(2131165187, v4_4);
        v0_1.setNegativeButton(2131165188, v3_1);
        if (p8 != null) {
            v0_1.setOnCancelListener(new cri.sanity.util.Alert$3(v3_1));
        }
        v0_1.show();
        return v1_1;
    }

    public static final android.widget.EditText edit(String p2, String p3, cri.sanity.util.Alert$Edited p4)
    {
        return cri.sanity.util.Alert.edit(p2, p3, p4, 0, cri.sanity.util.Alert.activity);
    }

    public static final android.widget.EditText edit(String p1, String p2, cri.sanity.util.Alert$Edited p3, android.content.Context p4)
    {
        return cri.sanity.util.Alert.edit(p1, p2, p3, 0, p4);
    }

    public static final android.widget.EditText edit(String p1, String p2, cri.sanity.util.Alert$Edited p3, cri.sanity.util.Alert$Edited p4)
    {
        return cri.sanity.util.Alert.edit(p1, p2, p3, p4, cri.sanity.util.Alert.activity);
    }

    public static final android.widget.EditText edit(String p1, String p2, cri.sanity.util.Alert$Edited p3, cri.sanity.util.Alert$Edited p4, android.content.Context p5)
    {
        android.widget.EditText v0 = cri.sanity.util.Alert.edit(p1, p3, p4, p5);
        if (p2 != null) {
            v0.setText(p2);
            v0.selectAll();
        }
        return v0;
    }

    private static boolean hidePwd()
    {
        int v0_2;
        if (cri.sanity.A.is("pwd_clear")) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static final android.view.View layout(int p2)
    {
        return android.view.LayoutInflater.from(cri.sanity.A.app()).inflate(p2, 0);
    }

    public static final android.app.AlertDialog msg(String p7)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, 0, 0, 0, 0, 1);
    }

    public static final android.app.AlertDialog msg(String p7, int p8)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, 0, 0, 0, p8, 1);
    }

    public static final android.app.AlertDialog msg(String p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, p8, p9, 0, 1, 1);
    }

    public static final android.app.AlertDialog msg(String p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9, int p10)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, p8, p9, 0, p10, 1);
    }

    public static final android.app.AlertDialog msg(String p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9, int p10, boolean p11)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, p8, p9, 0, p10, p11);
    }

    public static final android.app.AlertDialog msg(String p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10, int p11)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, p8, p9, p10, p11, 1);
    }

    public static final android.app.AlertDialog msg(String p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10, int p11, boolean p12)
    {
        return cri.sanity.util.Alert.msg(cri.sanity.util.Alert.TITLE, p7, p8, p9, p10, p11, p12);
    }

    public static final android.app.AlertDialog msg(String p7, String p8)
    {
        return cri.sanity.util.Alert.msg(p7, p8, 0, 0, 0, 0, 1);
    }

    public static final android.app.AlertDialog msg(String p7, String p8, int p9)
    {
        return cri.sanity.util.Alert.msg(p7, p8, 0, 0, 0, p9, 1);
    }

    public static final android.app.AlertDialog msg(String p7, String p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10)
    {
        return cri.sanity.util.Alert.msg(p7, p8, p9, p10, 0, 1, 1);
    }

    public static final android.app.AlertDialog msg(String p7, String p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10, int p11)
    {
        return cri.sanity.util.Alert.msg(p7, p8, p9, p10, 0, p11, 1);
    }

    public static final android.app.AlertDialog msg(String p7, String p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10, int p11, boolean p12)
    {
        return cri.sanity.util.Alert.msg(p7, p8, p9, p10, 0, p11, p12);
    }

    public static final android.app.AlertDialog msg(String p7, String p8, cri.sanity.util.Alert$Click p9, cri.sanity.util.Alert$Click p10, cri.sanity.util.Alert$Click p11, int p12)
    {
        return cri.sanity.util.Alert.msg(p7, p8, p9, p10, p11, p12, 1);
    }

    public static final android.app.AlertDialog msg(String p8, String p9, cri.sanity.util.Alert$Click p10, cri.sanity.util.Alert$Click p11, cri.sanity.util.Alert$Click p12, int p13, boolean p14)
    {
        return cri.sanity.util.Alert.msg(p8, p9, p10, p11, p12, p13, p14, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog msg(String p5, String p6, cri.sanity.util.Alert$Click p7, cri.sanity.util.Alert$Click p8, cri.sanity.util.Alert$Click p9, int p10, boolean p11, android.content.Context p12)
    {
        int v3 = 0;
        int v1 = 0;
        int v2 = 0;
        switch (p10) {
            case 0:
                v3 = 2131165237;
                break;
            case 1:
                v3 = 2131165187;
                v1 = 2131165188;
                break;
            case 2:
                v3 = 2131165189;
                v1 = 2131165190;
                break;
            case 3:
                v3 = 2131165189;
                v2 = 2131165190;
                v1 = 2131165188;
                break;
            case 4:
                v3 = 2131165202;
                v1 = 2131165205;
                break;
            case 5:
                v3 = 2131165215;
                v1 = 2131165216;
                break;
            case 6:
                v3 = 2131165232;
                v1 = 2131165233;
                break;
            case 7:
                v3 = 2131165236;
                v1 = 2131165237;
                break;
        }
        android.app.AlertDialog$Builder v0_1 = new android.app.AlertDialog$Builder(p12);
        v0_1.setIcon(2130837507);
        v0_1.setTitle(p5);
        v0_1.setMessage(p6);
        v0_1.setCancelable(p11);
        if (v3 > 0) {
            if (p7 == null) {
                p7 = new cri.sanity.util.Alert$Click();
            }
            v0_1.setPositiveButton(v3, p7);
        }
        if (v1 > 0) {
            if (p8 == null) {
                p8 = new cri.sanity.util.Alert$Click();
            }
            v0_1.setNegativeButton(v1, p8);
        }
        if (v2 > 0) {
            if (p9 == null) {
                p9 = new cri.sanity.util.Alert$Click();
            }
            v0_1.setNeutralButton(v2, p9);
        }
        return v0_1.show();
    }

    public static final android.app.AlertDialog pwdAsk(cri.sanity.util.Alert$Edited p2, cri.sanity.util.Alert$Click p3)
    {
        return cri.sanity.util.Alert.pwdAsk(cri.sanity.util.Alert.TITLE, p2, p3, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdAsk(cri.sanity.util.Alert$Edited p1, cri.sanity.util.Alert$Click p2, android.content.Context p3)
    {
        return cri.sanity.util.Alert.pwdAsk(cri.sanity.util.Alert.TITLE, p1, p2, p3);
    }

    public static final android.app.AlertDialog pwdAsk(String p1, cri.sanity.util.Alert$Edited p2, cri.sanity.util.Alert$Click p3)
    {
        return cri.sanity.util.Alert.pwdAsk(p1, p2, p3, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdAsk(String p6, cri.sanity.util.Alert$Edited p7, cri.sanity.util.Alert$Click p8, android.content.Context p9)
    {
        android.view.View v3 = cri.sanity.util.Alert.layout(2130903040);
        android.widget.EditText v2_1 = ((android.widget.EditText) v3.findViewById(2131361794));
        android.widget.CheckBox v1_1 = ((android.widget.CheckBox) v3.findViewById(2131361795));
        if (cri.sanity.util.Alert.prevOldPwd != null) {
            v2_1.setText(cri.sanity.util.Alert.prevOldPwd);
        }
        if (!cri.sanity.util.Alert.hidePwd()) {
            v2_1.setInputType(144);
            v1_1.setEnabled(0);
            v1_1.setChecked(1);
        } else {
            v1_1.setOnCheckedChangeListener(new cri.sanity.util.Alert$9(v2_1, v1_1));
        }
        android.app.AlertDialog v4_10;
        android.app.AlertDialog$Builder v0_1 = new android.app.AlertDialog$Builder(p9);
        v0_1.setIcon(2130837507);
        v0_1.setTitle(p6);
        v0_1.setView(v3);
        v0_1.setCancelable(0);
        if (p7 != null) {
            v4_10 = new cri.sanity.util.Alert$10(p7, v2_1);
        } else {
            v4_10 = new cri.sanity.util.Alert$Click();
        }
        v0_1.setPositiveButton(2131165187, v4_10);
        if (p8 == null) {
            p8 = new cri.sanity.util.Alert$Click();
        }
        v0_1.setNegativeButton(2131165188, p8);
        return v0_1.show();
    }

    public static final android.app.AlertDialog pwdChoose(String p3, cri.sanity.util.Alert$Edited p4)
    {
        return cri.sanity.util.Alert.pwdChoose(cri.sanity.util.Alert.TITLE, p3, p4, 0, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdChoose(String p2, cri.sanity.util.Alert$Edited p3, android.content.Context p4)
    {
        return cri.sanity.util.Alert.pwdChoose(cri.sanity.util.Alert.TITLE, p2, p3, 0, p4);
    }

    public static final android.app.AlertDialog pwdChoose(String p2, cri.sanity.util.Alert$Edited p3, cri.sanity.util.Alert$Click p4)
    {
        return cri.sanity.util.Alert.pwdChoose(cri.sanity.util.Alert.TITLE, p2, p3, p4, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdChoose(String p1, cri.sanity.util.Alert$Edited p2, cri.sanity.util.Alert$Click p3, android.content.Context p4)
    {
        return cri.sanity.util.Alert.pwdChoose(cri.sanity.util.Alert.TITLE, p1, p2, p3, p4);
    }

    public static final android.app.AlertDialog pwdChoose(String p2, String p3, cri.sanity.util.Alert$Edited p4)
    {
        return cri.sanity.util.Alert.pwdChoose(p2, p3, p4, 0, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdChoose(String p1, String p2, cri.sanity.util.Alert$Edited p3, cri.sanity.util.Alert$Click p4)
    {
        return cri.sanity.util.Alert.pwdChoose(p1, p2, p3, p4, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog pwdChoose(String p13, String p14, cri.sanity.util.Alert$Edited p15, cri.sanity.util.Alert$Click p16, android.content.Context p17)
    {
        int v5;
        android.view.View v10 = cri.sanity.util.Alert.layout(2130903041);
        android.widget.EditText v2_1 = ((android.widget.EditText) v10.findViewById(2131361798));
        android.widget.EditText v3_0 = ((android.widget.EditText) v10.findViewById(2131361800));
        android.widget.EditText v4_1 = ((android.widget.EditText) v10.findViewById(2131361802));
        android.widget.CheckBox v9_1 = ((android.widget.CheckBox) v10.findViewById(2131361795));
        if (cri.sanity.A.empty(p14)) {
            v5 = 0;
        } else {
            v5 = 1;
        }
        v2_1.setEnabled(v5);
        if (cri.sanity.util.Alert.prevOldPwd != null) {
            v2_1.setText(cri.sanity.util.Alert.prevOldPwd);
        }
        if (cri.sanity.util.Alert.prevNewPwd1 != null) {
            v3_0.setText(cri.sanity.util.Alert.prevNewPwd1);
        }
        if (cri.sanity.util.Alert.prevNewPwd2 != null) {
            v4_1.setText(cri.sanity.util.Alert.prevNewPwd2);
        }
        if (!cri.sanity.util.Alert.hidePwd()) {
            v2_1.setInputType(144);
            v3_0.setInputType(144);
            v4_1.setInputType(144);
            v9_1.setEnabled(0);
            v9_1.setChecked(1);
        } else {
            v9_1.setOnCheckedChangeListener(new cri.sanity.util.Alert$7(v2_1, v3_0, v4_1, v9_1));
        }
        android.app.AlertDialog v1_22;
        android.app.AlertDialog$Builder v8_1 = new android.app.AlertDialog$Builder(p17);
        v8_1.setIcon(2130837507);
        v8_1.setTitle(p13);
        v8_1.setView(v10);
        v8_1.setCancelable(1);
        if (p15 != null) {
            v1_22 = new cri.sanity.util.Alert$8(v2_1, v3_0, v4_1, v5, p14, p15);
        } else {
            v1_22 = new cri.sanity.util.Alert$Click();
        }
        v8_1.setPositiveButton(2131165187, v1_22);
        if (p16 == null) {
            p16 = new cri.sanity.util.Alert$Click();
        }
        v8_1.setNegativeButton(2131165188, p16);
        return v8_1.show();
    }

    public static final void resetPwd()
    {
        cri.sanity.util.Alert.prevNewPwd2 = 0;
        cri.sanity.util.Alert.prevNewPwd1 = 0;
        cri.sanity.util.Alert.prevOldPwd = 0;
        return;
    }

    public static final android.app.AlertDialog time(cri.sanity.util.Alert$Timed p2)
    {
        return cri.sanity.util.Alert.time(0, p2, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog time(cri.sanity.util.Alert$Timed p1, android.content.Context p2)
    {
        return cri.sanity.util.Alert.time(0, p1, p2);
    }

    public static final android.app.AlertDialog time(String p1, cri.sanity.util.Alert$Timed p2)
    {
        return cri.sanity.util.Alert.time(p1, p2, cri.sanity.util.Alert.activity);
    }

    public static final android.app.AlertDialog time(String p9, cri.sanity.util.Alert$Timed p10, android.content.Context p11)
    {
        android.view.View v2 = cri.sanity.util.Alert.layout(2130903043);
        android.widget.TimePicker v5_1 = ((android.widget.TimePicker) v2.findViewById(2131361807));
        android.widget.SeekBar v4_1 = ((android.widget.SeekBar) v2.findViewById(2131361808));
        int v1 = p10.hour;
        int v3 = p10.mins;
        v4_1.setMax(95);
        v4_1.setProgress(((v1 * 4) + (v3 / 15)));
        v4_1.setOnSeekBarChangeListener(new cri.sanity.util.Alert$4(v5_1));
        v5_1.setCurrentHour(Integer.valueOf(v1));
        v5_1.setCurrentMinute(Integer.valueOf(v3));
        v5_1.setIs24HourView(Boolean.valueOf(1));
        v5_1.setOnTimeChangedListener(new cri.sanity.util.Alert$5(v4_1));
        android.app.AlertDialog$Builder v0_1 = new android.app.AlertDialog$Builder(p11);
        if (!cri.sanity.A.empty(p9)) {
            v0_1.setTitle(p9);
        }
        v0_1.setIcon(2130837507);
        v0_1.setView(v2);
        v0_1.setCancelable(1);
        v0_1.setPositiveButton(2131165187, new cri.sanity.util.Alert$6(p10, v5_1));
        v0_1.setNegativeButton(2131165188, new cri.sanity.util.Alert$Click());
        p10.dlg = v0_1.create();
        return v0_1.show();
    }
}
package cri.sanity.util;
final class Blocker$1 extends cri.sanity.util.Task {

    Blocker$1()
    {
        return;
    }

    public void run()
    {
        cri.sanity.util.Dev.lock();
        return;
    }
}
package cri.sanity.util;
final class Blocker$2 implements java.lang.Runnable {

    Blocker$2()
    {
        return;
    }

    public void run()
    {
        android.media.AudioManager v0 = cri.sanity.A.audioMan();
        v0.setMode(0);
        v0.setStreamMute(0, 1);
        v0.setStreamSolo(4, 1);
        v0.setMicrophoneMute(1);
        return;
    }
}
package cri.sanity.util;
final class Blocker$3 implements java.lang.Runnable {

    Blocker$3()
    {
        return;
    }

    public void run()
    {
        cri.sanity.util.Dev.lock();
        return;
    }
}
package cri.sanity.util;
final class Blocker$4 extends cri.sanity.util.Task {

    Blocker$4()
    {
        return;
    }

    public void run()
    {
        cri.sanity.util.Dev.endCall();
        return;
    }
}
package cri.sanity.util;
public final class Blocker {
    private static final int ANSWER_TIMEOUT = 60000;
    public static final int MODE_ANSWER = 3;
    public static final int MODE_HANGUP = 0;
    private static final int MODE_NONE = 255;
    public static final int MODE_RADIO = 1;
    public static final int MODE_SILENT = 2;
    private static final int NID = 3;
    public static final char SEP = 124;
    private static int mode;
    private static String name;
    private static String num;
    private static boolean pickup;

    static Blocker()
    {
        cri.sanity.util.Blocker.mode = -1;
        return;
    }

    public Blocker()
    {
        return;
    }

    public static final boolean apply(int p4)
    {
        cri.sanity.util.Blocker$1 v1_0 = 0;
        cri.sanity.util.Blocker.num = 0;
        cri.sanity.util.Blocker.name = 0;
        switch (p4) {
            case 0:
                int v3_7 = cri.sanity.A.is("block_pickup");
                cri.sanity.util.Blocker.pickup = v3_7;
                if (v3_7 == 0) {
                    if (cri.sanity.util.Dev.endCall()) {
                        cri.sanity.util.Blocker.mode = p4;
                        v1_0 = 1;
                    } else {
                        cri.sanity.util.Blocker.blockFailed();
                    }
                } else {
                    cri.sanity.util.Dev.answerCall();
                }
                break;
            case 1:
                int v3_3 = cri.sanity.A.is("block_pickup");
                cri.sanity.util.Blocker.pickup = v3_3;
                if (v3_3 == 0) {
                    if (cri.sanity.util.Dev.enableFlightMode(1)) {
                    } else {
                        cri.sanity.util.Blocker.blockFailed();
                    }
                } else {
                    cri.sanity.util.Dev.answerCall();
                }
                break;
            case 2:
                cri.sanity.PhoneListener v0 = cri.sanity.PhoneListener.getActiveInstance();
                if ((v0 == null) || (!v0.changeRinger(0, 0))) {
                } else {
                    new cri.sanity.util.Blocker$1().exec(2000);
                }
                break;
            case 3:
                cri.sanity.util.Dev.answerCall();
                break;
            default:
                cri.sanity.util.Blocker.blockFailed();
        }
        return v1_0;
    }

    private static void blockFailed()
    {
        cri.sanity.A.notify(cri.sanity.A.s(2131165672));
        cri.sanity.util.Blocker.mode = -1;
        return;
    }

    private static void log()
    {
        try {
            java.io.FileWriter v0_1 = new java.io.FileWriter(new StringBuilder().append(cri.sanity.A.sdcardDir()).append(47).append("block_history.txt").toString(), 1);
            v0_1.append(new StringBuilder().append(cri.sanity.A.date()).append(124).append(cri.sanity.util.Blocker.name()).append(124).append(cri.sanity.util.Blocker.num()).append(10).toString());
            v0_1.flush();
            v0_1.close();
        } catch (Exception v1) {
        }
        return;
    }

    private static String name()
    {
        if (cri.sanity.util.Blocker.name == null) {
            cri.sanity.util.Blocker.readNameNum();
        }
        return cri.sanity.util.Blocker.name;
    }

    public static final void notification(boolean p9)
    {
        android.app.NotificationManager v5_1;
        StringBuilder vtmp3 = new StringBuilder().append(cri.sanity.A.name()).append(": ");
        if (!p9) {
            v5_1 = 2131165398;
        } else {
            v5_1 = 2131165415;
        }
        String v2 = vtmp3.append(cri.sanity.A.s(v5_1)).toString();
        String v4 = cri.sanity.util.Blocker.name();
        if (cri.sanity.util.Blocker.num.length() > 0) {
            v4 = new StringBuilder().append(v4).append(" (").append(cri.sanity.util.Blocker.num).append(41).toString();
        }
        android.app.NotificationManager v5_13;
        cri.sanity.A v0 = cri.sanity.A.app();
        if (!p9) {
            v5_13 = cri.sanity.screen.CallHistoryActivity;
        } else {
            v5_13 = cri.sanity.screen.SmsHistoryActivity;
        }
        android.content.Intent v1_1 = new android.content.Intent(v0, v5_13);
        v1_1.setFlags(268435456);
        android.app.Notification v3_1 = new android.app.Notification(2130837508, v2, cri.sanity.A.time());
        v3_1.flags = 16;
        v3_1.setLatestEventInfo(v0, v4, v2, android.app.PendingIntent.getActivity(v0, 0, v1_1, 0));
        cri.sanity.A.notifMan().notify(3, v3_1);
        return;
    }

    private static String num()
    {
        if (cri.sanity.util.Blocker.num == null) {
            cri.sanity.util.Blocker.readNameNum();
        }
        return cri.sanity.util.Blocker.num;
    }

    public static final boolean onOffhook()
    {
        boolean v2_0 = 0;
        switch (cri.sanity.util.Blocker.mode) {
            case -1:
            default:
                break;
            case 0:
                if ((!cri.sanity.util.Blocker.pickup) || (cri.sanity.util.Dev.endCall())) {
                    v2_0 = 1;
                } else {
                    cri.sanity.util.Blocker.blockFailed();
                }
                break;
            case 1:
                if ((!cri.sanity.util.Blocker.pickup) || (cri.sanity.util.Dev.enableFlightMode(1))) {
                } else {
                    cri.sanity.util.Blocker.blockFailed();
                }
            case 3:
                cri.sanity.util.Blocker$2 v1_1 = new cri.sanity.util.Blocker$2();
                v1_1.run();
                cri.sanity.BlankActivity.postSingleton(v1_1);
                cri.sanity.BlankActivity.postSingleton(new cri.sanity.util.Blocker$3());
                android.content.Intent v0_1 = new android.content.Intent(cri.sanity.A.app(), cri.sanity.BlankActivity);
                v0_1.putExtra("block", 1);
                v0_1.setFlags(268435456);
                cri.sanity.A.app().startActivity(v0_1);
                new cri.sanity.util.Blocker$4().exec(60000);
                break;
        }
        return v2_0;
    }

    private static void readNameNum()
    {
        cri.sanity.util.CallFilter v0;
        if (!cri.sanity.PhoneListener.isRunning()) {
            v0 = cri.sanity.SmsReceiver.callFilter();
        } else {
            v0 = cri.sanity.util.CallFilter.instance();
        }
        cri.sanity.util.Blocker.num = v0.lastNum();
        if (cri.sanity.util.Blocker.num == null) {
            cri.sanity.util.Blocker.num = "";
        }
        if (cri.sanity.util.Blocker.num.length() > 0) {
            cri.sanity.util.Blocker.name = v0.searchName(cri.sanity.util.Blocker.num);
            if (cri.sanity.A.empty(cri.sanity.util.Blocker.name)) {
                cri.sanity.util.Blocker.name = cri.sanity.A.s(2131165211);
            }
        } else {
            cri.sanity.util.Blocker.name = cri.sanity.A.s(2131165212);
        }
        return;
    }

    public static final void shutdown()
    {
        cri.sanity.Alarmer.stop("actFlightOff");
        switch (cri.sanity.util.Blocker.mode) {
            case 0:
            case 2:
                if (cri.sanity.A.is("block_notify")) {
                    cri.sanity.util.Blocker.notification(0);
                }
                cri.sanity.util.Blocker.log();
                cri.sanity.util.Dev.lock();
                cri.sanity.util.Blocker.mode = -1;
                break;
            case 1:
                int v2 = cri.sanity.A.geti("block_resume");
                if (v2 <= 0) {
                    cri.sanity.util.Dev.enableFlightMode(0);
                } else {
                    cri.sanity.Alarmer.exec("actFlightOff", ((long) v2));
                }
            case 3:
                android.media.AudioManager v0 = cri.sanity.A.audioMan();
                v0.setMode(0);
                v0.setStreamSolo(4, 0);
                v0.setStreamMute(0, 0);
                v0.setMicrophoneMute(0);
                cri.sanity.BlankActivity v1 = cri.sanity.BlankActivity.getInstance();
                if (v1 == null) {
                } else {
                    v1.postFinish();
                }
                break;
        }
        return;
    }
}
package cri.sanity.util;
public final class CallFilter {
    private static cri.sanity.util.CallFilter instance;
    private static String[] proj;
    private android.database.Cursor cursor;
    private String[] lastGroups;
    private String lastName;
    private String lastNum;

    public CallFilter()
    {
        return;
    }

    public static final cri.sanity.util.CallFilter instance()
    {
        if (cri.sanity.util.CallFilter.instance == null) {
            cri.sanity.util.CallFilter.instance = new cri.sanity.util.CallFilter();
        }
        return cri.sanity.util.CallFilter.instance;
    }

    private boolean isStarred()
    {
        return this.cursor.getString(this.cursor.getColumnIndex("starred")).equals("1");
    }

    private declared_synchronized boolean query(String p9, boolean p10)
    {
        try {
            if (!p10) {
                if (this.cursor != null) {
                    this.cursor.close();
                }
                this.lastGroups = 0;
                this.lastNum = p9;
                String v9_1 = android.net.Uri.encode(p9);
                if (cri.sanity.util.CallFilter.proj == null) {
                    int v0_2 = new String[3];
                    v0_2[0] = "_id";
                    v0_2[1] = "display_name";
                    v0_2[2] = "starred";
                    cri.sanity.util.CallFilter.proj = v0_2;
                }
                this.cursor = cri.sanity.A.resolver().query(android.net.Uri.withAppendedPath(android.provider.ContactsContract$PhoneLookup.CONTENT_FILTER_URI, v9_1), cri.sanity.util.CallFilter.proj, 0, 0, 0);
            }
        } catch (int v0_7) {
            throw v0_7;
        }
        if ((this.cursor == null) || (!this.cursor.moveToFirst())) {
            int v0_10 = 0;
        } else {
            v0_10 = 1;
        }
        return v0_10;
    }

    private static boolean res(boolean p2, String p3)
    {
        if (cri.sanity.A.geti(new StringBuilder().append("filter_mode_").append(p3).toString()) != 0) {
            if (p2 != 0) {
                p2 = 0;
            } else {
                p2 = 1;
            }
        }
        return p2;
    }

    public static final void shutdown()
    {
        if (cri.sanity.util.CallFilter.instance != null) {
            cri.sanity.util.CallFilter.instance.close();
        }
        return;
    }

    private static boolean skipDateTime(String p15)
    {
        int v11 = 0;
        if (cri.sanity.A.is(new StringBuilder().append("filter_dt_").append(p15).toString())) {
            String v15_1 = new StringBuilder().append(95).append(p15).toString();
            java.util.Calendar v0 = java.util.Calendar.getInstance();
            String v2 = cri.sanity.A.gets(new StringBuilder().append("filter_dt_days").append(v15_1).toString());
            if ((v2.length() <= 0) || (v2.indexOf(Integer.toString(v0.get(7))) >= 0)) {
                int v1 = cri.sanity.A.geti(new StringBuilder().append("filter_dt_time_count").append(v15_1).toString());
                if (v1 > 0) {
                    int v3 = v0.get(11);
                    int v7 = v0.get(12);
                    int v6 = 1;
                    while (v6 <= v1) {
                        int v10 = cri.sanity.A.geti(new StringBuilder().append("filter_dt_time").append(v6).append(v15_1).toString());
                        int v4 = ((v10 >> 24) & 255);
                        if ((v3 >= v4) && ((v3 != v4) || (v7 >= ((v10 >> 16) & 255)))) {
                            int v5 = ((v10 >> 8) & 255);
                            if ((v3 <= v5) && ((v3 != v5) || (v7 <= (v10 & 255)))) {
                                return v11;
                            }
                        }
                        v6++;
                    }
                    v11 = 1;
                }
            } else {
                v11 = 1;
            }
        }
        return v11;
    }

    private static boolean skipPrefix(String p8, String p9)
    {
        int v5 = 0;
        String v4 = cri.sanity.A.gets(new StringBuilder().append("filter_prefix_").append(p9).toString());
        int v2 = v4.length();
        if (v2 > 0) {
            int v0 = 0;
            do {
                String v3;
                int v1 = v4.indexOf(167, v0);
                if (v1 >= 0) {
                    if (v0 == v1) {
                        break;
                    }
                    v3 = v4.substring(v0, v1);
                } else {
                    v3 = v4.substring(v0);
                }
                if (!p8.startsWith(v3)) {
                    v0 = (v1 + 1);
                } else {
                    v5 = 1;
                    break;
                }
            } while((v0 > 0) && (v0 < v2));
        }
        return v5;
    }

    public final declared_synchronized void close()
    {
        try {
            if (this.cursor != null) {
                this.cursor.close();
                this.cursor = 0;
                this.lastNum = 0;
                this.lastName = 0;
                this.lastGroups = 0;
            }
        } catch (int v0_2) {
            throw v0_2;
        }
        return;
    }

    public final boolean includes(String p10, String p11, boolean p12)
    {
        boolean v5_0 = 1;
        if ((cri.sanity.A.is(new StringBuilder().append("filter_enable_").append(p11).toString())) && (!cri.sanity.util.CallFilter.skipDateTime(p11))) {
            if (!cri.sanity.A.is(new StringBuilder().append("filter_all_").append(p11).toString())) {
                if ((p10 != null) && (p10.length() > 0)) {
                    if (this.query(p10, p10.equals(this.lastNum))) {
                        if ((!cri.sanity.A.is(new StringBuilder().append("filter_allcontacts_").append(p11).toString())) && ((!cri.sanity.A.is(new StringBuilder().append("filter_star_").append(p11).toString())) || (!this.isStarred()))) {
                            String v1 = this.cursor.getString(this.cursor.getColumnIndex("_id"));
                            if (!cri.sanity.A.is(new StringBuilder().append("filter_contact_").append(v1).append(p11).toString())) {
                                if (cri.sanity.A.geti(new StringBuilder().append("filter_groups_count_").append(p11).toString()) > 0) {
                                    if (this.lastGroups == null) {
                                        this.lastGroups = cri.sanity.util.Contacts.groups(v1);
                                    }
                                    String[] v0 = this.lastGroups;
                                    int v3 = 0;
                                    while (v3 < v0.length) {
                                        if (!cri.sanity.A.is(new StringBuilder().append("filter_group_").append(v0[v3]).append(p11).toString())) {
                                            v3++;
                                        } else {
                                            p12 = cri.sanity.util.CallFilter.res(1, p11);
                                        }
                                        return p12;
                                    }
                                }
                                p12 = cri.sanity.util.CallFilter.res(cri.sanity.util.CallFilter.skipPrefix(p10, p11), p11);
                            } else {
                                p12 = cri.sanity.util.CallFilter.res(1, p11);
                            }
                        } else {
                            p12 = cri.sanity.util.CallFilter.res(1, p11);
                        }
                    } else {
                        if ((!cri.sanity.A.is(new StringBuilder().append("filter_unknown_").append(p11).toString())) && ((!cri.sanity.A.is(new StringBuilder().append("filter_num_").append(p10).append(p11).toString())) && (!cri.sanity.util.CallFilter.skipPrefix(p10, p11)))) {
                            v5_0 = 0;
                        }
                        p12 = cri.sanity.util.CallFilter.res(v5_0, p11);
                    }
                } else {
                    p12 = cri.sanity.util.CallFilter.res(cri.sanity.A.is(new StringBuilder().append("filter_anonym_").append(p11).toString()), p11);
                }
            } else {
                p12 = cri.sanity.util.CallFilter.res(1, p11);
            }
        }
        return p12;
    }

    public final String lastName()
    {
        return this.lastName;
    }

    public final String lastNum()
    {
        return this.lastNum;
    }

    public final declared_synchronized String searchName(String p5)
    {
        try {
            if ((p5 != null) && (p5.length() > 0)) {
                boolean v0 = p5.equals(this.lastNum);
                if ((!v0) || (this.lastName == null)) {
                    if (this.query(p5, v0)) {
                        String v1_2 = this.cursor.getString(this.cursor.getColumnIndex("display_name"));
                        this.lastName = v1_2;
                    } else {
                        v1_2 = "";
                        this.lastName = "";
                    }
                } else {
                    v1_2 = this.lastName;
                }
            } else {
                v1_2 = 0;
            }
        } catch (String v1_4) {
            throw v1_4;
        }
        return v1_2;
    }
}
package cri.sanity.util;
public final class Contacts {
    public static final int GRP_ACC = 3;
    public static final int GRP_ID = 0;
    public static final int GRP_SID = 2;
    public static final int GRP_TITLE = 1;

    public Contacts()
    {
        return;
    }

    private static String adjustAcc(String p1)
    {
        if ((p1 == null) || (p1.indexOf(64) < 0)) {
            p1 = "";
        }
        return p1;
    }

    private static String adjustTitle(String p2)
    {
        if (p2 != null) {
            int v0 = p2.indexOf(58);
            if (v0 > 0) {
                p2 = p2.substring((v0 + 1)).trim();
            }
        } else {
            p2 = "";
        }
        return p2;
    }

    public static final String[][] fullGroups()
    {
        String[] v0_0 = cri.sanity.A.resolver();
        String v2_1 = new String[4];
        v2_1[0] = "_id";
        v2_1[1] = "title";
        v2_1[2] = "system_id";
        v2_1[3] = "account_name";
        android.database.Cursor v6 = v0_0.query(android.provider.ContactsContract$Groups.CONTENT_URI, v2_1, 0, 0, 0);
        String[][] v13 = new String[][v6.getCount()];
        if (v6.moveToFirst()) {
            int v8 = v6.getColumnIndex("_id");
            int v10 = v6.getColumnIndex("title");
            int v9 = v6.getColumnIndex("system_id");
            int v7 = v6.getColumnIndex("account_name");
            int v11 = -1;
            do {
                String v12 = v6.getString(v8);
                if (v12 != null) {
                    v11++;
                    String[] v0_8 = new String[4];
                    v0_8[0] = v12;
                    v0_8[1] = cri.sanity.util.Contacts.adjustTitle(v6.getString(v10));
                    v0_8[2] = v6.getString(v9);
                    v0_8[3] = cri.sanity.util.Contacts.adjustAcc(v6.getString(v7));
                    v13[v11] = v0_8;
                }
            } while(v6.moveToNext());
        }
        v6.close();
        return v13;
    }

    public static final java.util.Map groups()
    {
        int v3 = 0;
        java.util.TreeMap v10_1 = new java.util.TreeMap();
        String v0_6 = cri.sanity.A.resolver();
        String[] v2_1 = new String[2];
        v2_1[0] = "_id";
        v2_1[1] = "title";
        android.database.Cursor v6 = v0_6.query(android.provider.ContactsContract$Groups.CONTENT_URI, v2_1, v3, v3, v3);
        if (v6.moveToFirst()) {
            int v7 = v6.getColumnIndex("_id");
            int v8 = v6.getColumnIndex("title");
            do {
                String v9 = v6.getString(v7);
                if (v9 != null) {
                    v10_1.put(v9, cri.sanity.util.Contacts.adjustTitle(v6.getString(v8)));
                }
            } while(v6.moveToNext());
        }
        v6.close();
        return v10_1;
    }

    public static final String[] groups(String p10)
    {
        boolean v0_0 = cri.sanity.A.resolver();
        String[] v2_1 = new String[1];
        v2_1[0] = "data1";
        android.database.Cursor v6 = v0_0.query(android.provider.ContactsContract$Data.CONTENT_URI, v2_1, new StringBuilder().append("contact_id=").append(p10).append(" AND mimetype=\'vnd.android.cursor.item/group_membership\'").toString(), 0, 0);
        String[] v8 = new String[v6.getCount()];
        if (v6.moveToFirst()) {
            int v9 = -1;
            do {
                v9++;
                v8[v9] = v6.getString(v6.getColumnIndex("data1"));
            } while(v6.moveToNext());
        }
        v6.close();
        return v8;
    }
}
package cri.sanity.util;
public final class Dev {
    private static cri.sanity.ghost.ConnMan gConn;
    private static cri.sanity.ghost.WifiMan gWifi;
    private static com.android.internal.telephony.ITelephony iTel;
    private static android.app.KeyguardManager$KeyguardLock keyguardLock;
    private static android.os.PowerManager$WakeLock wakeScreenLock;

    public Dev()
    {
        return;
    }

    public static final void answerCall()
    {
        try {
            if (!cri.sanity.A.is("answer_alt")) {
                cri.sanity.util.Dev.iTel().answerRingingCall();
            } else {
                throw new Exception();
            }
        } catch (Exception v0) {
            android.content.Intent v1_1 = new android.content.Intent("android.intent.action.MEDIA_BUTTON");
            v1_1.putExtra("android.intent.extra.KEY_EVENT", new android.view.KeyEvent(0, 79));
            cri.sanity.A.app().sendOrderedBroadcast(v1_1, "android.permission.CALL_PRIVILEGED");
            android.content.Intent v2_1 = new android.content.Intent("android.intent.action.MEDIA_BUTTON");
            v2_1.putExtra("android.intent.extra.KEY_EVENT", new android.view.KeyEvent(1, 79));
            cri.sanity.A.app().sendOrderedBroadcast(v2_1, "android.permission.CALL_PRIVILEGED");
        }
        return;
    }

    public static final void dial(String p3)
    {
        android.content.Intent v0_1 = new android.content.Intent("android.intent.action.CALL");
        v0_1.setData(android.net.Uri.parse(new StringBuilder().append("tel:").append(p3).toString()));
        v0_1.setFlags(268435456);
        cri.sanity.A.app().startActivity(v0_1);
        return;
    }

    public static final boolean enableBt(boolean p2)
    {
        boolean v1;
        android.bluetooth.BluetoothAdapter v0 = cri.sanity.A.btAdapter();
        if (v0 != null) {
            if (!p2) {
                v1 = v0.disable();
            } else {
                v1 = v0.enable();
            }
        } else {
            v1 = 0;
        }
        return v1;
    }

    public static final boolean enableFlightMode(boolean p6)
    {
        cri.sanity.A v1_3;
        int v3 = 0;
        android.content.ContentResolver v4 = cri.sanity.A.resolver();
        if (!p6) {
            v1_3 = 0;
        } else {
            v1_3 = 1;
        }
        if (android.provider.Settings$System.putInt(v4, "airplane_mode_on", v1_3)) {
            android.content.Intent v0_1 = new android.content.Intent("android.intent.action.AIRPLANE_MODE");
            v0_1.putExtra("state", p6);
            cri.sanity.A.app().sendBroadcast(v0_1);
            v3 = 1;
        }
        return v3;
    }

    public static final void enableLock(boolean p2)
    {
        if (cri.sanity.util.Dev.keyguardLock == null) {
            cri.sanity.util.Dev.keyguardLock = cri.sanity.A.keyguardMan().newKeyguardLock(cri.sanity.A.name());
        }
        if (!p2) {
            cri.sanity.util.Dev.keyguardLock.disableKeyguard();
        } else {
            cri.sanity.util.Dev.keyguardLock.reenableKeyguard();
        }
        return;
    }

    public static final boolean endCall()
    {
        int v2 = 1;
        try {
            cri.sanity.util.Dev.iTel().endCall();
        } catch (Exception v0) {
            try {
                cri.sanity.util.Dev.enableFlightMode(1);
                cri.sanity.util.Dev.enableFlightMode(0);
            } catch (Exception v1) {
                v2 = 0;
            }
        }
        return v2;
    }

    public static final cri.sanity.ghost.ConnMan gConn()
    {
        if (cri.sanity.util.Dev.gConn == null) {
            cri.sanity.util.Dev.gConn = new cri.sanity.ghost.ConnMan();
        }
        return cri.sanity.util.Dev.gConn;
    }

    public static final cri.sanity.ghost.WifiMan gWifi()
    {
        if (cri.sanity.util.Dev.gWifi == null) {
            cri.sanity.util.Dev.gWifi = new cri.sanity.ghost.WifiMan();
        }
        return cri.sanity.util.Dev.gWifi;
    }

    private static com.android.internal.telephony.ITelephony getITelephony()
    {
        try {
            android.telephony.TelephonyManager v2 = cri.sanity.A.telMan();
            Class[] v5_1 = new Class[0];
            reflect.Method v1 = v2.getClass().getDeclaredMethod("getITelephony", v5_1);
            v1.setAccessible(1);
            int v3_1 = new Object[0];
            int v3_3 = ((com.android.internal.telephony.ITelephony) v1.invoke(v2, v3_1));
        } catch (Exception v0) {
            v3_3 = 0;
        }
        return v3_3;
    }

    public static final int getSysInt(String p2)
    {
        try {
            int v1_1 = android.provider.Settings$System.getInt(cri.sanity.A.resolver(), p2);
        } catch (android.provider.Settings$SettingNotFoundException v0) {
            v1_1 = -1;
        }
        return v1_1;
    }

    public static final com.android.internal.telephony.ITelephony iTel()
    {
        if (cri.sanity.util.Dev.iTel == null) {
            cri.sanity.util.Dev.iTel = cri.sanity.util.Dev.getITelephony();
        }
        return cri.sanity.util.Dev.iTel;
    }

    public static final boolean isBtOn()
    {
        int v2 = 0;
        android.bluetooth.BluetoothAdapter v0 = cri.sanity.A.btAdapter();
        if (v0 != null) {
            int v1 = v0.getState();
            if ((v1 == 12) || (v1 == 11)) {
                v2 = 1;
            }
        }
        return v2;
    }

    public static final boolean isFlightModeOn()
    {
        int v0 = 1;
        if (cri.sanity.util.Dev.getSysInt("airplane_mode_on") != 1) {
            v0 = 0;
        }
        return v0;
    }

    public static final boolean isGpsOn()
    {
        int v1_2;
        android.location.LocationManager v0 = cri.sanity.A.locMan();
        if ((v0 == null) || (!v0.isProviderEnabled("gps"))) {
            v1_2 = 0;
        } else {
            v1_2 = 1;
        }
        return v1_2;
    }

    public static final boolean isHotspotOn()
    {
        return cri.sanity.util.Dev.gWifi().isHotspotOn();
    }

    public static final boolean isHotspotSupported()
    {
        return cri.sanity.util.Dev.gWifi().callable("getWifiApState");
    }

    public static final boolean isIdle()
    {
        int v0_2;
        if (cri.sanity.A.telMan().getCallState() != 0) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static final boolean isMobDataOn()
    {
        int v1 = 0;
        if ((cri.sanity.util.Dev.iTel() != null) && (android.provider.Settings$Secure.getInt(cri.sanity.A.resolver(), "mobile_data", 1) == 1)) {
            int v0 = cri.sanity.A.telMan().getDataState();
            if ((v0 == 2) || (v0 == 1)) {
                v1 = 1;
            }
        }
        return v1;
    }

    public static final boolean isOffhook()
    {
        int v0_2;
        if (cri.sanity.A.telMan().getCallState() != 2) {
            v0_2 = 0;
        } else {
            v0_2 = 1;
        }
        return v0_2;
    }

    public static final boolean isRinging()
    {
        int v0 = 1;
        if (cri.sanity.A.telMan().getCallState() != 1) {
            v0 = 0;
        }
        return v0;
    }

    public static final boolean isTetheringOn()
    {
        return cri.sanity.util.Dev.gConn().isTetheringOn();
    }

    public static final boolean isTetheringSupported()
    {
        boolean v0_0 = cri.sanity.util.Dev.gConn();
        String[] v1_1 = new String[2];
        v1_1[0] = "getTetheredIfaces";
        v1_1[1] = "getTetherableUsbRegexs";
        return v0_0.callable(v1_1);
    }

    public static final void lock()
    {
        if (cri.sanity.A.SDK >= 8) {
            try {
                cri.sanity.A.devpolMan().lockNow();
            } catch (Exception v0) {
            }
        }
        return;
    }

    public static final android.os.PowerManager$WakeLock newCpuWakeLock()
    {
        return cri.sanity.A.powerMan().newWakeLock(805306369, cri.sanity.A.name());
    }

    public static final void toggleGps()
    {
        android.content.Intent v0_1 = new android.content.Intent();
        v0_1.setClassName("com.android.settings", "com.android.settings.widget.SettingsAppWidgetProvider");
        v0_1.addCategory("android.intent.category.ALTERNATIVE");
        v0_1.setData(android.net.Uri.parse("3"));
        cri.sanity.A.app().sendBroadcast(v0_1);
        return;
    }

    public static final void wakeScreen()
    {
        cri.sanity.util.Dev.wakeScreen(1);
        return;
    }

    public static final void wakeScreen(boolean p3)
    {
        if (cri.sanity.util.Dev.wakeScreenLock == null) {
            cri.sanity.util.Dev.wakeScreenLock = cri.sanity.A.powerMan().newWakeLock(805306374, cri.sanity.A.name());
            cri.sanity.util.Dev.wakeScreenLock.setReferenceCounted(0);
        }
        cri.sanity.util.Dev.wakeScreenLock.acquire();
        if (p3) {
            cri.sanity.util.Dev.wakeScreenLock.release();
        }
        return;
    }
}
package cri.sanity.util;
public final class Goto {

    public Goto()
    {
        return;
    }

    public static final boolean marketDetails(String p2)
    {
        return cri.sanity.util.Goto.marketUrl(new StringBuilder().append("details?id=").append(p2).toString());
    }

    public static final boolean marketSearchPub(String p2)
    {
        return cri.sanity.util.Goto.marketUrl(new StringBuilder().append("search?q=pub:\"").append(p2).append(34).toString());
    }

    public static final boolean marketUrl(String p3)
    {
        boolean v0 = cri.sanity.util.Goto.url(new StringBuilder().append("market://").append(p3).toString());
        if (!v0) {
            cri.sanity.util.Alert.msg(cri.sanity.A.s(2131165670));
        }
        return v0;
    }

    public static final boolean url(String p4)
    {
        android.content.Intent v1_1 = new android.content.Intent("android.intent.action.VIEW", android.net.Uri.parse(p4));
        v1_1.setFlags(268435456);
        try {
            cri.sanity.A.app().startActivity(v1_1);
            int v2_1 = 1;
        } catch (android.content.ActivityNotFoundException v0) {
            v2_1 = 0;
        }
        return v2_1;
    }
}
package cri.sanity.util;
final class License$1 implements java.lang.Runnable {

    License$1()
    {
        return;
    }

    public void run()
    {
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(2131034124));
        return;
    }
}
package cri.sanity.util;
final class License$2 implements java.lang.Runnable {
    final synthetic Runnable val$onAfter;

    License$2(Runnable p1)
    {
        this.val$onAfter = p1;
        return;
    }

    public void run()
    {
        cri.sanity.A.put("licver", cri.sanity.util.License.access$000());
        cri.sanity.A.setFull(1);
        if (this.val$onAfter != null) {
            this.val$onAfter.run();
        }
        return;
    }
}
package cri.sanity.util;
 class License$3$1 extends cri.sanity.util.Alert$Click {
    final synthetic cri.sanity.util.License$3 this$0;

    License$3$1(cri.sanity.util.License$3 p1)
    {
        this.this$0 = p1;
        return;
    }

    public void on()
    {
        this.dismiss();
        if (this.this$0.val$onAfter != null) {
            this.this$0.val$onAfter.run();
        }
        return;
    }
}
package cri.sanity.util;
final class License$3 implements java.lang.Runnable {
    final synthetic int val$msgRawId;
    final synthetic Runnable val$onAfter;

    License$3(int p1, Runnable p2)
    {
        this.val$msgRawId = p1;
        this.val$onAfter = p2;
        return;
    }

    public void run()
    {
        cri.sanity.A.setFull(0);
        cri.sanity.util.Alert.msg(cri.sanity.A.rawstr(this.val$msgRawId), new cri.sanity.util.License$3$1(this), 0, 0, 0);
        return;
    }
}
package cri.sanity.util;
public final class License {
    public static final int CODE = 69;
    public static final String FULL_ACTIVITY = "cri.sanitydonate.DonateActivity";
    public static final String FULL_PKG = "cri.sanitydonate";
    public static final String FULL_SERVICE = "cri.sanitydonate.DonateService";
    private static final int RESULT_CANCELED = 0;
    private static final int RESULT_FAILED = 666;
    private static final int RESULT_OK = 255;
    private static boolean completed;

    static License()
    {
        cri.sanity.util.License.completed = 1;
        return;
    }

    public License()
    {
        return;
    }

    static synthetic String access$000()
    {
        return cri.sanity.util.License.ver();
    }

    private static boolean allow(android.os.Handler p1, Runnable p2)
    {
        p1.post(new cri.sanity.util.License$2(p2));
        return 1;
    }

    public static final boolean check()
    {
        int v3 = 0;
        android.app.Activity v0 = cri.sanity.util.Alert.activity;
        if (v0 != null) {
            try {
                android.content.Intent v2_1 = new android.content.Intent("android.intent.action.MAIN");
                v2_1.setClassName("cri.sanitydonate", "cri.sanitydonate.DonateActivity");
                v0.startActivityForResult(v2_1, 69);
                cri.sanity.util.License.completed = 0;
                v3 = 1;
            } catch (android.content.ActivityNotFoundException v1) {
                cri.sanity.util.License.completed = 1;
            }
        } else {
            cri.sanity.util.License.completed = 1;
        }
        return v3;
    }

    private static boolean disallow(android.os.Handler p1, int p2, Runnable p3)
    {
        p1.post(new cri.sanity.util.License$3(p2, p3));
        return 0;
    }

    public static final boolean hasOld()
    {
        int v1 = 0;
        android.app.Activity v0 = cri.sanity.util.Alert.activity;
        if ((v0 != null) && (v0.startService(new android.content.Intent("cri.sanitydonate.DonateService")) != null)) {
            v1 = 1;
        }
        return v1;
    }

    public static final boolean isChecked()
    {
        if ((cri.sanity.A.isFull()) && (cri.sanity.util.License.ver().equals(cri.sanity.A.gets("licver")))) {
            int v0_1 = 1;
            cri.sanity.util.License.completed = 1;
        } else {
            v0_1 = 0;
        }
        return v0_1;
    }

    public static final boolean isCompleted()
    {
        return cri.sanity.util.License.completed;
    }

    public static final boolean result(int p1, android.os.Handler p2, Runnable p3)
    {
        if (!cri.sanity.util.License.completed) {
            boolean v0_1;
            switch (p1) {
                case -1:
                    v0_1 = cri.sanity.util.License.allow(p2, p3);
                    break;
                case 0:
                    v0_1 = cri.sanity.util.License.disallow(p2, 2131034123, p3);
                    break;
                case 666:
                    v0_1 = cri.sanity.util.License.disallow(p2, 2131034121, p3);
                    break;
                default:
                    v0_1 = cri.sanity.util.License.disallow(p2, 2131034122, p3);
            }
            return v0_1;
        } else {
            if (cri.sanity.util.License.hasOld()) {
                p2.post(new cri.sanity.util.License$1());
            }
            throw new IllegalStateException();
        }
    }

    private static final String ver()
    {
        String v1_4;
        int v0 = cri.sanity.A.beta();
        StringBuilder v2_1 = new StringBuilder().append(cri.sanity.A.verName());
        if (v0 <= 0) {
            v1_4 = "";
        } else {
            v1_4 = new StringBuilder().append("b").append(v0).toString();
        }
        return v2_1.append(v1_4).toString();
    }
}
package cri.sanity.util;
 class MobDataTracker$1 extends cri.sanity.util.Task {
    final synthetic cri.sanity.util.MobDataTracker this$0;

    MobDataTracker$1(cri.sanity.util.MobDataTracker p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        try {
            if (cri.sanity.util.MobDataTracker.access$000(this.this$0) != 1) {
                if (cri.sanity.util.MobDataTracker.access$000(this.this$0) == 2) {
                    cri.sanity.util.MobDataTracker.access$100(this.this$0).disableDataConnectivity();
                }
            } else {
                cri.sanity.util.MobDataTracker.access$100(this.this$0).enableDataConnectivity();
            }
        } catch (com.android.internal.telephony.ITelephony v1_7) {
            throw v1_7;
        } catch (Exception v0) {
            cri.sanity.util.MobDataTracker.access$002(this.this$0, 0);
            cri.sanity.util.MobDataTracker.access$202(this.this$0, 3);
        }
        return;
    }
}
package cri.sanity.util;
public final class MobDataTracker extends android.telephony.PhoneStateListener {
    private static final int ACT_DISABLE = 2;
    private static final int ACT_ENABLE = 1;
    private static final int ACT_NONE = 0;
    private static final int DISABLED = 0;
    private static final int ENABLED = 2;
    private static final int ENABLING = 1;
    private static final int SUSPENDED = 3;
    private static final int TASK_ACTION;
    private int action;
    private com.android.internal.telephony.ITelephony itel;
    private int state;
    private final cri.sanity.util.Task taskAction;
    private boolean waiter;

    static MobDataTracker()
    {
        cri.sanity.util.MobDataTracker.TASK_ACTION = cri.sanity.util.Task.idNew();
        return;
    }

    public MobDataTracker()
    {
        this.action = 0;
        this.waiter = 0;
        this.taskAction = new cri.sanity.util.MobDataTracker$1(this);
        this.itel = cri.sanity.util.Dev.iTel();
        if (this.itel != null) {
            this.state = 2;
            cri.sanity.A.telMan().listen(this, 64);
        } else {
            this.state = 3;
        }
        return;
    }

    static synthetic int access$000(cri.sanity.util.MobDataTracker p1)
    {
        return p1.action;
    }

    static synthetic int access$002(cri.sanity.util.MobDataTracker p0, int p1)
    {
        p0.action = p1;
        return p1;
    }

    static synthetic com.android.internal.telephony.ITelephony access$100(cri.sanity.util.MobDataTracker p1)
    {
        return p1.itel;
    }

    static synthetic int access$202(cri.sanity.util.MobDataTracker p0, int p1)
    {
        p0.state = p1;
        return p1;
    }

    public declared_synchronized void enable(boolean p4)
    {
        cri.sanity.util.Task v0_0 = 1;
        try {
            switch (this.state) {
                case 0:
                    if (p4) {
                        this.action = 1;
                        if (cri.sanity.util.Task.has(cri.sanity.util.MobDataTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.MobDataTracker.TASK_ACTION, 200);
                        }
                    } else {
                        this.action = 0;
                    }
                    break;
                case 1:
                    if (!p4) {
                        v0_0 = 2;
                    }
                    this.action = v0_0;
                    break;
                case 2:
                    if (!p4) {
                        this.action = 2;
                        if (cri.sanity.util.Task.has(cri.sanity.util.MobDataTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.MobDataTracker.TASK_ACTION, 200);
                        }
                    } else {
                        this.action = 0;
                    }
                case 3:
                    break;
                default:
                    if (p4) {
                        this.action = 1;
                        if (cri.sanity.util.Task.has(cri.sanity.util.MobDataTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.MobDataTracker.TASK_ACTION, 2000);
                        }
                    } else {
                        this.action = 0;
                    }
            }
        } catch (cri.sanity.util.Task v0_13) {
            throw v0_13;
        }
        return;
    }

    public declared_synchronized void onDataConnectionStateChanged(int p3)
    {
        int v0_0 = 1;
        try {
            this.state = p3;
        } catch (int v0_1) {
            throw v0_1;
        }
        if (this.action != 0) {
            if (this.action != 1) {
                v0_0 = 0;
            }
            this.enable(v0_0);
        }
        if (this.waiter) {
            this.notifyAll();
        }
        return;
    }

    public declared_synchronized void shutdown()
    {
        try {
            if (this.action != 0) {
                this.waiter = 1;
                this.wait(4000);
            }
            try {
                cri.sanity.A.telMan().listen(this, 0);
            } catch (Exception v0) {
            }
            return;
        } catch (Exception v0_1) {
            throw v0_1;
        } catch (Exception v0) {
        }
    }

    public declared_synchronized boolean willOn()
    {
        int v0_0 = 1;
        try {
            if (((this.action != 0) || ((this.state != 2) && (this.state != 1))) && ((this.action != 1) || (!cri.sanity.util.Task.has(cri.sanity.util.MobDataTracker.TASK_ACTION)))) {
                v0_0 = 0;
            }
        } catch (int v0_1) {
            throw v0_1;
        }
        return v0_0;
    }
}
package cri.sanity.util;
public final class PrefixNum {
    private static java.util.Map prefixMap;

    public PrefixNum()
    {
        return;
    }

    private static void buildPrefixMap()
    {
        cri.sanity.util.PrefixNum.prefixMap = new java.util.HashMap();
        cri.sanity.util.PrefixNum.prefixMap.put("au", "61");
        cri.sanity.util.PrefixNum.prefixMap.put("be", "32");
        cri.sanity.util.PrefixNum.prefixMap.put("br", "55");
        cri.sanity.util.PrefixNum.prefixMap.put("ca", "1");
        cri.sanity.util.PrefixNum.prefixMap.put("ch", "41");
        cri.sanity.util.PrefixNum.prefixMap.put("cl", "56");
        cri.sanity.util.PrefixNum.prefixMap.put("cn", "86");
        cri.sanity.util.PrefixNum.prefixMap.put("cz", "420");
        cri.sanity.util.PrefixNum.prefixMap.put("de", "49");
        cri.sanity.util.PrefixNum.prefixMap.put("dk", "45");
        cri.sanity.util.PrefixNum.prefixMap.put("fi", "358");
        cri.sanity.util.PrefixNum.prefixMap.put("fr", "58");
        cri.sanity.util.PrefixNum.prefixMap.put("hk", "852");
        cri.sanity.util.PrefixNum.prefixMap.put("hu", "36");
        cri.sanity.util.PrefixNum.prefixMap.put("in", "91");
        cri.sanity.util.PrefixNum.prefixMap.put("ir", "353");
        cri.sanity.util.PrefixNum.prefixMap.put("it", "39");
        cri.sanity.util.PrefixNum.prefixMap.put("jp", "81");
        cri.sanity.util.PrefixNum.prefixMap.put("ko", "82");
        cri.sanity.util.PrefixNum.prefixMap.put("lk", "94");
        cri.sanity.util.PrefixNum.prefixMap.put("mx", "52");
        cri.sanity.util.PrefixNum.prefixMap.put("nl", "31");
        cri.sanity.util.PrefixNum.prefixMap.put("no", "47");
        cri.sanity.util.PrefixNum.prefixMap.put("pl", "48");
        cri.sanity.util.PrefixNum.prefixMap.put("pt", "351");
        cri.sanity.util.PrefixNum.prefixMap.put("ru", "7");
        cri.sanity.util.PrefixNum.prefixMap.put("sp", "34");
        cri.sanity.util.PrefixNum.prefixMap.put("sw", "46");
        cri.sanity.util.PrefixNum.prefixMap.put("th", "66");
        cri.sanity.util.PrefixNum.prefixMap.put("tr", "90");
        cri.sanity.util.PrefixNum.prefixMap.put("tw", "886");
        cri.sanity.util.PrefixNum.prefixMap.put("uk", "44");
        cri.sanity.util.PrefixNum.prefixMap.put("us", "1");
        return;
    }

    public static final String fromCountry(String p3)
    {
        String v1_5;
        if (p3 != null) {
            if (cri.sanity.util.PrefixNum.prefixMap == null) {
                cri.sanity.util.PrefixNum.buildPrefixMap();
            }
            String v0_1 = ((String) cri.sanity.util.PrefixNum.prefixMap.get(p3.toLowerCase()));
            if (v0_1 != null) {
                v1_5 = new StringBuilder().append(43).append(v0_1).toString();
            } else {
                v1_5 = "+";
            }
        } else {
            v1_5 = "+";
        }
        return v1_5;
    }

    public static final String get()
    {
        return cri.sanity.util.PrefixNum.fromCountry(java.util.Locale.getDefault().getCountry());
    }
}
package cri.sanity.util;
public class Rec {
    public static final int DEF_FMT = 1;
    private static final String DEF_PREFIX = "rec_";
    public static final int DEF_SRC = 1;
    private static final String DEF_SUFFIX = "";
    private static final String FILE_PATTERN = "yyyy-MM-dd_kk.mm.ss";
    public int fmt;
    public String fn;
    private android.media.MediaRecorder mediaRec;
    public String prefix;
    public int src;
    private boolean started;
    public String suffix;
    private boolean vanilla;

    public Rec()
    {
        this.started = 0;
        this.vanilla = 1;
        this.setup(1, 1, "rec_", "");
        return;
    }

    public Rec(int p3, int p4)
    {
        this.started = 0;
        this.vanilla = 1;
        this.setup(p3, p4, "rec_", "");
        return;
    }

    public Rec(int p2, int p3, String p4)
    {
        this.started = 0;
        this.vanilla = 1;
        this.setup(p2, p3, "rec_", p4);
        return;
    }

    public Rec(int p2, int p3, String p4, String p5)
    {
        this.started = 0;
        this.vanilla = 1;
        this.setup(p2, p3, p4, p5);
        return;
    }

    private String getAudioFn()
    {
        String v0_0 = cri.sanity.A.sdcardDir();
        if (v0_0 != null) {
            String v0_1 = new StringBuilder().append(v0_0).append(47).append(this.prefix).append(android.text.format.DateFormat.format("yyyy-MM-dd_kk.mm.ss", cri.sanity.A.time())).append(this.suffix).toString();
            switch (this.fmt) {
                case 1:
                    v0_1 = new StringBuilder().append(v0_1).append(".3gp").toString();
                    break;
                case 2:
                    v0_1 = new StringBuilder().append(v0_1).append(".m4a").toString();
                    break;
                case 3:
                    v0_1 = new StringBuilder().append(v0_1).append(".amr").toString();
                    break;
            }
            return v0_1;
        } else {
            cri.sanity.A.notify(cri.sanity.A.s(2131165663));
            throw new java.io.IOException();
        }
    }

    private boolean init()
    {
        int v1_0 = 1;
        cri.sanity.A.audioMan().setMicrophoneMute(0);
        System.gc();
        if (this.mediaRec == null) {
            this.mediaRec = new android.media.MediaRecorder();
        }
        this.mediaRec.setAudioSource(this.src);
        this.mediaRec.setOutputFormat(this.fmt);
        this.mediaRec.setAudioEncoder(1);
        try {
            android.media.MediaRecorder v3_3 = this.mediaRec;
            String v4_2 = this.getAudioFn();
            this.fn = v4_2;
            v3_3.setOutputFile(v4_2);
        } catch (java.io.IOException v0) {
            this.fn = 0;
            v1_0 = 0;
        }
        return v1_0;
    }

    public final String fn()
    {
        return this.fn;
    }

    public final boolean isStarted()
    {
        return this.started;
    }

    public final boolean isVanilla()
    {
        return this.vanilla;
    }

    public final declared_synchronized void release()
    {
        try {
            this.stop();
        } catch (int v0_2) {
            throw v0_2;
        }
        if (this.mediaRec != null) {
            try {
                if (!this.vanilla) {
                    this.mediaRec.release();
                }
            } catch (int v0) {
            }
            this.mediaRec = 0;
            this.vanilla = 1;
        }
        return;
    }

    public void setup(int p1, int p2, String p3, String p4)
    {
        if (p1 >= 0) {
            this.src = p1;
        }
        if (p2 >= 0) {
            this.fmt = p2;
        }
        if (p3 != null) {
            this.prefix = p3;
        }
        if (p4 != null) {
            this.suffix = p4;
        }
        return;
    }

    public final declared_synchronized void start()
    {
        try {
            if ((!this.started) && (this.init())) {
                this.mediaRec.prepare();
                this.mediaRec.start();
                this.started = 1;
                this.vanilla = 0;
                cri.sanity.A.audioMan().setMicrophoneMute(0);
            }
        } catch (android.media.AudioManager v1_6) {
            throw v1_6;
        } catch (Exception v0) {
            cri.sanity.A.notify(cri.sanity.A.s(2131165664));
            this.started = 1;
            this.stop();
        }
        return;
    }

    public final declared_synchronized void stop()
    {
        try {
            if (this.started) {
                this.started = 0;
                if (this.mediaRec != null) {
                    try {
                        this.mediaRec.stop();
                        this.mediaRec.reset();
                    } catch (Exception v0) {
                    }
                }
            }
        } catch (Exception v0_1) {
            throw v0_1;
        }
        return;
    }
}
package cri.sanity.util;
public class Task$Pool extends java.util.concurrent.ScheduledThreadPoolExecutor {

    public Task$Pool()
    {
        super(3);
        return;
    }
}
package cri.sanity.util;
public final class Vibra {
    private static final long LONG_TIME = 600;
    private static final long MID_TIME = 400;
    private static final long OFF1_TIME = 100;
    private static final long OFF2_TIME = 170;
    private static final long SHORT_TIME = 200;
    private static long[] pattern;

    static Vibra()
    {
        cri.sanity.util.Vibra.setMode();
        return;
    }

    public Vibra()
    {
        return;
    }

    private static long[] getPattern(int p3)
    {
        long[] v0_0;
        switch (p3) {
            case 11:
                v0_0 = new long[2];
                v0_0 = {0.0, 9.9e-322};
                break;
            case 12:
                v0_0 = new long[2];
                v0_0 = {0.0, 1.976e-321};
                break;
            case 13:
                v0_0 = new long[2];
                v0_0 = {0.0, 2.964e-321};
                break;
            case 21:
                v0_0 = new long[4];
                v0_0 = {0.0, 9.9e-322, 4.94e-322, 9.9e-322};
                break;
            case 22:
                v0_0 = new long[4];
                v0_0 = {0.0, 1.976e-321, 4.94e-322, 1.976e-321};
                break;
            case 23:
                v0_0 = new long[4];
                v0_0 = {0.0, 2.964e-321, 8.4e-322, 2.964e-321};
                break;
            case 31:
                v0_0 = new long[6];
                v0_0 = {0.0, 9.9e-322, 4.94e-322, 9.9e-322, 4.94e-322, 9.9e-322};
                break;
            case 32:
                v0_0 = new long[6];
                v0_0 = {0.0, 1.976e-321, 4.94e-322, 1.976e-321, 4.94e-322, 1.976e-321};
                break;
            case 33:
                v0_0 = new long[6];
                v0_0 = {0.0, 2.964e-321, 8.4e-322, 2.964e-321, 8.4e-322, 2.964e-321};
                break;
            default:
                v0_0 = 0;
        }
        return v0_0;
    }

    public static final void setMode()
    {
        cri.sanity.util.Vibra.setMode(cri.sanity.A.geti("vibrate_mode"));
        return;
    }

    public static final void setMode(int p2)
    {
        long[] v0 = cri.sanity.util.Vibra.getPattern(p2);
        if (v0 == null) {
            v0 = cri.sanity.util.Vibra.getPattern(12);
        }
        cri.sanity.util.Vibra.pattern = v0;
        return;
    }

    public static final void vibra()
    {
        android.os.Vibrator v0_1 = ((android.os.Vibrator) cri.sanity.A.app().getSystemService("vibrator"));
        if (v0_1 != null) {
            v0_1.vibrate(cri.sanity.util.Vibra.pattern, -1);
        }
        return;
    }
}
package cri.sanity.util;
 class WifiTracker$1 extends cri.sanity.util.Task {
    final synthetic cri.sanity.util.WifiTracker this$0;

    WifiTracker$1(cri.sanity.util.WifiTracker p1)
    {
        this.this$0 = p1;
        return;
    }

    public void run()
    {
        int v0_0 = 1;
        try {
            if (cri.sanity.util.WifiTracker.access$000(this.this$0) != 0) {
                android.net.wifi.WifiManager v2_3 = cri.sanity.util.WifiTracker.access$100(this.this$0);
                if (cri.sanity.util.WifiTracker.access$000(this.this$0) != 1) {
                    v0_0 = 0;
                }
                v2_3.setWifiEnabled(v0_0);
            } else {
            }
        } catch (int v0_1) {
            throw v0_1;
        }
        return;
    }
}
package cri.sanity.util;
public final class WifiTracker extends android.content.BroadcastReceiver {
    private static final int ACT_DISABLE = 2;
    private static final int ACT_ENABLE = 1;
    private static final int ACT_NONE = 0;
    private static final int DISABLED = 1;
    private static final int DISABLING = 0;
    private static final int ENABLED = 3;
    private static final int ENABLING = 2;
    private static final int TASK_ACTION;
    private int action;
    private int state;
    private final cri.sanity.util.Task taskAction;
    private boolean waiter;
    private final android.net.wifi.WifiManager wifiMan;

    static WifiTracker()
    {
        cri.sanity.util.WifiTracker.TASK_ACTION = cri.sanity.util.Task.idNew();
        return;
    }

    public WifiTracker()
    {
        this.taskAction = new cri.sanity.util.WifiTracker$1(this);
        this.wifiMan = cri.sanity.A.wifiMan();
        this.state = this.wifiMan.getWifiState();
        this.action = 0;
        this.waiter = 0;
        cri.sanity.A.app().registerReceiver(this, new android.content.IntentFilter("android.net.wifi.WIFI_STATE_CHANGED"));
        return;
    }

    static synthetic int access$000(cri.sanity.util.WifiTracker p1)
    {
        return p1.action;
    }

    static synthetic android.net.wifi.WifiManager access$100(cri.sanity.util.WifiTracker p1)
    {
        return p1.wifiMan;
    }

    public declared_synchronized void enable(boolean p4)
    {
        cri.sanity.util.Task v0_0 = 1;
        try {
            switch (this.state) {
                case 0:
                case 2:
                    if (!p4) {
                        v0_0 = 2;
                    }
                    this.action = v0_0;
                    break;
                case 1:
                    if (p4) {
                        this.action = 1;
                        if (cri.sanity.util.Task.has(cri.sanity.util.WifiTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.WifiTracker.TASK_ACTION, 200);
                        }
                    } else {
                        this.action = 0;
                    }
                    break;
                case 3:
                    if (!p4) {
                        this.action = 2;
                        if (cri.sanity.util.Task.has(cri.sanity.util.WifiTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.WifiTracker.TASK_ACTION, 200);
                        }
                    } else {
                        this.action = 0;
                    }
                    break;
                default:
                    if (p4) {
                        this.action = 1;
                        if (cri.sanity.util.Task.has(cri.sanity.util.WifiTracker.TASK_ACTION)) {
                        } else {
                            this.taskAction.exec(cri.sanity.util.WifiTracker.TASK_ACTION, 2000);
                        }
                    } else {
                        this.action = 0;
                    }
            }
        } catch (cri.sanity.util.Task v0_13) {
            throw v0_13;
        }
        return;
    }

    public declared_synchronized void onReceive(android.content.Context p4, android.content.Intent p5)
    {
        int v0_0 = 1;
        try {
            this.state = p5.getIntExtra("wifi_state", 4);
        } catch (int v0_2) {
            throw v0_2;
        }
        if (this.action != 0) {
            if (this.action != 1) {
                v0_0 = 0;
            }
            this.enable(v0_0);
        }
        if (this.waiter) {
            this.notifyAll();
        }
        return;
    }

    public declared_synchronized void shutdown()
    {
        try {
            if (this.action != 0) {
                this.waiter = 1;
                this.wait(4000);
            }
            try {
                cri.sanity.A.app().unregisterReceiver(this);
            } catch (Exception v0) {
            }
            return;
        } catch (Exception v0_1) {
            throw v0_1;
        } catch (Exception v0) {
        }
    }

    public declared_synchronized boolean willOn()
    {
        int v0_0 = 1;
        try {
            if (((this.action != 0) || ((this.state != 3) && (this.state != 2))) && ((this.action != 1) || (!cri.sanity.util.Task.has(cri.sanity.util.WifiTracker.TASK_ACTION)))) {
                v0_0 = 0;
            }
        } catch (int v0_1) {
            throw v0_1;
        }
        return v0_0;
    }
}
